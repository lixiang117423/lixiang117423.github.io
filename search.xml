<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BSA测序的原理和分析</title>
      <link href="/article/bsa/"/>
      <url>/article/bsa/</url>
      
        <content type="html"><![CDATA[<p>BSA（Bulk Segregant Analysis，混合分离分析）是一种分子标记辅助的基因定位技术。我将从原理、方法、分析和代码实现等方面详细阐述。</p><h1 id="1-BSA原理"><a href="#1-BSA原理" class="headerlink" title="1 BSA原理"></a>1 BSA原理</h1><p>BSA基于孟德尔遗传定律，通过构建具有极端表型的DNA混合池来快速定位控制目标性状的基因或QTL。核心原理是：</p><ol><li><strong>分离群体构建</strong>：杂交后代中，控制目标性状的基因区域在极端表型个体中会表现出不同的等位基因频率</li><li><strong>DNA混合</strong>：将具有相同极端表型的个体DNA等量混合，形成两个对比鲜明的基因池</li><li><strong>标记检测</strong>：与目标基因紧密连锁的分子标记在两个基因池间会显示多态性差异</li><li><strong>区间定位</strong>：通过全基因组扫描找到与目标性状连锁的染色体区间</li></ol><h1 id="2-BSA方法流程"><a href="#2-BSA方法流程" class="headerlink" title="2 BSA方法流程"></a>2 BSA方法流程</h1><h2 id="2-1-实验设计"><a href="#2-1-实验设计" class="headerlink" title="2.1 实验设计"></a>2.1 实验设计</h2><ul><li>选择表型差异明显的亲本进行杂交</li><li>构建F2或回交群体</li><li>从分离后代中选择极端表型个体（通常各20-50个）</li></ul><h2 id="2-2-DNA制备与混合"><a href="#2-2-DNA制备与混合" class="headerlink" title="2.2 DNA制备与混合"></a>2.2 DNA制备与混合</h2><ul><li>提取单个个体基因组DNA</li><li>等量混合同一表型组的DNA样品</li><li>形成两个对比基因池（bulk）</li></ul><h2 id="2-3-分子标记检测"><a href="#2-3-分子标记检测" class="headerlink" title="2.3 分子标记检测"></a>2.3 分子标记检测</h2><p>传统方法：</p><ul><li>RAPD（随机扩增多态DNA）</li><li>AFLP（扩增片段长度多态性）</li><li>SSR（简单序列重复）</li></ul><p>现代方法：</p><ul><li>BSA-seq（结合高通量测序）</li><li>SNP芯片检测</li></ul><h2 id="2-4-数据分析"><a href="#2-4-数据分析" class="headerlink" title="2.4 数据分析"></a>2.4 数据分析</h2><ul><li>计算各标记位点的等位基因频率</li><li>统计显著性检验</li><li>构建连锁图谱</li><li>基因定位</li></ul><h1 id="3-BSA-seq分析流程"><a href="#3-BSA-seq分析流程" class="headerlink" title="3 BSA-seq分析流程"></a>3 BSA-seq分析流程</h1><h1 id="4-BSA分析的关键指标"><a href="#4-BSA分析的关键指标" class="headerlink" title="4 BSA分析的关键指标"></a>4 BSA分析的关键指标</h1><h2 id="4-1-统计参数"><a href="#4-1-统计参数" class="headerlink" title="4.1 统计参数"></a>4.1 统计参数</h2><ul><li><strong>等位基因频率差异</strong>：两个基因池间的频率差异，理论值0.5表示完全连锁</li><li><strong>卡方检验</strong>：检验两个基因池间等位基因频率是否存在显著差异</li><li><strong>LOD值</strong>：对数优势比，评估连锁程度</li><li><strong>置信区间</strong>：基因定位的可信区间</li></ul><h2 id="4-2-质量控制指标"><a href="#4-2-质量控制指标" class="headerlink" title="4.2 质量控制指标"></a>4.2 质量控制指标</h2><ul><li><strong>测序深度</strong>：每个位点的读数深度，建议≥20×</li><li><strong>SNP密度</strong>：单位长度内的SNP数量</li><li><strong>基因池大小</strong>：每个pool的个体数量，建议≥20个</li><li><strong>表型分离比</strong>：确保符合预期的遗传模式</li></ul><h1 id="5-BSA的优势与局限"><a href="#5-BSA的优势与局限" class="headerlink" title="5 BSA的优势与局限"></a>5 BSA的优势与局限</h1><h2 id="5-1-优势"><a href="#5-1-优势" class="headerlink" title="5.1 优势"></a>5.1 优势</h2><ol><li><strong>高效快速</strong>：相比传统QTL定位，大大减少了基因型检测工作量</li><li><strong>成本效益</strong>：减少了标记开发和检测成本</li><li><strong>全基因组扫描</strong>：可以同时检测多个基因位点</li><li><strong>分辨率高</strong>：结合高通量测序，可达到基因水平的精度</li></ol><h2 id="5-2-局限性"><a href="#5-2-局限性" class="headerlink" title="5.2 局限性"></a>5.2 局限性</h2><ol><li><strong>只适用于主效基因</strong>：对微效基因检测能力有限</li><li><strong>需要极端表型</strong>：要求目标性状表型分布明确</li><li><strong>群体结构影响</strong>：遗传背景复杂时影响结果准确性</li><li><strong>基因互作</strong>：多基因控制性状时分析复杂</li></ol><h1 id="6-应用领域"><a href="#6-应用领域" class="headerlink" title="6 应用领域"></a>6 应用领域</h1><p>BSA技术广泛应用于：</p><ol><li><strong>作物育种</strong>：抗病基因、品质基因、产量基因定位</li><li><strong>医学遗传学</strong>：疾病易感基因识别</li><li><strong>进化生物学</strong>：适应性基因发现</li><li><strong>功能基因组学</strong>：基因功能验证</li></ol><p>BSA技术作为一种强大的基因定位工具，在现代分子育种和基因组学研究中发挥着重要作用。随着测序技术的发展和成本降低，BSA-seq已成为基因定位的首选方法之一。</p><h1 id="7-Claude给的代码"><a href="#7-Claude给的代码" class="headerlink" title="7 Claude给的代码"></a>7 Claude给的代码</h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-string">"""</span><br><span class="hljs-string">BSA-seq (Bulk Segregant Analysis with sequencing) 数据分析流程</span><br><span class="hljs-string">包含数据预处理、SNP检测、统计分析和可视化</span><br><span class="hljs-string">"""</span><br><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><span class="hljs-keyword">from</span> scipy <span class="hljs-keyword">import</span> stats<br><span class="hljs-keyword">from</span> scipy.signal <span class="hljs-keyword">import</span> savgol_filter<br><span class="hljs-keyword">import</span> warnings<br>warnings.filterwarnings(<span class="hljs-string">'ignore'</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BSAAnalysis</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, vcf_file=<span class="hljs-literal">None</span>, window_size=<span class="hljs-number">1000000</span>, step_size=<span class="hljs-number">100000</span></span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        初始化BSA分析对象</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        Parameters:</span><br><span class="hljs-string">        vcf_file: VCF格式的变异文件路径</span><br><span class="hljs-string">        window_size: 滑动窗口大小(bp)</span><br><span class="hljs-string">        step_size: 滑动窗口步长(bp)</span><br><span class="hljs-string">        """</span><br>        self.vcf_file = vcf_file<br>        self.window_size = window_size<br>        self.step_size = step_size<br>        self.snp_data = <span class="hljs-literal">None</span><br>        self.bsa_results = <span class="hljs-literal">None</span><br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">load_vcf_data</span>(<span class="hljs-params">self, vcf_file=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        加载VCF格式的SNP数据</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-keyword">if</span> vcf_file:<br>            self.vcf_file = vcf_file<br>            <br>        <span class="hljs-comment"># 模拟VCF数据加载（实际应使用pysam或其他VCF解析工具）</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"加载VCF数据..."</span>)<br>        <span class="hljs-comment"># 这里应该实现真实的VCF文件解析</span><br>        <span class="hljs-comment"># 示例数据结构</span><br>        np.random.seed(<span class="hljs-number">42</span>)<br>        n_snps = <span class="hljs-number">50000</span><br>        <br>        self.snp_data = pd.DataFrame({<br>            <span class="hljs-string">'CHROM'</span>: np.random.choice([<span class="hljs-string">'chr1'</span>, <span class="hljs-string">'chr2'</span>, <span class="hljs-string">'chr3'</span>, <span class="hljs-string">'chr4'</span>, <span class="hljs-string">'chr5'</span>], n_snps),<br>            <span class="hljs-string">'POS'</span>: np.random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100000000</span>, n_snps),<br>            <span class="hljs-string">'REF'</span>: np.random.choice([<span class="hljs-string">'A'</span>, <span class="hljs-string">'T'</span>, <span class="hljs-string">'C'</span>, <span class="hljs-string">'G'</span>], n_snps),<br>            <span class="hljs-string">'ALT'</span>: np.random.choice([<span class="hljs-string">'A'</span>, <span class="hljs-string">'T'</span>, <span class="hljs-string">'C'</span>, <span class="hljs-string">'G'</span>], n_snps),<br>            <span class="hljs-string">'BULK1_REF'</span>: np.random.randint(<span class="hljs-number">5</span>, <span class="hljs-number">50</span>, n_snps),<br>            <span class="hljs-string">'BULK1_ALT'</span>: np.random.randint(<span class="hljs-number">5</span>, <span class="hljs-number">50</span>, n_snps),<br>            <span class="hljs-string">'BULK2_REF'</span>: np.random.randint(<span class="hljs-number">5</span>, <span class="hljs-number">50</span>, n_snps),<br>            <span class="hljs-string">'BULK2_ALT'</span>: np.random.randint(<span class="hljs-number">5</span>, <span class="hljs-number">50</span>, n_snps)<br>        })<br>        <br>        <span class="hljs-comment"># 添加一些目标区域的信号</span><br>        target_region = (self.snp_data[<span class="hljs-string">'CHROM'</span>] == <span class="hljs-string">'chr2'</span>) &amp; \<br>                       (self.snp_data[<span class="hljs-string">'POS'</span>] &gt;= <span class="hljs-number">20000000</span>) &amp; \<br>                       (self.snp_data[<span class="hljs-string">'POS'</span>] &lt;= <span class="hljs-number">30000000</span>)<br>        <br>        <span class="hljs-comment"># 在目标区域增强信号</span><br>        self.snp_data.loc[target_region, <span class="hljs-string">'BULK1_ALT'</span>] *= <span class="hljs-number">2</span><br>        self.snp_data.loc[target_region, <span class="hljs-string">'BULK2_REF'</span>] *= <span class="hljs-number">2</span><br>        <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"加载了 <span class="hljs-subst">{<span class="hljs-built_in">len</span>(self.snp_data)}</span> 个SNP位点"</span>)<br>        <span class="hljs-keyword">return</span> self.snp_data<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">calculate_allele_frequency</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        计算等位基因频率</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"计算等位基因频率..."</span>)<br>        <br>        <span class="hljs-comment"># 计算每个bulk的总读数和ALT等位基因频率</span><br>        self.snp_data[<span class="hljs-string">'BULK1_TOTAL'</span>] = self.snp_data[<span class="hljs-string">'BULK1_REF'</span>] + self.snp_data[<span class="hljs-string">'BULK1_ALT'</span>]<br>        self.snp_data[<span class="hljs-string">'BULK2_TOTAL'</span>] = self.snp_data[<span class="hljs-string">'BULK2_REF'</span>] + self.snp_data[<span class="hljs-string">'BULK2_ALT'</span>]<br>        <br>        self.snp_data[<span class="hljs-string">'BULK1_FREQ'</span>] = self.snp_data[<span class="hljs-string">'BULK1_ALT'</span>] / self.snp_data[<span class="hljs-string">'BULK1_TOTAL'</span>]<br>        self.snp_data[<span class="hljs-string">'BULK2_FREQ'</span>] = self.snp_data[<span class="hljs-string">'BULK2_ALT'</span>] / self.snp_data[<span class="hljs-string">'BULK2_TOTAL'</span>]<br>        <br>        <span class="hljs-comment"># 计算频率差异</span><br>        self.snp_data[<span class="hljs-string">'FREQ_DIFF'</span>] = self.snp_data[<span class="hljs-string">'BULK1_FREQ'</span>] - self.snp_data[<span class="hljs-string">'BULK2_FREQ'</span>]<br>        <br>        <span class="hljs-comment"># 过滤低质量SNP</span><br>        min_depth = <span class="hljs-number">10</span><br>        self.snp_data = self.snp_data[<br>            (self.snp_data[<span class="hljs-string">'BULK1_TOTAL'</span>] &gt;= min_depth) &amp; <br>            (self.snp_data[<span class="hljs-string">'BULK2_TOTAL'</span>] &gt;= min_depth)<br>        ].copy()<br>        <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"过滤后保留 <span class="hljs-subst">{<span class="hljs-built_in">len</span>(self.snp_data)}</span> 个高质量SNP"</span>)<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">statistical_test</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        进行统计检验</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"进行统计检验..."</span>)<br>        <br>        p_values = []<br>        <span class="hljs-keyword">for</span> idx, row <span class="hljs-keyword">in</span> self.snp_data.iterrows():<br>            <span class="hljs-comment"># 使用卡方检验</span><br>            obs = np.array([[row[<span class="hljs-string">'BULK1_REF'</span>], row[<span class="hljs-string">'BULK1_ALT'</span>]], <br>                           [row[<span class="hljs-string">'BULK2_REF'</span>], row[<span class="hljs-string">'BULK2_ALT'</span>]]])<br>            <br>            chi2, p_val = stats.chi2_contingency(obs)[:<span class="hljs-number">2</span>]<br>            p_values.append(p_val)<br>        <br>        self.snp_data[<span class="hljs-string">'P_VALUE'</span>] = p_values<br>        <br>        <span class="hljs-comment"># 计算-log10(p)值用于可视化</span><br>        self.snp_data[<span class="hljs-string">'NEG_LOG10_P'</span>] = -np.log10(self.snp_data[<span class="hljs-string">'P_VALUE'</span>] + <span class="hljs-number">1e-300</span>)<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">sliding_window_analysis</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        滑动窗口分析</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"进行滑动窗口分析..."</span>)<br>        <br>        results = []<br>        <br>        <span class="hljs-keyword">for</span> chrom <span class="hljs-keyword">in</span> self.snp_data[<span class="hljs-string">'CHROM'</span>].unique():<br>            chrom_data = self.snp_data[self.snp_data[<span class="hljs-string">'CHROM'</span>] == chrom].copy()<br>            chrom_data = chrom_data.sort_values(<span class="hljs-string">'POS'</span>)<br>            <br>            max_pos = chrom_data[<span class="hljs-string">'POS'</span>].<span class="hljs-built_in">max</span>()<br>            <br>            <span class="hljs-keyword">for</span> start <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">int</span>(max_pos), self.step_size):<br>                end = start + self.window_size<br>                <br>                window_snps = chrom_data[<br>                    (chrom_data[<span class="hljs-string">'POS'</span>] &gt;= start) &amp; <br>                    (chrom_data[<span class="hljs-string">'POS'</span>] &lt; end)<br>                ]<br>                <br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(window_snps) &lt; <span class="hljs-number">5</span>:  <span class="hljs-comment"># 窗口内SNP数量太少</span><br>                    <span class="hljs-keyword">continue</span><br>                <br>                <span class="hljs-comment"># 计算窗口统计量</span><br>                mean_freq_diff = window_snps[<span class="hljs-string">'FREQ_DIFF'</span>].mean()<br>                abs_freq_diff = np.<span class="hljs-built_in">abs</span>(window_snps[<span class="hljs-string">'FREQ_DIFF'</span>]).mean()<br>                mean_neg_log_p = window_snps[<span class="hljs-string">'NEG_LOG10_P'</span>].mean()<br>                max_neg_log_p = window_snps[<span class="hljs-string">'NEG_LOG10_P'</span>].<span class="hljs-built_in">max</span>()<br>                snp_count = <span class="hljs-built_in">len</span>(window_snps)<br>                <br>                results.append({<br>                    <span class="hljs-string">'CHROM'</span>: chrom,<br>                    <span class="hljs-string">'START'</span>: start,<br>                    <span class="hljs-string">'END'</span>: end,<br>                    <span class="hljs-string">'CENTER'</span>: start + self.window_size // <span class="hljs-number">2</span>,<br>                    <span class="hljs-string">'SNP_COUNT'</span>: snp_count,<br>                    <span class="hljs-string">'MEAN_FREQ_DIFF'</span>: mean_freq_diff,<br>                    <span class="hljs-string">'ABS_FREQ_DIFF'</span>: abs_freq_diff,<br>                    <span class="hljs-string">'MEAN_NEG_LOG10_P'</span>: mean_neg_log_p,<br>                    <span class="hljs-string">'MAX_NEG_LOG10_P'</span>: max_neg_log_p<br>                })<br>        <br>        self.bsa_results = pd.DataFrame(results)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"生成了 <span class="hljs-subst">{<span class="hljs-built_in">len</span>(self.bsa_results)}</span> 个滑动窗口"</span>)<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">smooth_signals</span>(<span class="hljs-params">self, column=<span class="hljs-string">'ABS_FREQ_DIFF'</span>, window_length=<span class="hljs-number">21</span>, polyorder=<span class="hljs-number">3</span></span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        对信号进行平滑处理</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-keyword">for</span> chrom <span class="hljs-keyword">in</span> self.bsa_results[<span class="hljs-string">'CHROM'</span>].unique():<br>            mask = self.bsa_results[<span class="hljs-string">'CHROM'</span>] == chrom<br>            values = self.bsa_results.loc[mask, column].values<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(values) &gt; window_length:<br>                smoothed = savgol_filter(values, window_length, polyorder)<br>                self.bsa_results.loc[mask, <span class="hljs-string">f'<span class="hljs-subst">{column}</span>_SMOOTH'</span>] = smoothed<br>            <span class="hljs-keyword">else</span>:<br>                self.bsa_results.loc[mask, <span class="hljs-string">f'<span class="hljs-subst">{column}</span>_SMOOTH'</span>] = values<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">identify_peaks</span>(<span class="hljs-params">self, threshold_percentile=<span class="hljs-number">95</span></span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        识别显著峰值区域</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"识别候选区域..."</span>)<br>        <br>        threshold = np.percentile(self.bsa_results[<span class="hljs-string">'ABS_FREQ_DIFF_SMOOTH'</span>], threshold_percentile)<br>        <br>        candidate_regions = self.bsa_results[<br>            self.bsa_results[<span class="hljs-string">'ABS_FREQ_DIFF_SMOOTH'</span>] &gt; threshold<br>        ].copy()<br>        <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"识别到 <span class="hljs-subst">{<span class="hljs-built_in">len</span>(candidate_regions)}</span> 个候选窗口，阈值: <span class="hljs-subst">{threshold:<span class="hljs-number">.3</span>f}</span>"</span>)<br>        <br>        <span class="hljs-keyword">return</span> candidate_regions<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_manhattan</span>(<span class="hljs-params">self, figsize=(<span class="hljs-params"><span class="hljs-number">15</span>, <span class="hljs-number">8</span></span>)</span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        绘制曼哈顿图</span><br><span class="hljs-string">        """</span><br>        fig, (ax1, ax2) = plt.subplots(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, figsize=figsize, sharex=<span class="hljs-literal">True</span>)<br>        <br>        <span class="hljs-comment"># 为每个染色体分配颜色</span><br>        colors = plt.cm.Set3(np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(self.bsa_results[<span class="hljs-string">'CHROM'</span>].unique())))<br>        chrom_colors = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(self.bsa_results[<span class="hljs-string">'CHROM'</span>].unique(), colors))<br>        <br>        <span class="hljs-comment"># 计算染色体在x轴上的位置</span><br>        chrom_positions = {}<br>        x_pos = <span class="hljs-number">0</span><br>        x_ticks = []<br>        x_labels = []<br>        <br>        <span class="hljs-keyword">for</span> chrom <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(self.bsa_results[<span class="hljs-string">'CHROM'</span>].unique()):<br>            chrom_data = self.bsa_results[self.bsa_results[<span class="hljs-string">'CHROM'</span>] == chrom]<br>            positions = chrom_data[<span class="hljs-string">'CENTER'</span>] / <span class="hljs-number">1e6</span> + x_pos  <span class="hljs-comment"># 转换为Mb</span><br>            <br>            chrom_positions[chrom] = positions<br>            x_ticks.append(positions.mean())<br>            x_labels.append(chrom.replace(<span class="hljs-string">'chr'</span>, <span class="hljs-string">''</span>))<br>            <br>            <span class="hljs-comment"># 绘制频率差异</span><br>            ax1.scatter(positions, chrom_data[<span class="hljs-string">'ABS_FREQ_DIFF'</span>], <br>                       c=[chrom_colors[chrom]], alpha=<span class="hljs-number">0.6</span>, s=<span class="hljs-number">20</span>)<br>            ax1.plot(positions, chrom_data[<span class="hljs-string">'ABS_FREQ_DIFF_SMOOTH'</span>], <br>                    color=<span class="hljs-string">'red'</span>, linewidth=<span class="hljs-number">2</span>, alpha=<span class="hljs-number">0.8</span>)<br>            <br>            <span class="hljs-comment"># 绘制-log10(p)值</span><br>            ax2.scatter(positions, chrom_data[<span class="hljs-string">'MEAN_NEG_LOG10_P'</span>], <br>                       c=[chrom_colors[chrom]], alpha=<span class="hljs-number">0.6</span>, s=<span class="hljs-number">20</span>)<br>            <br>            x_pos = positions.<span class="hljs-built_in">max</span>() + <span class="hljs-number">10</span>  <span class="hljs-comment"># 染色体间隔</span><br>        <br>        <span class="hljs-comment"># 设置图形属性</span><br>        ax1.set_ylabel(<span class="hljs-string">'绝对频率差异'</span>, fontsize=<span class="hljs-number">12</span>)<br>        ax1.set_title(<span class="hljs-string">'BSA-seq 分析结果 - 频率差异'</span>, fontsize=<span class="hljs-number">14</span>, fontweight=<span class="hljs-string">'bold'</span>)<br>        ax1.grid(<span class="hljs-literal">True</span>, alpha=<span class="hljs-number">0.3</span>)<br>        <br>        ax2.set_ylabel(<span class="hljs-string">'-log₁₀(P值)'</span>, fontsize=<span class="hljs-number">12</span>)<br>        ax2.set_xlabel(<span class="hljs-string">'染色体位置 (Mb)'</span>, fontsize=<span class="hljs-number">12</span>)<br>        ax2.set_title(<span class="hljs-string">'统计显著性'</span>, fontsize=<span class="hljs-number">14</span>, fontweight=<span class="hljs-string">'bold'</span>)<br>        ax2.grid(<span class="hljs-literal">True</span>, alpha=<span class="hljs-number">0.3</span>)<br>        <br>        <span class="hljs-comment"># 设置x轴标签</span><br>        ax2.set_xticks(x_ticks)<br>        ax2.set_xticklabels(x_labels)<br>        <br>        <span class="hljs-comment"># 添加显著性阈值线</span><br>        threshold = np.percentile(self.bsa_results[<span class="hljs-string">'ABS_FREQ_DIFF_SMOOTH'</span>], <span class="hljs-number">95</span>)<br>        ax1.axhline(y=threshold, color=<span class="hljs-string">'red'</span>, linestyle=<span class="hljs-string">'--'</span>, alpha=<span class="hljs-number">0.7</span>, <br>                   label=<span class="hljs-string">f'95%阈值 (<span class="hljs-subst">{threshold:<span class="hljs-number">.3</span>f}</span>)'</span>)<br>        ax1.legend()<br>        <br>        plt.tight_layout()<br>        <span class="hljs-keyword">return</span> fig<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_chromosome_detail</span>(<span class="hljs-params">self, chrom, figsize=(<span class="hljs-params"><span class="hljs-number">12</span>, <span class="hljs-number">8</span></span>)</span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        绘制单个染色体的详细图</span><br><span class="hljs-string">        """</span><br>        chrom_data = self.bsa_results[self.bsa_results[<span class="hljs-string">'CHROM'</span>] == chrom].copy()<br>        chrom_snps = self.snp_data[self.snp_data[<span class="hljs-string">'CHROM'</span>] == chrom].copy()<br>        <br>        fig, axes = plt.subplots(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, figsize=figsize, sharex=<span class="hljs-literal">True</span>)<br>        <br>        positions_mb = chrom_data[<span class="hljs-string">'CENTER'</span>] / <span class="hljs-number">1e6</span><br>        snp_pos_mb = chrom_snps[<span class="hljs-string">'POS'</span>] / <span class="hljs-number">1e6</span><br>        <br>        <span class="hljs-comment"># 频率差异</span><br>        axes[<span class="hljs-number">0</span>].scatter(snp_pos_mb, chrom_snps[<span class="hljs-string">'FREQ_DIFF'</span>], alpha=<span class="hljs-number">0.5</span>, s=<span class="hljs-number">10</span>, color=<span class="hljs-string">'gray'</span>)<br>        axes[<span class="hljs-number">0</span>].plot(positions_mb, chrom_data[<span class="hljs-string">'MEAN_FREQ_DIFF'</span>], <span class="hljs-string">'b-'</span>, linewidth=<span class="hljs-number">2</span>, label=<span class="hljs-string">'窗口均值'</span>)<br>        axes[<span class="hljs-number">0</span>].set_ylabel(<span class="hljs-string">'频率差异'</span>)<br>        axes[<span class="hljs-number">0</span>].set_title(<span class="hljs-string">f'<span class="hljs-subst">{chrom}</span> 详细分析'</span>)<br>        axes[<span class="hljs-number">0</span>].grid(<span class="hljs-literal">True</span>, alpha=<span class="hljs-number">0.3</span>)<br>        axes[<span class="hljs-number">0</span>].legend()<br>        <br>        <span class="hljs-comment"># 绝对频率差异</span><br>        axes[<span class="hljs-number">1</span>].plot(positions_mb, chrom_data[<span class="hljs-string">'ABS_FREQ_DIFF'</span>], <span class="hljs-string">'o-'</span>, color=<span class="hljs-string">'green'</span>, <br>                    linewidth=<span class="hljs-number">2</span>, markersize=<span class="hljs-number">4</span>, label=<span class="hljs-string">'原始信号'</span>)<br>        axes[<span class="hljs-number">1</span>].plot(positions_mb, chrom_data[<span class="hljs-string">'ABS_FREQ_DIFF_SMOOTH'</span>], <span class="hljs-string">'r-'</span>, <br>                    linewidth=<span class="hljs-number">3</span>, label=<span class="hljs-string">'平滑信号'</span>)<br>        axes[<span class="hljs-number">1</span>].set_ylabel(<span class="hljs-string">'绝对频率差异'</span>)<br>        axes[<span class="hljs-number">1</span>].grid(<span class="hljs-literal">True</span>, alpha=<span class="hljs-number">0.3</span>)<br>        axes[<span class="hljs-number">1</span>].legend()<br>        <br>        <span class="hljs-comment"># 统计显著性</span><br>        axes[<span class="hljs-number">2</span>].scatter(snp_pos_mb, chrom_snps[<span class="hljs-string">'NEG_LOG10_P'</span>], alpha=<span class="hljs-number">0.5</span>, s=<span class="hljs-number">10</span>, color=<span class="hljs-string">'purple'</span>)<br>        axes[<span class="hljs-number">2</span>].plot(positions_mb, chrom_data[<span class="hljs-string">'MEAN_NEG_LOG10_P'</span>], <span class="hljs-string">'orange'</span>, linewidth=<span class="hljs-number">2</span>)<br>        axes[<span class="hljs-number">2</span>].set_ylabel(<span class="hljs-string">'-log₁₀(P值)'</span>)<br>        axes[<span class="hljs-number">2</span>].set_xlabel(<span class="hljs-string">'位置 (Mb)'</span>)<br>        axes[<span class="hljs-number">2</span>].grid(<span class="hljs-literal">True</span>, alpha=<span class="hljs-number">0.3</span>)<br>        <br>        plt.tight_layout()<br>        <span class="hljs-keyword">return</span> fig<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_report</span>(<span class="hljs-params">self, output_file=<span class="hljs-string">'bsa_report.txt'</span></span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        生成分析报告</span><br><span class="hljs-string">        """</span><br>        candidates = self.identify_peaks()<br>        <br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_file, <span class="hljs-string">'w'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-string">"BSA-seq 分析报告\n"</span>)<br>            f.write(<span class="hljs-string">"="</span> * <span class="hljs-number">50</span> + <span class="hljs-string">"\n\n"</span>)<br>            <br>            f.write(<span class="hljs-string">f"总SNP数量: <span class="hljs-subst">{<span class="hljs-built_in">len</span>(self.snp_data)}</span>\n"</span>)<br>            f.write(<span class="hljs-string">f"滑动窗口数量: <span class="hljs-subst">{<span class="hljs-built_in">len</span>(self.bsa_results)}</span>\n"</span>)<br>            f.write(<span class="hljs-string">f"窗口大小: <span class="hljs-subst">{self.window_size/<span class="hljs-number">1e6</span>:<span class="hljs-number">.1</span>f}</span> Mb\n"</span>)<br>            f.write(<span class="hljs-string">f"步长: <span class="hljs-subst">{self.step_size/<span class="hljs-number">1e3</span>:<span class="hljs-number">.0</span>f}</span> kb\n\n"</span>)<br>            <br>            f.write(<span class="hljs-string">"候选区域:\n"</span>)<br>            f.write(<span class="hljs-string">"-"</span> * <span class="hljs-number">30</span> + <span class="hljs-string">"\n"</span>)<br>            <br>            <span class="hljs-keyword">for</span> idx, row <span class="hljs-keyword">in</span> candidates.iterrows():<br>                f.write(<span class="hljs-string">f"染色体: <span class="hljs-subst">{row[<span class="hljs-string">'CHROM'</span>]}</span>\n"</span>)<br>                f.write(<span class="hljs-string">f"位置: <span class="hljs-subst">{row[<span class="hljs-string">'START'</span>]/<span class="hljs-number">1e6</span>:<span class="hljs-number">.2</span>f}</span>-<span class="hljs-subst">{row[<span class="hljs-string">'END'</span>]/<span class="hljs-number">1e6</span>:<span class="hljs-number">.2</span>f}</span> Mb\n"</span>)<br>                f.write(<span class="hljs-string">f"频率差异: <span class="hljs-subst">{row[<span class="hljs-string">'ABS_FREQ_DIFF'</span>]:<span class="hljs-number">.3</span>f}</span>\n"</span>)<br>                f.write(<span class="hljs-string">f"显著性: <span class="hljs-subst">{row[<span class="hljs-string">'MEAN_NEG_LOG10_P'</span>]:<span class="hljs-number">.2</span>f}</span>\n"</span>)<br>                f.write(<span class="hljs-string">f"SNP数量: <span class="hljs-subst">{row[<span class="hljs-string">'SNP_COUNT'</span>]}</span>\n"</span>)<br>                f.write(<span class="hljs-string">"-"</span> * <span class="hljs-number">30</span> + <span class="hljs-string">"\n"</span>)<br>        <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"报告已保存至: <span class="hljs-subst">{output_file}</span>"</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run_complete_analysis</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">"""</span><br><span class="hljs-string">        运行完整的BSA分析流程</span><br><span class="hljs-string">        """</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"开始BSA-seq完整分析流程..."</span>)<br>        <br>        <span class="hljs-comment"># 1. 加载数据</span><br>        <span class="hljs-keyword">if</span> self.snp_data <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            self.load_vcf_data()<br>        <br>        <span class="hljs-comment"># 2. 计算等位基因频率</span><br>        self.calculate_allele_frequency()<br>        <br>        <span class="hljs-comment"># 3. 统计检验</span><br>        self.statistical_test()<br>        <br>        <span class="hljs-comment"># 4. 滑动窗口分析</span><br>        self.sliding_window_analysis()<br>        <br>        <span class="hljs-comment"># 5. 信号平滑</span><br>        self.smooth_signals()<br>        <br>        <span class="hljs-comment"># 6. 生成图表</span><br>        manhattan_fig = self.plot_manhattan()<br>        plt.show()<br>        <br>        <span class="hljs-comment"># 7. 生成报告</span><br>        self.generate_report()<br>        <br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"BSA分析完成！"</span>)<br>        <br>        <span class="hljs-keyword">return</span> self.bsa_results<br><br><span class="hljs-comment"># 使用示例</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:<br>    <span class="hljs-comment"># 创建BSA分析对象</span><br>    bsa = BSAAnalysis(window_size=<span class="hljs-number">1000000</span>, step_size=<span class="hljs-number">100000</span>)<br>    <br>    <span class="hljs-comment"># 运行完整分析</span><br>    results = bsa.run_complete_analysis()<br>    <br>    <span class="hljs-comment"># 查看特定染色体的详细分析</span><br>    detail_fig = bsa.plot_chromosome_detail(<span class="hljs-string">'chr2'</span>)<br>    plt.show()<br>    <br>    <span class="hljs-comment"># 打印候选区域</span><br>    candidates = bsa.identify_peaks()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"\n候选区域:"</span>)<br>    <span class="hljs-built_in">print</span>(candidates[[<span class="hljs-string">'CHROM'</span>, <span class="hljs-string">'START'</span>, <span class="hljs-string">'END'</span>, <span class="hljs-string">'ABS_FREQ_DIFF'</span>, <span class="hljs-string">'MEAN_NEG_LOG10_P'</span>]].head())<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泛基因组时代中的序列到图映射算法综述</title>
      <link href="/article/seq2graph/"/>
      <url>/article/seq2graph/</url>
      
        <content type="html"><![CDATA[<h1 id="1-背景与意义"><a href="#1-背景与意义" class="headerlink" title="1 背景与意义"></a>1 <strong>背景与意义</strong></h1><p>传统线性参考基因组存在<strong>参考偏倚</strong>问题，导致非参考等位基因被遗漏或错误映射。泛基因组（Pangenome）通过整合多个个体基因组构建图结构，提供更全面的遗传多样性参考。<strong>序列到图映射（Sequence-to-Graph Mapping, S2G）</strong> 是泛基因组分析的核心技术，支撑变异检测、基因分型、长读长纠错等应用。近年来已有20余种S2G算法开发，但此前尚无系统性综述。</p><h1 id="2-泛基因组图的表示形式"><a href="#2-泛基因组图的表示形式" class="headerlink" title="2 泛基因组图的表示形式"></a>2 <strong>泛基因组图的表示形式</strong></h1><ol><li><strong>De Bruijn图（DBG）</strong><ul><li>节点为固定长度k-mer，边表示k-mer重叠关系。紧凑化DBG（cDBG）合并非分支路径（unitig）以减少规模，彩色DBG（cDBG）标记不同单倍型。</li></ul></li><li><strong>序列图（Sequence Graph）</strong><ul><li>节点代表序列，边表示连接关系，常用于有向无环图（DAG）表达变异分支。</li></ul></li><li><strong>变异图（Variation Graph）</strong><ul><li>双向图结构，节点包含正反链序列，边可双向遍历，支持嵌入路径表示单倍型。</li></ul></li><li><strong>弹性表示（Elastic Representation）</strong><ul><li><strong>弹性创始图（EFG）</strong>：将多序列比对（MSA）分块合并节点，实现高效模式匹配索引。</li><li><strong>弹性退化字符串（ED-string）</strong>：用非确定性字符串表示小变异（如SNV、indel）。</li></ul></li></ol><h1 id="3-S2G映射策略：种子-过滤-扩展"><a href="#3-S2G映射策略：种子-过滤-扩展" class="headerlink" title="3 S2G映射策略：种子-过滤-扩展"></a>3 <strong>S2G映射策略：种子-过滤-扩展</strong></h1><p>主流算法采用<strong>种子-过滤-扩展</strong>三步策略（图2），平衡效率与精度：</p><ol><li><p><strong>种子生成（Seeding）</strong></p><ul><li><strong>静态种子</strong>：固定长度k-mer（如GenomeMapper）、最小化子（minimizer，如minigraph）、间隔种子（spaced seeding）等。</li><li><strong>动态种子</strong>：如最大精确匹配（MEM/SMEM，如GraphAligner），根据序列特性动态选择。</li><li><strong>索引方法</strong>：<ul><li><strong>哈希索引</strong>：快速查询但内存开销大（如BGREAT）。</li><li><strong>基于压缩的索引</strong>：BWT（如VG giraffe的GBWT）、GCSA2（支持长k-mer索引）。</li><li><strong>草图索引</strong>：MG-SKETCH结合Tensor Sketching与HNSW，加速大规模数据匹配。</li></ul></li></ul></li><li><p><strong>过滤（Filtering）</strong></p><ul><li><strong>经典方法</strong>：筛选（去除低质量锚点）、聚类（合并相似锚点）、链化（构建有序锚点链）。</li><li><strong>图特异性方法</strong>：构建全局/局部坐标系（如minigraph的稳定坐标编码），解决图结构复杂性导致的定位难题。</li></ul></li><li><p><strong>扩展（Extension）</strong></p><ul><li>动态规划（DP）算法：带状DP（banded DP）、Smith-Waterman（SW）优化（如SIMD加速）。</li><li>图拓扑优化：A*搜索（ASTARIX）、Bit-parallel NW（GraphAligner）、GWFA（结合WFA算法）。</li><li>高性能计算：向量化处理（如DP的反斜向量计算，图2d）。</li></ul></li></ol><h1 id="4-算法工具比较与趋势"><a href="#4-算法工具比较与趋势" class="headerlink" title="4 算法工具比较与趋势"></a>4 <strong>算法工具比较与趋势</strong></h1><ul><li><strong>代表性工具</strong>（表1）：<ul><li><strong>短读长优先</strong>：GenomeMapper（k-mer+DP）、VG giraffe（minimizer+GBWT）。</li><li><strong>长读长优化</strong>：GraphAligner（minimizer链+Bit-parallel DP）、minigraph（minimizer链+SIMD SW）。</li><li><strong>特殊图支持</strong>：GED-MAP（ED-string）、deBGA（DBG）。</li></ul></li><li><strong>技术趋势</strong>：<ul><li><strong>索引优化</strong>：从哈希表转向压缩索引（如GBWT、GCSA2）及草图技术。</li><li><strong>长读长适配</strong>：动态种子（MEM）与链化策略提升长序列比对效率。</li><li><strong>跨物种应用</strong>：逐步扩展至物种间泛基因组（如结核杆菌、茄科植物）。</li></ul></li></ul><h1 id="5-挑战与未来方向"><a href="#5-挑战与未来方向" class="headerlink" title="5 挑战与未来方向"></a>5 <strong>挑战与未来方向</strong></h1><ol><li><strong>复杂区域处理</strong>：重复序列、高变区易导致错误锚点，需改进索引与过滤策略。</li><li><strong>长读长优化</strong>：平衡精度与速度，探索神经网络辅助预测。</li><li><strong>跨物种泛基因组</strong>：需统一表示不同物种间的保守与变异区域。</li><li><strong>计算资源优化</strong>：降低内存占用（如弹性索引），支持大规模数据实时分析。</li><li><strong>端到端学习</strong>：利用深度学习模型（如Transformer）替代传统启发式策略。</li></ol><h1 id="6-结论"><a href="#6-结论" class="headerlink" title="6 结论"></a>6 <strong>结论</strong></h1><p>该综述系统梳理了S2G映射算法的发展现状，强调了泛基因组时代对高效、精确比对技术的需求。未来算法需结合压缩索引、动态种子、高性能计算等多领域技术，推动泛基因组在临床医学、进化研究等场景的应用。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基因注释软件BRAKER学习笔记</title>
      <link href="/article/braker/"/>
      <url>/article/braker/</url>
      
        <content type="html"><![CDATA[<h1 id="1-BRAKER3的优势"><a href="#1-BRAKER3的优势" class="headerlink" title="1 BRAKER3的优势"></a>1 BRAKER3的优势</h1><ul><li>可以使用转录组和蛋白数据<h1 id="2-基因预测成功的关键"><a href="#2-基因预测成功的关键" class="headerlink" title="2 基因预测成功的关键"></a>2 基因预测成功的关键</h1></li><li>高质量的基因组：<code>short scaffolds</code>太多的话不会得到很准确的结果。</li><li>简单的序列名称：如<code>Chr1</code>这种是最好的。</li><li>要标记重复序列：<code>the genome should be masked for repeats</code>，避免对重复序列和低复杂度区域预测到基因结构；转录组数据比对是重复序列也会影响；在<code>GeneMark-ES/ET/EP/ETP</code>和<code>AUGUSTUS</code>流程中，<code>softmasking</code>比<code>hardmasking</code>表现更好。<ul><li><code>softmasking</code>：重复区域的核苷酸用小写字母，其他区域的用大写字母。</li><li><code>hardmasking</code>：重复区域的核苷酸序列用<code>N</code>表示。</li></ul></li><li>注意分支特异性：例如部分真菌会有特殊的分支点等，需要根据物种信息选择合适的参数。</li><li>进一步使用预测结果之前需要确定预测的准确性。<h1 id="3-BRAKER运行模式"><a href="#3-BRAKER运行模式" class="headerlink" title="3 BRAKER运行模式"></a>3 BRAKER运行模式</h1><h2 id="3-1-只有基因组"><a href="#3-1-只有基因组" class="headerlink" title="3.1 只有基因组"></a>3.1 只有基因组</h2>在这种模式下，<code>GeneMark-ES</code>使用基因组进行训练，<code>GeneMark-ES</code>预测的长基因用于训练后续的<code>AUGUSTUS</code>；最终使用<code>AUGUSTUS</code>进行预测。这种模式得到的结果的准确性是最低的。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250940197.png" alt="Pasted image 20250424204809"></p><h2 id="3-2-基因组-转录组"><a href="#3-2-基因组-转录组" class="headerlink" title="3.2 基因组+转录组"></a>3.2 基因组+转录组</h2><p>短读长的RNA-seq数据适合这种预测方法。这种方法要求每个<code>intro</code>被很多的<code>alignments</code>覆盖，<strong>但是组装过的转录组比对不适用于这种方法</strong>。长读长的RNA-seq数据也是可以的，但是需要注意的是每个进行训练的转录本都需要多次测序并与基因组进行比对。<strong>现在BRAKER还不支持短读长和长读长的RNA-seq数据的混合使用</strong>。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250940198.png" alt="Pasted image 20250424205041"></p><h2 id="3-3-基因组-蛋白序列"><a href="#3-3-基因组-蛋白序列" class="headerlink" title="3.3 基因组+蛋白序列"></a>3.3 基因组+蛋白序列</h2><p>这种方法尤其适用于没有RNA-seq数据的情况，而且使用的蛋白序列可以是来自和目标物种遗传距离未知的物种，当然，使用近缘物种肯定预测得更准确些。<strong>这个方法需要蛋白家族，也就是每个蛋白家族具有代表性的序列应该在数据库中</strong>。<code>OrthoDB</code>这个数据库是测试过的。官方提供了<a href="https://bioinf.uni-greifswald.de/bioinf/partitioned_odb11/">OrthoDB v.11</a>和<a href="https://bioinf.uni-greifswald.de/bioinf/partitioned_odb12/">OrthoDB v.12</a>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250940199.png" alt="Pasted image 20250424205550"></p><h2 id="3-4-基因组-转录组-蛋白序列"><a href="#3-4-基因组-转录组-蛋白序列" class="headerlink" title="3.4 基因组+转录组+蛋白序列"></a>3.4 基因组+转录组+蛋白序列</h2><p>从头预测+转录本+同源蛋白预测。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250939135.png" alt="image.png"></p><h1 id="4-软件安装"><a href="#4-软件安装" class="headerlink" title="4 软件安装"></a>4 软件安装</h1><h2 id="4-1-Docker安装"><a href="#4-1-Docker安装" class="headerlink" title="4.1 Docker安装"></a>4.1 Docker安装</h2><p>推荐使用docekr进行安装：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull teambraker/braker3<br></code></pre></td></tr></tbody></table></figure><br>进入容器：<br><figure class="highlight dockerfile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="language-bash"> --<span class="hljs-built_in">rm</span> -it -v $(<span class="hljs-built_in">pwd</span>):/work teambraker/braker3:latest /bin/bash</span><br></code></pre></td></tr></tbody></table></figure><p></p><h2 id="4-2-Conda安装"><a href="#4-2-Conda安装" class="headerlink" title="4.2 Conda安装"></a>4.2 Conda安装</h2><p>如果没有docker权限，可以尝试使用conda进行安装：<br></p><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cmake">wget https://repo.anaconda.com/archive/Anaconda3-<span class="hljs-number">2018.12</span>-Linux-x86_64.sh<br>bash bin/Anaconda3-<span class="hljs-number">2018.12</span>-Linux-x86_64.sh <span class="hljs-comment"># do not install VS (needs root privileges)</span><br>conda <span class="hljs-keyword">install</span> -c anaconda perl<br>conda <span class="hljs-keyword">install</span> -c anaconda biopython<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-app-cpanminus<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">file</span>-spec<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-hash-merge<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">list</span>-util<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-module-load-conditional<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-posix<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">file</span>-homedir<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-parallel-forkmanager<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-scalar-util-numeric<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-yaml<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-class-data-inheritable<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-exception-class<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">test</span>-pod<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">file</span>-which <span class="hljs-comment"># skip if you are not comparing to reference annotation</span><br>conda <span class="hljs-keyword">install</span> -c bioconda perl-mce<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-threaded<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">list</span>-util<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">math</span>-utils<br>conda <span class="hljs-keyword">install</span> -c bioconda cdbtools<br>conda <span class="hljs-keyword">install</span> -c eumetsat perl-yaml-xs<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-data-dumper<br></code></pre></td></tr></tbody></table></figure><br><code>BRAKER</code>和<code>AUGUSTUS</code>在conda上也是有的。<br><strong>个人推荐速度更快的Miniforge替代原生conda</strong>。<p></p><h2 id="4-3-软件依赖"><a href="#4-3-软件依赖" class="headerlink" title="4.3 软件依赖"></a>4.3 软件依赖</h2><ul><li>AUGUSTUS 3.5.0 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#g2">F2</a></li><li>GeneMark-ETP (source see Dockerfile)</li><li>BAMTOOLS 2.5.1<a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f5">R5</a></li><li>SAMTOOLS 1.7-4-g93586ed<a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f6">R6</a></li><li>Spaln 2.3.3d <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f8">R8,</a> <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f9">R9,</a> <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f10">R10</a></li><li>NCBI BLAST+ 2.2.31+ <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f12">R12,</a> <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f13">R13</a></li><li>DIAMOND 0.9.24</li><li>cdbfasta 0.99</li><li>cdbyank 0.981</li><li>GUSHR 1.0.0</li><li>SRA Toolkit 3.00 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f14">R14</a></li><li>HISAT2 2.2.1 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f15">R15</a></li><li>BEDTOOLS 2.30 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f16">R16</a></li><li>StringTie2 2.2.1 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f17">R17</a></li><li>GFFRead 0.12.7 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f18">R18</a></li><li>compleasm 0.2.5 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f27">R27</a><h2 id="4-4-脚本依赖"><a href="#4-4-脚本依赖" class="headerlink" title="4.4 脚本依赖"></a>4.4 脚本依赖</h2>主要的脚本是<code>braker.pl</code>，在运行<code>braker.pl</code>时会调用以下这些脚本：</li><li>`filterGenemark.pl    </li><li><code>filterIntronsFindStrand.pl</code></li><li><code>helpMod_braker.pm</code></li><li><code>findGenesInIntrons.pl</code></li><li><code>downsample_traingenes.pl</code></li><li><code>ensure_n_training_genes.py</code></li><li><code>get_gc_content.py</code></li><li><code>get_etp_hints.py</code><br><strong>需要确保这些脚本都是可执行状态，也就是有<code>x</code>这个属性；如果不是可执行状态，需要使用<code>chmod a+x *.pl *.py</code>添加可执行属性</strong>。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251014959.png" alt="image.png"><h1 id="5-运行BRAKER"><a href="#5-运行BRAKER" class="headerlink" title="5 运行BRAKER"></a>5 运行BRAKER</h1>建议使用<code>softmasked Repeats</code>后的基因组。<h2 id="5-1-模式选择"><a href="#5-1-模式选择" class="headerlink" title="5.1 模式选择"></a>5.1 模式选择</h2><h3 id="5-1-1-转录组"><a href="#5-1-1-转录组" class="headerlink" title="5.1.1 转录组"></a>5.1.1 转录组</h3>这个流程适用于有转录组但是没有蛋白质数据的情况。<code>BRAKER</code>有多种方式接收传入的转录组数据：</li><li>使用<code>SRA</code>数据：有多个<code>SRA</code>数据时使用<code>,</code>进行分隔，<code>BRAKER</code>会自动下载对应的SRA数据：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2<br></code></pre></td></tr></tbody></table></figure></li><li>使用本地的<code>FASTQ</code>文件：可以是为<code>mapping</code>过的原始数据，同样需要提供<code>FASTQ</code>文件的文件名称和对应的文件的路径，会根据文件的ID自动识别文件，如果是双末端的会识别为<code>SRA_ID1_1.fastq</code>和<code>SRA_ID1_2.fastq</code>这样，如果是单末端的会识别为<code>ID.fastq</code>. <figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>   <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2 \<br>   <span class="hljs-attribute">--rnaseq_sets_dirs</span>=/path/to/local/fastq/files/<br></code></pre></td></tr></tbody></table></figure></li><li>使用比对后的<code>bam</code>文件<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 类似FASTQ输入方式</span><br>braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>   <span class="hljs-attribute">--rnaseq_sets_ids</span>=BAM_ID1,BAM_ID2 \<br>   <span class="hljs-attribute">--rnaseq_sets_dirs</span>=/path/to/local/bam/files/<br></code></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 直接指定bam文件</span><br>braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--bam</span>=file1.bam,file2.bam<br></code></pre></td></tr></tbody></table></figure><p>使用<code>bam</code>文件时，<code>BRAKER</code>默认<code>bam</code>文件是<code>HISAT2</code>比对得到的结果；如果想使用<code>SATR</code>的话，需要加上参数<code>--outSAMstrandField intronMotif</code>. </p><ul><li>从比对信息中提取的<code>gff</code>格式信息：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--hints</span>=hints1.gff,hints2.gff<br></code></pre></td></tr></tbody></table></figure>格式类似于这样：<figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">chrName</span> b2h intron  <span class="hljs-number">6591</span>    <span class="hljs-number">8003</span>    <span class="hljs-number">1</span>   +   .   pri=<span class="hljs-number">4</span>;src=E<br><span class="hljs-attribute">chrName</span> b2h intron  <span class="hljs-number">6136</span>    <span class="hljs-number">9084</span>    <span class="hljs-number">11</span>  +   .   mult=<span class="hljs-number">11</span>;pri=<span class="hljs-number">4</span>;src=E<br></code></pre></td></tr></tbody></table></figure><strong>第二列的<code>b2h</code>和最后一列的<code>src=E</code>是必须要的</strong>。</li></ul><hr><p>可以将上面这些方法进行组合，但是需要注意的是，<strong>如果使用转录组+蛋白组这种方式的话，不建议使用<code>--hints</code>这种方法</strong>。</p><h3 id="5-1-2-蛋白组"><a href="#5-1-2-蛋白组" class="headerlink" title="5.1.2 蛋白组"></a>5.1.2 蛋白组</h3><p>这种方法尤其适用于没有转录组的情况。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251039400.png" alt="image.png"><br>执行下面的代码即可运行：<br></p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--prot_seq</span>=proteins.fa<br></code></pre></td></tr></tbody></table></figure><br>推荐使用<code>OrthoDB</code>作为<code>proteins.fa</code>的基础。<br>也可以使用<code>ProtHint</code>的数据：<br><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--hints</span>=prothint_augustus.gff<br></code></pre></td></tr></tbody></table></figure><br>对应的文件是这样的：<br><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">11506230</span> <span class="hljs-number">11506648</span> <span class="hljs-number">4</span> + . src=M;mult=<span class="hljs-number">4</span>;pri=<span class="hljs-number">4</span><br><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">9563406</span>  <span class="hljs-number">9563473</span>  <span class="hljs-number">1</span> + . grp=<span class="hljs-number">69004</span>_0:<span class="hljs-number">001</span>de1_702_g;src=C;pri=<span class="hljs-number">4</span>;<br><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">8446312</span>  <span class="hljs-number">8446371</span>  <span class="hljs-number">1</span> + . grp=<span class="hljs-number">43151</span>_0:<span class="hljs-number">001</span>cae_473_g;src=C;pri=<span class="hljs-number">4</span>;<br><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">8011796</span>  <span class="hljs-number">8011865</span>  <span class="hljs-number">2</span> - . src=P;mult=<span class="hljs-number">1</span>;pri=<span class="hljs-number">4</span>;al_score=<span class="hljs-number">0</span>.<span class="hljs-number">12</span>;<br><span class="hljs-attribute">2R</span> ProtHint start  <span class="hljs-number">234524</span>   <span class="hljs-number">234526</span>   <span class="hljs-number">1</span> + . src=P;mult=<span class="hljs-number">1</span>;pri=<span class="hljs-number">4</span>;al_score=<span class="hljs-number">0</span>.<span class="hljs-number">08</span>;<br></code></pre></td></tr></tbody></table></figure><p></p><h4 id="5-1-2-1-训练和预测UTRs"><a href="#5-1-2-1-训练和预测UTRs" class="headerlink" title="5.1.2.1 训练和预测UTRs"></a>5.1.2.1 训练和预测UTRs</h4><p>如果转录组只有<code>bam</code>格式文件，而且基因组是<code>softmasked</code>格式的，那么<code>BRAKER</code>就可以自动训练<code>UTR</code>的参数用于<code>AUGUSTUS</code>预测；预测完成之后就会使用覆盖度等信息进行基因预测，对应的命令是这样的：<br></p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--bam</span>=file.bam <span class="hljs-attribute">--UTR</span>=on<br></code></pre></td></tr></tbody></table></figure><br><strong>Warnings：</strong><p></p><ul><li>这个流程属于测试性的；</li><li><code>--UTR=on</code>不兼容<code>bamToWig.py</code>这个脚本；</li><li><code>--UTR=on</code>会增加内存需求；</li><li>UTR预测有时能优化编码序列的预测准确度，但不是总是能够优化。<h4 id="5-1-2-2-链特异性的转录组比对结果"><a href="#5-1-2-2-链特异性的转录组比对结果" class="headerlink" title="5.1.2.2 链特异性的转录组比对结果"></a>5.1.2.2 链特异性的转录组比对结果</h4>对于UTR的训练和预测，链特异性的转录组数据能够提供更多的信息，将<code>bam</code>文件分割成<code>+</code>和<code>-</code>的两个文件，然后运行<code>BRAKER</code>：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>    <span class="hljs-attribute">--bam</span>=plus.bam,minus.bam <span class="hljs-attribute">--stranded</span>=+,- \<br>    <span class="hljs-attribute">--UTR</span>=on<br></code></pre></td></tr></tbody></table></figure>非链特异性的<code>bam</code>文件也可以用，不用于UTR预测，用于基因预测：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>   <span class="hljs-attribute">--bam</span>=plus.bam,minus.bam,unstranded.bam \<br>   <span class="hljs-attribute">--stranded</span>=+,-,. <span class="hljs-attribute">--UTR</span>=on<br></code></pre></td></tr></tbody></table></figure><h3 id="5-1-3-转录组-蛋白组"><a href="#5-1-3-转录组-蛋白组" class="headerlink" title="5.1.3 转录组+蛋白组"></a>5.1.3 转录组+蛋白组</h3>首先使用转录组和蛋白组数据训练<code>GeneMark-ETP</code>，输出结果中属于<code>high-confindent</code>的基因用于训练<code>AUGUSTUS</code>，随后使用<code>TSEBRA</code>将这两个软件的结果进行整合。<h4 id="5-1-3-1-转录组比对"><a href="#5-1-3-1-转录组比对" class="headerlink" title="5.1.3.1 转录组比对"></a>5.1.3.1 转录组比对</h4><code>GeneMark-ETP</code>使用<code>Stringtie2</code>对转录本进行组装，也就需要<code>bam</code>文件有<code>XS</code>tag，如果比对的时候用的软件是<code>HISAT2</code>，那么就需要加上<code>-dta</code>这个参数；使用<code>STAR</code>的话就要加上<code>--outSAMstrandField intronMotif</code>这个参数选项。有几种代码运行方式：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--prot_seq</span>=orthodb.fa \<br>    <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2 \<br>    <span class="hljs-attribute">--rnaseq_sets_dirs</span>=/path/to/local/RNA-Seq/files/<br></code></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--prot_seq</span>=orthodb.fa \<br>    <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2,SRA_ID3<br></code></pre></td></tr></tbody></table></figure><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">braker<span class="hljs-selector-class">.pl</span> <span class="hljs-attr">--genome</span>=genome<span class="hljs-selector-class">.fa</span> <span class="hljs-attr">--prot_seq</span>=orthodb<span class="hljs-selector-class">.fa</span> \<br>    <span class="hljs-attr">--bam</span>=/path/to/SRA_ID1<span class="hljs-selector-class">.bam</span>,/path/to/SRA_ID2.bam<br></code></pre></td></tr></tbody></table></figure><h2 id="5-2-长-短读长转录组"><a href="#5-2-长-短读长转录组" class="headerlink" title="5.2 长/短读长转录组"></a>5.2 长/短读长转录组</h2><h2 id="5-3-长读长转录组-蛋白组"><a href="#5-3-长读长转录组-蛋白组" class="headerlink" title="5.3 长读长转录组+蛋白组"></a>5.3 长读长转录组+蛋白组</h2><p>如果使用<code>BRAKER</code>的<code>fast-hack</code>模式，那么就需要使用长读长的转录组构造<code>bam</code>文件：<br></p><figure class="highlight roboconf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs roboconf">T=48 <span class="hljs-comment"># 线程数</span><br>minimap2 -t${<span class="hljs-attribute">T} -ax splice</span>:hq -uf genome<span class="hljs-variable">.fa</span> isoseq<span class="hljs-variable">.fa</span> &gt; isoseq<span class="hljs-variable">.sam</span>     <br>samtools view -bS --threads ${T} isoseq<span class="hljs-variable">.sam</span> -o isoseq<span class="hljs-variable">.bam</span><br></code></pre></td></tr></tbody></table></figure><br>然后拉取适合长读长转录组的<code>BRKAER</code>版本：<br><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">singularity build braker3_lr.sif docker:<span class="hljs-regexp">//</span>teambraker/braker3:isoseq<br></code></pre></td></tr></tbody></table></figure><br>运行：<br><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">singularity exec -B <span class="hljs-variable">${PWD}</span>:<span class="hljs-variable">${PWD}</span> braker3_lr.sif braker.pl \<br><span class="hljs-attribute">--genome</span>=genome.fa \<br><span class="hljs-attribute">--prot_seq</span>=protein_db.fa \<br>–<span class="hljs-attribute">-bam</span>=isoseq.bam <span class="hljs-attribute">--threads</span>=<span class="hljs-variable">${T}</span> <br></code></pre></td></tr></tbody></table></figure><p></p><p><strong>Warnings</strong>：</p><ul><li>不能混合使用短读长和长读长的转录组数据。</li><li><code>isoseq</code>数据的深度严重影响着基因预测的准确度。<h2 id="5-4-参数选择"><a href="#5-4-参数选择" class="headerlink" title="5.4 参数选择"></a>5.4 参数选择</h2><h3 id="5-4-1-—ab-initio"><a href="#5-4-1-—ab-initio" class="headerlink" title="5.4.1 —ab_initio"></a>5.4.1 —ab_initio</h3>Compute AUGUSTUS <em>ab initio</em> predictions in addition to AUGUSTUS predictions with hints (additional output files: <code>augustus.ab_initio.*</code>. This may be useful for estimating the quality of training gene parameters when inspecting predictions in a Browser.<h3 id="5-4-2-—augustus-args-”—some-arg-bla”"><a href="#5-4-2-—augustus-args-”—some-arg-bla”" class="headerlink" title="5.4.2 —augustus_args=”—some_arg=bla”"></a>5.4.2 —augustus_args=”—some_arg=bla”</h3>知道物种适用的<code>AUGUSTUS</code>的话可以把这些参数传入，使用空格进行分隔，如<code>--first_arg=sth --second_arg=sth</code>.<h3 id="5-4-3-—threads-INT"><a href="#5-4-3-—threads-INT" class="headerlink" title="5.4.3 —threads=INT"></a>5.4.3 —threads=INT</h3>指定线程数，某些步骤使用单线程，部分步骤使用多线程。设置超过8线程的话，对于多线程步骤会加速计算。<h3 id="5-4-4-—fungus"><a href="#5-4-4-—fungus" class="headerlink" title="5.4.4 —fungus"></a>5.4.4 —fungus</h3>是<code>GeneMark-ETP</code>的参数选项，如果是真菌的话使用这个参数，其他不用。<h3 id="5-4-5-—useexisting"><a href="#5-4-5-—useexisting" class="headerlink" title="5.4.5 —useexisting"></a>5.4.5 —useexisting</h3>是否使用现成的配置文件，如果使用的话就会覆盖掉软件默认的参数文件。<h3 id="5-4-6-—crf"><a href="#5-4-6-—crf" class="headerlink" title="5.4.6 —crf"></a>5.4.6 —crf</h3>是否为<code>AUGUSTUS</code>执行<code>CRF training</code>，生成的参数只是用于最后的预测，使用的话会增加运行时间。<h3 id="5-4-7-—lambda-int"><a href="#5-4-7-—lambda-int" class="headerlink" title="5.4.7 —lambda=int"></a>5.4.7 —lambda=int</h3>默认的是参数值是2，如果有大量单个外显子的基因的话，参数可以设置为0.<h3 id="5-4-8-—UTR-on"><a href="#5-4-8-—UTR-on" class="headerlink" title="5.4.8 —UTR=on"></a>5.4.8 —UTR=on</h3>见上述步骤。<h3 id="5-4-9-—addUTR-on"><a href="#5-4-9-—addUTR-on" class="headerlink" title="5.4.9 —addUTR=on"></a>5.4.9 —addUTR=on</h3>见上述步骤。<h3 id="5-4-10-—stranded-…"><a href="#5-4-10-—stranded-…" class="headerlink" title="5.4.10 —stranded=+,-,.,…"></a>5.4.10 —stranded=+,-,.,…</h3>见上述步骤。<h1 id="6-输出结果"><a href="#6-输出结果" class="headerlink" title="6 输出结果"></a>6 输出结果</h1></li><li><code>braker.gtf</code>：最终的基因集，不同的模式有不同的结果<ul><li><code>ETPmode</code>：<code>AUGUSTUS</code>和<code>GeneMark-ETP</code>的整合结果</li><li><code>otherwise</code>：官方不建议使用的模式和结果。</li></ul></li><li><code>braker.codingseq</code>：最终基因集的编码序列。</li><li><code>braker.aa</code>：最终基因集的蛋白序列。</li><li><code>braker.gff3</code>：最终基因集的注释文件，需要加上<code>--gff3</code>这个参数选项。</li><li><code>Augustus/*</code>：<code>Augustus</code>的输出结果。</li><li><code>GeneMark-E*/genemark.gtf</code>：<code>GeneMark-ES/ET/EP/EP+/ETP</code>的输出结果。</li><li><code>hintsfile.gff</code>：从转录组或者是蛋白质组中输出的结果。</li><li><code>braker_original/*</code>：<code>BRAKER</code>输出的结果，这个结果是运行<code>compleasm</code>之前的结果。</li><li><code>bbc/*</code>：<code>best_by_compleasm.py</code>的输出结果。</li></ul><p>如果设置<code>--skipGetAnnoFromFasta</code>参数的话不会生成编码序列和蛋白序列结果。</p><h1 id="7-测试练习"><a href="#7-测试练习" class="headerlink" title="7 测试练习"></a>7 测试练习</h1><h2 id="7-1-数据下载"><a href="#7-1-数据下载" class="headerlink" title="7.1 数据下载"></a>7.1 数据下载</h2><p>基因组数据来自文章Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations，选择的是品种是<code>R527</code>，这个基因组不是<code>soft masking</code>的，下载地址<a href="https://ricerc.sicau.edu.cn/.">https://ricerc.sicau.edu.cn/</a> 蛋白质组数据来自<a href="https://ricerc.sicau.edu.cn/RiceRC/download/downloadBefore">Rice Resource Center</a>的R498这个水稻品种。转录组数据来自文章的提供的数据。</p><h2 id="7-2-运行BRAKER"><a href="#7-2-运行BRAKER" class="headerlink" title="7.2 运行BRAKER"></a>7.2 运行BRAKER</h2><h3 id="7-2-1-下载Docker镜像"><a href="#7-2-1-下载Docker镜像" class="headerlink" title="7.2.1 下载Docker镜像"></a>7.2.1 下载Docker镜像</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull teambraker/braker3<br></code></pre></td></tr></tbody></table></figure><h3 id="7-2-2-进入容器"><a href="#7-2-2-进入容器" class="headerlink" title="7.2.2 进入容器"></a>7.2.2 进入容器</h3><figure class="highlight elixir"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir">docker run --rm -it -v <span class="hljs-variable">$(</span>pwd)<span class="hljs-symbol">:/home/jovyan/braker3</span> teambraker/<span class="hljs-symbol">braker3:</span>latest /bin/bash<br><br>cd braker3 <span class="hljs-comment">#进入挂载的目录</span><br></code></pre></td></tr></tbody></table></figure><h3 id="7-2-3-运行BRAKER"><a href="#7-2-3-运行BRAKER" class="headerlink" title="7.2.3 运行BRAKER"></a>7.2.3 运行BRAKER</h3><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">nohup braker<span class="hljs-selector-class">.pl</span> <span class="hljs-attr">--genome</span>=data/R527<span class="hljs-selector-class">.fa</span> <span class="hljs-attr">--prot_seq</span>=data/R498<span class="hljs-selector-class">.pep</span><span class="hljs-selector-class">.fa</span> \<br>        <span class="hljs-attr">--rnaseq_sets_ids</span>=ERR13336195,ERR13336317,ERR13336454,ERR13336603 \<br>        <span class="hljs-attr">--rnaseq_sets_dirs</span>=data/ \<br>        <span class="hljs-attr">--threads</span>=<span class="hljs-number">65</span> \<br>        <span class="hljs-attr">--crf</span> &gt;&gt; braker3<span class="hljs-selector-class">.log</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></tbody></table></figure><h3 id="7-2-4-后台运行容器"><a href="#7-2-4-后台运行容器" class="headerlink" title="7.2.4 后台运行容器"></a>7.2.4 后台运行容器</h3><p>上面先进入容器再运行的方法有个问题就想终端关闭或者是exit退出容器之后，进程会被杀死。改用下面的方式运行：<br></p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">nohup docker <span class="hljs-built_in">run</span> --rm -v $(pwd):/home/jovyan/ teambraker/braker3:latest \<br>braker.pl <span class="hljs-attribute">--genome</span>=data/R527.fa <span class="hljs-attribute">--prot_seq</span>=data/R498.pep.fa \<br>        <span class="hljs-attribute">--rnaseq_sets_ids</span>=CRR279535,CRR279536,CRR279537,CRR279538,CRR279539,CRR279540,CRR279541,CRR279542,CRR279543,CRR279544,CRR279545,CRR279546,CRR279547,CRR279548,CRR279549,CRR279550,CRR279551,CRR279552,CRR279553,CRR279554,CRR279555,CRR279556,CRR279557,CRR279558,CRR279559,CRR279560,CRR279561,CRR279562,CRR279563 \<br>        <span class="hljs-attribute">--rnaseq_sets_dirs</span>=data/ \<br>        <span class="hljs-attribute">--threads</span>=65 \<br>        --crf &gt;&gt; braker.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></tbody></table></figure><p></p><h3 id="7-2-5-报错处理"><a href="#7-2-5-报错处理" class="headerlink" title="7.2.5 报错处理"></a>7.2.5 报错处理</h3><p>遇到报错：<br></p><figure class="highlight livecodeserver"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Error: Encountered <span class="hljs-literal">one</span> <span class="hljs-keyword">or</span> more spaces <span class="hljs-keyword">while</span> parsing <span class="hljs-keyword">the</span> quality <span class="hljs-keyword">string</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">read</span> ERR13336195<span class="hljs-number">.10655764</span> D00738:<span class="hljs-number">173</span>:H2TGTBCX3:<span class="hljs-number">2</span>:<span class="hljs-number">1201</span>:<span class="hljs-number">21091</span>:<span class="hljs-number">100335</span><span class="hljs-comment">#0/2.  If this </span><br>is <span class="hljs-keyword">a</span> FASTQ <span class="hljs-built_in">file</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">integer</span> (non-ASCII-encoded) qualities, <span class="hljs-keyword">try</span> re-running <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> <span class="hljs-comment">--integer-quals option.                                                 </span><br>terminate called <span class="hljs-keyword">after</span> throwing <span class="hljs-keyword">an</span> instance <span class="hljs-keyword">of</span> <span class="hljs-string">'int'</span>                                               <br>Aborted (core dumped)                                                                              <br>(ERR): hisat2-align exited <span class="hljs-keyword">with</span> <span class="hljs-built_in">value</span> <span class="hljs-number">134</span><br></code></pre></td></tr></tbody></table></figure><br>先对转录组数据进行处理：<br><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建输出目录                                                                                       </span><br><span class="hljs-built_in">mkdir</span> -p data/clean_data                                                                                    <br><br><span class="hljs-comment"># 遍历所有 R1 文件（自动匹配对应的 R2 文件）                                                            </span><br><span class="hljs-keyword">for</span> r1_file <span class="hljs-keyword">in</span> data/*_1.fastq.gz; <span class="hljs-keyword">do</span>                                                               <br>    <span class="hljs-comment"># 生成 R2 文件名（替换 "R1" 为 "R2"）                                                             </span><br>    r2_file=<span class="hljs-string">"<span class="hljs-variable">${r1_file/_1/_2}</span>"</span>                                                                                             <br>                                     <br>    <span class="hljs-comment"># 生成输出文件名                                                                                 </span><br>    out_r1=<span class="hljs-string">"data/clean_data/<span class="hljs-subst">$(basename <span class="hljs-string">"<span class="hljs-variable">$r1_file</span>"</span>)</span>"</span>                                                <br>    out_r2=<span class="hljs-string">"data/clean_data/<span class="hljs-subst">$(basename <span class="hljs-string">"<span class="hljs-variable">$r2_file</span>"</span>)</span>"</span>   <br>                                                                                                          <br>    <span class="hljs-comment"># 运行 fastp，处理双端数据                                                                        </span><br>    fastp -i <span class="hljs-string">"<span class="hljs-variable">$r1_file</span>"</span> -I <span class="hljs-string">"<span class="hljs-variable">$r2_file</span>"</span> \                                                            <br>          -o <span class="hljs-string">"<span class="hljs-variable">$out_r1</span>"</span> -O <span class="hljs-string">"<span class="hljs-variable">$out_r2</span>"</span> \                                                              <br>          --html <span class="hljs-string">"data/clean_data/<span class="hljs-subst">$(basename <span class="hljs-string">"<span class="hljs-variable">$r1_file</span>"</span>)</span>.html"</span> \                                   <br>          --json <span class="hljs-string">"data/clean_data/<span class="hljs-subst">$(basename <span class="hljs-string">"<span class="hljs-variable">$r1_file</span>"</span>)</span>.json"</span>                                    <br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><br>最终确定是文件下载的问题，最后只使用<code>ERR13336195</code>这个转录组数据集。<p></p><h1 id="8-比较注释结果"><a href="#8-比较注释结果" class="headerlink" title="8 比较注释结果"></a>8 比较注释结果</h1><p>使用下面的脚本评估新转录组数据和注释结果的匹配率（未经过验证）。<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 参数设置</span><br>GENOME=<span class="hljs-variable">$1</span> <span class="hljs-comment"># 基因组fasta文件</span><br>GFF=<span class="hljs-variable">$2</span> <span class="hljs-comment"># 注释GFF文件</span><br>TRANSCRIPTOME=<span class="hljs-variable">$3</span> <span class="hljs-comment"># 转录组fastq文件</span><br>THREADS=8 <span class="hljs-comment"># 并行线程数</span><br><br><span class="hljs-comment"># Step 1: 转录组比对到基因组</span><br>hisat2-build <span class="hljs-variable">$GENOME</span> genome_index <span class="hljs-comment"># 构建索引</span><br>hisat2 -p <span class="hljs-variable">$THREADS</span> -x genome_index -U <span class="hljs-variable">$TRANSCRIPTOME</span> | samtools <span class="hljs-built_in">sort</span> -O BAM -o aligned.bam<br>samtools index aligned.bam <span class="hljs-comment"># 生成索引</span><br><br><br><span class="hljs-comment"># Step 2: 计算覆盖区域并合并连续区间</span><br>samtools depth -aa aligned.bam | awk <span class="hljs-string">'$3 &gt; 0 {print $1"\t"$2-1"\t"$2}'</span> &gt; coverage.bed<br>bedtools merge -i coverage.bad &gt; merged_coverage.bed<br><br><span class="hljs-comment"># Step 3: 提取GFF中的基因坐标</span><br>awk <span class="hljs-string">'$3=="gene" {print $1"\t"$4-1"\t"$5}'</span> <span class="hljs-variable">$GFF</span> &gt; genes.bed <span class="hljs-comment"># 提取基因区域</span><br>bedtools <span class="hljs-built_in">sort</span> -i genes.bed &gt; sorted_genes.bed<br><br><span class="hljs-comment"># Step 4: 比较覆盖区域与注释基因</span><br>bedtools intersect -a merged_coverage.bed -b sorted_genes.bed -wa -wb &gt; overlap_results.txt<br><br><span class="hljs-comment"># Step 5: 统计准确性指标</span><br>TOTAL_COV=$(<span class="hljs-built_in">wc</span> -l &lt; merged_coverage.bed)<br>TOTAL_GENE=$(<span class="hljs-built_in">wc</span> -l &lt; sorted_genes.bed)<br>MATCHED=$(<span class="hljs-built_in">cut</span> -f1-3 overlap_results.txt | <span class="hljs-built_in">sort</span> -u | <span class="hljs-built_in">wc</span> -l)<br><br><span class="hljs-comment"># 计算匹配率</span><br>MATCH_RATE=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">"scale=2; <span class="hljs-variable">$MATCHED</span>*100/<span class="hljs-variable">$TOTAL_GENE</span>"</span> | bc)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">"基因注释匹配率: <span class="hljs-variable">${MATCH_RATE}</span>%"</span><br></code></pre></td></tr></tbody></table></figure><p></p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">./validate_annotation<span class="hljs-selector-class">.sh</span> genome<span class="hljs-selector-class">.fa</span> annotations<span class="hljs-selector-class">.gff</span> rnaseq.fastq<br></code></pre></td></tr></tbody></table></figure><h1 id="9-长读长转录组"><a href="#9-长读长转录组" class="headerlink" title="9 长读长转录组"></a>9 长读长转录组</h1><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251529836.png" alt="image.png"><br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251529257.png" alt="image.png"></p><h2 id="9-1-实验和测序设计"><a href="#9-1-实验和测序设计" class="headerlink" title="9.1 实验和测序设计"></a>9.1 实验和测序设计</h2><h3 id="9-1-1-测序平台和文库构建"><a href="#9-1-1-测序平台和文库构建" class="headerlink" title="9.1.1 测序平台和文库构建"></a>9.1.1 测序平台和文库构建</h3><ul><li>关注准确性和read长度就用<code>PacBio</code></li><li>关注RNA修饰就用<code>ONT</code><h3 id="9-1-2-测序深度"><a href="#9-1-2-测序深度" class="headerlink" title="9.1.2 测序深度"></a>9.1.2 测序深度</h3>通常建议大于2千万条<code>reads</code>或者是深度超过<code>40x</code>，或者根据公式进行计算：<script type="math/tex; mode=display">Depth_{sample}=\frac{\sum Depth_{isoforms}}{N_{expressed-isoforms-in-sample}}</script><h3 id="9-1-3-样品重复"><a href="#9-1-3-样品重复" class="headerlink" title="9.1.3 样品重复"></a>9.1.3 样品重复</h3>尽可能多一点。<h2 id="9-2-数据处理"><a href="#9-2-数据处理" class="headerlink" title="9.2 数据处理"></a>9.2 数据处理</h2>先关注用户层面不够用到的。<h3 id="9-2-1-Mapping"><a href="#9-2-1-Mapping" class="headerlink" title="9.2.1 Mapping"></a>9.2.1 Mapping</h3>作者推荐的是<code>Minimap2</code>，单是面对小的外显子或者复杂的可变剪切时还是有局限性。如果面对复杂的可变剪切或者是小的外显子，可以使用<code>uLTRA</code>、<code>Graphmap2</code>、<code>deSALT</code>、<code>2passtools</code>、<code>Splam</code>和<code>Magic-BLAST</code>. </li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251541543.png" alt="image.png"></p><h3 id="9-2-2-转录本鉴定和定量"><a href="#9-2-2-转录本鉴定和定量" class="headerlink" title="9.2.2 转录本鉴定和定量"></a>9.2.2 转录本鉴定和定量</h3><p>长读长转录组的主要目的是鉴定和定量转录本。从头预测转录可以发现新的转录本，但是耗时耗计算资源；使用参考基因组对转录本定量的话就可能会丢失新的转录本信息。根据不同的目的使用不同的方法和策略。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251548325.png" alt="image.png"><br>对转录本进行鉴定的方法可以分为基于聚类、基于graph和基于class的方法。</p><h2 id="9-3-下游分析"><a href="#9-3-下游分析" class="headerlink" title="9.3 下游分析"></a>9.3 下游分析</h2><h3 id="9-3-1-差异表达和可变剪切"><a href="#9-3-1-差异表达和可变剪切" class="headerlink" title="9.3.1 差异表达和可变剪切"></a>9.3.1 差异表达和可变剪切</h3><h3 id="9-3-2-基因组注释"><a href="#9-3-2-基因组注释" class="headerlink" title="9.3.2 基因组注释"></a>9.3.2 基因组注释</h3><p>可以使用的软件有Augustus、SNAP、MAKER和BRAKER.</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构变异可视化工具SVbyEye</title>
      <link href="/article/svbyeye/"/>
      <url>/article/svbyeye/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h1><p><a href="https://github.com/daewoooo/SVbyEye">GitHub地址</a><br><a href="https://www.biorxiv.org/content/10.1101/2024.09.11.612418v1">文章链接</a></p><h2 id="使用手册"><a href="#使用手册" class="headerlink" title="使用手册"></a><a href="https://htmlpreview.github.io/?https://github.com/daewoooo/SVbyEye/blob/master/man/doc/SVbyEye.html">使用手册</a></h2><p>大佬Evan E. Eichler团队基于Miropeats开发的用于基因组结构变异可视化的工具SVbyEye，使用ggplot2绘图语法实现。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418997.png" alt="Pasted image 20250412155600"></p><h1 id="2-PAF格式输入文件"><a href="#2-PAF格式输入文件" class="headerlink" title="2 PAF格式输入文件"></a>2 PAF格式输入文件</h1><p>需要输入的文件是PAF格式的，官方使用的比对软件是minimap2 (version &gt;=2.24)，但是任何sequence-to-sequence比对生成的结果只要可以转换为PAF格式都可以。如果使用minimap2进行比对的话不能设置<code>-a</code>这个参数，这个参数生成的结果是SAM格式；但是要设置<code>-c</code>这个参数将 CIGAR strings导出为PAF文件中的<code>cg</code>标签；建议设置<code>–eqx</code>参数将CIGAR string标记为<code>=/X</code>，这个是用来表示<code>match/mismatch</code>的。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418998.png" alt="Pasted image 20250412161314"></p><h2 id="2-1-assembly-to-reference"><a href="#2-1-assembly-to-reference" class="headerlink" title="2.1 assembly-to-reference"></a>2.1 assembly-to-reference</h2><figure class="highlight dust"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">minimap2 -x asm20 -c –eqx –secondary=no </span><span class="hljs-template-variable">{reference.fasta}</span><span class="language-xml"> </span><span class="hljs-template-variable">{query.fasta}</span><span class="language-xml"> &gt; </span><span class="hljs-template-variable">{output.alignment}</span><br></code></pre></td></tr></tbody></table></figure><h2 id="2-2-sequence-to-sequence"><a href="#2-2-sequence-to-sequence" class="headerlink" title="2.2 sequence-to-sequence"></a>2.2 sequence-to-sequence</h2><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">minimap<span class="hljs-number">2</span> -<span class="hljs-keyword">x</span> <span class="hljs-keyword">asm</span><span class="hljs-number">20</span> -<span class="hljs-keyword">c</span> –eqx –secondary<span class="hljs-operator">=</span>no {<span class="hljs-keyword">target</span>.fasta} {query.fasta} &gt; {output.alignment}<br></code></pre></td></tr></tbody></table></figure><h2 id="2-3-all-versus-all"><a href="#2-3-all-versus-all" class="headerlink" title="2.3 all-versus-all"></a>2.3 all-versus-all</h2><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">minimap2 -x asm20 -c –eqx -D -P –dual=no {<span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.multi</span>.fasta} {<span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.multi</span>.fasta} &gt; {output<span class="hljs-selector-class">.ava</span>.alignment}<br></code></pre></td></tr></tbody></table></figure><h1 id="3-读取和过滤PAF文件"><a href="#3-读取和过滤PAF文件" class="headerlink" title="3 读取和过滤PAF文件"></a>3 读取和过滤PAF文件</h1><h2 id="3-1-读取"><a href="#3-1-读取" class="headerlink" title="3.1 读取"></a>3.1 读取</h2><figure class="highlight livecodeserver"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">## 获取PAF文件的路径</span><br><br>paf.<span class="hljs-built_in">file</span> &lt;- <span class="hljs-keyword">system</span>.<span class="hljs-built_in">file</span>(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test1.paf"</span>,package = <span class="hljs-string">"SVbyEye"</span>)<br><br><span class="hljs-comment">## 读取PAF文件</span><br>paf.table &lt;- readPaf(<br><br>    paf.<span class="hljs-built_in">file</span> = paf.<span class="hljs-built_in">file</span>,<br><br>    <span class="hljs-built_in">include</span>.paf.tags = <span class="hljs-literal">TRUE</span>, restrict.paf.tags = <span class="hljs-string">"cg"</span><br><br>)<br><br><span class="hljs-comment">## 查看读入的PAF文件</span><br>paf.table<br></code></pre></td></tr></tbody></table></figure><h2 id="3-2-过滤"><a href="#3-2-过滤" class="headerlink" title="3.2 过滤"></a>3.2 过滤</h2><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">## 基于比对的大小进行筛选<br>filter<span class="hljs-constructor">Paf(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">min</span>.<span class="hljs-params">align</span>.<span class="hljs-params">len</span> = 100000)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="3-3-转换"><a href="#3-3-转换" class="headerlink" title="3.3 转换"></a>3.3 转换</h2><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">## 强制调换PAF比对结果中的链特征<br>flip<span class="hljs-constructor">Paf(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">force</span> = TRUE)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="4-sequence-to-sequence比对结果可视化"><a href="#4-sequence-to-sequence比对结果可视化" class="headerlink" title="4 sequence-to-sequence比对结果可视化"></a>4 sequence-to-sequence比对结果可视化</h1><p>可视化的主要函数是<code>plotMiro()</code>，可以可视化一个序列比对到参考基因组的结果，也可以可视化两个及以上序列相互比对的结果。这个函数输出的图像是水平的，最上面的是<code>target sequence</code>，下面的是<code>query sequence</code>.<br></p><figure class="highlight stata"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stata">library(SVbyEye)<br><br>## Get PAF to <span class="hljs-keyword">plot</span><br>paf.<span class="hljs-keyword">file</span> &lt;- system.<span class="hljs-keyword">file</span>(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test1.paf"</span>,<br>    package = <span class="hljs-string">"SVbyEye"</span><br>)<br><br>## <span class="hljs-keyword">Read</span> <span class="hljs-keyword">in</span> PAF<br>paf.<span class="hljs-keyword">table</span> &lt;- readPaf(<br>    paf.<span class="hljs-keyword">file</span> = paf.<span class="hljs-keyword">file</span>,<br>    <span class="hljs-keyword">include</span>.paf.tags = TRUE, restrict.paf.tags = <span class="hljs-string">"cg"</span><br>)<br><br>paf.<span class="hljs-keyword">table</span><br><br>## Make a <span class="hljs-keyword">plot</span> colored <span class="hljs-keyword">by</span> alignment directionality<br>plotMiro(paf.<span class="hljs-keyword">table</span> = paf.<span class="hljs-keyword">table</span>, color.<span class="hljs-keyword">by</span> = <span class="hljs-string">"direction"</span>)<br></code></pre></td></tr></tbody></table></figure><br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418999.png" alt="Pasted image 20250412165205"><br><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># 设置颜色<br>plot<span class="hljs-constructor">Miro(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">color</span>.<span class="hljs-params">palette</span> = <span class="hljs-params">c</span>(<span class="hljs-string">"+"</span> = <span class="hljs-string">"azure3"</span>, <span class="hljs-string">"-"</span> = <span class="hljs-string">"yellow3"</span>)</span>)<br></code></pre></td></tr></tbody></table></figure><br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418000.png" alt="Pasted image 20250412165241"><br><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># 使用相似度上色，而不是方向<br>plot<span class="hljs-constructor">Miro(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">color</span>.<span class="hljs-params">by</span> = <span class="hljs-string">"identity"</span>)</span><br></code></pre></td></tr></tbody></table></figure><br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418001.png" alt="Pasted image 20250412165313"><br><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># 设置划窗的大小<br>plot<span class="hljs-constructor">Miro(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">binsize</span> = 1000)</span><br></code></pre></td></tr></tbody></table></figure><br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418002.png" alt="Pasted image 20250412165121"><p></p><h2 id="4-1-添加注释信息"><a href="#4-1-添加注释信息" class="headerlink" title="4.1 添加注释信息"></a>4.1 添加注释信息</h2><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">## Make a plot<br>plt &lt;- plot<span class="hljs-constructor">Miro(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>)</span><br>## Load target annotation file<br>target.annot &lt;- system.file(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test1_target_annot.txt"</span>, package = <span class="hljs-string">"SVbyEye"</span>)<br>target.annot.df &lt;- read.table(target.annot, header = TRUE, sep = <span class="hljs-string">"\t"</span>, stringsAsFactors = FALSE)<br>target.annot.gr &lt;- GenomicRanges::make<span class="hljs-constructor">GRangesFromDataFrame(<span class="hljs-params">target</span>.<span class="hljs-params">annot</span>.<span class="hljs-params">df</span>)</span><br><br>## Add target annotation <span class="hljs-keyword">as</span> arrowhead<br>add<span class="hljs-constructor">Annotation(<span class="hljs-params">ggplot</span>.<span class="hljs-params">obj</span> = <span class="hljs-params">plt</span>, <span class="hljs-params">annot</span>.<span class="hljs-params">gr</span> = <span class="hljs-params">target</span>.<span class="hljs-params">annot</span>.<span class="hljs-params">gr</span>, <span class="hljs-params">coordinate</span>.<span class="hljs-params">space</span> = <span class="hljs-string">"target"</span>)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418003.png" alt="Pasted image 20250412165739"><br></p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">## Load query annotation file<br>query.annot &lt;- system.file(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test1_query_annot.txt"</span>, package = <span class="hljs-string">"SVbyEye"</span>)<br>query.annot.df &lt;- read.table(query.annot, header = TRUE, sep = <span class="hljs-string">"\t"</span>, stringsAsFactors = FALSE)<br>query.annot.gr &lt;- GenomicRanges::make<span class="hljs-constructor">GRangesFromDataFrame(<span class="hljs-params">query</span>.<span class="hljs-params">annot</span>.<span class="hljs-params">df</span>)</span><br><br>## Add query annotation <span class="hljs-keyword">as</span> rectangle<br>add<span class="hljs-constructor">Annotation(<span class="hljs-params">ggplot</span>.<span class="hljs-params">obj</span> = <span class="hljs-params">plt</span>, <span class="hljs-params">annot</span>.<span class="hljs-params">gr</span> = <span class="hljs-params">query</span>.<span class="hljs-params">annot</span>.<span class="hljs-params">gr</span>, <span class="hljs-params">shape</span> = <span class="hljs-string">"rectangle"</span>, <span class="hljs-params">coordinate</span>.<span class="hljs-params">space</span> = <span class="hljs-string">"query"</span>)</span><br></code></pre></td></tr></tbody></table></figure><br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418005.png" alt="Pasted image 20250412165852"><p></p><h2 id="4-2-添加基因注释信息"><a href="#4-2-添加基因注释信息" class="headerlink" title="4.2 添加基因注释信息"></a>4.2 添加基因注释信息</h2><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">## <span class="hljs-keyword">Create</span> gene-<span class="hljs-keyword">like</span> annotation<br>test.gr &lt;- GenomicRanges::GRanges(<br>              seqnames = <span class="hljs-string">'target.region'</span>,<br>              ranges = IRanges::IRanges(start = c(<span class="hljs-number">19000000</span>,<span class="hljs-number">19030000</span>,<span class="hljs-number">19070000</span>),<br>                                        end = c(<span class="hljs-number">19010000</span>,<span class="hljs-number">19050000</span>,<span class="hljs-number">19090000</span>)),<br>                                        ID = <span class="hljs-string">'gene1'</span>)<br><br>## <span class="hljs-keyword">Add</span> single gene annotation<br>addAnnotation(ggplot.obj = plt, annot.gr = test.gr, coordinate.space = "target",shape = <span class="hljs-string">'rectangle'</span>, annotation.<span class="hljs-keyword">group</span> = <span class="hljs-string">'ID'</span>, fill.<span class="hljs-keyword">by</span> = <span class="hljs-string">'ID'</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418006.png" alt="Pasted image 20250412170137"></p><h2 id="4-3-强调某个部分"><a href="#4-3-强调某个部分" class="headerlink" title="4.3 强调某个部分"></a>4.3 强调某个部分</h2><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">## Make a plot<br>plt1 &lt;- plotMiro(paf.table = paf.<span class="hljs-keyword">table</span>, <span class="hljs-keyword">add</span>.alignment.arrows = <span class="hljs-keyword">FALSE</span>)<br><br>## Highlight alignment <span class="hljs-keyword">as</span> a filled <span class="hljs-type">polygon</span><br>addAlignments(ggplot.obj = plt1, paf.table = paf.<span class="hljs-keyword">table</span>[<span class="hljs-number">3</span>,], fill.<span class="hljs-keyword">by</span> = <span class="hljs-string">'strand'</span>,<br>              fill.palette = c(<span class="hljs-string">'+'</span> = <span class="hljs-string">'red'</span>))<br>addAlignments(ggplot.obj = plt1, paf.table = paf.<span class="hljs-keyword">table</span>[<span class="hljs-number">4</span>,], linetype = <span class="hljs-string">'dashed'</span>)<br></code></pre></td></tr></tbody></table></figure><h2 id="4-4-插入和缺失检测与可视化"><a href="#4-4-插入和缺失检测与可视化" class="headerlink" title="4.4 插入和缺失检测与可视化"></a>4.4 插入和缺失检测与可视化</h2><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">plot<span class="hljs-constructor">Miro(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">min</span>.<span class="hljs-params">deletion</span>.<span class="hljs-params">size</span> = 50, <span class="hljs-params">highlight</span>.<span class="hljs-params">sv</span> = <span class="hljs-string">"fill"</span>)</span> -&gt; p<br>ggsave(p, file = <span class="hljs-string">"D:/OneDrive/桌面/4.pdf"</span>, width = <span class="hljs-number">8</span>, height = <span class="hljs-number">4</span>, dpi = <span class="hljs-number">500</span>, bg = <span class="hljs-string">"white"</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418007.png" alt="Pasted image 20250412170634"></p><h2 id="4-5-热图展示GC含量"><a href="#4-5-热图展示GC含量" class="headerlink" title="4.5 热图展示GC含量"></a>4.5 热图展示GC含量</h2><figure class="highlight livecodeserver"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">## Get PAF to plot</span><br>paf.<span class="hljs-built_in">file</span> &lt;- <span class="hljs-keyword">system</span>.<span class="hljs-built_in">file</span>(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test_getFASTA.paf"</span>,<br>    package = <span class="hljs-string">"SVbyEye"</span><br>)<br><br><span class="hljs-comment">## Read in PAF</span><br>paf.table &lt;- readPaf(<br>    paf.<span class="hljs-built_in">file</span> = paf.<span class="hljs-built_in">file</span>,<br>    <span class="hljs-built_in">include</span>.paf.tags = <span class="hljs-literal">TRUE</span>, restrict.paf.tags = <span class="hljs-string">"cg"</span><br>)<br><br><span class="hljs-comment">## Make a plot colored by alignment directionality</span><br>plt &lt;- plotMiro(paf.table = paf.table, color.<span class="hljs-keyword">by</span> = <span class="hljs-string">"direction"</span>)<br><br><span class="hljs-comment">## Get query sequence composition</span><br>fa.<span class="hljs-built_in">file</span> &lt;- paf.<span class="hljs-built_in">file</span> &lt;- <span class="hljs-keyword">system</span>.<span class="hljs-built_in">file</span>(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test_getFASTA_query.fasta"</span>,<br>    package = <span class="hljs-string">"SVbyEye"</span><br>)<br><br><span class="hljs-comment">## Calculate GC content per 5kbp bin</span><br>gc.content &lt;- fasta2nucleotideContent(fasta.<span class="hljs-built_in">file</span> = fa.<span class="hljs-built_in">file</span>,<br>                                      binsize = <span class="hljs-number">5000</span>, nucleotide.content = <span class="hljs-string">'GC'</span>)<br><br><span class="hljs-comment">## Add GC content as annotation heatmap</span><br>addAnnotation(ggplot.obj = plt, annot.gr = gc.content, shape = <span class="hljs-string">'rectangle'</span>,<br>              fill.<span class="hljs-keyword">by</span> = <span class="hljs-string">'GC_nuc.freq'</span>, coordinate.<span class="hljs-literal">space</span> = <span class="hljs-string">'query'</span>, annotation.label = <span class="hljs-string">'GCcont'</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418008.png" alt="Pasted image 20250412170915"></p><h2 id="4-6-多序列比对结果"><a href="#4-6-多序列比对结果" class="headerlink" title="4.6 多序列比对结果"></a>4.6 多序列比对结果</h2><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">## Get PAF <span class="hljs-keyword">to</span> plot<br>paf.file &lt;- system.file(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"test_ava.paf"</span>, package = <span class="hljs-string">"SVbyEye"</span>)<br><br>## Read <span class="hljs-keyword">in</span> PAF<br>paf.table &lt;- read<span class="hljs-constructor">Paf(<span class="hljs-params">paf</span>.<span class="hljs-params">file</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">file</span>, <span class="hljs-params">include</span>.<span class="hljs-params">paf</span>.<span class="hljs-params">tags</span> = TRUE, <span class="hljs-params">restrict</span>.<span class="hljs-params">paf</span>.<span class="hljs-params">tags</span> = <span class="hljs-string">"cg"</span>)</span><br><br>plot<span class="hljs-constructor">AVA(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">binsize</span> = 20000)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418009.png" alt="Pasted image 20250412171154"></p><h1 id="5-全基因组比对可视化"><a href="#5-全基因组比对可视化" class="headerlink" title="5 全基因组比对可视化"></a>5 全基因组比对可视化</h1><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">## Get PAF <span class="hljs-keyword">to</span> plot ##<br>paf.file &lt;- system.file(<span class="hljs-string">"extdata"</span>, <span class="hljs-string">"PTR_test.paf"</span>, package = <span class="hljs-string">"SVbyEye"</span>)<br><br>## Read <span class="hljs-keyword">in</span> PAF<br>paf.table &lt;- read<span class="hljs-constructor">Paf(<span class="hljs-params">paf</span>.<span class="hljs-params">file</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">file</span>)</span><br><br>## Color by alignment directionality<br><br>plot<span class="hljs-constructor">Genome(<span class="hljs-params">paf</span>.<span class="hljs-params">table</span> = <span class="hljs-params">paf</span>.<span class="hljs-params">table</span>, <span class="hljs-params">chromosomes</span> = <span class="hljs-params">paste0</span>('<span class="hljs-params">chr</span>', <span class="hljs-params">c</span>(4, 5, 9, 12)</span>), chromosome.bar.width = grid::<span class="hljs-built_in">unit</span>(<span class="hljs-number">2</span>, 'mm'), min.query.aligned.bp = <span class="hljs-number">5000000</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202505091418010.png" alt="Pasted image 20250412171533"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泛基因组工具vg</title>
      <link href="/article/pangenome-vg/"/>
      <url>/article/pangenome-vg/</url>
      
        <content type="html"><![CDATA[<p>vg：variation graph data structures, interchange formats, alignment, genotyping, and variant calling methods.</p><p><img src="https://raw.githubusercontent.com/vgteam/vg/master/doc/figures/vg_logo_small.png" alt=""></p><h1 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1 基础知识"></a>1 基础知识</h1><p><code>vg</code>其实就是<code>variation graph</code>的缩写:),一个<code>vg</code>中有这些元素：</p><h2 id="1-1-Node-（节点）"><a href="#1-1-Node-（节点）" class="headerlink" title="1.1 **Node**（节点）"></a>1.1 <code>**Node**</code><strong>（节点）</strong></h2><ul><li><p><strong>定义</strong>：表示基因组中的一段<strong>序列片段</strong>，可以是：</p></li><li><p>核心基因（所有个体共享的序列）。</p></li><li>可变基因或结构变异（如插入、缺失、倒位等）。</li><li><p>单核苷酸多态性（SNP）的不同等位形式。</p></li><li><p><strong>特点</strong>：</p></li><li><p>每个节点可能对应多个等位（allele），例如不同个体在同一位置的变异。</p></li><li>节点之间可以是连续的（如参考基因组的线性序列），也可以通过边连接非连续的变异区域。<br>  <strong>示例</strong>：<br>  在人类基因组中，一个节点可能代表某段DNA序列（如基因区域），而另一个节点可能代表该区域的SNP变异（如A→T）。</li></ul><hr><h2 id="1-2-Edge-（边）"><a href="#1-2-Edge-（边）" class="headerlink" title="1.2 **Edge**（边）"></a>1.2 <code>**Edge**</code><strong>（边）</strong></h2><ul><li><strong>定义</strong>：表示节点之间的<strong>连接关系</strong>，描述序列如何从一个节点过渡到另一个节点。</li><li><p><strong>特点</strong>：</p></li><li><p>边可以是<strong>物理相邻</strong>的连接（如参考基因组中相邻的序列）。</p></li><li>也可以表示<strong>变异路径</strong>（如不同等位或结构变异之间的选择）。</li><li>边可能带有权重（如变异频率）或标签（如变异类型）。<br>  <strong>示例</strong>：<br>  如果一个节点代表插入序列，另一个节点代表缺失，边可以表示两种变异之间的连接关系（如某个群体更倾向于携带插入）。</li></ul><hr><h2 id="1-3-Path-（路径）"><a href="#1-3-Path-（路径）" class="headerlink" title="1.3 **Path**（路径）"></a>1.3 <code>**Path**</code><strong>（路径）</strong></h2><ul><li><strong>定义</strong>：表示某个个体基因组在泛基因组图中的<strong>行走路径</strong>，由一系列节点和边组成，反映该个体的独特基因组序列。</li><li><p><strong>特点</strong>：</p></li><li><p>不同个体的路径可能不同，体现遗传多样性。</p></li></ul><ol><li>路径可以覆盖核心基因（所有个体共享）和可变基因（部分个体特有）。<br> <strong>示例</strong>：<br> 个体A的路径可能是：<code>节点1（参考序列）→ 节点2（SNP等位A）→ 节点3（插入序列）</code>，而个体B的路径可能是：<code>节点1→节点2（SNP等位T）→节点4（无插入）</code>。</li></ol><h2 id="1-4-三者关系与泛基因组的意义"><a href="#1-4-三者关系与泛基因组的意义" class="headerlink" title="1.4 三者关系与泛基因组的意义"></a>1.4 <strong>三者关系与泛基因组的意义</strong></h2><ul><li><strong>整合多样性</strong>：通过节点和边整合所有已知变异，避免传统线性参考基因组的单一性偏差。</li><li><strong>灵活表示</strong>：路径允许不同个体的基因组以不同方式遍历图结构，准确反映变异组合。</li><li><p><strong>应用场景</strong>：</p></li><li><p><strong>序列比对</strong>：将测序数据比对到泛基因组图，提高变异检测的准确性。</p></li><li><strong>进化分析</strong>：通过路径差异推断群体结构或进化关系。</li><li><strong>功能研究</strong>：关联特定路径（如携带某结构变异的路径）与表型。</li></ul><hr><h2 id="1-5-类比解释"><a href="#1-5-类比解释" class="headerlink" title="1.5 类比解释"></a>1.5 <strong>类比解释</strong></h2><p>将泛基因组图想象成<strong>地铁网络</strong>：</p><ul><li><strong>节点</strong> = 地铁站（不同的序列位置或变异）。</li><li><strong>边</strong> = 轨道（连接站点的路线，代表可能的序列过渡）。</li><li><strong>路径</strong> = 乘客的行程（个体基因组选择的具体路线，反映其遗传组成）。通过这种结构，泛基因组能够更全面、灵活地表示物种的遗传多样性，为精准基因组学分析提供基础。</li></ul><hr><p>如何通俗地理解<code>vg</code>这种泛基因组格式呢？下图可以很容易地看出来这种格式的特点。所有的序列都可以看成<code>node</code>，也就是一个“点”，这个点可以是一个<code>SNP</code>，也可以是一大段片段。如果某个<code>node</code>在所有的样品里面都存在，那么这些<code>node</code>就会都连接到这个<code>node</code>，如下图中的<code>20030</code>.；如果是单个存在的，就用一条单独的<code>edge</code>连接这个<code>node</code>和下一个<code>node</code>，就像下图黄色的这个序列一样，直接从<code>20030→2033</code>，也就是缺失了<code>20031</code>和<code>20032</code>这两个<code>nodes</code>；如果多个样品共享一个<code>node</code>的，只用一个<code>edge</code>即可，就像<code>2009→20030</code>一样。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740535629537-e5aa936a-9fcb-4d88-bce8-49ce0b1fa69e.png" alt=""></p><h2 id="1-6-vg的优势"><a href="#1-6-vg的优势" class="headerlink" title="1.6 vg的优势"></a>1.6 vg的优势</h2><p>使用paths可以保证每条序列都是唯一的，当有新的序列被添加进去以后不会影响原理的序列的空间坐标，保证了结果的稳定性。</p><hr><h1 id="2-安装方法"><a href="#2-安装方法" class="headerlink" title="2 安装方法"></a>2 安装方法</h1><p>Linux系统最好的安装方式就是使用编译好的版本，下载链接：</p><p><a href="https://github.com/vgteam/vg/releases/latest">https://github.com/vgteam/vg/releases/latest</a></p><p>然后添加可执行权限即可：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ./vg<br></code></pre></td></tr></tbody></table></figure><p>测试是否安装成功：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vg <span class="hljs-built_in">help</span><br></code></pre></td></tr></tbody></table></figure><p>输出下面的内容就是安装成功了：</p><figure class="highlight ada"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs ada">vg: variation graph tool, version v1.<span class="hljs-number">63.1</span> <span class="hljs-string">"Boccaleone"</span><br><br>usage: ./vg &lt;command&gt; [options]<br><br>main mapping <span class="hljs-keyword">and</span> calling pipeline:<br>  <span class="hljs-comment">-- autoindex     mapping tool-oriented index construction from interchange formats</span><br>  <span class="hljs-comment">-- construct     graph construction</span><br>  <span class="hljs-comment">-- rna           construct splicing graphs and pantranscriptomes</span><br>  <span class="hljs-comment">-- index         index graphs or alignments for random access or mapping</span><br>  <span class="hljs-comment">-- map           MEM-based read alignment</span><br>  <span class="hljs-comment">-- giraffe       fast haplotype-aware short read alignment</span><br>  <span class="hljs-comment">-- mpmap         splice-aware multipath alignment of short reads</span><br>  <span class="hljs-comment">-- augment       augment a graph from an alignment</span><br>  <span class="hljs-comment">-- pack          convert alignments to a compact coverage index</span><br>  <span class="hljs-comment">-- call          call or genotype VCF variants</span><br>  <span class="hljs-comment">-- help          show all subcommands</span><br><br>useful graph tools:<br>  <span class="hljs-comment">-- deconstruct   create a VCF from variation in the graph</span><br>  <span class="hljs-comment">-- gbwt          build and manipulate GBWT and GBZ files</span><br>  <span class="hljs-comment">-- haplotypes    haplotype sampling based on kmer counts</span><br>  <span class="hljs-comment">-- ids           manipulate node ids</span><br>  <span class="hljs-comment">-- minimizer     build a minimizer index or a syncmer index</span><br>  <span class="hljs-comment">-- mod           filter, transform, and edit the graph</span><br>  <span class="hljs-comment">-- prune         prune the graph for GCSA2 indexing</span><br>  <span class="hljs-comment">-- sim           simulate reads from a graph</span><br>  <span class="hljs-comment">-- snarls        compute snarls and their traversals</span><br>  <span class="hljs-comment">-- stats         metrics describing graph and alignment properties</span><br>  <span class="hljs-comment">-- view          format conversions for graphs and alignments</span><br><br>specialized graph tools:<br>  <span class="hljs-comment">-- align         local alignment</span><br>  <span class="hljs-comment">-- annotate      annotate alignments with graphs and graphs with alignments</span><br>  <span class="hljs-comment">-- chunk         split graph or alignment into chunks</span><br>  <span class="hljs-comment">-- circularize   circularize a path within a graph</span><br>  <span class="hljs-comment">-- clip          remove BED regions (other other nodes from their snarls) from a graph</span><br>  <span class="hljs-comment">-- combine       merge multiple graph files together</span><br>  <span class="hljs-comment">-- convert       convert graphs between handle-graph compliant formats as well as GFA</span><br>  <span class="hljs-comment">-- depth         estimate sequencing depth</span><br>  <span class="hljs-comment">-- dotplot       generate the dotplot matrix from the embedded paths in an xg index</span><br>  <span class="hljs-comment">-- filter        filter reads</span><br>  <span class="hljs-comment">-- gamcompare    compare alignment positions</span><br>  <span class="hljs-comment">-- gampcompare   compare multipath alignment positions</span><br>  <span class="hljs-comment">-- gamsort       Sort a GAM/GAF file or index a sorted GAM file.</span><br>  <span class="hljs-comment">-- genotype      Genotype (or type) graphs, GAMS, and VCFs.</span><br>  <span class="hljs-comment">-- inject        lift over alignments for the graph</span><br>  <span class="hljs-comment">-- mask          Mask out sequences in a graph with N's</span><br>  <span class="hljs-comment">-- paths         traverse paths in the graph</span><br>  <span class="hljs-comment">-- primers       filter primers for low variation</span><br>  <span class="hljs-comment">-- simplify      graph simplification</span><br>  <span class="hljs-comment">-- surject       map alignments onto specific paths</span><br>  <span class="hljs-comment">-- trace         trace haplotypes</span><br>  <span class="hljs-comment">-- vectorize     transform alignments to simple ML-compatible vectors</span><br>  <span class="hljs-comment">-- viz           render visualizations of indexed graphs and read sets</span><br><br>developer commands:<br>  <span class="hljs-comment">-- benchmark     run and report on performance benchmarks</span><br>  <span class="hljs-comment">-- chain         run a serialized chaining problem</span><br>  <span class="hljs-comment">-- cluster       find and cluster mapping seeds</span><br>  <span class="hljs-comment">-- find          use an index to find nodes, edges, kmers, paths, or positions</span><br>  <span class="hljs-comment">-- mcmc          Finds haplotypes based on reads using MCMC methods</span><br>  <span class="hljs-comment">-- test          run unit tests</span><br>  <span class="hljs-comment">-- validate      validate the semantics of a graph or gam</span><br>  <span class="hljs-comment">-- version       version information</span><br>  <span class="hljs-comment">-- zipcode       find distances between seeds using zipcodes</span><br><br><span class="hljs-keyword">For</span> technical support, please visit: https://www.biostars.org/tag/vg/<br></code></pre></td></tr></tbody></table></figure><p><strong>如果使用conda安装PGGB的话</strong><a href="https://www.yuque.com/web4xiang/paper/pggb" title="01.PGGB">01.PGGB</a><strong>，会自动安装上最新版本的vg.</strong></p><h1 id="3-快速上手"><a href="#3-快速上手" class="headerlink" title="3 快速上手"></a>3 快速上手</h1><h2 id="3-1-vg构建"><a href="#3-1-vg构建" class="headerlink" title="3.1 vg构建"></a>3.1 vg构建</h2><h3 id="3-1-1-从VCF文件构建"><a href="#3-1-1-从VCF文件构建" class="headerlink" title="3.1.1 从VCF文件构建"></a>3.1.1 从VCF文件构建</h3><p>这种方法直接使用参考基因组和VCF文件进行构建，就两个参数：</p><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">vg construct -r small/<span class="hljs-keyword">x</span>.fa -v small/<span class="hljs-keyword">x</span>.vcf.gz &gt;<span class="hljs-keyword">x</span>.vg<br></code></pre></td></tr></tbody></table></figure><p>需要注意的是需要使用SAMtools中的工具tavix对VCF文件构建索引：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">tabix -<span class="hljs-selector-tag">p</span> vcf x<span class="hljs-selector-class">.vcf</span>.gz<br></code></pre></td></tr></tbody></table></figure><h3 id="3-1-2-从组装结果构建泛基因组"><a href="#3-1-2-从组装结果构建泛基因组" class="headerlink" title="3.1.2 从组装结果构建泛基因组"></a>3.1.2 从组装结果构建泛基因组</h3><p>可以直接使用组装后的基因组进行泛基因组组装，所用的方法是 <code>Minigraph-Cactus</code>：</p><p><a href="https://github.com/ComparativeGenomicsToolkit/cactus/blob/master/doc/pangenome.md">https://github.com/ComparativeGenomicsToolkit/cactus/blob/master/doc/pangenome.md</a></p><h2 id="3-2-导入和导出不同格式的graph"><a href="#3-2-导入和导出不同格式的graph" class="headerlink" title="3.2 导入和导出不同格式的graph"></a>3.2 导入和导出不同格式的graph</h2><h3 id="3-2-1-vg支持的泛基因组格式"><a href="#3-2-1-vg支持的泛基因组格式" class="headerlink" title="3.2.1 vg支持的泛基因组格式"></a>3.2.1 vg支持的泛基因组格式</h3><ul><li><code>PackedGraph</code>（.vg）：这种格式是vg的原生格式，优点是可以编辑，但是样品数量足够多或者是泛基因组太复杂时效率不足，尤其是path较多时。</li><li><code>GFA</code>（.gfa）：GFA是一种标准的基于文本的格式，是vg和其他泛基因组工具之间处理数据时最好的格式。vg可以直接对未压缩的GFA文件进行操作，是PackedGraph将泛基因组导入到内存中进行操作的。</li><li><code>GBZ</code>（.gbz）：GBZ是一种高度压缩的格式，可以使用较少的空间存储更多的paths，但是呢不利于编辑等操作。</li></ul><p>可以使用下面的命令查看泛基因组的格式：</p><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">vg stats -F</span><br></code></pre></td></tr></tbody></table></figure><h3 id="3-2-2-导入泛基因组"><a href="#3-2-2-导入泛基因组" class="headerlink" title="3.2.2 导入泛基因组"></a>3.2.2 导入泛基因组</h3><p>通常情况下可以使用<code>vg autoindex</code>从<code>GFA</code>或者是<code>VCF</code>文件构建泛基因组并构建索引，或者是通过<code>Minigraph-Cactus</code>构建泛基因组并建立索引。此外，还可以使用<code>vg convert -g</code>从<code>ODGI</code>或<code>PGGB</code>等工具输出的结果中导入<code>GFA</code>格式的泛基因组。</p><h3 id="3-2-3-导出泛基因组"><a href="#3-2-3-导出泛基因组" class="headerlink" title="3.2.3 导出泛基因组"></a>3.2.3 导出泛基因组</h3><p>可以使用<code>vg convert -f</code>将任意格式的<code>grapha</code>转换为GFA格式。<code>vg</code>默认使用<code>V1.1</code>的<code>GFA</code>，<code>paths</code>用<code>W-lines</code>表示；如果使用<code>P-lines</code>的会需要<code>V1.0</code>的<code>GFA</code>，代码是<code>vg convert -fW</code>.</p><h3 id="3-2-4-Path类型"><a href="#3-2-4-Path类型" class="headerlink" title="3.2.4 Path类型"></a>3.2.4 Path类型</h3><p><code>GBZ</code>格式可以区分<code>REFERENCE</code>和<code>HAPLOTYPE</code>这两种paths. <code>REFERENCE</code>path可以作为坐标系统，但是需要更多的资源来存储结果。<code>HAPLOTYPE</code>这种path类型是高度压缩的，但是不能用于位置定位查找。在人类泛基因组中（HPRC），来自<code>GRCh38</code>和<code>CHM13</code>的contigs是<code>REFERENCE</code>path，其余样品的contigs是<code>HAPLOTYPE</code>path.</p><p>这两种path的区别被延续到<code>.vg</code>和<code>.gfa</code>格式中，以便想换转换和操作。在<code>.gfa</code>path中，<code>REFERENCE</code>path是<code>P-lines</code>或者是<code>W-lines</code>，对应的样品名称放在了好<code>header</code>中。但是在<code>HPLOTYPE</code>path的<code>W-lines</code>中，样品名称没有在<code>header</code>中。 在<code>.vg</code>中使用特定的命名约定来表示。</p><p>需要注意的是，如果想在<code>.vg</code>中加载大规模的<code>HAPLOTYPE</code>paths，只能用<code>GBZ</code>格式。<code>vg convert -H</code>可以把<code>HAPLOTYPE</code>paths移除。</p><h2 id="3-3-查看graph"><a href="#3-3-查看graph" class="headerlink" title="3.3 查看graph"></a>3.3 查看graph</h2><p>使用<code>vg view</code>可以把graph转换为多种格式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># GFA output</span><br>vg view x.vg &gt;x.gfa<br><br><span class="hljs-comment"># dot output suitable for graphviz</span><br>vg view -d x.vg &gt;x.dot<br><br><span class="hljs-comment"># And if you have a GAM file</span><br><span class="hljs-built_in">cp</span> small/x-s1337-n1.gam x.gam<br><br><span class="hljs-comment"># json version of binary alignments</span><br>vg view -a x.gam &gt;x.json<br></code></pre></td></tr></tbody></table></figure><h2 id="3-4-Mapping"><a href="#3-4-Mapping" class="headerlink" title="3.4 Mapping"></a>3.4 Mapping</h2><p>vg中有多个模块可以用于mapping：</p><ul><li><code>vg giraffe</code>：适合高准确度的短reads，将这些reads比对到graph上，能够保留单倍型信息。</li><li><code>vg map</code>：常用的mapper.</li><li><code>vg mpmap</code>：可以实现<code>multi-path</code>mapping，以便对不确定的局部alignment进行描述。这种方法尤其适用于转录组数据。</li></ul><h3 id="3-4-1-vg-giraffe"><a href="#3-4-1-vg-giraffe" class="headerlink" title="3.4.1 vg giraffe"></a>3.4.1 <code>vg giraffe</code></h3><p>使用<code>vg giraffe</code>的第一步是构建索引，最佳方式是<code>vg autoindex</code>. 为了保证<code>vg autoindex</code>能够使用VCF文件中的单倍型信息，可以把VCF文件和对应的线性参考基因组同时给<code>vg autoindex</code>.</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># construct the graph and indexes (paths below assume running from `vg/test` directory)</span><br><span class="hljs-attribute">vg</span> autoindex --workflow giraffe -r small/x.fa -v small/x.vcf.gz -p x<br><br><span class="hljs-comment"># simulate a bunch of 150bp reads from the graph, into a GAM file of reads aligned to a graph</span><br><span class="hljs-attribute">vg</span> sim -n <span class="hljs-number">1000</span> -l <span class="hljs-number">150</span> -x x.giraffe.gbz -a &gt; x.sim.gam<br><span class="hljs-comment"># now re-map these reads against the graph, and get BAM output in linear space</span><br><span class="hljs-comment"># FASTQ input uses -f instead of -G.</span><br><span class="hljs-attribute">vg</span> giraffe -Z x.giraffe.gbz -G x.sim.gam -o BAM &gt; aln.bam<br></code></pre></td></tr></tbody></table></figure><h3 id="3-4-2-vg-map"><a href="#3-4-2-vg-map" class="headerlink" title="3.4.2 vg map"></a>3.4.2 <code>vg map</code></h3><p>如果泛基因组的graph表达，那么就需要使用<code>vg index</code>来存储graph，然后使用<code>vg map</code>进行比对。所构建的索引包括graph和特定大小的kmers. 在mapping的时候，可以使用任何比构建索引所用的kmers；当使用的kmers没有成功mapping时，会自动降低kmers来增加mapping的灵敏度。</p><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vim"># construct the graph (paths below assume running from `vg/test` directory)<br>vg construct -r small/<span class="hljs-keyword">x</span>.fa -v small/<span class="hljs-keyword">x</span>.vcf.gz &gt; <span class="hljs-keyword">x</span>.vg<br><br># store the graph in the xg/gcsa <span class="hljs-built_in">index</span> pair<br>vg <span class="hljs-built_in">index</span> -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg -g <span class="hljs-keyword">x</span>.gcsa -<span class="hljs-keyword">k</span> <span class="hljs-number">16</span> <span class="hljs-keyword">x</span>.vg<br><br># align <span class="hljs-keyword">a</span> <span class="hljs-keyword">read</span> <span class="hljs-keyword">to</span> the indexed <span class="hljs-keyword">version</span> of the graph<br># note that the graph <span class="hljs-keyword">file</span> <span class="hljs-keyword">is</span> not opened, but <span class="hljs-keyword">x</span>.vg.<span class="hljs-built_in">index</span> <span class="hljs-keyword">is</span> assumed<br>vg <span class="hljs-keyword">map</span> -s CTACTGACAGCAGAAGTTTGCTGTGAAGATTAAATTAGGTGATGCTTG -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg -g <span class="hljs-keyword">x</span>.gcsa &gt; <span class="hljs-keyword">read</span>.gam<br><br># simulate <span class="hljs-keyword">a</span> bunch of <span class="hljs-number">150</span><span class="hljs-keyword">bp</span> reads from the graph, one per <span class="hljs-built_in">line</span><br>vg <span class="hljs-keyword">sim</span> -n <span class="hljs-number">1000</span> -<span class="hljs-keyword">l</span> <span class="hljs-number">150</span> -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg &gt; <span class="hljs-keyword">x</span>.<span class="hljs-keyword">sim</span>.txt<br># now <span class="hljs-keyword">map</span> these reads against the graph <span class="hljs-keyword">to</span> <span class="hljs-built_in">get</span> <span class="hljs-keyword">a</span> GAM<br>vg <span class="hljs-keyword">map</span> -T <span class="hljs-keyword">x</span>.<span class="hljs-keyword">sim</span>.txt -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg -g <span class="hljs-keyword">x</span>.gcsa &gt; aln.gam<br><br># surject the alignments back into the reference space of sequence <span class="hljs-string">"x"</span>, yielding <span class="hljs-keyword">a</span> BAM <span class="hljs-keyword">file</span><br>vg surject -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg -<span class="hljs-keyword">b</span> aln.gam &gt; aln.bam<br><br># <span class="hljs-built_in">or</span> alternatively, surject them <span class="hljs-keyword">to</span> BAM in the <span class="hljs-keyword">call</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">map</span><br>vg <span class="hljs-keyword">sim</span> -n <span class="hljs-number">1000</span> -<span class="hljs-keyword">l</span> <span class="hljs-number">150</span> -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg &gt; <span class="hljs-keyword">x</span>.<span class="hljs-keyword">sim</span>.txt<br>vg <span class="hljs-keyword">map</span> -T <span class="hljs-keyword">x</span>.<span class="hljs-keyword">sim</span>.txt -<span class="hljs-keyword">x</span> <span class="hljs-keyword">x</span>.xg -g <span class="hljs-keyword">x</span>.gcsa --surject-<span class="hljs-keyword">to</span> bam &gt; aln.bam<br></code></pre></td></tr></tbody></table></figure><h2 id="3-5-Graph-augmentation"><a href="#3-5-Graph-augmentation" class="headerlink" title="3.5 Graph augmentation"></a>3.5 Graph augmentation</h2><p>在mapping鉴定到的variation可以反向添加到graph中，这个过程叫做Augmentation（增强）。但是需要注意的是<code>vg augment</code>用于变异鉴定的话还处于试验阶段，不稳定，官方的结果是这种方法不如<code>DeepVariant</code>等线性变异鉴定工具。</p><p><code>Warning</code> Using vg augment for variant calling remains very experimental. It is not at all recommended for structural variant calling, and even for small variants, you will often get much more accurate results (at least on human) by projecting your alignment to BAM and running a linear variant caller such as DeepVariant.</p><figure class="highlight golo"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs golo"><span class="hljs-comment"># augment the graph with all variation from the GAM except that implied by soft clips, saving to aug.vg.  aug.gam contains the same reads as aln.gam but mapped to aug.vg</span><br>vg <span class="hljs-keyword">augment</span> x.vg aln.gam -A aug.gam &gt; aug.vg<br><br><span class="hljs-comment"># augment the graph with all variation from the GAM, saving each mapping as a path in the graph.</span><br><span class="hljs-comment"># softclips of alignment paths are preserved (`-S`).</span><br><span class="hljs-comment"># Note, this can be much less efficient than the above example if there are many alignments in the GAM</span><br>vg <span class="hljs-keyword">augment</span> x.vg aln.gam -i -S &gt; aug_with_paths.vg<br></code></pre></td></tr></tbody></table></figure><h2 id="3-6-Variant-Calling"><a href="#3-6-Variant-Calling" class="headerlink" title="3.6 Variant Calling"></a>3.6 Variant Calling</h2><h3 id="3-6-1-read-support"><a href="#3-6-1-read-support" class="headerlink" title="3.6.1 read support"></a>3.6.1 read support</h3><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># Compute the read support from the GAM</span><br><span class="hljs-comment"># -Q 5: ignore mapping and base qualitiy &lt; 5</span><br><span class="hljs-attribute">vg</span> pack -x x.xg -g aln.gam -Q <span class="hljs-number">5</span>  -o aln.pack<br><br><span class="hljs-comment"># Generate a VCF from the support.  </span><br><span class="hljs-attribute">vg</span> call x.xg -k aln.pack &gt; graph_calls.vcf<br></code></pre></td></tr></tbody></table></figure><p>默认情况下<code>vg call</code>会忽略<code>0/0</code>这种类型的变异，这样可以让生成的VCF文件更加紧凑，但是不利于比较不同样本之间的差异。即使使用同一个graph得到的VCF文件也难以比较，因为坐标不同。<code>-a</code>参数可以解决这个问题，添加这个参数之后会对每个<code>snarl</code>进行比对，这时候使用的是相同的坐标体系。输出的结果可以使用<code>bcftools merge -m all</code>进行合并。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg call x<span class="hljs-selector-class">.xg</span> -k aln<span class="hljs-selector-class">.pack</span> -<span class="hljs-selector-tag">a</span> &gt; snarl_genotypes.vcf<br></code></pre></td></tr></tbody></table></figure><p>如果要考虑reads中新的变异的话，就需要使用augmented后的graph哥GAM.</p><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim"># Index our augmented graph<br>vg <span class="hljs-built_in">index</span> <span class="hljs-keyword">aug</span>.vg -<span class="hljs-keyword">x</span> <span class="hljs-keyword">aug</span>.xg<br><br># Compute the <span class="hljs-keyword">read</span> support from the augmented GAM (ignoring qualitiy &lt; <span class="hljs-number">5</span>, <span class="hljs-built_in">and</span> <span class="hljs-number">1</span><span class="hljs-keyword">st</span> <span class="hljs-built_in">and</span> <span class="hljs-keyword">last</span> <span class="hljs-number">5</span><span class="hljs-keyword">bp</span> of each <span class="hljs-keyword">read</span>)<br>vg pack -<span class="hljs-keyword">x</span> <span class="hljs-keyword">aug</span>.xg -g <span class="hljs-keyword">aug</span>.gam -Q <span class="hljs-number">5</span> -s <span class="hljs-number">5</span> -<span class="hljs-keyword">o</span> aln_aug.pack<br><br># Generate <span class="hljs-keyword">a</span> VCF from the support<br>vg <span class="hljs-keyword">call</span> <span class="hljs-keyword">aug</span>.xg -<span class="hljs-keyword">k</span> aln_aug.pack &gt; calls.vcf<br></code></pre></td></tr></tbody></table></figure><p>可以使用类似的步骤对VCF文件中的已知的变异进行基因分型，有个要求是graph必须是使用<code>vg construct -a</code>构建的，<code>vg autoindex</code>和<code>Minigraph-Cactus</code>构建的graph不能用。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Re-construct the same graph as before but with `-a`</span><br>vg construct -r small/x.fa -v small/x.vcf.gz -a &gt; xa.vg<br><br><span class="hljs-comment"># Index the graph with `-L' to preserve alt paths in the xg</span><br>vg index xa.vg -x xa.xg -L<br><br><span class="hljs-comment"># Compute the support (we could also reuse aln.pack from above)</span><br>vg pack -x xa.xg -g aln.gam -o aln.pack<br><br><span class="hljs-comment"># Genotype the VCF (use -v)</span><br>vg call xa.xg -k aln.pack -v small/x.vcf.gz &gt; genotypes.vcf<br></code></pre></td></tr></tbody></table></figure><p>在<code>Calling SNP</code>之间可以先对GAM进行预过滤处理：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># filter secondary and ambiguous read mappings out of the GAM</span><br><span class="hljs-attribute">vg</span> filter aln.gam -r <span class="hljs-number">0</span>.<span class="hljs-number">90</span> -fu -m <span class="hljs-number">1</span> -q <span class="hljs-number">15</span> -D <span class="hljs-number">999</span> -x x.xg &gt; aln.filtered.gam<br><br><span class="hljs-comment"># then compute the support from aln.filtered.gam instead of aln.gam in above etc.</span><br><span class="hljs-attribute">vg</span> pack -x xa.xg -g aln.filtered.gam -o aln.pack<br><span class="hljs-attribute">vg</span> call xa.xg -k aln.pack -v small/x.vcf.gz &gt; genotypes.vcf<br></code></pre></td></tr></tbody></table></figure><p>如果graph较大，那么建议将<code>snarls</code>分开进行计算：</p><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs llvm">vg snarls <span class="hljs-keyword">x</span>.xg &gt; <span class="hljs-keyword">x</span>.snarls<br><br># <span class="hljs-keyword">load</span> snarls from a file instead of computing on the fly<br>vg <span class="hljs-keyword">call</span> <span class="hljs-keyword">x</span>.xg -k aln.pack -r <span class="hljs-keyword">x</span>.snarls &gt; calls.vcf<br></code></pre></td></tr></tbody></table></figure><p>注意：<code>vg augment</code>、<code>vg pack</code>、<code>vg call</code>和<code>vg snarls</code>可以对任意格式的graph进行处理，包括<code>.gfa</code>、<code>.vg</code>、<code>.xg</code>；还能处理<code>vg convert</code>转换后的graph；但是不能处理<code>augment</code>处理后的graph. <code>.vg</code>和<code>.gfa</code>组要最多的内存，graph较大时不建议使用这两种格式。<code>vg pack</code>输出的结果只能和用于构建它的grap一起施用，所以<code>vg pack x.vg -g aln.gam -o x.pack</code>和<code>vg call x.xg -k x.pack</code>不能正常运行。</p><h3 id="3-6-2-Calling-variants-from-paths-in-the-graph"><a href="#3-6-2-Calling-variants-from-paths-in-the-graph" class="headerlink" title="3.6.2 Calling variants from paths in the graph"></a>3.6.2 Calling variants from paths in the graph</h3><p>一个从利用多个基因组比对结构构建的graph中Calling SVs的示例：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># create a graph from a multiple alignment of HLA haplotypes (from vg/test directory)</span><br><span class="hljs-attribute">vg</span> msga -f GRCh38_alts/FASTA/HLA/V-<span class="hljs-number">352962</span>.fa -t <span class="hljs-number">1</span> -k <span class="hljs-number">16</span> | vg mod -U <span class="hljs-number">10</span> - | vg mod -c - &gt; hla.vg<br><br><span class="hljs-comment"># index it</span><br><span class="hljs-attribute">vg</span> index hla.vg -x hla.xg<br><br><span class="hljs-comment"># generate a VCF using gi|568815592:29791752-29792749 as the reference contig.  The other paths will be considered as haploid samples</span><br><span class="hljs-attribute">vg</span> deconstruct hla.xg -e -p <span class="hljs-string">"gi|568815592:29791752-29792749"</span> &gt; hla_variants.vcf<br></code></pre></td></tr></tbody></table></figure><p>基于<code>.gbz</code>或<code>.gbwt</code>索引的Haplotype paths可以分别使用参数<code>-z</code>和<code>-g</code>指定。使用<code>vg call</code>遇到较大的graph推荐将每个snarls分开计算，使用<code>-r</code>参数进行传参。</p><h2 id="3-7-转录组分析"><a href="#3-7-转录组分析" class="headerlink" title="3.7 转录组分析"></a>3.7 转录组分析</h2><p><code>vg</code>有一些工具可以用于转录组分析，需要用到的是剪切过的graph，也就是将带有注释的剪切点以edges的格式添加到graph中，用到的命令是<code>vg rna</code>. 然后可以使用<code>vg mpmap</code>进行比对。针对单倍型比对定量的工具是<code>rpvg</code>. 最简单是反式就是使用<code>vg autoindex</code>为<code>vg mpmap</code>构建索引。</p><ul><li>首先构建剪切graph：</li></ul><figure class="highlight dsconfig"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-comment"># Create spliced pangenome graph and indexes for vg mpmap</span><br><span class="hljs-string">vg</span> <span class="hljs-string">autoindex</span> <span class="hljs-built_in">--workflow</span> <span class="hljs-string">mpmap</span> -<span class="hljs-string">t</span> <span class="hljs-string">4</span> <span class="hljs-built_in">--prefix</span> <span class="hljs-string">vg_rna</span> <span class="hljs-built_in">--ref-fasta</span> <span class="hljs-string">small</span>/<span class="hljs-string">x</span>.<span class="hljs-string">fa</span> <span class="hljs-built_in">--vcf</span> <span class="hljs-string">small</span>/<span class="hljs-string">x</span>.<span class="hljs-string">vcf</span>.<span class="hljs-string">gz</span> <span class="hljs-built_in">--tx-gff</span> <span class="hljs-string">small</span>/<span class="hljs-string">x</span>.<span class="hljs-string">gtf</span><br></code></pre></td></tr></tbody></table></figure><ul><li>然后进行比对：</li></ul><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># Map simulated RNA-seq reads using vg mpmap</span><br>vg mpmap -n rna -t <span class="hljs-number">4</span> -x vg_rna.spliced.xg -g vg_rna.spliced.gcsa -d vg_rna.spliced.dist -f small<span class="hljs-regexp">/x_rna_1.fq -f small/</span>x_rna_2.fq &gt; mpmap.gamp<br></code></pre></td></tr></tbody></table></figure><h2 id="3-8-Alignment"><a href="#3-8-Alignment" class="headerlink" title="3.8 Alignment"></a>3.8 Alignment</h2><p>如果graph较小，那么可以使用偏序比对将一条序列比对到graph上：</p><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">vg <span class="hljs-keyword">align</span> -s CTACTGACAGCAGAAGTTTGCTGTGAAGATTAAATTAGGTGATGCTTG <span class="hljs-keyword">x</span>.vg<br></code></pre></td></tr></tbody></table></figure><p>Note that you don’t have to store the graph on disk at all, you can simply pipe it into the local aligner:</p><figure class="highlight llvm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">vg construct -r small/<span class="hljs-keyword">x</span>.fa -v small/<span class="hljs-keyword">x</span>.vcf.gz | vg <span class="hljs-keyword">align</span> -s CTACTGACAGCAGAAGTTTGCTGTGAAGATTAAATTAGGTGATGCTTG -<br></code></pre></td></tr></tbody></table></figure><h1 id="4-常用命令"><a href="#4-常用命令" class="headerlink" title="4 常用命令"></a>4 常用命令</h1><ul><li><code>autoindex</code>: construct graphs and indexes for other tools from common interchange file formats</li><li><code>construct</code>: graph construction</li><li><code>index</code>: index features of a graph in a disk-backed key/value store</li><li><code>map</code>: map reads to a graph</li><li><code>giraffe</code>: fast, haplotype-based mapping of reads to a graph</li><li><code>mpmap</code>: short read mapping and multipath alignment (optionally spliced)</li><li><code>surject</code>: project graph alignments onto a linear reference</li><li><code>augment</code>: add variation from aligned reads into a graph</li><li><code>call</code>: call variants from an augmented graph</li><li><code>rna</code>: construct splicing graphs and pantranscriptomes</li><li><code>convert</code>: convert graph and alignment formats</li><li><code>combine</code>: combine graphs</li><li><code>chunk</code>: extract or break into subgraphs</li><li><code>ids</code>: node ID manipulation</li><li><code>sim</code>: simulate reads by walking paths in a graph</li><li><code>prune</code>: prune graphs to restrict their path complexity</li><li><code>snarls</code>: find bubble-like motifs in a graph</li><li><code>mod</code>: various graph transformations</li><li><code>filter</code>: filter reads out of an alignment</li><li><code>deconstruct</code>: create a VCF from variation in a graph</li><li><code>paths</code>: traverse paths in a graph</li><li><code>stats</code>: metrics describing graph properties</li></ul><hr><h1 id="5-文献引用"><a href="#5-文献引用" class="headerlink" title="5 文献引用"></a>5 文献引用</h1><ul><li>when using <code>vg</code></li></ul><p><a href="https://doi.org/10.1038/nbt.4227">https://doi.org/10.1038/nbt.4227</a></p><ul><li>when using <code>vg giraffe</code></li></ul><p><a href="https://doi.org/10.1126/science.abg8871">https://doi.org/10.1126/science.abg8871</a></p><ul><li>when SV genotyping with <code>vg call</code></li></ul><p><a href="https://doi.org/10.1186/s13059-020-1941-7">https://doi.org/10.1186/s13059-020-1941-7</a></p><ul><li>when using <code>GBZ</code></li></ul><p><a href="https://doi.org/10.1093/bioinformatics/btac656">https://doi.org/10.1093/bioinformatics/btac656</a></p><ul><li>when using <code>vg deconstruct</code></li></ul><p><a href="https://doi.org/10.1038/s41586-023-05896-x">https://doi.org/10.1038/s41586-023-05896-x</a></p><ul><li>when using <code>vg snarls</code></li></ul><p><a href="https://doi.org/10.1089/cmb.2017.0251">https://doi.org/10.1089/cmb.2017.0251</a></p><ul><li>when using <code>vg haplotypes</code> and/or <code>vg giraffe --haplotype-name</code></li></ul><p><a href="https://doi.org/10.1101/2023.12.13.571553">https://doi.org/10.1101/2023.12.13.571553</a></p><h1 id="6-详细Wiki"><a href="#6-详细Wiki" class="headerlink" title="6 详细Wiki"></a>6 详细Wiki</h1><h2 id="6-1-安装vg"><a href="#6-1-安装vg" class="headerlink" title="6.1 安装vg"></a>6.1 安装vg</h2><p>Linux编译的话推荐gcc-4.9及以上的版本。</p><ul><li>安装依赖</li></ul><figure class="highlight q"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs q">sudo apt-<span class="hljs-built_in">get</span> install build-essential git cmake pkg-config libncurses-<span class="hljs-built_in">dev</span> libbz2-<span class="hljs-built_in">dev</span>  \<br>                     protobuf-compiler libprotoc-<span class="hljs-built_in">dev</span> libjansson-<span class="hljs-built_in">dev</span> automake libtool \<br>                     jq bc rs curl unzip redland-utils librdf-<span class="hljs-built_in">dev</span> bison flex gawk \<br>                     lzma-<span class="hljs-built_in">dev</span> liblzma-<span class="hljs-built_in">dev</span> liblz4-<span class="hljs-built_in">dev</span> libffi-<span class="hljs-built_in">dev</span><br></code></pre></td></tr></tbody></table></figure><ul><li>编译vg</li></ul><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone --recursive https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/vgteam/</span>vg<br>cd vg<br>make -j <span class="hljs-number">4</span><br></code></pre></td></tr></tbody></table></figure><ul><li>Docker安装</li></ul><figure class="highlight applescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker pull quay.io/vgteam/vg<br>docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> vgteam/vg<br></code></pre></td></tr></tbody></table></figure><h2 id="6-2-vg相关的格式"><a href="#6-2-vg相关的格式" class="headerlink" title="6.2 vg相关的格式"></a>6.2 vg相关的格式</h2><h3 id="6-2-1-格式总览"><a href="#6-2-1-格式总览" class="headerlink" title="6.2.1 格式总览"></a>6.2.1 格式总览</h3><div class="table-container"><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>名称</td><td>描述</td><td>扩展名</td><td>状态</td><td>备注</td></tr><tr><td>VG Protobuf</td><td>原始 vg 图格式</td><td>.vg</td><td>有条件使用</td><td>也可用于存储路径（路径不关联节点与边）。vg v1.40.0 中 vg construct 的默认输出格式（支持增量生成）。可通过 cat 拼接。通常为块 GZIP 压缩，但旧文件可能未压缩。格式为计数前缀的组，每组包含长度前缀的 Protobuf 消息，首个消息标记类型。</td></tr><tr><td>GBZ</td><td>“GBZ”图格式，通过样本单体型路径遍历压缩存储图</td><td>.gbz</td><td>推荐</td><td>整合存储图和海量单体型数据（无需额外 GBWT 文件）。内部由 GBWT 和 GBWTGraph 组成。无法存储未被单体型路径覆盖的边。</td></tr><tr><td>GFA</td><td>图形化片段组装（Graphical Fragment Assembly）：基于文本的图及路径存储格式。</td><td>.gfa</td><td>推荐（交换用）</td><td>vg 仅支持 GFA 1.x，不兼容 GFA 2。</td></tr><tr><td>HashGraph</td><td>基于哈希表的图格式（来自 libbdsg）</td><td>.hg, .vg</td><td>推荐</td><td>vg v1.40.0 多数子命令的默认输出格式。</td></tr><tr><td>PackedGraph</td><td>基于简洁数据结构的图格式（来自 libbdsg）</td><td>.pg, .vg</td><td>推荐（大图适用）</td><td>比 HashGraph 更节省空间，但速度较慢且复杂。</td></tr><tr><td>Memory-Mapped PackedGraph</td><td>支持增量磁盘读取的 PackedGraph 版本</td><td>.mpg?</td><td>试验性</td><td>可能未实际采用（GBZ 解决更重要的核心问题）。</td></tr><tr><td>ODGI (vg flavor)</td><td>“优化动态基因组/图实现”（ODGI）格式的 vg 兼容版本。</td><td>.odgi</td><td>已移除</td><td>旧版 libbdsg 实现的格式与 odgi 项目不兼容，故被移除。</td></tr><tr><td>XG</td><td>压缩的不可变图格式（名称无实际含义）。</td><td>.xg</td><td>有条件使用</td><td>PackedGraph 更优，但部分工具仍依赖旧版 XG。</td></tr><tr><td>GBWTGraph</td><td>将 GBWT 转译为图的补充文件（需结合 GBWT 文件使用）。</td><td>.gg</td><td>已弃用</td><td>仅存节点序列，需配合单体型 GBWT 文件使用。</td></tr><tr><td>VG JSON</td><td>VG Protobuf 的 JSON 版本（Protobuf 图对象转为 JSON）。</td><td>.json</td><td>有条件使用</td><td>适合通过 jq 分析小图，或导入不支持 libbdsg/libvgio 的工具。一般推荐用 GFA 替代。</td></tr><tr><td>Indexed VG Protobuf</td><td>带索引的有序 VG Protobuf 格式（支持随机访问）。</td><td>.sorted.vg</td><td>已弃用</td><td>从未普及，已被 Memory-Mapped PackedGraph 取代。</td></tr><tr><td>FASTA</td><td>存储 DNA 序列的 FASTA 格式</td><td>.fa, .fasta, .fna</td><td>推荐（线性参考）</td><td>vg 可将其构造为线性参考基因组。</td></tr></tbody></table></div><p><code>vg</code>的很多文件格式都不能直接查看，需要使用<code>vg view</code>等才能查看；还有一些为0或者是没有设置的值夜不会展示。</p><h3 id="6-2-2-格式框架"><a href="#6-2-2-格式框架" class="headerlink" title="6.2.2 格式框架"></a>6.2.2 格式框架</h3><p>在<code>vg</code>中，<code>.vg</code>表示graph，<code>.gam</code>表示reads alignment的结果。对graph，每个message是一部分graph；对reads，每一条message是一个alignment.</p><h3 id="6-2-3-vg格式"><a href="#6-2-3-vg格式" class="headerlink" title="6.2.3 .vg格式"></a>6.2.3 .vg格式</h3><p><code>.vg</code>格式是<code>HashGraph</code>、<code>PackedGraph</code>或<code>Protobuf graph</code> 三种graph的格式。这三种格式的graph都可以被vg调用。现在<code>.vg</code>格式用的较多的是<code>HashGraph</code>或<code>PackedGraph</code>. 可以使用<code>vg view</code>查看GFA格式文件，使用<code>graphviz</code>查看pdf中的graph. 此外，也可以使用<code>vg mod</code>来编辑graph，但是通常的操作是先建立索引再进行操作。</p><h3 id="6-2-4-graph术语"><a href="#6-2-4-graph术语" class="headerlink" title="6.2.4 graph术语"></a>6.2.4 graph术语</h3><ul><li><code>reference graph</code>：表示含有参考基因组和相对于参考基因组的变异信息的graph，一个FASTA文件+VCF文件。</li><li><code>flat graph</code>：只包含参考基因组的graph. 因为没有bubbles，所以叫<code>flat</code>.</li><li><code>augmented graph</code>：一个graph被reads mapping以后得到的graph. <code>augmented graph</code>是<code>vg genotype</code>的基础。</li><li><code>sample graph</code>：含有一个或多个样品的variation的graph. 例如几个组装的基因组构建的graph，或者是单样品的reads augmented的<code>flat graph</code>.</li></ul><h3 id="6-2-5-xg-XG-lightweight-graph-path-index"><a href="#6-2-5-xg-XG-lightweight-graph-path-index" class="headerlink" title="6.2.5 .xg (XG lightweight graph / path index)"></a>6.2.5 .xg (XG lightweight graph / path index)</h3><p>XG可以理解为用于构建索引的graph的轻量版。<code>.xg</code>包含graph的paths、nodes和edges，但是不包含对应的序列，也就是说graph的结构被保留下来，但是真实的序列被删除了。这种格式和原始格式之间的转换是很复杂的，但是使用时只需要记住：这种模式是用来查询用的，比如两个nodes之间的距离、获取相邻的两个nodes、计算nodes的degree，而所有的这些仅仅只是用到了原始graph的索引。<code>.xg</code>格式的索引可以用来mapping reads，也可以加速某些功能模块，这样就不用在原始的graph上进行操作。</p><h3 id="6-2-6-gcsa-GCSA-generalized-compressed-suffix-array-index"><a href="#6-2-6-gcsa-GCSA-generalized-compressed-suffix-array-index" class="headerlink" title="6.2.6 .gcsa (GCSA generalized compressed suffix array index)"></a>6.2.6 .gcsa (GCSA generalized compressed suffix array index)</h3><p><code>GCSA/GCSA2</code>索引和<code>bwq index</code>生成的<code>.sa</code>文件是一样的。这个文件里面包含一个后缀数组，可以快速查询特定序列在graph中的位置。我们可以使用这种方法将reads mapping到graph上，这时候就可以看到GSCA索引的出现。</p><h3 id="6-2-7-gam（vg的BAM文件）"><a href="#6-2-7-gam（vg的BAM文件）" class="headerlink" title="6.2.7 .gam（vg的BAM文件）"></a>6.2.7 .gam（vg的BAM文件）</h3><p><code>.gam</code>就是vg的<code>BAM</code>文件，包含了某个read mapping到graph上的相对位置。这种格式支持双末端的reads. 可以使用<code>vg view</code>查看。这种格式也可以转换为JSON格式：</p><ul><li>一行一个记录，可以是一个read，是一个JSON对象；</li><li>当一个值是<code>0/NULL/false</code>时不存储在JSON文件中。</li></ul><h3 id="6-2-8-gam-index-GAM-索引）"><a href="#6-2-8-gam-index-GAM-索引）" class="headerlink" title="6.2.8 .gam.index (GAM 索引）"></a>6.2.8 .gam.index (GAM 索引）</h3><p><code>GAM</code>问价有个问题就是没有隐含的序列顺序。可以使用GAM索引来查询reads，这样就不用遍历整个GAM文件。也就是说当我们想提取mapping到特定位置的所有reads或者根据位置来排序reads，那就可以用GAM索引。</p><p>GAM索引的本质是一个RocksDB数据库。这样的好处是不用讲GAM文件放入到内存中，而是存在磁盘上，这样的一个坏处是可能速度较慢。</p><h3 id="6-2-9-dot（DOT-format-for-graphtools-viz）"><a href="#6-2-9-dot（DOT-format-for-graphtools-viz）" class="headerlink" title="6.2.9 .dot（DOT format for graphtools viz）"></a>6.2.9 .dot（DOT format for graphtools viz）</h3><p>DOT是graph可视化工具graphtools的标准格式，可以直观地读取，但是这种文件最大的用处是作为<code>vg</code>和PDF或SVG的中间文件。</p><h3 id="6-2-10-GFA（Graph-Fragment-Assembly-format）"><a href="#6-2-10-GFA（Graph-Fragment-Assembly-format）" class="headerlink" title="6.2.10 GFA（Graph Fragment / Assembly format）"></a>6.2.10 GFA（Graph Fragment / Assembly format）</h3><p>GFA可以方便graph数据在不同的程序之间来回交换，包括比对工具、泛基因组工具和可视化工具等。应该说GFA就是构建graph-based工具的关键。另外一个优势是GFA是可读的。</p><h3 id="6-2-11-vg扩展到GFA"><a href="#6-2-11-vg扩展到GFA" class="headerlink" title="6.2.11 vg扩展到GFA"></a>6.2.11 vg扩展到GFA</h3><p>vg能够调用GFA和RGFA文件，vg也能支持一些非标准的GFA标准。其中一个就是GFA头部的<code>RS</code>标签，vg将这个解释为空格分隔的参考样本。</p><h3 id="6-2-12-矢量化"><a href="#6-2-12-矢量化" class="headerlink" title="6.2.12 矢量化"></a>6.2.12 矢量化</h3><p>使用<code>vg vectorize</code>构建用于机器学习的向量化输出。</p><h2 id="6-3-基础用法"><a href="#6-3-基础用法" class="headerlink" title="6.3 基础用法"></a>6.3 基础用法</h2><h3 id="6-3-1-用法总览"><a href="#6-3-1-用法总览" class="headerlink" title="6.3.1 用法总览"></a>6.3.1 用法总览</h3><p><img src="https://cdn.nlark.com/yuque/0/2025/svg/23014278/1740563412069-f6598098-2736-4f30-9cab-c681e653054d.svg" alt=""></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css"># 构建<br>vg construct -r reference<span class="hljs-selector-class">.fa</span> -v variants<span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span> &gt; graph<span class="hljs-selector-class">.vg</span> <br><br># 索引<br>vg index -x graph<span class="hljs-selector-class">.xg</span> -g graph<span class="hljs-selector-class">.gcsa</span> graph<span class="hljs-selector-class">.vg</span> <br><br># 比对<br>vg map -f reads<span class="hljs-selector-class">.fq</span> -g graph<span class="hljs-selector-class">.gcsa</span> -x reads<span class="hljs-selector-class">.xg</span> &gt; mapped<span class="hljs-selector-class">.gam</span><br><br># 增强<br>vg augment -<span class="hljs-selector-tag">a</span> pileup -Z <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.trans</span> -S <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.support</span> graph<span class="hljs-selector-class">.vg</span> mapped<span class="hljs-selector-class">.gam</span> &gt; <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.aug</span><span class="hljs-selector-class">.vg</span> <br><br># Calling<br>vg call -z <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.trans</span> -s <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.support</span> <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.aug</span><span class="hljs-selector-class">.vg</span> &gt; calls<span class="hljs-selector-class">.vcf</span> <br></code></pre></td></tr></tbody></table></figure><h3 id="6-3-2-构建泛基因组"><a href="#6-3-2-构建泛基因组" class="headerlink" title="6.3.2 构建泛基因组"></a>6.3.2 构建泛基因组</h3><p>在vg中构建泛基因组通常有两种方法，如果有参考基因组，直接使用<code>vg construct</code>即可。可以只使用一个参考基因组构建graph，这样构建的graph是没有bubbles，因为是自己比对到自己，所以不会产生bubbles.</p><figure class="highlight applescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">vg construct -r <span class="hljs-keyword">reference</span>.fa &gt; <span class="hljs-keyword">ref</span>.vg <span class="hljs-comment"># a 'flat' graph, in vg parlance. One that contains no bubbles.</span><br></code></pre></td></tr></tbody></table></figure><p>但如果只是构建这样的一个graph，那没啥意思，bwa也可以完成这个工作。真正需要的是利用一些先验信息（例如VCF文件中的变异信息）来mapping目的reads，这样做的目的是能够获得更好的mapping结果同时重新发现一些已知的变异。如果有一个使用了这个基因组得到的VCF文件，那么就可以构建这样的graph. 构建之前需要先压缩VCF文件并构建索引：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">bgzip variants<span class="hljs-selector-class">.vcf</span> &amp;&amp; tabix variants<span class="hljs-selector-class">.vcf</span>.gz<br></code></pre></td></tr></tbody></table></figure><p>然后开售构建graph：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg construct -r reference<span class="hljs-selector-class">.fa</span> -v <span class="hljs-selector-tag">var</span><br>iants<span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span> &gt; graph.vg<br></code></pre></td></tr></tbody></table></figure><p>需要注意的是这一步同样需要构建参考基因组的索引，如果没有索引文件的话vg会自动创建。</p><p>可以使用<code>-R</code>参数指定对哪条染色体进行graph构建。理论上来说只要是 <code>samtools-format region specifier</code>都可以，但是通常是针对整条染色体进行构建。下面的代码是对人类基因组的染色体分批进行graph构建：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">ref=hs37d5.fa<br>vars=ALL.wgs.phase3_shapeit2_mvncall_integrated_v5b.20130502.sites.vcf.gz<br><br><span class="hljs-built_in">echo</span> constructing graph<br>(<span class="hljs-built_in">seq</span> 1 22; <span class="hljs-built_in">echo</span> X; <span class="hljs-built_in">echo</span> Y) | parallel -j 24 <span class="hljs-string">"time vg construct -C -R {} -r <span class="hljs-variable">$ref</span> -v <span class="hljs-variable">$vars</span> -t 1 -m 32 &gt;{}.vg"</span><br></code></pre></td></tr></tbody></table></figure><h3 id="6-3-3-vg-msga替换vg-construct"><a href="#6-3-3-vg-msga替换vg-construct" class="headerlink" title="6.3.3 vg msga替换vg construct"></a>6.3.3 vg msga替换vg construct</h3><p>如果没有参考基因组，但是有polished的long reads，这时可以考虑使用<code>vg msga</code>进行逐步组装并构建graph：</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">vg</span> msga -f polished_contigs.fa &gt; graph.vg<br></code></pre></td></tr></tbody></table></figure><p>具体实现的步骤如下：</p><ul><li>使用第一条read构建一个 <code>flat graph</code></li><li>将第二条read比对到这个graph上</li><li>合并新的paths</li><li>对graph重新构建索引并重复上两步步骤</li></ul><h3 id="6-3-4-构建graph索引"><a href="#6-3-4-构建graph索引" class="headerlink" title="6.3.4 构建graph索引"></a>6.3.4 构建graph索引</h3><p>对泛基因组的graph构建索引和线性基因组构建索引类似，之所以构建索引是为了在后续的mapping等过程中更有效地查找泛基因组中的相关序列。</p><h4 id="6-3-4-1-xg索引"><a href="#6-3-4-1-xg索引" class="headerlink" title="6.3.4.1 xg索引"></a>6.3.4.1 xg索引</h4><p><code>xg</code>格式的索引能够存储一个graph中的nodes、edges和paths. 构建完索引后就可以将graph加载到内存中进行mapping等处理，可以使用更少的内存和更少的时间，也可以更有效地查询graph中的paths. 构建的命令如下：</p><figure class="highlight stata"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">vg index -x <span class="hljs-keyword">graph</span>.xg <span class="hljs-keyword">graph</span>.vg<br></code></pre></td></tr></tbody></table></figure><h4 id="6-3-4-2-GCSA2索引"><a href="#6-3-4-2-GCSA2索引" class="headerlink" title="6.3.4.2 GCSA2索引"></a>6.3.4.2 GCSA2索引</h4><p>GCSA2是<code>Generalized Compressed Suffix Array</code>的标准，可以理解为graph BWT index，类似于bwa生成的索引。可以很快速地查询特定序列在graph中的位置。例如，如果我们想查看<code>GATTACA</code>这个序列是否存在于所构建的graph中，这时使用GCSA2索引就可以查询到这个序列在graph中的位置。构建GCSA2索引时需要一个基于<code>pruned de Bruijn graph</code>的kmer参数。可以使用下面的命令构建GCSA2索引：</p><figure class="highlight stata"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">vg index -<span class="hljs-keyword">g</span> <span class="hljs-keyword">graph</span>.gcsa <span class="hljs-keyword">graph</span>.vg<br></code></pre></td></tr></tbody></table></figure><p>运行这个代码会生成两个文件：<code>graph.gcsa</code>和<code>graph.gcsa.lcp</code>. 这两个文件必须都存在，才能保证后续使用时不报错。</p><p>针对大型且复杂的graph，例如1000个基因组构建的全基因组graph，就不可能使用所有的kmers来构建GCSA2索引。这种情况就需要在构建索引前先对graph进行修剪，保证每个复杂区域只有一个<code>non-combinatorially-exploding subgraph</code>.</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg prune -r graph<span class="hljs-selector-class">.vg</span> &gt; graph<span class="hljs-selector-class">.pruned</span><span class="hljs-selector-class">.vg</span><br>vg index -g graph<span class="hljs-selector-class">.gcsa</span> graph<span class="hljs-selector-class">.pruned</span>.vg<br></code></pre></td></tr></tbody></table></figure><p>更多的使用方法参考：</p><p><a href="https://github.com/vgteam/vg/wiki/Working-with-a-whole-genome-variation-graph">https://github.com/vgteam/vg/wiki/Working-with-a-whole-genome-variation-graph</a></p><h4 id="6-3-4-3-GBWT索引"><a href="#6-3-4-3-GBWT索引" class="headerlink" title="6.3.4.3 GBWT索引"></a>6.3.4.3 GBWT索引</h4><p>如果输入的VCF文件包含单倍型信息，那么可以将单倍型信息加入到GBWT索引中，以获得更多的信息。GBWT能够存储大量的单倍型信息。构建索引的方法类似于XG索引。GBET索引需要XG索引的信息，所以这两中格式的索引必须同步生成。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg index -x graph<span class="hljs-selector-class">.xg</span> -G graph<span class="hljs-selector-class">.gbwt</span> -v variants<span class="hljs-selector-class">.vcf</span><span class="hljs-selector-class">.gz</span> graph.vg<br></code></pre></td></tr></tbody></table></figure><p>如果有了GBWT索引，那就可以对单倍型进行修剪处理来构建GCSA索引：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg prune -u -g graph<span class="hljs-selector-class">.gbwt</span> graph<span class="hljs-selector-class">.vg</span> &gt; graph<span class="hljs-selector-class">.pruned</span><span class="hljs-selector-class">.vg</span><br>vg index -g graph<span class="hljs-selector-class">.gcsa</span> graph<span class="hljs-selector-class">.pruned</span>.vg<br></code></pre></td></tr></tbody></table></figure><h3 id="6-3-5-Mapping-reads"><a href="#6-3-5-Mapping-reads" class="headerlink" title="6.3.5 Mapping reads"></a>6.3.5 Mapping reads</h3><p>vg的mapping算法是MEM（maximal exact match），对应的模块是<code>vg map</code>. 不同的输入数据使用不同的命令，需要xg和GCSA这两种格式的索引，如果有GBWT索引的话也可以加入到其中，命令为<code>--gbwt-name graph.gbwt</code>.</p><figure class="highlight oxygene"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">## Single <span class="hljs-keyword">end</span> reads <span class="hljs-keyword">in</span> a single FASTQ<br>vg map -x <span class="hljs-keyword">index</span>.xg -g <span class="hljs-keyword">index</span>.gcsa -f reads.fq &gt; <span class="hljs-keyword">mapped</span>.gam<br>## Paired <span class="hljs-keyword">end</span> reads interleaved <span class="hljs-keyword">in</span> a single FASTQ<br>vg map -x <span class="hljs-keyword">index</span>.xg -g <span class="hljs-keyword">index</span>.gcsa -f reads.fq -i &gt; <span class="hljs-keyword">mapped</span>.gam<br>## Paired <span class="hljs-keyword">end</span> reads <span class="hljs-keyword">in</span> paired FASTQs<br>vg map -x <span class="hljs-keyword">index</span>.xg -g <span class="hljs-keyword">index</span>.gcsa -f reads1.fq -f reads2.fq &gt; <span class="hljs-keyword">mapped</span>.gam<br></code></pre></td></tr></tbody></table></figure><h3 id="6-3-6-Calling-variants"><a href="#6-3-6-Calling-variants" class="headerlink" title="6.3.6 Calling variants"></a>6.3.6 Calling variants</h3><h4 id="6-3-6-1-vg-call"><a href="#6-3-6-1-vg-call" class="headerlink" title="6.3.6.1 vg call"></a>6.3.6.1 vg call</h4><p><code>vg call</code>依赖于<code>samtools pileup</code>格式结构，是vg中推荐的方法。实现这个方法的本质是先对graph进行增强，再使用augmented的graph来生成变异图谱。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg augment -<span class="hljs-selector-tag">a</span> pileup -Z <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.trans</span> -S <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.support</span> graph<span class="hljs-selector-class">.vg</span> mapped<span class="hljs-selector-class">.gam</span> &gt; <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.aug</span><span class="hljs-selector-class">.vg</span><br>vg call -z <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.trans</span> -s <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.support</span> <span class="hljs-selector-tag">samp</span><span class="hljs-selector-class">.aug</span><span class="hljs-selector-class">.vg</span> &gt; calls.vcf<br></code></pre></td></tr></tbody></table></figure><h4 id="6-3-6-2-vg-genotype"><a href="#6-3-6-2-vg-genotype" class="headerlink" title="6.3.6.2 vg genotype"></a>6.3.6.2 vg genotype</h4><p><code>vg genotype</code>使用类似FreeBayes的方法，但是得到的结果并不是很准确。第一步先对GAM文件构建索引，然后再识别鉴定变异。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg index -d mapped<span class="hljs-selector-class">.gam</span><span class="hljs-selector-class">.index</span> -N mapped<span class="hljs-selector-class">.gam</span><br>vg genotype -v graph<span class="hljs-selector-class">.vg</span> mapped<span class="hljs-selector-class">.gam</span>.index/ &gt; calls.vcf<br></code></pre></td></tr></tbody></table></figure><p>生成的VCF文件是未排序的，需要使用vcflib对其进行排序。</p><h1 id="7-Mapping-long-reads-with-Giraffe"><a href="#7-Mapping-long-reads-with-Giraffe" class="headerlink" title="7 Mapping long reads with Giraffe"></a>7 Mapping long reads with Giraffe</h1><p>使用<code>vg giraffe</code>进行长reads比对。</p><h2 id="7-1-构建索引"><a href="#7-1-构建索引" class="headerlink" title="7.1 构建索引"></a>7.1 构建索引</h2><p>虽然<code>vg giraffe</code>会自动构建索引，但是还是建议预先构建对应的索引文件：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg autoindex <span class="hljs-attr">--workflow</span> lr-giraffe <span class="hljs-attr">--prefix</span> hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span> <span class="hljs-attr">--gbz</span> hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span>.gbz<br></code></pre></td></tr></tbody></table></figure><p>会生成这样一些文件：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.dist</span><br>hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span><br>hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.longread</span><span class="hljs-selector-class">.withzip</span><span class="hljs-selector-class">.min</span><br>hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.longread</span>.zipcodes<br></code></pre></td></tr></tbody></table></figure><ul><li><code>.dist</code>：距离索引</li><li><code>.gbz</code>：gbz格式的索引</li><li><code>.longread.withzip.min</code>：the “minimizers” used to find seeds, with embedded “zipcodes”</li><li><code>.longread.zipcodes</code>：the zipcodes too large to store in the minimizer file</li></ul><h2 id="7-2-Mapping"><a href="#7-2-Mapping" class="headerlink" title="7.2 Mapping"></a>7.2 Mapping</h2><p>针对不同测序方法得到的数据，使用参数<code>-b</code>指定测序数据类型，PacBio HiFi的数据使用<code>hifi</code>，Oxford Nanopore R10 chemistry reads使用<code>r10</code>；<code>-Z</code>参数指定<code>.gbz</code>格式的graph文件；<code>-f</code>参数指定输入的数据类型为<code>FASTQ</code>；使用参数<code>-p</code>来展示运行过程中的信息；使用<code>&gt;</code>将比对的结果输出为<code>.gam</code>格式。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg giraffe -<span class="hljs-selector-tag">b</span> hifi -Z hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> -f longread/hifi<span class="hljs-selector-class">.fq</span> -<span class="hljs-selector-tag">p</span> &gt;hifi<span class="hljs-selector-class">.mapped</span>.gam<br></code></pre></td></tr></tbody></table></figure><p>Giraffe能够从<code>.gbz</code>格式的graph中准确找到长reads的索引信息，如果没有相关的索引就会自动创建对应的索引。另外一个方法是直接把上一步生成的索引文件以传参的方式传入： <code>--minimizer-name/-m</code>、<code>--zipcode-name/-z</code>和<code>--dist-name/-d</code>.</p><p>Giraffe会自动预测使用多少线程来mapping，当然也可以使用<code>-t</code>参数指定mapping时所用的线程数。</p><h2 id="7-3-Mapping其他格式"><a href="#7-3-Mapping其他格式" class="headerlink" title="7.3 Mapping其他格式"></a>7.3 Mapping其他格式</h2><p>如果想要输出的格式为GAF格式，就使用<code>-o</code>参数进行指定：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg giraffe -<span class="hljs-selector-tag">b</span> hifi -Z hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> -f longread/hifi<span class="hljs-selector-class">.fq</span> -<span class="hljs-selector-tag">p</span> -o GAF &gt;hifi<span class="hljs-selector-class">.mapped</span>.gaf<br></code></pre></td></tr></tbody></table></figure><p>如果想要输出线性的BAM文件，那么可以使用<code>-P</code>进行指定：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg giraffe -<span class="hljs-selector-tag">b</span> hifi -Z hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> -f longread/hifi<span class="hljs-selector-class">.fq</span> -<span class="hljs-selector-tag">p</span> -o BAM -P &gt;hifi<span class="hljs-selector-class">.mapped</span>.bam<br></code></pre></td></tr></tbody></table></figure><h2 id="7-4-处理Long-Read-Alignments"><a href="#7-4-处理Long-Read-Alignments" class="headerlink" title="7.4 处理Long Read Alignments"></a>7.4 处理Long Read Alignments</h2><h3 id="7-4-1-描述性统计信息"><a href="#7-4-1-描述性统计信息" class="headerlink" title="7.4.1 描述性统计信息"></a>7.4.1 描述性统计信息</h3><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg stats -<span class="hljs-selector-tag">a</span> hifi<span class="hljs-selector-class">.mapped</span>.gam<br></code></pre></td></tr></tbody></table></figure><p>类似的输出结果：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Total</span> alignments: <span class="hljs-number">1</span><br><span class="hljs-attribute">Total</span> primary: <span class="hljs-number">1</span><br><span class="hljs-attribute">Total</span> secondary: <span class="hljs-number">0</span><br><span class="hljs-attribute">Total</span> aligned: <span class="hljs-number">1</span><br><span class="hljs-attribute">Total</span> perfect: <span class="hljs-number">1</span><br><span class="hljs-attribute">Total</span> gapless (softclips allowed): <span class="hljs-number">1</span><br><span class="hljs-attribute">Total</span> paired: <span class="hljs-number">0</span><br><span class="hljs-attribute">Total</span> properly paired: <span class="hljs-number">0</span><br><span class="hljs-attribute">Alignment</span> score: mean <span class="hljs-number">15580</span>, median <span class="hljs-number">15580</span>, stdev <span class="hljs-number">0</span>, max <span class="hljs-number">15580</span> (<span class="hljs-number">1</span> reads)<br><span class="hljs-attribute">Mapping</span> quality: mean <span class="hljs-number">60</span>, median <span class="hljs-number">60</span>, stdev <span class="hljs-number">0</span>, max <span class="hljs-number">60</span> (<span class="hljs-number">1</span> reads)<br><span class="hljs-attribute">Insertions</span>: <span class="hljs-number">0</span> bp in <span class="hljs-number">0</span> read events<br><span class="hljs-attribute">Deletions</span>: <span class="hljs-number">0</span> bp in <span class="hljs-number">0</span> read events<br><span class="hljs-attribute">Substitutions</span>: <span class="hljs-number">0</span> bp in <span class="hljs-number">0</span> read events<br><span class="hljs-attribute">Softclips</span>: <span class="hljs-number">0</span> bp in <span class="hljs-number">0</span> read events<br><span class="hljs-attribute">Total</span> time: <span class="hljs-number">0</span>.<span class="hljs-number">00598654</span> seconds<br><span class="hljs-attribute">Speed</span>: <span class="hljs-number">167</span>.<span class="hljs-number">041</span> reads/second<br></code></pre></td></tr></tbody></table></figure><p>如果Mapping quality小于60的序列很多，那么就说明存在问题，需要检查序列质量。</p><h3 id="7-4-2-格式转换"><a href="#7-4-2-格式转换" class="headerlink" title="7.4.2 格式转换"></a>7.4.2 格式转换</h3><p>格式转换的时候需要graph文件。</p><h4 id="7-4-2-1-GAM转GAF"><a href="#7-4-2-1-GAM转GAF" class="headerlink" title="7.4.2.1 GAM转GAF"></a>7.4.2.1 GAM转GAF</h4><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg convert <span class="hljs-attr">--gam-to-gaf</span> hifi<span class="hljs-selector-class">.mapped</span><span class="hljs-selector-class">.gam</span> hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> &gt;hifi<span class="hljs-selector-class">.mapped</span>.gaf<br></code></pre></td></tr></tbody></table></figure><h4 id="7-4-2-2-GAF转GAM"><a href="#7-4-2-2-GAF转GAM" class="headerlink" title="7.4.2.2 GAF转GAM"></a>7.4.2.2 GAF转GAM</h4><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg convert <span class="hljs-attr">--gaf-to-gam</span> hifi<span class="hljs-selector-class">.mapped</span><span class="hljs-selector-class">.gaf</span> hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> &gt;hifi<span class="hljs-selector-class">.mapped</span>.gam<br></code></pre></td></tr></tbody></table></figure><h4 id="7-4-2-3-剥离GAM元数据"><a href="#7-4-2-3-剥离GAM元数据" class="headerlink" title="7.4.2.3 剥离GAM元数据"></a>7.4.2.3 剥离GAM元数据</h4><p>如果想用旧版本的vg或者是其他的非vg工具查看GAM文件的话，可能会得到下面的信息：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">what</span><span class="hljs-params">()</span></span>: <span class="hljs-selector-attr">[vg::io::MessageIterator]</span> obsolete, invalid, or corrupt <span class="hljs-selector-tag">input</span> at message <span class="hljs-number">12345</span> group <span class="hljs-number">45678</span><br></code></pre></td></tr></tbody></table></figure><p>处理方法是将GAM转为GAF再转为GAM，这样就会把这些元数据去掉了。</p><h3 id="7-4-3-将长reads添加到BAM"><a href="#7-4-3-将长reads添加到BAM" class="headerlink" title="7.4.3 将长reads添加到BAM"></a>7.4.3 将长reads添加到BAM</h3><p>在有GMA或者是GAF格式文件后，如果想得到线性参考的BAM文件用于DeepVariant等软件，那么可以使用<code>vg surject</code>来surject比对结果并压缩为线性参考。对于长reads，在使用<code>vg surject</code>时需要添加<code>-prune-low-cplx/-p</code>参数，这样能够更好地处理跨越了串联重复等区域的reads.</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg surject -<span class="hljs-selector-tag">b</span> -x hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> hifi<span class="hljs-selector-class">.mapped</span><span class="hljs-selector-class">.gam</span> <span class="hljs-attr">--prune-low-cplx</span> &gt;hifi<span class="hljs-selector-class">.mapped</span>.bam<br></code></pre></td></tr></tbody></table></figure><p>如果是GAF文件，对应的命令为：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg surject -<span class="hljs-selector-tag">b</span> -x hprc-v1.<span class="hljs-number">1</span>-mc-chm13<span class="hljs-selector-class">.d9</span><span class="hljs-selector-class">.gbz</span> -G hifi<span class="hljs-selector-class">.mapped</span><span class="hljs-selector-class">.gaf</span> <span class="hljs-attr">--prune-low-cplx</span> &gt;hifi<span class="hljs-selector-class">.mapped</span>.bam<br></code></pre></td></tr></tbody></table></figure><h2 id="7-5-最佳实践操作"><a href="#7-5-最佳实践操作" class="headerlink" title="7.5 最佳实践操作"></a>7.5 最佳实践操作</h2><p>短reads同样适用。</p><ul><li>双末端mapping（合二为一）</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg giraffe -<span class="hljs-selector-tag">p</span> -t <span class="hljs-number">32</span> -Z graph<span class="hljs-selector-class">.gbz</span> -d graph<span class="hljs-selector-class">.dist</span> -m graph<span class="hljs-selector-class">.min</span> \<br>    -<span class="hljs-selector-tag">i</span> -f reads<span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> &gt; output.gam<br></code></pre></td></tr></tbody></table></figure><ul><li>双末端mapping</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg giraffe -<span class="hljs-selector-tag">p</span> -t <span class="hljs-number">32</span> -Z graph<span class="hljs-selector-class">.gbz</span> -d graph<span class="hljs-selector-class">.dist</span> -m graph<span class="hljs-selector-class">.min</span> \<br>    -f reads<span class="hljs-selector-class">.R1</span><span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> -f reads<span class="hljs-selector-class">.R2</span><span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> &gt; output.gam<br></code></pre></td></tr></tbody></table></figure><ul><li>双末端mapping后输出BAM文件</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg giraffe -<span class="hljs-selector-tag">p</span> -t <span class="hljs-number">32</span> -Z graph<span class="hljs-selector-class">.gbz</span> -d graph<span class="hljs-selector-class">.dist</span> -m graph<span class="hljs-selector-class">.min</span> -x graph<span class="hljs-selector-class">.xg</span> \<br>    -<span class="hljs-selector-tag">i</span> -f reads<span class="hljs-selector-class">.fq</span><span class="hljs-selector-class">.gz</span> -o BAM &gt; output.bam<br></code></pre></td></tr></tbody></table></figure><h1 id="8-单倍型sampling"><a href="#8-单倍型sampling" class="headerlink" title="8 单倍型sampling"></a>8 单倍型sampling</h1><p>泛基因组graph作为参考进行比对时，嵌入到graph中的variation会影响mapping的结果。</p><ul><li>在graph和reads中都存在的variant会使mapping更准；</li><li>variant只存在于graph中但是不存在于reads中的话，mapping会很慢，准确度也不高。</li></ul><p>常见的是只使用共有的/常见的variant，但是后面开发出一个新的方法：对每个样品都构建一个个性化的reference. 这种方法是通过计算reads中的kmers，并根据kmer的数量来生成一个小的合成的单倍型。</p><h2 id="8-1-文献"><a href="#8-1-文献" class="headerlink" title="8.1 文献"></a>8.1 文献</h2><p><a href="https://www.nature.com/articles/s41592-024-02407-2">https://www.nature.com/articles/s41592-024-02407-2</a></p><h2 id="8-2-处理graph"><a href="#8-2-处理graph" class="headerlink" title="8.2 处理graph"></a>8.2 处理graph</h2><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vg index -j graph<span class="hljs-selector-class">.dist</span> <span class="hljs-attr">--no-nested-distance</span> graph<span class="hljs-selector-class">.gbz</span><br>vg gbwt -<span class="hljs-selector-tag">p</span> <span class="hljs-attr">--num-threads</span> <span class="hljs-number">16</span> -r graph<span class="hljs-selector-class">.ri</span> -Z graph<span class="hljs-selector-class">.gbz</span><br>vg haplotypes -v <span class="hljs-number">2</span> -t <span class="hljs-number">16</span> -H graph<span class="hljs-selector-class">.hapl</span> graph.gbz<br></code></pre></td></tr></tbody></table></figure><p>假设graph是由多个样本alignment后构建的，有着很高水平的线性结构，例如<code>Minigraph-Cactus pipeline</code>构建的graph。graph和单倍型必须是GBZ格式。预处理方法是将每条染色体切成长度为10 kbp的短序列，然后在其中选择最相关的单倍型，并将这些单倍型连接形成临时的合成单倍型；同时需要选择一些特定的kmers，通过这些kmers的存在和缺失来表示单倍型。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PGGB学习笔记</title>
      <link href="/article/pggb/"/>
      <url>/article/pggb/</url>
      
        <content type="html"><![CDATA[<h2 id="0-1-文献笔记"><a href="#0-1-文献笔记" class="headerlink" title="0.1 文献笔记"></a>0.1 文献笔记</h2><p>泛基因组包含了所有的序列、基因组间的同源性和所有的变异类型。泛基因组可以用于变异检测、保守性估计、重组事件评估和推断系统发育关系。现有的方法使用reference的策略和tree-guide的方法构建泛基因组，这些方法得到的遗传变异信息会不完整，也不稳定。现有的方法基本上就是把与参考基因组足够相似的序列添加到参考基因组上，这些方法后对结构上高度可变的区域进行修剪处理，例如着丝粒和其他是卫星序列。PGGB是reference-free的流程，能够构建无偏差的泛基因组变异图。</p><h3 id="0-1-1-WFMASH两两比对"><a href="#0-1-1-WFMASH两两比对" class="headerlink" title="0.1.1 WFMASH两两比对"></a>0.1.1 WFMASH两两比对</h3><p>PGGB从序列比对开始。reads、genes和genome甚至是这三者的组合都可以用于构建泛基因组，格式是FASTA或者是FASTQ都可以。为了避免参考基因组和顺序的偏差影响，PGGB使用all-to-all的策略进行序列比对。这样的好处就是每条序列在泛基因组中都可以作为reference来描述遗传变异。有个问题就是两两比较的话会有个问题就是需要更多的计算资源和时间，PGGB使用的是WFMASH，这个软件利用序列片段进行同源性比较，而不是使用单个碱基来进行同源性比较。这个方法能够保留较长范围内的共线性，但是对转座子和微卫星序列之间的重复序列以和较短的相似序列并不敏感。WFMASH的比对结果是PGGB构建泛基因组的理想结构，但是PGGB也可以使用任何以PAF格式存储的比对结果构建泛基因组。</p><h3 id="0-1-2-SEQWISH构建variation-graph"><a href="#0-1-2-SEQWISH构建variation-graph" class="headerlink" title="0.1.2 SEQWISH构建variation graph"></a>0.1.2 SEQWISH构建variation graph</h3><p>第二步是泛基因组graph构建：使用SEQWISH将基因组和成对比对结果转换为变异图（variation graph）。SEQWISH能够将上一步比对结果中的不存在的同源关系进行恢复（The SEQWISH graph recovers transitive homology relationships that may not be present in the initial alignment set）。这样的好处是能够使用随机稀疏化来降低比对结果的复杂性。首先是提取WFMASH结果中的同源比对结果，然后只align上一步mapping结果中的一个子集。我们期望泛基因组的每个同源locus的alignment graph是局部全连接的，这样的话就需要足够多的mapping. PGGB使用基于 Erdös–Rényi 随机图模型的方法来确保稀疏化的安全阈值。这样做的好处是不用计算所有的两两比对就能重建variation graph中的传递关系。这样就能在保证结果准确的前提下还能降低运行时间，增加10倍基因组，只需要增加44倍左右的时间，而不是100倍。</p><h3 id="0-1-3-SMOOTHXG构建泛基因组"><a href="#0-1-3-SMOOTHXG构建泛基因组" class="headerlink" title="0.1.3 SMOOTHXG构建泛基因组"></a>0.1.3 SMOOTHXG构建泛基因组</h3><p>第三步是使用SMOOTHXG 局部压缩和简化泛基因组variation graph来完成泛基因组构建。上一步的SEQWISH构建的graph已经是近乎完整的模型，这个模型已经能够代表输入的基因组和序列之间的alignment了；但是通常会含有复杂的局部motif，这些motif会使得下游的分析变得更加复杂。之所以这样是因为输入的用于alignment的序列之间并没有进行相互标准化，从而导致低复杂度序列中变异的表示有所不同，还可能多出一些密集的小的looping motif. 为了解决这个问题，PGGB采用的方法是移除SEQWISH输入数据中短的match. 这样是可以降低复杂度，但是呢也可能会生成一个并不能代表所有局部成对关系的graph. 为了解决这个问题，PGGB使用偏序比对（partial order alignment，POA）来解决这个问题。这种方法会删除长度短于POA长度的小圈（small cycles），但是会保留更大的cycles，这些更大的cycles可以紧凑地表示结构可变的loci. 这样做有利于针对短reads、古老的和低覆盖度的基因组进行genotyping. SMOOTHXG能够使用POA的优势去优化泛基因组。GFAFFIX用于压缩非冗余的nodes，ODGI对最终的graph进行排序。</p><h3 id="0-1-4-输出结果"><a href="#0-1-4-输出结果" class="headerlink" title="0.1.4 输出结果"></a>0.1.4 输出结果</h3><p>PGGB输出的结果可以用于解释、质控和下游分析。使用ODGI可以对泛基因组进行基本的统计和可视化，也可以输出MultiQC报告。使用VG可以从PGGB输出的结果中鉴定遗传变异，生成对对应的VCF文件。为了便于后续分析，PGGB使用BiWFA将复杂的嵌套变异分解为最小化的reference-relative的表示。这时候PGGB就成为了多样本全基因组组装的遗传变异调用器。</p><h3 id="0-1-5-benchmark"><a href="#0-1-5-benchmark" class="headerlink" title="0.1.5 benchmark"></a>0.1.5 benchmark</h3><p>PGGB表现和MUMMER4大差不差，但是呢MUMMER4输出的结果是针对某个参考基因组的，而PGGB输出的结果是针对所有的基因组的。</p><p>在variation graph中，nodes表示的是alleles，可以将基因组理解为等位基因计数的载体。基于这种方法可以考虑所有的变异类型，而且不会因为参考基因组的不同而有偏差。PGGB构建的系统发育树和先前的研究使用SNP构建的系统发育树一致。有趣的是，基于MUMMER结果的SNV-based构建失败的系统发育树施用PGGB构建成功。Minigraph-Cactus这种方法构建的泛基因组构建的系统发育树和先前的研究所报道的有所差异。</p><h3 id="0-1-6-PGGB优势"><a href="#0-1-6-PGGB优势" class="headerlink" title="0.1.6 PGGB优势"></a>0.1.6 PGGB优势</h3><ul><li>无偏差：和序列顺序无关、和系统发育无关；</li><li>无损：输入的基因组都保留在了泛基因组中，每个基因组都可以作为下游分析的参考基因组；</li><li>模块化：每个模块输出的文件都是文本格式的，方便后续的其他泛基因组构建方法进行调用；</li><li>已验证：HPRC就是使用PGGB构建的人类泛基因组</li><li>开放性：社区开发，流程部署</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740477178747-3cd7754c-7756-4405-aad8-ed9ea527344c.png" alt=""></p><hr><p>构建一个局部有方向且无循环的graph，一次来存储和展示大量的变异信息。保持局部线性对于解释、展示和重复使用泛基因组变异graph是很重要的。</p><h2 id="0-2-安装"><a href="#0-2-安装" class="headerlink" title="0.2 安装"></a>0.2 安装</h2><h3 id="0-2-1-手动安装"><a href="#0-2-1-手动安装" class="headerlink" title="0.2.1 手动安装"></a>0.2.1 手动安装</h3><p>需要用到的软件有：wfmash、seqwish、smoothxg、odgi和gfaffix. 这些软件可以使用conda安装。</p><p><a href="https://github.com/waveygang/wfmash">https://github.com/waveygang/wfmash</a></p><p><a href="https://github.com/ekg/seqwish">https://github.com/ekg/seqwish</a></p><p><a href="https://github.com/pangenome/smoothxg">https://github.com/pangenome/smoothxg</a></p><p><a href="https://github.com/pangenome/odgi">https://github.com/pangenome/odgi</a></p><p><a href="https://github.com/marschall-lab/GFAffix">https://github.com/marschall-lab/GFAffix</a></p><p>选择性安装的软件有：bcftools、vcfbub、vcfwave和vg.，这几个软件用于鉴定和标准化变异；MultiQC生成简单的描述统计结果；pigz用于压缩流程中的输出文件。</p><p><a href="https://github.com/samtools/bcftools">https://github.com/samtools/bcftools</a></p><p><a href="https://github.com/pangenome/vcfbub">https://github.com/pangenome/vcfbub</a></p><p><a href="https://manpages.ubuntu.com/manpages/noble/man1/vcfwave.1.html">https://manpages.ubuntu.com/manpages/noble/man1/vcfwave.1.html</a></p><p><a href="https://github.com/vgteam/vg">https://github.com/vgteam/vg</a></p><p><a href="https://github.com/MultiQC/MultiQC">https://github.com/MultiQC/MultiQC</a></p><p><a href="https://github.com/madler/pigz">https://github.com/madler/pigz</a></p><h3 id="0-2-2-Docker安装"><a href="#0-2-2-Docker安装" class="headerlink" title="0.2.2 Docker安装"></a>0.2.2 Docker安装</h3><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull ghcr.io<span class="hljs-regexp">/pangenome/</span>pggb:latest<br></code></pre></td></tr></tbody></table></figure><p>或者从dockerhub安装：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull pangenome/pggb<br></code></pre></td></tr></tbody></table></figure><p>示例用法：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -it -v <span class="hljs-variable">${PWD}</span><span class="hljs-regexp">/data/</span>:<span class="hljs-regexp">/data ghcr.io/</span>pangenome<span class="hljs-regexp">/pggb:latest /</span>bin<span class="hljs-regexp">/bash -c "pggb -i /</span>data<span class="hljs-regexp">/HLA/</span>DRB1-<span class="hljs-number">3123</span>.fa.gz -p <span class="hljs-number">70</span> -s <span class="hljs-number">3000</span> -n <span class="hljs-number">10</span> -t <span class="hljs-number">16</span> -V <span class="hljs-string">'gi|568815561'</span> -o <span class="hljs-regexp">/data/</span>out<span class="hljs-string">"</span><br></code></pre></td></tr></tbody></table></figure><p>-v这个参数最好是用全部的路径。</p><h3 id="0-2-3-Singularity"><a href="#0-2-3-Singularity" class="headerlink" title="0.2.3 Singularity"></a>0.2.3 Singularity</h3><p>集群上通常使用Singularity替代docker.</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">singularity pull docker:<span class="hljs-regexp">//g</span>hcr.io<span class="hljs-regexp">/pangenome/</span>pggb:latest<br></code></pre></td></tr></tbody></table></figure><p>下载示例数据：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone --recursive https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/pangenome/</span>pggb.git<br>cd pggb<br></code></pre></td></tr></tbody></table></figure><h3 id="0-2-4-Bioconda"><a href="#0-2-4-Bioconda" class="headerlink" title="0.2.4 Bioconda"></a>0.2.4 Bioconda</h3><figure class="highlight mipsasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">conda <span class="hljs-keyword">install </span>-c <span class="hljs-keyword">bioconda </span>pggb<br></code></pre></td></tr></tbody></table></figure><h3 id="0-2-5-GUIX"><a href="#0-2-5-GUIX" class="headerlink" title="0.2.5 GUIX"></a>0.2.5 GUIX</h3><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/ekg/gui</span>x-genomics<br>cd guix-genomics<br>GUIX_PACKAGE_PATH=. guix package -i pggb<br></code></pre></td></tr></tbody></table></figure><h3 id="0-2-6-Nextflow"><a href="#0-2-6-Nextflow" class="headerlink" title="0.2.6 Nextflow"></a>0.2.6 Nextflow</h3><p><a href="https://github.com/nf-core/pangenome">https://github.com/nf-core/pangenome</a></p><h2 id="0-3-快速上手"><a href="#0-3-快速上手" class="headerlink" title="0.3 快速上手"></a>0.3 快速上手</h2><p>泛基因组是一个物种或clade的所有序列的完整集合，能够使用variation graph这种格式来表示。为了方便交流/交换泛基因组，使用的标准格式是Graphical Fragment Assembly（GFA），现在的版本是version 1.</p><h3 id="0-3-1-第一步：数据准备"><a href="#0-3-1-第一步：数据准备" class="headerlink" title="0.3.1 第一步：数据准备"></a>0.3.1 第一步：数据准备</h3><p>将所有的fasta序列放到一个文件中，如果有很多样品和/或很多单倍型时，按照PanSN-spec规则对序列进行命名。可以选择是否使用bgzip进行压缩；然后使用SAMtools对输入文件构建索引。</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">samtools</span> faidx in.fa<br><span class="hljs-comment"># 或者是</span><br>samtools faidx in.fa.gz<br></code></pre></td></tr></tbody></table></figure><h3 id="0-3-2-第二步：序列分割"><a href="#0-3-2-第二步：序列分割" class="headerlink" title="0.3.2 第二步：序列分割"></a>0.3.2 第二步：序列分割</h3><p>如果有输入的数据是全基因组的组装结果，那么可以考虑按照染色体将不同的染色体进行拆分，然后使用pggb对每条染色体进行泛基因组构建。</p><figure class="highlight livescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livescript">partition-before-pggb -i <span class="hljs-keyword">in</span>.fa <span class="hljs-string">\</span>       <span class="hljs-comment"># input file in FASTA format</span><br>                      -o output <span class="hljs-string">\</span>      <span class="hljs-comment"># output directory</span><br>                      -n <span class="hljs-number">9</span> <span class="hljs-string">\</span>           <span class="hljs-comment"># number of haplotypes (optional with PanSN-spec)</span><br>                      -t <span class="hljs-number">16</span> <span class="hljs-string">\</span>          <span class="hljs-comment"># number of threads</span><br>                      -p <span class="hljs-number">90</span> <span class="hljs-string">\</span>          <span class="hljs-comment"># minimum average nucleotide identity for segments</span><br>                      -s <span class="hljs-number">5k</span> <span class="hljs-string">\</span>          <span class="hljs-comment"># segment length for scaffolding the graph</span><br>                      -V <span class="hljs-string">'ref:1000'</span>    <span class="hljs-comment"># make a VCF against "ref" decomposing variants &gt;1000bp</span><br></code></pre></td></tr></tbody></table></figure><p>上面的代码会生成两段独立的代码(如果有n个community的话就会生成n个下面的代码）：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">pggb -<span class="hljs-selector-tag">i</span> output/<span class="hljs-keyword">in</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.dd9e519</span><span class="hljs-selector-class">.community</span>.<span class="hljs-number">0</span><span class="hljs-selector-class">.fa</span> \<br>     -o output/<span class="hljs-keyword">in</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.dd9e519</span><span class="hljs-selector-class">.community</span>.<span class="hljs-number">0</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.out</span> \<br>     -<span class="hljs-selector-tag">p</span> <span class="hljs-number">5</span>k -l <span class="hljs-number">25000</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">90</span> -n <span class="hljs-number">9</span> -K <span class="hljs-number">19</span> -F <span class="hljs-number">0.001</span> \<br>     -k <span class="hljs-number">19</span> -f <span class="hljs-number">0</span> -B <span class="hljs-number">10000000</span> \<br>     -H <span class="hljs-number">9</span> -j <span class="hljs-number">0</span> -e <span class="hljs-number">0</span> -G <span class="hljs-number">700</span>,<span class="hljs-number">900</span>,<span class="hljs-number">1100</span> -P <span class="hljs-number">1</span>,<span class="hljs-number">19</span>,<span class="hljs-number">39</span>,<span class="hljs-number">3</span>,<span class="hljs-number">81</span>,<span class="hljs-number">1</span> -O <span class="hljs-number">0.001</span> -d <span class="hljs-number">100</span> -Q Consensus_ \<br>     -V ref:<span class="hljs-number">1000</span> <span class="hljs-attr">--threads</span> <span class="hljs-number">16</span> <span class="hljs-attr">--poa-threads</span> <span class="hljs-number">16</span><br>pggb -<span class="hljs-selector-tag">i</span> output/<span class="hljs-keyword">in</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.dd9e519</span><span class="hljs-selector-class">.community</span>.<span class="hljs-number">1</span><span class="hljs-selector-class">.fa</span> \<br>     -o output/<span class="hljs-keyword">in</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.dd9e519</span><span class="hljs-selector-class">.community</span>.<span class="hljs-number">1</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.out</span> \<br>     -<span class="hljs-selector-tag">p</span> <span class="hljs-number">5</span>k -l <span class="hljs-number">25000</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">90</span> -n <span class="hljs-number">9</span> -K <span class="hljs-number">19</span> -F <span class="hljs-number">0.001</span> \<br>     -k <span class="hljs-number">19</span> -f <span class="hljs-number">0</span> -B <span class="hljs-number">10000000</span> \<br>     -H <span class="hljs-number">9</span> -j <span class="hljs-number">0</span> -e <span class="hljs-number">0</span> -G <span class="hljs-number">700</span>,<span class="hljs-number">900</span>,<span class="hljs-number">1100</span> -P <span class="hljs-number">1</span>,<span class="hljs-number">19</span>,<span class="hljs-number">39</span>,<span class="hljs-number">3</span>,<span class="hljs-number">81</span>,<span class="hljs-number">1</span> -O <span class="hljs-number">0.001</span> -d <span class="hljs-number">100</span> -Q Consensus_ \<br>     -V ref:<span class="hljs-number">1000</span> <span class="hljs-attr">--threads</span> <span class="hljs-number">16</span> <span class="hljs-attr">--poa-threads</span> <span class="hljs-number">16</span><br></code></pre></td></tr></tbody></table></figure><h3 id="0-3-3-第三步：构建graph"><a href="#0-3-3-第三步：构建graph" class="headerlink" title="0.3.3 第三步：构建graph"></a>0.3.3 第三步：构建graph</h3><figure class="highlight ldif"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif">pggb \<br><span class="hljs-literal">-</span>i in.fa \       <span class="hljs-comment"># 输入文件，是fasta格式</span><br><span class="hljs-literal">-</span>o output \      <span class="hljs-comment"># 输出文件夹</span><br><span class="hljs-literal">-</span>n 9  \          <span class="hljs-comment"># 单倍型的数量，如果使用PanSN-spec则需要，其他情况不需要</span><br><span class="hljs-literal">-</span>t 16            <span class="hljs-comment"># 线程数</span><br><span class="hljs-literal">-</span>p 90 \          <span class="hljs-comment"># (default) minimum average nucleotide identity for a seed mapping</span><br><span class="hljs-literal">-</span>s 5000 \        <span class="hljs-comment"># (default) segment length</span><br><span class="hljs-literal">-</span>V 'ref:1000'    <span class="hljs-comment"># make a VCF against "ref" decomposing variants &gt;1000bp</span><br></code></pre></td></tr></tbody></table></figure><p>输出的结果是outdir/input.fa*smooth.fix.gfa. 输出的结果可以使用odgi进行可视化，可以选择1D和2D这两种方式进行展示。</p><h4 id="0-3-3-1-1D可视化"><a href="#0-3-3-1-1D可视化" class="headerlink" title="0.3.3.1 1D可视化"></a>0.3.3.1 1D可视化</h4><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740401529688-25064bdd-a738-4212-9448-3d5c0c2779f2.png" alt=""></p><ul><li>从左到右</li><li>彩色条表示二进制矩阵中嵌入路径与该泛基因组序列的分箱线性化渲染</li><li>path的名称在最左侧</li><li>路径下的黑线，即所谓的链接，表示图的拓扑结构。</li></ul><h4 id="0-3-3-2-2D可视化"><a href="#0-3-3-2-2D可视化" class="headerlink" title="0.3.3.2 2D可视化"></a>0.3.3.2 2D可视化</h4><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740401659676-9dd9d279-f1ab-446d-90f8-56c7bd0dabc3.png" alt=""></p><ul><li>每个彩色矩形代表路径的一个节点。节点的 x 坐标位于 x 轴上，y 坐标位于 y 轴上。</li><li>气泡表示此处某些路径具有发散序列，或者可以表示重复区域。</li></ul><h2 id="0-4-详细流程"><a href="#0-4-详细流程" class="headerlink" title="0.4 详细流程"></a>0.4 详细流程</h2><h3 id="0-4-1-序列准备"><a href="#0-4-1-序列准备" class="headerlink" title="0.4.1 序列准备"></a>0.4.1 序列准备</h3><p>数据量较大时，如果直接把所有数据放到一起，那么就需要很大的计算量和计算资源。建议的做法是把输入数据拆分为community，简单理解就是把相同的染色体拆分到一个文件中，以减少对计算资源的消耗，降低计算压力。但是如果有染色体易位等情况时，不建议把数据进行拆分。</p><h4 id="0-4-1-1-具体步骤"><a href="#0-4-1-1-具体步骤" class="headerlink" title="0.4.1.1 具体步骤"></a>0.4.1.1 具体步骤</h4><h5 id="0-4-1-1-1-安装依赖"><a href="#0-4-1-1-1-安装依赖" class="headerlink" title="0.4.1.1.1 安装依赖"></a>0.4.1.1.1 安装依赖</h5><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> python-igraph<br>pip3 <span class="hljs-keyword">install</span> pycairo <span class="hljs-comment"># 仅仅只是用于可视化</span><br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-1-1-2-序列命名"><a href="#0-4-1-1-2-序列命名" class="headerlink" title="0.4.1.1.2 序列命名"></a>0.4.1.1.2 序列命名</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br>    sample_name=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span> | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span>);<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">${sample_name}</span><br>    fastix -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> <span class="hljs-variable">$f</span> &gt;&gt; scerevisiae7.fasta<br><span class="hljs-keyword">done</span><br>bgzip -@ 4 scerevisiae7.fasta<br>samtools faidx scerevisiae7.fasta.gz<br></code></pre></td></tr></tbody></table></figure><p>重命名使用的是fastix：</p><p><a href="https://github.com/ekg/fastix">https://github.com/ekg/fastix</a></p><p>上面这段代码所完成的工作：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa<br><br>列出当前目录中所有以 .fa 为后缀的文件。这通常是一种较简化的FASTA文件格式（但可以包含任意其他内容）。<br>| <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br><br>将 <span class="hljs-built_in">ls</span> 的输出通过管道传递给 <span class="hljs-keyword">while</span> 循环，每次循环读取一个文件名到变量 f 中进行处理。<br>sample_name=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span> | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span>);<br><br>使用 <span class="hljs-built_in">cut</span> 命令对文件名 f 进行截断操作，以 . 为分隔符，提取其第一个字段，作为 sample_name。这一般被用于提取不带扩展名的文件名部分。<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">${sample_name}</span><br><br>输出 sample_name 到终端，这样你可以看到每个处理的样本名称，方便调试或者确认。<br>fastix -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> <span class="hljs-variable">$f</span> &gt;&gt; scerevisiae7.fasta<br><br>fastix 是一个假设的工具（可能是一个特定功能的自定义程序），它被调用来处理每个文件 f。选项 -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> 可能是用来指定前缀或标记以包含在输出序列中。处理结果被附加（&gt;&gt;）到 scerevisiae7.fasta 这个文件中。<br>注意：fastix 不是一个标准程序名，所以具体行为需要根据实际程序功能确定。如果没有安装或者不是实际可用的话，需要更新为正确的可用工具。<br>bgzip -@ 4 scerevisiae7.fasta<br><br>使用 bgzip 工具来压缩 scerevisiae7.fasta 文件。选项 -@ 4 指定使用 4 个线程来进行压缩，以提高速度。压缩后的文件名通常为 scerevisiae7.fasta.gz。<br>samtools faidx scerevisiae7.fasta.gz<br><br>使用 samtools faidx 命令为压缩的 FASTA 文件创建索引文件。这会对 scerevisiae7.fasta.gz 生成一个索引文件 scerevisiae7.fasta.gz.fai。索引后的文件可以更快地使用一些生物信息学工具进行随机访问。<br></code></pre></td></tr></tbody></table></figure><p>这里将所有单倍型的编号都设置为1，是因为所用的样品是单倍体。</p><h5 id="0-4-1-1-3-Community-detection"><a href="#0-4-1-1-3-Community-detection" class="headerlink" title="0.4.1.1.3 Community detection"></a>0.4.1.1.3 Community detection</h5><h6 id="0-4-1-1-3-1-计算分歧度"><a href="#0-4-1-1-3-1-计算分歧度" class="headerlink" title="0.4.1.1.3.1 计算分歧度"></a>0.4.1.1.3.1 计算分歧度</h6><p>这一步需要获取输入的组装结果之间的关系，目的是为了检测底层的community，其实也就是计算不同序列之间的相似性。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">wfmash scerevisiae7<span class="hljs-selector-class">.fasta</span><span class="hljs-selector-class">.gz</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">90</span> -n <span class="hljs-number">6</span> -t <span class="hljs-number">4</span> -m &gt; scerevisiae7<span class="hljs-selector-class">.mapping</span>.paf<br></code></pre></td></tr></tbody></table></figure><p>-p设位置为90是因为期望的序列之间的分歧度是10%左右，分歧度的估计参考下一节内容，-n表示单倍型的数量，最小值是1.</p><h6 id="0-4-1-1-3-2-paf格式转network格式"><a href="#0-4-1-1-3-2-paf格式转network格式" class="headerlink" title="0.4.1.1.3.2 paf格式转network格式"></a>0.4.1.1.3.2 paf格式转network格式</h6><p>接下来是将paf格式的结果转换为网络格式，使用脚本paf2net.py：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python3 ../../scripts/paf2net<span class="hljs-selector-class">.py</span> -<span class="hljs-selector-tag">p</span> scerevisiae7<span class="hljs-selector-class">.mapping</span>.paf<br></code></pre></td></tr></tbody></table></figure><p>这个脚本生成三个文件：</p><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">scerevisiae7.<span class="hljs-keyword">mapping</span>.paf.edges.list.txt <span class="hljs-keyword">is</span> the edge list representing the pairs <span class="hljs-keyword">of</span> <span class="hljs-keyword">sequences</span> mapped <span class="hljs-keyword">in</span> the PAF;<br><br>scerevisiae7.<span class="hljs-keyword">mapping</span>.paf.edges.weights.txt <span class="hljs-keyword">is</span> a list <span class="hljs-keyword">of</span> edge weights (long <span class="hljs-keyword">and</span> high estimated <span class="hljs-keyword">identity</span> mappings have greater weight);<br><br>scerevisiae7.<span class="hljs-keyword">mapping</span>.paf.vertices.id2name.txt <span class="hljs-keyword">is</span> the <span class="hljs-string">'id to sequence name'</span> map.<br></code></pre></td></tr></tbody></table></figure><h6 id="0-4-1-1-3-3-鉴定community"><a href="#0-4-1-1-3-3-鉴定community" class="headerlink" title="0.4.1.1.3.3 鉴定community"></a>0.4.1.1.3.3 鉴定community</h6><p>紧接着运行下面的代码检测community：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python3 ../../scripts/net2communities<span class="hljs-selector-class">.py</span> \<br>    -e scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.edges</span><span class="hljs-selector-class">.list</span><span class="hljs-selector-class">.txt</span> \<br>    -w scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.edges</span><span class="hljs-selector-class">.weights</span><span class="hljs-selector-class">.txt</span> \<br>    -n scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.vertices</span><span class="hljs-selector-class">.id2name</span>.txt<br></code></pre></td></tr></tbody></table></figure><p>paf2net.py这个脚本会生成一系列的<em>.community.</em>.txt，每个文件里面的序列就是一个community，每一行是一条序列。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">cat scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.edges</span><span class="hljs-selector-class">.weights</span><span class="hljs-selector-class">.txt</span><span class="hljs-selector-class">.community</span>.<span class="hljs-number">6</span>.txt<br></code></pre></td></tr></tbody></table></figure><p>示例输出：</p><figure class="highlight clean"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs clean">DBVPG6044#<span class="hljs-number">1</span>#chrVII<br>S288C#<span class="hljs-number">1</span>#chrVII<br>SK1#<span class="hljs-number">1</span>#chrVII<br>Y12#<span class="hljs-number">1</span>#chrVII<br>YPS128#<span class="hljs-number">1</span>#chrVII<br>DBVPG6044#<span class="hljs-number">1</span>#chrVIII<br>S288C#<span class="hljs-number">1</span>#chrVIII<br>SK1#<span class="hljs-number">1</span>#chrVIII<br>UWOPS034614#<span class="hljs-number">1</span>#chrVII<br>UWOPS034614#<span class="hljs-number">1</span>#chrVIII<br>Y12#<span class="hljs-number">1</span>#chrVIII<br>YPS128#<span class="hljs-number">1</span>#chrVIII<br>DBVPG6765#<span class="hljs-number">1</span>#chrVII<br>DBVPG6765#<span class="hljs-number">1</span>#chrVIII<br></code></pre></td></tr></tbody></table></figure><p>这个结果之所以会 chrVII和chrVIII是因为这些样品中有染色体重排现象。</p><h6 id="0-4-1-1-3-4-查看每个community"><a href="#0-4-1-1-3-4-查看每个community" class="headerlink" title="0.4.1.1.3.4 查看每个community"></a>0.4.1.1.3.4 查看每个community</h6><p>想查看每个community中的序列信息，执行下面的代码：</p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">seq <span class="hljs-number">0</span> <span class="hljs-number">14</span> <span class="hljs-pattern-match">| <span class="hljs-keyword">while</span> read i; <span class="hljs-keyword">do</span></span><br><span class="hljs-pattern-match">    chromosomes=<span class="hljs-constructor">$(<span class="hljs-params">cat</span> <span class="hljs-params">scerevisiae7</span>.<span class="hljs-params">mapping</span>.<span class="hljs-params">paf</span>.<span class="hljs-params">edges</span>.<span class="hljs-params">weights</span>.<span class="hljs-params">txt</span>.<span class="hljs-params">community</span>.$<span class="hljs-params">i</span>.<span class="hljs-params">txt</span> | <span class="hljs-params">cut</span> -<span class="hljs-params">f</span> 3 -<span class="hljs-params">d</span> '#' | <span class="hljs-params">sort</span> | <span class="hljs-params">uniq</span> | <span class="hljs-params">tr</span> '\<span class="hljs-params">n</span>' ' ')</span>;</span><br><span class="hljs-pattern-match">    echo "community <span class="hljs-constructor">$i</span> --&gt; <span class="hljs-constructor">$chromosomes</span>";</span><br><span class="hljs-pattern-match"><span class="hljs-keyword">done</span></span><br></code></pre></td></tr></tbody></table></figure><p>示例输出：</p><figure class="highlight xl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">community</span> 0 --&gt;</span> chrI<br><span class="hljs-function"><span class="hljs-title">community</span> 1 --&gt;</span> chrII<br><span class="hljs-function"><span class="hljs-title">community</span> 2 --&gt;</span> chrIII<br><span class="hljs-function"><span class="hljs-title">community</span> 3 --&gt;</span> chrIV<br><span class="hljs-function"><span class="hljs-title">community</span> 4 --&gt;</span> chrV<br><span class="hljs-function"><span class="hljs-title">community</span> 5 --&gt;</span> chrVI<br><span class="hljs-function"><span class="hljs-title">community</span> 6 --&gt;</span> chrVII chrVIII<br><span class="hljs-function"><span class="hljs-title">community</span> 7 --&gt;</span> chrIX<br><span class="hljs-function"><span class="hljs-title">community</span> 8 --&gt;</span> chrX chrXIII<br><span class="hljs-function"><span class="hljs-title">community</span> 9 --&gt;</span> chrXI<br><span class="hljs-function"><span class="hljs-title">community</span> 10 --&gt;</span> chrXII<br><span class="hljs-function"><span class="hljs-title">community</span> 11 --&gt;</span> chrXIV<br><span class="hljs-function"><span class="hljs-title">community</span> 12 --&gt;</span> chrXV<br><span class="hljs-function"><span class="hljs-title">community</span> 13 --&gt;</span> chrXVI<br><span class="hljs-function"><span class="hljs-title">community</span> 14 --&gt;</span> chrMT<br></code></pre></td></tr></tbody></table></figure><p>可以看到community 6和community 8这两个community有多个染色体。</p><h6 id="0-4-1-1-3-5-community可视化"><a href="#0-4-1-1-3-5-community可视化" class="headerlink" title="0.4.1.1.3.5 community可视化"></a>0.4.1.1.3.5 community可视化</h6><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python3 ../../scripts/net2communities<span class="hljs-selector-class">.py</span> \<br>    -e scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.edges</span><span class="hljs-selector-class">.list</span><span class="hljs-selector-class">.txt</span> \<br>    -w scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.edges</span><span class="hljs-selector-class">.weights</span><span class="hljs-selector-class">.txt</span> \<br>    -n scerevisiae7<span class="hljs-selector-class">.mapping</span><span class="hljs-selector-class">.paf</span><span class="hljs-selector-class">.vertices</span><span class="hljs-selector-class">.id2name</span><span class="hljs-selector-class">.txt</span> \<br>    <span class="hljs-attr">--plot</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740446386314-f3baff51-a1ab-4979-a152-0ff457b36c96.png" alt=""></p><h5 id="0-4-1-1-4-数据拆分"><a href="#0-4-1-1-4-数据拆分" class="headerlink" title="0.4.1.1.4 数据拆分"></a>0.4.1.1.4 数据拆分</h5><p>鉴定完community后可以使用pggb进行管理。执行下面的代码拆分每个community：</p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">seq <span class="hljs-number">0</span> <span class="hljs-number">14</span> <span class="hljs-pattern-match">| <span class="hljs-keyword">while</span> read i; <span class="hljs-keyword">do</span></span><br><span class="hljs-pattern-match">    echo "community <span class="hljs-constructor">$i</span>"</span><br><span class="hljs-pattern-match">    samtools faidx scerevisiae7.fasta.gz <span class="hljs-constructor">$(<span class="hljs-params">cat</span> <span class="hljs-params">scerevisiae7</span>.<span class="hljs-params">mapping</span>.<span class="hljs-params">paf</span>.<span class="hljs-params">edges</span>.<span class="hljs-params">weights</span>.<span class="hljs-params">txt</span>.<span class="hljs-params">community</span>.$<span class="hljs-params">i</span>.<span class="hljs-params">txt</span>)</span> | \</span><br><span class="hljs-pattern-match">    bgzip -@ 4 -c &gt; scerevisiae7.community.<span class="hljs-constructor">$i</span>.fa.gz</span><br><span class="hljs-pattern-match">    samtools faidx scerevisiae7.community.<span class="hljs-constructor">$i</span>.fa.gz</span><br><span class="hljs-pattern-match"><span class="hljs-keyword">done</span></span><br></code></pre></td></tr></tbody></table></figure><p>生成的scerevisiae7.community.*.fa.gz文件现在就可以作为pggb的输入文件。如果需要整合所有的community的graphs，可以使用odgi squeeze.</p><h5 id="0-4-1-1-5-基于Mash的拆分方法"><a href="#0-4-1-1-5-基于Mash的拆分方法" class="headerlink" title="0.4.1.1.5 基于Mash的拆分方法"></a>0.4.1.1.5 基于Mash的拆分方法</h5><p>直接使用mash计算序列之间的距离：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">mash dist scerevisiae7<span class="hljs-selector-class">.fasta</span><span class="hljs-selector-class">.gz</span> scerevisiae7<span class="hljs-selector-class">.fasta</span><span class="hljs-selector-class">.gz</span> -s <span class="hljs-number">10000</span> -<span class="hljs-selector-tag">i</span> &gt; scerevisiae7<span class="hljs-selector-class">.distances</span>.tsv<br></code></pre></td></tr></tbody></table></figure><p>-s设置得越大，得到的结果也越准确；-i参数表示比较输入文件内的序列，而不是比较整个输入文件。</p><p>查看结果：</p><figure class="highlight excel"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">head -<span class="hljs-built_in">n</span> <span class="hljs-number">5</span> scerevisiae7.distances.tsv | <span class="hljs-built_in">column</span> -<span class="hljs-built_in">t</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrI    DBVPG6044#<span class="hljs-number">1</span>#chrI  <span class="hljs-number">0</span>         <span class="hljs-number">0</span>             <span class="hljs-number">10000</span>/<span class="hljs-number">10000</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrII   DBVPG6044#<span class="hljs-number">1</span>#chrI  <span class="hljs-number">0</span>.<span class="hljs-number">184461</span>  <span class="hljs-number">0</span>             <span class="hljs-number">105</span>/<span class="hljs-number">10000</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrIII  DBVPG6044#<span class="hljs-number">1</span>#chrI  <span class="hljs-number">0</span>.<span class="hljs-number">186761</span>  <span class="hljs-number">0</span>             <span class="hljs-number">100</span>/<span class="hljs-number">10000</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrIV   DBVPG6044#<span class="hljs-number">1</span>#chrI  <span class="hljs-number">0</span>.<span class="hljs-number">220489</span>  <span class="hljs-number">1</span>.<span class="hljs-number">83465</span>e-<span class="hljs-number">228</span>  <span class="hljs-number">49</span>/<span class="hljs-number">10000</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrV    DBVPG6044#<span class="hljs-number">1</span>#chrI  <span class="hljs-number">0</span>.<span class="hljs-number">176252</span>  <span class="hljs-number">0</span>             <span class="hljs-number">125</span>/<span class="hljs-number">10000</span><br></code></pre></td></tr></tbody></table></figure><p>第三列表示mash距离，第四列是P值，第五列共享哈希值的数量除以所考虑哈希值的数量的比率。</p><p>也可以将mash距离转换为network格式，进一步坚定community：</p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">python3 ../../scripts/mash2net.py -m scerevisiae7.distances.tsv<br><br>python3 ../../scripts/net2communities.py \<br>    -e scerevisiae7.distances.tsv.edges.<span class="hljs-built_in">list</span>.txt \<br>    -w scerevisiae7.distances.tsv.edges.weights.txt \<br>    -n scerevisiae7.distances.tsv.vertices.id2name.txt<br><br>seq <span class="hljs-number">0</span> <span class="hljs-number">14</span> <span class="hljs-pattern-match">| <span class="hljs-keyword">while</span> read i; <span class="hljs-keyword">do</span></span><br><span class="hljs-pattern-match">    chromosomes=<span class="hljs-constructor">$(<span class="hljs-params">cat</span> <span class="hljs-params">scerevisiae7</span>.<span class="hljs-params">distances</span>.<span class="hljs-params">tsv</span>.<span class="hljs-params">edges</span>.<span class="hljs-params">weights</span>.<span class="hljs-params">txt</span>.<span class="hljs-params">community</span>.$<span class="hljs-params">i</span>.<span class="hljs-params">txt</span> | <span class="hljs-params">cut</span> -<span class="hljs-params">f</span> 3 -<span class="hljs-params">d</span> '#' | <span class="hljs-params">sort</span> | <span class="hljs-params">uniq</span> | <span class="hljs-params">tr</span> '\<span class="hljs-params">n</span>' ' ')</span>;</span><br><span class="hljs-pattern-match">    echo "community <span class="hljs-constructor">$i</span> --&gt; <span class="hljs-constructor">$chromosomes</span>";</span><br><span class="hljs-pattern-match"><span class="hljs-keyword">done</span></span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight xl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">community</span> 0 --&gt;</span> chrII<br><span class="hljs-function"><span class="hljs-title">community</span> 1 --&gt;</span> chrI<br><span class="hljs-function"><span class="hljs-title">community</span> 2 --&gt;</span> chrIII<br><span class="hljs-function"><span class="hljs-title">community</span> 3 --&gt;</span> chrIV<br><span class="hljs-function"><span class="hljs-title">community</span> 4 --&gt;</span> chrV<br><span class="hljs-function"><span class="hljs-title">community</span> 5 --&gt;</span> chrVI<br><span class="hljs-function"><span class="hljs-title">community</span> 6 --&gt;</span> chrVII chrVIII<br><span class="hljs-function"><span class="hljs-title">community</span> 7 --&gt;</span> chrIX<br><span class="hljs-function"><span class="hljs-title">community</span> 8 --&gt;</span> chrX chrXIII<br><span class="hljs-function"><span class="hljs-title">community</span> 9 --&gt;</span> chrXI<br><span class="hljs-function"><span class="hljs-title">community</span> 10 --&gt;</span> chrXII<br><span class="hljs-function"><span class="hljs-title">community</span> 11 --&gt;</span> chrXIV<br><span class="hljs-function"><span class="hljs-title">community</span> 12 --&gt;</span> chrXV<br><span class="hljs-function"><span class="hljs-title">community</span> 13 --&gt;</span> chrXVI<br><span class="hljs-function"><span class="hljs-title">community</span> 14 --&gt;</span> chrMT<br></code></pre></td></tr></tbody></table></figure><p>输出的结果和上一个方法是一致的。</p><h3 id="0-4-2-分歧度估计"><a href="#0-4-2-分歧度估计" class="headerlink" title="0.4.2 分歧度估计"></a>0.4.2 分歧度估计</h3><p>pggb中的一些参数会影响最终构建的graph的结构。例如，-p参数影响的是mapping identity，这个参数设置得越小，对比的灵敏度就会随之增加，就会得到更多压缩后的graphs. 这个参数的设置依赖于输入序列的分歧程度。</p><h4 id="0-4-2-1-详细步骤"><a href="#0-4-2-1-详细步骤" class="headerlink" title="0.4.2.1 详细步骤"></a>0.4.2.1 详细步骤</h4><h5 id="0-4-2-1-1-下载基因组"><a href="#0-4-2-1-1-下载基因组" class="headerlink" title="0.4.2.1.1 下载基因组"></a>0.4.2.1.1 下载基因组</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p assemblies/yprp_panel<br><span class="hljs-built_in">cd</span> assemblies/yprp_panel<br><span class="hljs-built_in">cat</span> ../../docs/data/scerevisiae.yprp.urls | parallel -j 4 <span class="hljs-string">'wget -q {} &amp;&amp; echo got {}'</span><br></code></pre></td></tr></tbody></table></figure><p>将基因组序列和线粒体序列合并：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa.gz | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span> | <span class="hljs-built_in">uniq</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span><br>    zcat <span class="hljs-variable">$f</span>.* &gt; <span class="hljs-variable">$f</span>.fa<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-2-1-2-重命名序列"><a href="#0-4-2-1-2-重命名序列" class="headerlink" title="0.4.2.1.2 重命名序列"></a>0.4.2.1.2 重命名序列</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br>    sample_name=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span> | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span>);<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">${sample_name}</span><br>    fastix -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> <span class="hljs-variable">$f</span> &gt;&gt; scerevisiae7.fasta<br><span class="hljs-keyword">done</span><br>bgzip -@ 4 scerevisiae7.fasta<br>samtools faidx scerevisiae7.fasta.gz<br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-2-1-3-序列分歧度"><a href="#0-4-2-1-3-序列分歧度" class="headerlink" title="0.4.2.1.3 序列分歧度"></a>0.4.2.1.3 序列分歧度</h5><p>假设一次只对一条染色体进行泛基因组构建，就需要估计染色体之间的分歧程度。使用下面的代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cut</span> -f 1 scerevisiae7.fasta.gz.fai | <span class="hljs-built_in">cut</span> -f 3 -d <span class="hljs-string">'#'</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CHROM; <span class="hljs-keyword">do</span><br>    CHR_FASTA=scerevisiae7.<span class="hljs-variable">$CHROM</span>.fasta.gz<br>    samtools faidx scerevisiae7.fasta.gz $(grep -P $<span class="hljs-string">"<span class="hljs-variable">$CHROM</span>\t"</span> scerevisiae7.fasta.gz.fai | <span class="hljs-built_in">cut</span> -f 1) | bgzip -@ 4 &gt; <span class="hljs-variable">$CHR_FASTA</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Generated <span class="hljs-variable">$CHR_FASTA</span>"</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>计算分歧度的方法就是依次进行比较。mash triangle数据一个三角矩阵的结果，类似于相关性那种结果。</p><figure class="highlight mipsasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">mash triangle <span class="hljs-keyword">scerevisiae7.chrMT.fasta.gz </span>&gt; <span class="hljs-keyword">scerevisiae7.chrMT.mash_triangle.txt</span><br><span class="hljs-keyword"></span>cat <span class="hljs-keyword">scerevisiae7.chrMT.mash_triangle.txt </span><span class="hljs-title">| column -t</span><br></code></pre></td></tr></tbody></table></figure><p>输出的结果类似于：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">7</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrMT<br><span class="hljs-attribute">DBVPG6765</span>#<span class="hljs-number">1</span>#chrMT    <span class="hljs-number">0</span>.<span class="hljs-number">0192445</span><br><span class="hljs-attribute">S288C</span>#<span class="hljs-number">1</span>#chrMT        <span class="hljs-number">0</span>.<span class="hljs-number">0151342</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0182524</span><br><span class="hljs-attribute">SK1</span>#<span class="hljs-number">1</span>#chrMT          <span class="hljs-number">0</span>.<span class="hljs-number">0023533</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0202797</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0144049</span><br><span class="hljs-attribute">UWOPS034614</span>#<span class="hljs-number">1</span>#chrMT  <span class="hljs-number">0</span>.<span class="hljs-number">0186813</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0210181</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0185579</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0179508</span><br><span class="hljs-attribute">Y12</span>#<span class="hljs-number">1</span>#chrMT          <span class="hljs-number">0</span>.<span class="hljs-number">0188053</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0208145</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0126347</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0178312</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0148187</span><br><span class="hljs-attribute">YPS128</span>#<span class="hljs-number">1</span>#chrMT       <span class="hljs-number">0</span>.<span class="hljs-number">0170687</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0198213</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0136991</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0175939</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0141502</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0131603</span><br></code></pre></td></tr></tbody></table></figure><p>上面的结果可以看出这个community中有7条序列，mash距离从0到1之间。使用下面的代码计算最大分歧度：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed 1,1d scerevisiae7.chrMT.mash_triangle.txt | <span class="hljs-built_in">tr</span> <span class="hljs-string">'\t'</span> <span class="hljs-string">'\n'</span> | grep chr -v | LC_ALL=C <span class="hljs-built_in">sort</span> -g -k 1nr | <span class="hljs-built_in">uniq</span> | <span class="hljs-built_in">head</span> -n 1<br></code></pre></td></tr></tbody></table></figure><p>输出结果为0.0210181. 这个结果是一个community的mash分歧度，使用下面的代码计算所有community的最大分歧度：</p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">ls scerevisiae7.*.fasta.gz <span class="hljs-pattern-match">| <span class="hljs-keyword">while</span> read <span class="hljs-constructor">CHR_FASTA</span>; <span class="hljs-keyword">do</span></span><br><span class="hljs-pattern-match">    <span class="hljs-constructor">CHROM</span>=<span class="hljs-constructor">$(<span class="hljs-params">echo</span> $CHR_FASTA | <span class="hljs-params">cut</span> -<span class="hljs-params">f</span> 2 -<span class="hljs-params">d</span> '.')</span></span><br><span class="hljs-pattern-match">    <span class="hljs-constructor">MAX_DIVERGENCE</span>=<span class="hljs-constructor">$(<span class="hljs-params">mash</span> <span class="hljs-params">triangle</span> -<span class="hljs-params">p</span> 4 $CHR_FASTA | <span class="hljs-params">sed</span> 1,1d | <span class="hljs-params">tr</span> '\<span class="hljs-params">t</span>' '\<span class="hljs-params">n</span>' | <span class="hljs-params">grep</span> <span class="hljs-params">chr</span> -<span class="hljs-params">v</span> | LC_ALL=C  <span class="hljs-params">sort</span> -<span class="hljs-params">g</span> -<span class="hljs-params">k</span> 1nr | <span class="hljs-params">uniq</span> | <span class="hljs-params">head</span> -<span class="hljs-params">n</span> 1)</span></span><br><span class="hljs-pattern-match"></span><br><span class="hljs-pattern-match">    echo -e "<span class="hljs-constructor">$CHROM</span>\t<span class="hljs-constructor">$MAX_DIVERGENCE</span>" &gt;&gt; scerevisiae7.divergence.txt</span><br><span class="hljs-pattern-match"><span class="hljs-keyword">done</span></span><br><span class="hljs-pattern-match"></span><br><span class="hljs-pattern-match">cat scerevisiae7.divergence.txt | column -t</span><br></code></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">chrI</span>     <span class="hljs-number">0</span>.<span class="hljs-number">0178312</span><br><span class="hljs-attribute">chrII</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00804257</span><br><span class="hljs-attribute">chrIII</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0121679</span><br><span class="hljs-attribute">chrIV</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00759618</span><br><span class="hljs-attribute">chrIX</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0106545</span><br><span class="hljs-attribute">chrMT</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0210181</span><br><span class="hljs-attribute">chrV</span>     <span class="hljs-number">0</span>.<span class="hljs-number">00892796</span><br><span class="hljs-attribute">chrVI</span>    <span class="hljs-number">9</span>.<span class="hljs-number">55247</span>e-<span class="hljs-number">05</span><br><span class="hljs-attribute">chrVII</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0639874</span><br><span class="hljs-attribute">chrVIII</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0385787</span><br><span class="hljs-attribute">chrX</span>     <span class="hljs-number">0</span>.<span class="hljs-number">0357395</span><br><span class="hljs-attribute">chrXI</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0324062</span><br><span class="hljs-attribute">chrXII</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00900687</span><br><span class="hljs-attribute">chrXIII</span>  <span class="hljs-number">0</span>.<span class="hljs-number">052117</span><br><span class="hljs-attribute">chrXIV</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00838426</span><br><span class="hljs-attribute">chrXV</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0081558</span><br><span class="hljs-attribute">chrXVI</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00838426</span><br></code></pre></td></tr></tbody></table></figure><p>从结果中可以看出chrVII、chrVIII和chrXIII这三条染色体的分歧度排在前面，最大值是0.0639874. 那到底如何设置mapping identity也就是-p这个参数呢？通常的原则是100 - max_divergence * 100，这个数据中应该设置为93.60126，建议是等于或小于这个值。但是，为了解释那些被低估的序列分歧度，或者为了避免局部序列中较大或适中的结构变异造成的序列分歧差异，建议把这个参数设置为更小的值，比如90.</p><h5 id="0-4-2-1-4-染色体间的分歧度估计"><a href="#0-4-2-1-4-染色体间的分歧度估计" class="headerlink" title="0.4.2.1.4 染色体间的分歧度估计"></a>0.4.2.1.4 染色体间的分歧度估计</h5><p>如果样品之间有染色体重排或者是易位等现象，那就需要计算染色体之间的序列分歧度。</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mash</span> triangle scerevisiae7.community.<span class="hljs-number">0</span>.fa.gz -s <span class="hljs-number">10000</span> &gt; scerevisiae7.community.<span class="hljs-number">0</span>.mash_triangle.txt<br><span class="hljs-attribute">cat</span> scerevisiae7.community.<span class="hljs-number">0</span>.mash_triangle.txt | column -t<br></code></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">14</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrVII<br><span class="hljs-attribute">S288C</span>#<span class="hljs-number">1</span>#chrVII         <span class="hljs-number">0</span>.<span class="hljs-number">00811043</span><br><span class="hljs-attribute">SK1</span>#<span class="hljs-number">1</span>#chrVII           <span class="hljs-number">0</span>.<span class="hljs-number">00160605</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00759986</span><br><span class="hljs-attribute">Y12</span>#<span class="hljs-number">1</span>#chrVII           <span class="hljs-number">0</span>.<span class="hljs-number">00721034</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00710972</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00740957</span><br><span class="hljs-attribute">YPS128</span>#<span class="hljs-number">1</span>#chrVII        <span class="hljs-number">0</span>.<span class="hljs-number">00641651</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00659004</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00659004</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00505504</span><br><span class="hljs-attribute">DBVPG6044</span>#<span class="hljs-number">1</span>#chrVIII    <span class="hljs-number">0</span>.<span class="hljs-number">243761</span>    <span class="hljs-number">0</span>.<span class="hljs-number">222464</span>    <span class="hljs-number">0</span>.<span class="hljs-number">23782</span>     <span class="hljs-number">0</span>.<span class="hljs-number">215016</span>    <span class="hljs-number">0</span>.<span class="hljs-number">221466</span><br><span class="hljs-attribute">S288C</span>#<span class="hljs-number">1</span>#chrVIII        <span class="hljs-number">0</span>.<span class="hljs-number">222464</span>    <span class="hljs-number">0</span>.<span class="hljs-number">203604</span>    <span class="hljs-number">0</span>.<span class="hljs-number">217673</span>    <span class="hljs-number">0</span>.<span class="hljs-number">194429</span>    <span class="hljs-number">0</span>.<span class="hljs-number">214163</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00928959</span><br><span class="hljs-attribute">SK1</span>#<span class="hljs-number">1</span>#chrVIII          <span class="hljs-number">0</span>.<span class="hljs-number">250557</span>    <span class="hljs-number">0</span>.<span class="hljs-number">221466</span>    <span class="hljs-number">0</span>.<span class="hljs-number">242205</span>    <span class="hljs-number">0</span>.<span class="hljs-number">215016</span>    <span class="hljs-number">0</span>.<span class="hljs-number">216771</span>    <span class="hljs-number">0</span>.<span class="hljs-number">000911163</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00912584</span><br><span class="hljs-attribute">UWOPS034614</span>#<span class="hljs-number">1</span>#chrVII   <span class="hljs-number">0</span>.<span class="hljs-number">0625263</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0623939</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0627391</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0625528</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0610962</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0635756</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0649949</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0635211</span><br><span class="hljs-attribute">UWOPS034614</span>#<span class="hljs-number">1</span>#chrVIII  <span class="hljs-number">0</span>.<span class="hljs-number">0512793</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0517248</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0514142</span>   <span class="hljs-number">0</span>.<span class="hljs-number">049118</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0496087</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0358693</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0373731</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0359997</span>   <span class="hljs-number">0</span>.<span class="hljs-number">258493</span><br><span class="hljs-attribute">Y12</span>#<span class="hljs-number">1</span>#chrVIII          <span class="hljs-number">0</span>.<span class="hljs-number">236445</span>    <span class="hljs-number">0</span>.<span class="hljs-number">222464</span>    <span class="hljs-number">0</span>.<span class="hljs-number">236445</span>    <span class="hljs-number">0</span>.<span class="hljs-number">216771</span>    <span class="hljs-number">0</span>.<span class="hljs-number">231311</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00815958</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0081861</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00759251</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0625528</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0354817</span><br><span class="hljs-attribute">YPS128</span>#<span class="hljs-number">1</span>#chrVIII       <span class="hljs-number">0</span>.<span class="hljs-number">239237</span>    <span class="hljs-number">0</span>.<span class="hljs-number">199716</span>    <span class="hljs-number">0</span>.<span class="hljs-number">213325</span>    <span class="hljs-number">0</span>.<span class="hljs-number">208588</span>    <span class="hljs-number">0</span>.<span class="hljs-number">191209</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00728616</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00790009</span>  <span class="hljs-number">0</span>.<span class="hljs-number">006864</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0628727</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0345966</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00614217</span><br><span class="hljs-attribute">DBVPG6765</span>#<span class="hljs-number">1</span>#chrVII     <span class="hljs-number">0</span>.<span class="hljs-number">00890041</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00474338</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0079113</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00866976</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00768463</span>  <span class="hljs-number">0</span>.<span class="hljs-number">26803</span>      <span class="hljs-number">0</span>.<span class="hljs-number">256381</span>    <span class="hljs-number">0</span>.<span class="hljs-number">270747</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0628995</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0512793</span>  <span class="hljs-number">0</span>.<span class="hljs-number">26546</span>     <span class="hljs-number">0</span>.<span class="hljs-number">23011</span><br><span class="hljs-attribute">DBVPG6765</span>#<span class="hljs-number">1</span>#chrVIII    <span class="hljs-number">0</span>.<span class="hljs-number">273629</span>    <span class="hljs-number">0</span>.<span class="hljs-number">26546</span>     <span class="hljs-number">0</span>.<span class="hljs-number">273629</span>    <span class="hljs-number">0</span>.<span class="hljs-number">26803</span>     <span class="hljs-number">0</span>.<span class="hljs-number">270747</span>    <span class="hljs-number">0</span>.<span class="hljs-number">00861155</span>   <span class="hljs-number">0</span>.<span class="hljs-number">0060471</span>   <span class="hljs-number">0</span>.<span class="hljs-number">00853035</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0656244</span>  <span class="hljs-number">0</span>.<span class="hljs-number">0360829</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00873594</span>  <span class="hljs-number">0</span>.<span class="hljs-number">00826588</span>  <span class="hljs-number">0</span>.<span class="hljs-number">26546</span><br></code></pre></td></tr></tbody></table></figure><p>输出结果中chrVII和chrVIII这两条染色体，因为前期的研究发现只有这两条染色体有重排现象。-s设置为10000是为了提高比对的准确度。较低的分歧度很大程度上是因为发生了染色体结构重排。</p><h3 id="0-4-3-小变异鉴定"><a href="#0-4-3-小变异鉴定" class="headerlink" title="0.4.3 小变异鉴定"></a>0.4.3 小变异鉴定</h3><p>主要组织相容性复合体 (MHC) 是脊椎动物 DNA 中的一个大型位点，包含一组紧密相连的多态性基因，这些基因编码对适应性免疫系统至关重要的细胞表面蛋白。在人类中，MHC 区域位于 6 号染色体上。</p><h4 id="0-4-3-1-详细步骤"><a href="#0-4-3-1-详细步骤" class="headerlink" title="0.4.3.1 详细步骤"></a>0.4.3.1 详细步骤</h4><h5 id="0-4-3-1-1-数据收集"><a href="#0-4-3-1-1-数据收集" class="headerlink" title="0.4.3.1.1 数据收集"></a>0.4.3.1.1 数据收集</h5><p>将chromosome 6 contigs比对到MHC ALT的单倍型上。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">wfmash -t <span class="hljs-number">16</span> -m -s <span class="hljs-number">5000</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">98</span> MHC<span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.gz</span> chr6<span class="hljs-selector-class">.pan</span><span class="hljs-selector-class">.fa</span> &gt; HPRCy1<span class="hljs-selector-class">.pan</span><span class="hljs-selector-class">.chr6_vs_MHC</span>.paf<br></code></pre></td></tr></tbody></table></figure><p>然后根据比对结果构建一个BED文件：</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">awk</span> <span class="hljs-string">'{ print <span class="hljs-variable">$1</span>, <span class="hljs-variable">$3</span>, <span class="hljs-variable">$4</span> }'</span> HPRCy1.pan.chr6_vs_MHC.paf | tr <span class="hljs-string">' '</span> <span class="hljs-string">'\t'</span> | sort -V &gt; HPRCy1.MHC.bed<br>bedtools merge -d <span class="hljs-number">1000000</span> -i HPRCy1.MHC.bed &gt; HPRCy1.MHC.merge.bed<br></code></pre></td></tr></tbody></table></figure><p>最后一步是提取对应区域的序列：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">bedtools getfasta -fi <span class="hljs-regexp">/lizardfs/</span>erikg<span class="hljs-regexp">/HPRC/y</span>ear1<span class="hljs-regexp">/parts/</span>chr6.pan+refs.fa -bed HPRCy1.MHC.merge.bed | bgzip -c -@ <span class="hljs-number">16</span> &gt; HPRCy1.MHC.fa.gz<br>samtools faidx HPRCy1.MHC.fa.gz<br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-3-1-2-序列重命名"><a href="#0-4-3-1-2-序列重命名" class="headerlink" title="0.4.3.1.2 序列重命名"></a>0.4.3.1.2 序列重命名</h5><p>前面的处理已经保证名称的统一，直接使用即可：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cut</span> -f <span class="hljs-number">1</span> HPRCy1.MHC.fa.gz.fai | head -n <span class="hljs-number">6</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">HG00438</span>#<span class="hljs-number">1</span>#JAHBCB010000040.<span class="hljs-number">1</span>:<span class="hljs-number">22870000</span>-<span class="hljs-number">27725000</span><br><span class="hljs-attribute">HG00438</span>#<span class="hljs-number">2</span>#JAHBCA010000042.<span class="hljs-number">1</span>:<span class="hljs-number">22875000</span>-<span class="hljs-number">27895000</span><br><span class="hljs-attribute">HG00621</span>#<span class="hljs-number">1</span>#JAHBCD010000020.<span class="hljs-number">1</span>:<span class="hljs-number">22865000</span>-<span class="hljs-number">27905000</span><br><span class="hljs-attribute">HG00621</span>#<span class="hljs-number">2</span>#JAHBCC010000005.<span class="hljs-number">1</span>:<span class="hljs-number">28460000</span>-<span class="hljs-number">33400000</span><br><span class="hljs-attribute">HG00673</span>#<span class="hljs-number">1</span>#JAHBBZ010000030.<span class="hljs-number">1</span>:<span class="hljs-number">28480000</span>-<span class="hljs-number">33310000</span><br><span class="hljs-attribute">HG00673</span>#<span class="hljs-number">2</span>#JAHBBY010000018.<span class="hljs-number">1</span>:<span class="hljs-number">0</span>-<span class="hljs-number">2900000</span><br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-3-1-3-分歧度估计"><a href="#0-4-3-1-3-分歧度估计" class="headerlink" title="0.4.3.1.3 分歧度估计"></a>0.4.3.1.3 分歧度估计</h5><p>由于这个数据量很小，就省去了计算分歧度这一步。</p><h5 id="0-4-3-1-4-构建泛基因组"><a href="#0-4-3-1-4-构建泛基因组" class="headerlink" title="0.4.3.1.4 构建泛基因组"></a>0.4.3.1.4 构建泛基因组</h5><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">pggb -<span class="hljs-selector-tag">i</span> HPRCy1<span class="hljs-selector-class">.MHC</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.gz</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">95</span> -n <span class="hljs-number">90</span> -t <span class="hljs-number">16</span> -G <span class="hljs-number">13117</span>,<span class="hljs-number">13219</span> -o HPRCy1<span class="hljs-selector-class">.MHC</span><span class="hljs-selector-class">.s10k</span><span class="hljs-selector-class">.p95</span>.output<br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-3-1-5-graph统计"><a href="#0-4-3-1-5-graph统计" class="headerlink" title="0.4.3.1.5 graph统计"></a>0.4.3.1.5 graph统计</h5><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">odgi stats -<span class="hljs-selector-tag">i</span> HPRCy1<span class="hljs-selector-class">.MHC</span><span class="hljs-selector-class">.s10k</span><span class="hljs-selector-class">.p95</span>.output<span class="hljs-comment">/*.final.gfa -t 16 -S</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#length     nodes   edges   paths</span><br><span class="hljs-attribute">5315371</span>     <span class="hljs-number">309186</span>  <span class="hljs-number">429323</span>  <span class="hljs-number">126</span><br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-3-1-6-使用vg鉴定突变"><a href="#0-4-3-1-6-使用vg鉴定突变" class="headerlink" title="0.4.3.1.6 使用vg鉴定突变"></a>0.4.3.1.6 使用vg鉴定突变</h5><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vg</span> deconstruct -P chm13 -H '?' -e -a -t <span class="hljs-number">48</span> HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.<span class="hljs-number">39</span>ffa23.e34d4cd.be6be64.smooth.final.gfa | \<br>    <span class="hljs-attribute">bgzip</span> -c -@ <span class="hljs-number">16</span> &gt; HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.<span class="hljs-number">39</span>ffa23.e34d4cd.be6be64.smooth.final.chm13.vcf.gz<br></code></pre></td></tr></tbody></table></figure><p>-H参数设置为’?’是为了path的名称，提取每个contigs的变异情况。</p><p>下一步是过滤变异并重新排列参考/突变的alleles：</p><figure class="highlight tap"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tap">vcfbub -l<span class="hljs-number"> 0 </span>-a<span class="hljs-number"> 100000 </span>--input HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.39ffa23.e34d4cd.be6be64.smooth.final.chm13.vcf.gz | \<br>    vcfwave -I<span class="hljs-number"> 1000 </span>-t<span class="hljs-number"> 48 </span>| bgzip -@<span class="hljs-number"> 16 </span>\<br>    &gt; HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.39ffa23.e34d4cd.be6be64.smooth.final.chm13.vcfbub.a100k.wave.vcf.gz<br></code></pre></td></tr></tbody></table></figure><p>从PGGB的VCF文件提取SNP：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">REF=chm13<span class="hljs-comment">#chr6:28380000-33300000.fa</span><br>NAMEREF=chm13<br><br><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CONTIG; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$CONTIG</span><br><br>    bash vcf_preprocess.sh \<br>        HPRCy1.MHC.s10k.p95.output/*.vcfbub.a100k.wave.vcf.gz \<br>        <span class="hljs-variable">$CONTIG</span> \<br>        1 \<br>        <span class="hljs-variable">$REF</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-3-1-7-使用nucmer鉴定突变"><a href="#0-4-3-1-7-使用nucmer鉴定突变" class="headerlink" title="0.4.3.1.7 使用nucmer鉴定突变"></a>0.4.3.1.7 使用nucmer鉴定突变</h5><p>首先准备序列：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">samtools faidx HPRCy1<span class="hljs-selector-class">.MHC</span><span class="hljs-selector-class">.fa</span><span class="hljs-selector-class">.gz</span> chm13<span class="hljs-selector-id">#chr6</span>:<span class="hljs-number">28380000</span>-<span class="hljs-number">33300000</span> &gt; chm13<span class="hljs-selector-id">#chr6</span>:<span class="hljs-number">28380000</span>-<span class="hljs-number">33300000</span>.fa<br></code></pre></td></tr></tbody></table></figure><p>然后将序列必读到参考基因组：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">REF=chm13<span class="hljs-comment">#chr6:28380000-33300000.fa</span><br>NAMEREF=chm13<br><br><span class="hljs-built_in">mkdir</span> -p nucmer/<br><br><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CONTIG; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$CONTIG</span><br><br>    PREFIX=nucmer/<span class="hljs-variable">${CONTIG}</span>_vs_<span class="hljs-variable">${NAMEREF}</span><br>    samtools faidx HPRCy1.MHC.fa.gz <span class="hljs-variable">$CONTIG</span> &gt; <span class="hljs-variable">$CONTIG</span>.fa<br><br>    nucmer <span class="hljs-variable">$REF</span> <span class="hljs-variable">$CONTIG</span>.fa --prefix <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span><br><br>    show-snps -THC <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span>.delta &gt; <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span>.var.txt<br><br>    <span class="hljs-built_in">rm</span> <span class="hljs-variable">$CONTIG</span>.fa<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>再将nucmer的结果转换为vcf格式：</p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">REF</span>=chm13#chr6:28380000-33300000.fa<br><span class="hljs-attribute">NAMEREF</span>=chm13<br><br><span class="hljs-attribute">NUCMER_VERSION</span>=<span class="hljs-string">"4.0.0beta2"</span><br>cut -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> read CONTIG; <span class="hljs-keyword">do</span><br>    echo <span class="hljs-variable">$CONTIG</span><br><br>    <span class="hljs-attribute">PREFIX</span>=nucmer/${CONTIG}_vs_<span class="hljs-variable">${NAMEREF}</span><br>    Rscript nucmer2vcf.R <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span>.var.txt <span class="hljs-variable">$CONTIG</span> <span class="hljs-variable">$REF</span> <span class="hljs-variable">$NUCMER_VERSION</span> <span class="hljs-variable">$PREFIX</span>.vcf<br>    bgzip -@ 16 <span class="hljs-variable">$PREFIX</span>.vcf<br>    tabix <span class="hljs-variable">$PREFIX</span>.vcf.gz<br>done<br></code></pre></td></tr></tbody></table></figure><h5 id="0-4-3-1-8-变异评估"><a href="#0-4-3-1-8-变异评估" class="headerlink" title="0.4.3.1.8 变异评估"></a>0.4.3.1.8 变异评估</h5><p>将参考序列转换为SDF格式：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">rtg</span> format -o chm13#chr6:<span class="hljs-number">28380000</span>-<span class="hljs-number">33300000</span>.sdf chm13#chr6:<span class="hljs-number">28380000</span>-<span class="hljs-number">33300000</span>.fa<br></code></pre></td></tr></tbody></table></figure><p>然后比较PGGB和nucmer两个方法鉴定到的SNP：</p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">REFSDF</span>=chm13#chr6:28380000-33300000.sdf<br><span class="hljs-attribute">NAMEREF</span>=chm13<br><br>cut -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> read CONTIG; <span class="hljs-keyword">do</span><br>    echo <span class="hljs-variable">$CONTIG</span><br><br>    <span class="hljs-attribute">PREFIX</span>=nucmer/${CONTIG}_vs_<span class="hljs-variable">${NAMEREF}</span><br><br>    <span class="hljs-attribute">PATH_PGGB_VCF</span>=HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.*.smooth.final.chm13.vcfbub.a100k.wave.${CONTIG}.max1.vcf.gz<br><br>    # Merge regions closer than 1000 bps <span class="hljs-keyword">to</span> define the callable regions where <span class="hljs-keyword">to</span> evaluate the variants<br>    <span class="hljs-attribute">dist</span>=1000<br><br>    rtg vcfeval \<br>        -t <span class="hljs-variable">$REFSDF</span> \<br>        -b <span class="hljs-variable">$PREFIX</span>.vcf.gz \<br>        -c <span class="hljs-variable">$PATH_PGGB_VCF</span> \<br>        -T 16 \<br>        -e &lt;(bedtools intersect -a &lt;(bedtools merge -d <span class="hljs-variable">$dist</span> -i <span class="hljs-variable">$PREFIX</span>.vcf.gz ) -b &lt;(bedtools merge -d <span class="hljs-variable">$dist</span> -i <span class="hljs-variable">$PATH_PGGB_VCF</span>)) \<br>        -o vcfeval/<span class="hljs-variable">${CONTIG}</span><br>done<br></code></pre></td></tr></tbody></table></figure><p>获取统计结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> vcfeval<br>(<span class="hljs-built_in">echo</span> contig precision recall f1.score; grep None */*txt | sed <span class="hljs-string">'s,/summary.txt:,,'</span> | <span class="hljs-built_in">tr</span> -s <span class="hljs-string">' '</span> | <span class="hljs-built_in">cut</span> -f 1,7,8,9 -d <span class="hljs-string">' '</span> ) | <span class="hljs-built_in">tr</span> <span class="hljs-string">' '</span> <span class="hljs-string">'\t'</span> &gt; statistics.tsv<br></code></pre></td></tr></tbody></table></figure><p>最后使用R语言绘图：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">require</span><span class="hljs-params">(ggplot2)</span></span><br><span class="hljs-function"><span class="hljs-title">require</span><span class="hljs-params">(tidyr)</span></span><br><br>stat_df &lt;- read<span class="hljs-selector-class">.table</span>(<span class="hljs-string">'statistics.tsv'</span>, sep = <span class="hljs-string">'\t'</span>, <span class="hljs-selector-tag">header</span> = T, comment<span class="hljs-selector-class">.char</span> = <span class="hljs-string">'?'</span>)<br><br>stat_df &lt;- <span class="hljs-built_in">pivot_longer</span>(stat_df,precision:f1<span class="hljs-selector-class">.score</span>,<span class="hljs-string">"Metric"</span>)<br><br><span class="hljs-function"><span class="hljs-title">ggplot</span><span class="hljs-params">(stat_df,aes(x=contig,y=value,fill=contig)</span></span>)+<br>  <span class="hljs-built_in">geom_bar</span>(stat=<span class="hljs-string">"identity"</span>) +<br>  <span class="hljs-built_in">facet_wrap</span>(~Metric, ncol = <span class="hljs-number">1</span>)+<br>  <span class="hljs-built_in">theme_bw</span>() +<br>  <span class="hljs-built_in">theme</span>(<br>    axis<span class="hljs-selector-class">.ticks</span><span class="hljs-selector-class">.x</span> = <span class="hljs-built_in">element_blank</span>(),<br>    axis<span class="hljs-selector-class">.text</span><span class="hljs-selector-class">.x</span> = <span class="hljs-built_in">element_blank</span>()<br>  ) +<br>  <span class="hljs-built_in">theme</span>(<span class="hljs-selector-tag">legend</span>.<span class="hljs-attribute">position</span>=<span class="hljs-string">"none"</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740455099422-dbee3174-7ce3-40ca-8ef6-860daeb0a184.png" alt=""></p><h2 id="0-5-重要的参数"><a href="#0-5-重要的参数" class="headerlink" title="0.5 重要的参数"></a>0.5 重要的参数</h2><h3 id="0-5-1-Mapping"><a href="#0-5-1-Mapping" class="headerlink" title="0.5.1 Mapping"></a>0.5.1 Mapping</h3><p>在pggb中，对泛基因组graph结构影响最大的是mapping iedntity参数-p和片段长度-s. 这两个参数传给wfmash后对泛基因组的基础结构的影响非常大。</p><p>当泛基因组比较小，或者是重复序列比较少时，-s这个参数可以设置小一些。更大的-s参数能够保证尽可能多的保留输入序列中的共线性区域，通常需要大于转座子和其他常见的重复的长度。在wfmash中默认只保留至少mapping了5次的segment，可以使用参数-l, —block-length BLOCK进行调整。</p><p>-p默认的参数是95，-s默认的参数是10000. 但是还是要根据实际情况来调调整这两个参数。如果是分歧度很高的样品群，那么就需要把-p和-s调整到不同的水平。增加这两个参数的话，会增加初始比对的时的严格程度；降低这两个参数呢会使得比对时的敏感性更高。</p><p>还有一个参数是-n，表示的是单倍型的数量，这个在执行PanSN-spec流程的时候会自动计算。</p><h3 id="0-5-2-分歧度估计"><a href="#0-5-2-分歧度估计" class="headerlink" title="0.5.2 分歧度估计"></a>0.5.2 分歧度估计</h3><p>使用mash dist或者是mash triangle来计算序列之间的分歧度，通过输出的结果调整-p参数，通常是100-100*最大的分歧度数值。</p><h3 id="0-5-3-Target-number-of-alignment"><a href="#0-5-3-Target-number-of-alignment" class="headerlink" title="0.5.3 Target number of alignment"></a>0.5.3 Target number of alignment</h3><p>pggb构建的泛基因组由每个基因组每个片段的mapping数决定，对应的参数是-c. 理想情况是设置为1，也就是每条序列都两两比较。但是，如果泛基因组中有拷贝数变异，那么-c这个参数就应该设置得更大一些。一个原则是：比对的次数与N*N成正比，而且有些多重mapping可能是冗余的。如果没有特殊的考虑，直接设置为1即可。</p><h3 id="0-5-4-match-filter设置"><a href="#0-5-4-match-filter设置" class="headerlink" title="0.5.4 match filter设置"></a>0.5.4 match filter设置</h3><p>当我们从输入的比对结果中把很短的match过滤掉时，得到的graph结合seqwish会有更好的表现结果。wfmash比对结果中的这些区域通常是具有较低比对质量的区域，通常是大片段的indels和结构变异。最后的smoothxg step这一步中会得到解决。这个过滤的方法对应的参数是-k. 默认的值是23，这时候的偏差可以达到5%左右。当序列分歧度较大时，增大-k的值；当序列的分歧度较小时，降低-k的值。人类的单倍型基因组可以把-k设置为79. 那么这个参数是什么意思呢？-k设置为N就表示可以容忍不超过1/N的局部差异比例。可以使用minimap2等方法来减少这个步骤的影响，这种方法是通过更好地展示输入的比对文件中的大片段indels实现的。</p><h3 id="0-5-5-Homogenizing-and-ordering-the-graph"><a href="#0-5-5-Homogenizing-and-ordering-the-graph" class="headerlink" title="0.5.5 Homogenizing and ordering the graph"></a>0.5.5 Homogenizing and ordering the graph</h3><p>pggb的最后一步是细化graph，这种细化是通过POA来实现的。这个步骤会涉及到3个参数：-G、-P和-O. -G参数在理想情况下可以设置为泛基因组中转座子重复序列的长度，可以大于这个值，这个值设置得越高，得到的泛基因组的质量就会更好一些；更高的-G参数会得到多样性更低的泛基因组。minimap2对-P这个参数给出了一些建议：</p><div class="table-container"><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>asm mode</strong></td><td><code>**--poa-params**</code></td><td><strong>divergence in %</strong></td></tr><tr><td>asm5</td><td>1,19,39,3,81,1</td><td>~0.1</td></tr><tr><td>asm10</td><td>1,9,16,2,41,1</td><td>~1</td></tr><tr><td>asm20</td><td>1,4,6,2,26,1</td><td>~5</td></tr></tbody></table></div><h2 id="0-6-Variant-Calling"><a href="#0-6-Variant-Calling" class="headerlink" title="0.6 Variant Calling"></a>0.6 Variant Calling</h2><p>-V参数指定Reference.</p><h3 id="0-6-1-Reporting"><a href="#0-6-1-Reporting" class="headerlink" title="0.6.1 Reporting"></a>0.6.1 Reporting</h3><p>-S生成graph统计，-m生成MultiQC报告，-v这个参数如果没有设置的话，会同时生成1D和2D的绘图结果。</p><h2 id="0-7-Parallelization"><a href="#0-7-Parallelization" class="headerlink" title="0.7 Parallelization"></a>0.7 Parallelization</h2><p>-t参数指定运行的线程数，通常是一半即可。smoothxg步骤中的POA可以设置对应的-T.</p><h2 id="0-8-更大的泛基因组"><a href="#0-8-更大的泛基因组" class="headerlink" title="0.8 更大的泛基因组"></a>0.8 更大的泛基因组</h2><p>还是关注-p和-s这两个参数。-s这个参数通常设置为5-20 kbp，-p设置为接近序列分歧度的那个值计算得到的值。如果想获得高质量的比对结果，就把-p设置大一些。增加-s和-p会减少运行的时间以及内存需求，但是会降低graph的压缩程度。</p><p>如果使用10-20个基因组，多样性在1-5%，那么这两个参数就可以设置为-s10000 -p 95；但是，如果想把其他物种的基因组也加进这个泛基因组（多样性20%），那么-p这个参数就应该设置为70.</p><p>使用SPOA或abPOA处理复杂的blocks时，需要大量的内存。可以设置-T参数来降低内存的消耗。</p><h2 id="0-9-示例文献"><a href="#0-9-示例文献" class="headerlink" title="0.9 示例文献"></a>0.9 示例文献</h2><h3 id="0-9-1-葡萄泛基因组"><a href="#0-9-1-葡萄泛基因组" class="headerlink" title="0.9.1 葡萄泛基因组"></a>0.9.1 葡萄泛基因组</h3><p><a href="https://www.nature.com/articles/s41588-024-01967-5">https://www.nature.com/articles/s41588-024-01967-5</a></p><p>To represent the genetic diversity of grapes, we constructed a graph pangenome that incorporated a total of 29 haplotype assemblies, including 18 newly sequenced haplotype assemblies from 9 phase-resolved accessions and 11 previously published assemblies based on continuous long read data (two phase-resolved and seven primary assemblies). Based on these genome assemblies, we used two tools to build graph pangenome, MC (v.2.6.11) and PGGB (v.0.5.4), respectively. We combined reads mapping and assembled alignments to validate the graph paths, edges and nodes in the grape pangenome. To address the issue of small fragments in assemblies, we implemented filtering steps to exclude minor, fragmented and diverse assemblies that could introduce the wrong structures.</p><h3 id="0-9-2-野生和驯化大麦"><a href="#0-9-2-野生和驯化大麦" class="headerlink" title="0.9.2 野生和驯化大麦"></a>0.9.2 野生和驯化大麦</h3><p><a href="https://www.nature.com/articles/s41586-024-08187-1">https://www.nature.com/articles/s41586-024-08187-1</a></p><p>The coordinates of amy1_1 copies in 76 genome assemblies were obtained by BLAST searches with the Morex allele of HORVU.MOREX.PROJ.6HG00545380. The genomic intervals surrounding amy1_1 from 10 kb upstream of the first copy to 10 kb downstream of the last copy were extracted from corresponding assemblies and used for further analyses. We applied PGGB (v.0.4.0, <a href="https://github.com/pangenome/pggb">https://github.com/pangenome/pggb</a>) for 76 amy1_1 sequences with parameters ‘-n 76 -t 20 -p 90 -s 1000 -N’. The graph was visualized using Bandage125 (v.0.8.1). ODGI (v.0.7.3, command ‘paths’)110 was used to get a sparse distance matrix for paths with the parameter ‘-d’. The resultant distance matrix was plotted with the R package pheatmap (<a href="https://cran.r-project.org/web/packages/pheatmap/pheatmap.pdf">https://cran.r-project.org/web/packages/pheatmap/pheatmap.pdf</a>). Six representative sequences of amy1_1 were aligned against Morex by BLAST+ (v.2.13.0).</p><h3 id="0-9-3-马铃薯泛基因组"><a href="#0-9-3-马铃薯泛基因组" class="headerlink" title="0.9.3 马铃薯泛基因组"></a>0.9.3 马铃薯泛基因组</h3><p><a href="https://www.nature.com/articles/s41586-024-08476-9">https://www.nature.com/articles/s41586-024-08476-9</a></p><p>The Minigraph-Cactus pipeline27 and PGGB26 were used to construct a pseudo-phased pangenome with all 61 haplotypes based on the whole-genome alignment (including the DMv6.1 reference genome). For the PGGB, we estimated the divergence of each chromosome with mash distances and confirmed chromosome community with wfmash87 mapping. Then, we used “pggb -s 10000 -n 61 -p 90 -k 47 -P asm20 -O 0.001” to build each chromosome graph. We visualized the 1D layout of the graph and estimated presence and absence ratios to the DMv6.1 reference in 100-kb sliding windows using ODGI88. The small variants and SVs were detected by vg deconstruct from snarls, and we only kept top-level and &lt;1-Mb variants with vcfbub. For the Minigraph-Cactus pipeline, we assigned DMv6.1 as the guide for the paths, and progressively aligned the 60 haplotypes to it. We used the cactus-pangenome script with parameters “—gfa full —gbz full —vcfReference DMv6.1” to generate complete workflows and execute commands. The generated graph fragment assembly (GFA) format graph was used for edge, node and coverage statistics and subgraph generation from a BED input. The VCF output file comprises all graph variations based on the DMv6.1 reference, enabling the calculation of polymorphisms.</p><h3 id="0-9-4-结构变异挖掘综述"><a href="#0-9-4-结构变异挖掘综述" class="headerlink" title="0.9.4 结构变异挖掘综述"></a>0.9.4 结构变异挖掘综述</h3><p><a href="https://www.cell.com/cell/abstract/S0092-8674\(24\">https://www.cell.com/cell/abstract/S0092-8674(24)00004-7?rss=yes</a>00004-7?rss=yes)</p><h3 id="0-9-5-人类泛基因组"><a href="#0-9-5-人类泛基因组" class="headerlink" title="0.9.5 人类泛基因组"></a>0.9.5 人类泛基因组</h3><p><a href="https://www.nature.com/articles/s41586-023-05896-x">https://www.nature.com/articles/s41586-023-05896-x</a></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BRAKER学习笔记</title>
      <link href="/article/braker3/"/>
      <url>/article/braker3/</url>
      
        <content type="html"><![CDATA[<h1 id="1-BRAKER3的优势"><a href="#1-BRAKER3的优势" class="headerlink" title="1 BRAKER3的优势"></a>1 BRAKER3的优势</h1><ul><li>可以使用转录组和蛋白数据<h1 id="2-基因预测成功的关键"><a href="#2-基因预测成功的关键" class="headerlink" title="2 基因预测成功的关键"></a>2 基因预测成功的关键</h1></li><li>高质量的基因组：<code>short scaffolds</code>太多的话不会得到很准确的结果。</li><li>简单的序列名称：如<code>Chr1</code>这种是最好的。</li><li>要标记重复序列：<code>the genome should be masked for repeats</code>，避免对重复序列和低复杂度区域预测到基因结构；转录组数据比对是重复序列也会影响；在<code>GeneMark-ES/ET/EP/ETP</code>和<code>AUGUSTUS</code>流程中，<code>softmasking</code>比<code>hardmasking</code>表现更好。<ul><li><code>softmasking</code>：重复区域的核苷酸用小写字母，其他区域的用大写字母。</li><li><code>hardmasking</code>：重复区域的核苷酸序列用<code>N</code>表示。</li></ul></li><li>注意分支特异性：例如部分真菌会有特殊的分支点等，需要根据物种信息选择合适的参数。</li><li>进一步使用预测结果之前需要确定预测的准确性。<h1 id="3-BRAKER运行模式"><a href="#3-BRAKER运行模式" class="headerlink" title="3 BRAKER运行模式"></a>3 BRAKER运行模式</h1><h2 id="3-1-只有基因组"><a href="#3-1-只有基因组" class="headerlink" title="3.1 只有基因组"></a>3.1 只有基因组</h2>在这种模式下，<code>GeneMark-ES</code>使用基因组进行训练，<code>GeneMark-ES</code>预测的长基因用于训练后续的<code>AUGUSTUS</code>；最终使用<code>AUGUSTUS</code>进行预测。这种模式得到的结果的准确性是最低的。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250940197.png" alt="Pasted image 20250424204809"></p><h2 id="3-2-基因组-转录组"><a href="#3-2-基因组-转录组" class="headerlink" title="3.2 基因组+转录组"></a>3.2 基因组+转录组</h2><p>短读长的RNA-seq数据适合这种预测方法。这种方法要求每个<code>intro</code>被很多的<code>alignments</code>覆盖，<strong>但是组装过的转录组比对不适用于这种方法</strong>。长读长的RNA-seq数据也是可以的，但是需要注意的是每个进行训练的转录本都需要多次测序并与基因组进行比对。<strong>现在BRAKER还不支持短读长和长读长的RNA-seq数据的混合使用</strong>。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250940198.png" alt="Pasted image 20250424205041"></p><h2 id="3-3-基因组-蛋白序列"><a href="#3-3-基因组-蛋白序列" class="headerlink" title="3.3 基因组+蛋白序列"></a>3.3 基因组+蛋白序列</h2><p>这种方法尤其适用于没有RNA-seq数据的情况，而且使用的蛋白序列可以是来自和目标物种遗传距离未知的物种，当然，使用近缘物种肯定预测得更准确些。<strong>这个方法需要蛋白家族，也就是每个蛋白家族具有代表性的序列应该在数据库中</strong>。<code>OrthoDB</code>这个数据库是测试过的。官方提供了<a href="https://bioinf.uni-greifswald.de/bioinf/partitioned_odb11/">OrthoDB v.11</a>和<a href="https://bioinf.uni-greifswald.de/bioinf/partitioned_odb12/">OrthoDB v.12</a>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250940199.png" alt="Pasted image 20250424205550"></p><h2 id="3-4-基因组-转录组-蛋白序列"><a href="#3-4-基因组-转录组-蛋白序列" class="headerlink" title="3.4 基因组+转录组+蛋白序列"></a>3.4 基因组+转录组+蛋白序列</h2><p>从头预测+转录本+同源蛋白预测。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504250939135.png" alt="image.png"></p><h1 id="4-软件安装"><a href="#4-软件安装" class="headerlink" title="4 软件安装"></a>4 软件安装</h1><h2 id="4-1-Docker安装"><a href="#4-1-Docker安装" class="headerlink" title="4.1 Docker安装"></a>4.1 Docker安装</h2><p>推荐使用docekr进行安装：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull teambraker/braker3<br></code></pre></td></tr></tbody></table></figure><br>进入容器：<br><figure class="highlight dockerfile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="language-bash"> --<span class="hljs-built_in">rm</span> -it -v $(<span class="hljs-built_in">pwd</span>):/work teambraker/braker3:latest /bin/bash</span><br></code></pre></td></tr></tbody></table></figure><p></p><h2 id="4-2-Conda安装"><a href="#4-2-Conda安装" class="headerlink" title="4.2 Conda安装"></a>4.2 Conda安装</h2><p>如果没有docker权限，可以尝试使用conda进行安装：<br></p><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cmake">wget https://repo.anaconda.com/archive/Anaconda3-<span class="hljs-number">2018.12</span>-Linux-x86_64.sh<br>bash bin/Anaconda3-<span class="hljs-number">2018.12</span>-Linux-x86_64.sh <span class="hljs-comment"># do not install VS (needs root privileges)</span><br>conda <span class="hljs-keyword">install</span> -c anaconda perl<br>conda <span class="hljs-keyword">install</span> -c anaconda biopython<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-app-cpanminus<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">file</span>-spec<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-hash-merge<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">list</span>-util<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-module-load-conditional<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-posix<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">file</span>-homedir<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-parallel-forkmanager<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-scalar-util-numeric<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-yaml<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-class-data-inheritable<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-exception-class<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">test</span>-pod<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">file</span>-which <span class="hljs-comment"># skip if you are not comparing to reference annotation</span><br>conda <span class="hljs-keyword">install</span> -c bioconda perl-mce<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-threaded<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">list</span>-util<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-<span class="hljs-keyword">math</span>-utils<br>conda <span class="hljs-keyword">install</span> -c bioconda cdbtools<br>conda <span class="hljs-keyword">install</span> -c eumetsat perl-yaml-xs<br>conda <span class="hljs-keyword">install</span> -c bioconda perl-data-dumper<br></code></pre></td></tr></tbody></table></figure><br><code>BRAKER</code>和<code>AUGUSTUS</code>在conda上也是有的。<br><strong>个人推荐速度更快的Miniforge替代原生conda</strong>。<p></p><h2 id="4-3-软件依赖"><a href="#4-3-软件依赖" class="headerlink" title="4.3 软件依赖"></a>4.3 软件依赖</h2><ul><li>AUGUSTUS 3.5.0 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#g2">F2</a></li><li>GeneMark-ETP (source see Dockerfile)</li><li>BAMTOOLS 2.5.1<a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f5">R5</a></li><li>SAMTOOLS 1.7-4-g93586ed<a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f6">R6</a></li><li>Spaln 2.3.3d <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f8">R8,</a> <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f9">R9,</a> <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f10">R10</a></li><li>NCBI BLAST+ 2.2.31+ <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f12">R12,</a> <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f13">R13</a></li><li>DIAMOND 0.9.24</li><li>cdbfasta 0.99</li><li>cdbyank 0.981</li><li>GUSHR 1.0.0</li><li>SRA Toolkit 3.00 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f14">R14</a></li><li>HISAT2 2.2.1 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f15">R15</a></li><li>BEDTOOLS 2.30 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f16">R16</a></li><li>StringTie2 2.2.1 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f17">R17</a></li><li>GFFRead 0.12.7 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f18">R18</a></li><li>compleasm 0.2.5 <a href="https://github.com/Gaius-Augustus/BRAKER/blob/master/README.md#f27">R27</a><h2 id="4-4-脚本依赖"><a href="#4-4-脚本依赖" class="headerlink" title="4.4 脚本依赖"></a>4.4 脚本依赖</h2>主要的脚本是<code>braker.pl</code>，在运行<code>braker.pl</code>时会调用以下这些脚本：</li><li>`filterGenemark.pl    </li><li><code>filterIntronsFindStrand.pl</code></li><li><code>helpMod_braker.pm</code></li><li><code>findGenesInIntrons.pl</code></li><li><code>downsample_traingenes.pl</code></li><li><code>ensure_n_training_genes.py</code></li><li><code>get_gc_content.py</code></li><li><code>get_etp_hints.py</code><br><strong>需要确保这些脚本都是可执行状态，也就是有<code>x</code>这个属性；如果不是可执行状态，需要使用<code>chmod a+x *.pl *.py</code>添加可执行属性</strong>。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251014959.png" alt="image.png"><h1 id="5-运行BRAKER"><a href="#5-运行BRAKER" class="headerlink" title="5 运行BRAKER"></a>5 运行BRAKER</h1>建议使用<code>softmasked Repeats</code>后的基因组。<h2 id="5-1-模式选择"><a href="#5-1-模式选择" class="headerlink" title="5.1 模式选择"></a>5.1 模式选择</h2><h3 id="5-1-1-转录组"><a href="#5-1-1-转录组" class="headerlink" title="5.1.1 转录组"></a>5.1.1 转录组</h3>这个流程适用于有转录组但是没有蛋白质数据的情况。<code>BRAKER</code>有多种方式接收传入的转录组数据：</li><li>使用<code>SRA</code>数据：有多个<code>SRA</code>数据时使用<code>,</code>进行分隔，<code>BRAKER</code>会自动下载对应的SRA数据：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2<br></code></pre></td></tr></tbody></table></figure></li><li>使用本地的<code>FASTQ</code>文件：可以是为<code>mapping</code>过的原始数据，同样需要提供<code>FASTQ</code>文件的文件名称和对应的文件的路径，会根据文件的ID自动识别文件，如果是双末端的会识别为<code>SRA_ID1_1.fastq</code>和<code>SRA_ID1_2.fastq</code>这样，如果是单末端的会识别为<code>ID.fastq</code>. <figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>   <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2 \<br>   <span class="hljs-attribute">--rnaseq_sets_dirs</span>=/path/to/local/fastq/files/<br></code></pre></td></tr></tbody></table></figure></li><li>使用比对后的<code>bam</code>文件<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 类似FASTQ输入方式</span><br>braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>   <span class="hljs-attribute">--rnaseq_sets_ids</span>=BAM_ID1,BAM_ID2 \<br>   <span class="hljs-attribute">--rnaseq_sets_dirs</span>=/path/to/local/bam/files/<br></code></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 直接指定bam文件</span><br>braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--bam</span>=file1.bam,file2.bam<br></code></pre></td></tr></tbody></table></figure><p>使用<code>bam</code>文件时，<code>BRAKER</code>默认<code>bam</code>文件是<code>HISAT2</code>比对得到的结果；如果想使用<code>SATR</code>的话，需要加上参数<code>--outSAMstrandField intronMotif</code>. </p><ul><li>从比对信息中提取的<code>gff</code>格式信息：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--hints</span>=hints1.gff,hints2.gff<br></code></pre></td></tr></tbody></table></figure>格式类似于这样：<figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">chrName</span> b2h intron  <span class="hljs-number">6591</span>    <span class="hljs-number">8003</span>    <span class="hljs-number">1</span>   +   .   pri=<span class="hljs-number">4</span>;src=E<br><span class="hljs-attribute">chrName</span> b2h intron  <span class="hljs-number">6136</span>    <span class="hljs-number">9084</span>    <span class="hljs-number">11</span>  +   .   mult=<span class="hljs-number">11</span>;pri=<span class="hljs-number">4</span>;src=E<br></code></pre></td></tr></tbody></table></figure><strong>第二列的<code>b2h</code>和最后一列的<code>src=E</code>是必须要的</strong>。</li></ul><hr><p>可以将上面这些方法进行组合，但是需要注意的是，<strong>如果使用转录组+蛋白组这种方式的话，不建议使用<code>--hints</code>这种方法</strong>。</p><h3 id="5-1-2-蛋白组"><a href="#5-1-2-蛋白组" class="headerlink" title="5.1.2 蛋白组"></a>5.1.2 蛋白组</h3><p>这种方法尤其适用于没有转录组的情况。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251039400.png" alt="image.png"><br>执行下面的代码即可运行：<br></p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--prot_seq</span>=proteins.fa<br></code></pre></td></tr></tbody></table></figure><br>推荐使用<code>OrthoDB</code>作为<code>proteins.fa</code>的基础。<br>也可以使用<code>ProtHint</code>的数据：<br><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--hints</span>=prothint_augustus.gff<br></code></pre></td></tr></tbody></table></figure><br>对应的文件是这样的：<br><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">11506230</span> <span class="hljs-number">11506648</span> <span class="hljs-number">4</span> + . src=M;mult=<span class="hljs-number">4</span>;pri=<span class="hljs-number">4</span><br><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">9563406</span>  <span class="hljs-number">9563473</span>  <span class="hljs-number">1</span> + . grp=<span class="hljs-number">69004</span>_0:<span class="hljs-number">001</span>de1_702_g;src=C;pri=<span class="hljs-number">4</span>;<br><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">8446312</span>  <span class="hljs-number">8446371</span>  <span class="hljs-number">1</span> + . grp=<span class="hljs-number">43151</span>_0:<span class="hljs-number">001</span>cae_473_g;src=C;pri=<span class="hljs-number">4</span>;<br><span class="hljs-attribute">2R</span> ProtHint intron <span class="hljs-number">8011796</span>  <span class="hljs-number">8011865</span>  <span class="hljs-number">2</span> - . src=P;mult=<span class="hljs-number">1</span>;pri=<span class="hljs-number">4</span>;al_score=<span class="hljs-number">0</span>.<span class="hljs-number">12</span>;<br><span class="hljs-attribute">2R</span> ProtHint start  <span class="hljs-number">234524</span>   <span class="hljs-number">234526</span>   <span class="hljs-number">1</span> + . src=P;mult=<span class="hljs-number">1</span>;pri=<span class="hljs-number">4</span>;al_score=<span class="hljs-number">0</span>.<span class="hljs-number">08</span>;<br></code></pre></td></tr></tbody></table></figure><p></p><h4 id="5-1-2-1-训练和预测UTRs"><a href="#5-1-2-1-训练和预测UTRs" class="headerlink" title="5.1.2.1 训练和预测UTRs"></a>5.1.2.1 训练和预测UTRs</h4><p>如果转录组只有<code>bam</code>格式文件，而且基因组是<code>softmasked</code>格式的，那么<code>BRAKER</code>就可以自动训练<code>UTR</code>的参数用于<code>AUGUSTUS</code>预测；预测完成之后就会使用覆盖度等信息进行基因预测，对应的命令是这样的：<br></p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta <span class="hljs-attribute">--bam</span>=file.bam <span class="hljs-attribute">--UTR</span>=on<br></code></pre></td></tr></tbody></table></figure><br><strong>Warnings：</strong><p></p><ul><li>这个流程属于测试性的；</li><li><code>--UTR=on</code>不兼容<code>bamToWig.py</code>这个脚本；</li><li><code>--UTR=on</code>会增加内存需求；</li><li>UTR预测有时能优化编码序列的预测准确度，但不是总是能够优化。<h4 id="5-1-2-2-链特异性的转录组比对结果"><a href="#5-1-2-2-链特异性的转录组比对结果" class="headerlink" title="5.1.2.2 链特异性的转录组比对结果"></a>5.1.2.2 链特异性的转录组比对结果</h4>对于UTR的训练和预测，链特异性的转录组数据能够提供更多的信息，将<code>bam</code>文件分割成<code>+</code>和<code>-</code>的两个文件，然后运行<code>BRAKER</code>：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>    <span class="hljs-attribute">--bam</span>=plus.bam,minus.bam <span class="hljs-attribute">--stranded</span>=+,- \<br>    <span class="hljs-attribute">--UTR</span>=on<br></code></pre></td></tr></tbody></table></figure>非链特异性的<code>bam</code>文件也可以用，不用于UTR预测，用于基因预测：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--species</span>=yourSpecies <span class="hljs-attribute">--genome</span>=genome.fasta \<br>   <span class="hljs-attribute">--bam</span>=plus.bam,minus.bam,unstranded.bam \<br>   <span class="hljs-attribute">--stranded</span>=+,-,. <span class="hljs-attribute">--UTR</span>=on<br></code></pre></td></tr></tbody></table></figure><h3 id="5-1-3-转录组-蛋白组"><a href="#5-1-3-转录组-蛋白组" class="headerlink" title="5.1.3 转录组+蛋白组"></a>5.1.3 转录组+蛋白组</h3>首先使用转录组和蛋白组数据训练<code>GeneMark-ETP</code>，输出结果中属于<code>high-confindent</code>的基因用于训练<code>AUGUSTUS</code>，随后使用<code>TSEBRA</code>将这两个软件的结果进行整合。<h4 id="5-1-3-1-转录组比对"><a href="#5-1-3-1-转录组比对" class="headerlink" title="5.1.3.1 转录组比对"></a>5.1.3.1 转录组比对</h4><code>GeneMark-ETP</code>使用<code>Stringtie2</code>对转录本进行组装，也就需要<code>bam</code>文件有<code>XS</code>tag，如果比对的时候用的软件是<code>HISAT2</code>，那么就需要加上<code>-dta</code>这个参数；使用<code>STAR</code>的话就要加上<code>--outSAMstrandField intronMotif</code>这个参数选项。有几种代码运行方式：<figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--prot_seq</span>=orthodb.fa \<br>    <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2 \<br>    <span class="hljs-attribute">--rnaseq_sets_dirs</span>=/path/to/local/RNA-Seq/files/<br></code></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">braker.pl <span class="hljs-attribute">--genome</span>=genome.fa <span class="hljs-attribute">--prot_seq</span>=orthodb.fa \<br>    <span class="hljs-attribute">--rnaseq_sets_ids</span>=SRA_ID1,SRA_ID2,SRA_ID3<br></code></pre></td></tr></tbody></table></figure><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">braker<span class="hljs-selector-class">.pl</span> <span class="hljs-attr">--genome</span>=genome<span class="hljs-selector-class">.fa</span> <span class="hljs-attr">--prot_seq</span>=orthodb<span class="hljs-selector-class">.fa</span> \<br>    <span class="hljs-attr">--bam</span>=/path/to/SRA_ID1<span class="hljs-selector-class">.bam</span>,/path/to/SRA_ID2.bam<br></code></pre></td></tr></tbody></table></figure><h2 id="5-2-长-短读长转录组"><a href="#5-2-长-短读长转录组" class="headerlink" title="5.2 长/短读长转录组"></a>5.2 长/短读长转录组</h2><h2 id="5-3-长读长转录组-蛋白组"><a href="#5-3-长读长转录组-蛋白组" class="headerlink" title="5.3 长读长转录组+蛋白组"></a>5.3 长读长转录组+蛋白组</h2><p>如果使用<code>BRAKER</code>的<code>fast-hack</code>模式，那么就需要使用长读长的转录组构造<code>bam</code>文件：<br></p><figure class="highlight roboconf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs roboconf">T=48 <span class="hljs-comment"># 线程数</span><br>minimap2 -t${<span class="hljs-attribute">T} -ax splice</span>:hq -uf genome<span class="hljs-variable">.fa</span> isoseq<span class="hljs-variable">.fa</span> &gt; isoseq<span class="hljs-variable">.sam</span>     <br>samtools view -bS --threads ${T} isoseq<span class="hljs-variable">.sam</span> -o isoseq<span class="hljs-variable">.bam</span><br></code></pre></td></tr></tbody></table></figure><br>然后拉取适合长读长转录组的<code>BRKAER</code>版本：<br><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">singularity build braker3_lr.sif docker:<span class="hljs-regexp">//</span>teambraker/braker3:isoseq<br></code></pre></td></tr></tbody></table></figure><br>运行：<br><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">singularity exec -B <span class="hljs-variable">${PWD}</span>:<span class="hljs-variable">${PWD}</span> braker3_lr.sif braker.pl \<br><span class="hljs-attribute">--genome</span>=genome.fa \<br><span class="hljs-attribute">--prot_seq</span>=protein_db.fa \<br>–<span class="hljs-attribute">-bam</span>=isoseq.bam <span class="hljs-attribute">--threads</span>=<span class="hljs-variable">${T}</span> <br></code></pre></td></tr></tbody></table></figure><p></p><p><strong>Warnings</strong>：</p><ul><li>不能混合使用短读长和长读长的转录组数据。</li><li><code>isoseq</code>数据的深度严重影响着基因预测的准确度。<h2 id="5-4-参数选择"><a href="#5-4-参数选择" class="headerlink" title="5.4 参数选择"></a>5.4 参数选择</h2><h3 id="5-4-1-—ab-initio"><a href="#5-4-1-—ab-initio" class="headerlink" title="5.4.1 —ab_initio"></a>5.4.1 —ab_initio</h3>Compute AUGUSTUS <em>ab initio</em> predictions in addition to AUGUSTUS predictions with hints (additional output files: <code>augustus.ab_initio.*</code>. This may be useful for estimating the quality of training gene parameters when inspecting predictions in a Browser.<h3 id="5-4-2-—augustus-args-”—some-arg-bla”"><a href="#5-4-2-—augustus-args-”—some-arg-bla”" class="headerlink" title="5.4.2 —augustus_args=”—some_arg=bla”"></a>5.4.2 —augustus_args=”—some_arg=bla”</h3>知道物种适用的<code>AUGUSTUS</code>的话可以把这些参数传入，使用空格进行分隔，如<code>--first_arg=sth --second_arg=sth</code>.<h3 id="5-4-3-—threads-INT"><a href="#5-4-3-—threads-INT" class="headerlink" title="5.4.3 —threads=INT"></a>5.4.3 —threads=INT</h3>指定线程数，某些步骤使用单线程，部分步骤使用多线程。设置超过8线程的话，对于多线程步骤会加速计算。<h3 id="5-4-4-—fungus"><a href="#5-4-4-—fungus" class="headerlink" title="5.4.4 —fungus"></a>5.4.4 —fungus</h3>是<code>GeneMark-ETP</code>的参数选项，如果是真菌的话使用这个参数，其他不用。<h3 id="5-4-5-—useexisting"><a href="#5-4-5-—useexisting" class="headerlink" title="5.4.5 —useexisting"></a>5.4.5 —useexisting</h3>是否使用现成的配置文件，如果使用的话就会覆盖掉软件默认的参数文件。<h3 id="5-4-6-—crf"><a href="#5-4-6-—crf" class="headerlink" title="5.4.6 —crf"></a>5.4.6 —crf</h3>是否为<code>AUGUSTUS</code>执行<code>CRF training</code>，生成的参数只是用于最后的预测，使用的话会增加运行时间。<h3 id="5-4-7-—lambda-int"><a href="#5-4-7-—lambda-int" class="headerlink" title="5.4.7 —lambda=int"></a>5.4.7 —lambda=int</h3>默认的是参数值是2，如果有大量单个外显子的基因的话，参数可以设置为0.<h3 id="5-4-8-—UTR-on"><a href="#5-4-8-—UTR-on" class="headerlink" title="5.4.8 —UTR=on"></a>5.4.8 —UTR=on</h3>见上述步骤。<h3 id="5-4-9-—addUTR-on"><a href="#5-4-9-—addUTR-on" class="headerlink" title="5.4.9 —addUTR=on"></a>5.4.9 —addUTR=on</h3>见上述步骤。<h3 id="5-4-10-—stranded-…"><a href="#5-4-10-—stranded-…" class="headerlink" title="5.4.10 —stranded=+,-,.,…"></a>5.4.10 —stranded=+,-,.,…</h3>见上述步骤。<h1 id="6-输出结果"><a href="#6-输出结果" class="headerlink" title="6 输出结果"></a>6 输出结果</h1></li><li><code>braker.gtf</code>：最终的基因集，不同的模式有不同的结果<ul><li><code>ETPmode</code>：<code>AUGUSTUS</code>和<code>GeneMark-ETP</code>的整合结果</li><li><code>otherwise</code>：官方不建议使用的模式和结果。</li></ul></li><li><code>braker.codingseq</code>：最终基因集的编码序列。</li><li><code>braker.aa</code>：最终基因集的蛋白序列。</li><li><code>braker.gff3</code>：最终基因集的注释文件，需要加上<code>--gff3</code>这个参数选项。</li><li><code>Augustus/*</code>：<code>Augustus</code>的输出结果。</li><li><code>GeneMark-E*/genemark.gtf</code>：<code>GeneMark-ES/ET/EP/EP+/ETP</code>的输出结果。</li><li><code>hintsfile.gff</code>：从转录组或者是蛋白质组中输出的结果。</li><li><code>braker_original/*</code>：<code>BRAKER</code>输出的结果，这个结果是运行<code>compleasm</code>之前的结果。</li><li><code>bbc/*</code>：<code>best_by_compleasm.py</code>的输出结果。</li></ul><p>如果设置<code>--skipGetAnnoFromFasta</code>参数的话不会生成编码序列和蛋白序列结果。</p><h1 id="7-测试练习"><a href="#7-测试练习" class="headerlink" title="7 测试练习"></a>7 测试练习</h1><h2 id="7-1-数据下载"><a href="#7-1-数据下载" class="headerlink" title="7.1 数据下载"></a>7.1 数据下载</h2><p>基因组数据来自文章<a href="https://www.nature.com/articles/s41586-025-08883-6">A pangenome reference of wild and cultivated rice</a>，选择的是品种是<code>GP119</code>，这个基因组是<code>soft masking</code>的，下载地址<a href="http://ricepandb.ncgr.ac.cn/download">RicePandb</a>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202504251341484.png" alt="image.png"><br>蛋白质组数据来自<a href="https://ricerc.sicau.edu.cn/RiceRC/download/downloadBefore">Rice Resource Center</a>的R498这个水稻品种。<br>转录组数据来自文章的提供的数据：</p><ul><li>使用<a href="https://github.com/lixiang117423/biohelpers_python">biohelpers</a>中的<code>get_fq_meta</code>下载测序数据的meta信息：<figure class="highlight gradle"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">get_fq_meta -id PRJEB73710 -o PRJEB73710.meta.txt<br><br><span class="hljs-keyword">grep</span> GP119 PRJEB73710.meta.txt | <span class="hljs-keyword">grep</span> TRANSCRIPTOMIC | awk <span class="hljs-string">'{print $1}'</span><br></code></pre></td></tr></tbody></table></figure>这四个文件是GP119的转录组数据：<figure class="highlight dns"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dns">ERR<span class="hljs-number">13336195</span>                                                                                        <br>ERR<span class="hljs-number">13336317</span>                                                                                        <br>ERR<span class="hljs-number">13336603</span>                                                                                        <br>ERR<span class="hljs-number">13336454</span><br></code></pre></td></tr></tbody></table></figure></li><li>使用<a href="https://github.com/lixiang117423/biohelpers_python">biohelpers</a>中的<code>get_fq_file</code>下载测序数据的meta信息（全部下载后再筛选）<figure class="highlight applescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">get_fq_file -<span class="hljs-built_in">id</span> PRJEB73710 -m save -t ftp -o ./<br></code></pre></td></tr></tbody></table></figure></li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">grep ERR13336195 download_PRJEB73710_fastq_by_wget<span class="hljs-selector-class">.sh</span> &gt;&gt; download<span class="hljs-selector-class">.final</span><span class="hljs-selector-class">.sh</span>                   <br>grep ERR13336317 download_PRJEB73710_fastq_by_wget<span class="hljs-selector-class">.sh</span> &gt;&gt; download<span class="hljs-selector-class">.final</span><span class="hljs-selector-class">.sh</span>                  <br>grep ERR13336603 download_PRJEB73710_fastq_by_wget<span class="hljs-selector-class">.sh</span> &gt;&gt; download<span class="hljs-selector-class">.final</span><span class="hljs-selector-class">.sh</span>                  <br>grep ERR13336454 download_PRJEB73710_fastq_by_wget<span class="hljs-selector-class">.sh</span> &gt;&gt; download<span class="hljs-selector-class">.final</span>.sh<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根际微生物调控水稻分蘖</title>
      <link href="/article/riceroot/"/>
      <url>/article/riceroot/</url>
      
        <content type="html"><![CDATA[<h1 id="1-材料方法"><a href="#1-材料方法" class="headerlink" title="1 材料方法"></a>1 材料方法</h1><ol><li>实验设计与样本采集</li></ol><ul><li><p>田间试验设计：使用182个基因组测序水稻品种（来自美国农业部水稻种质资源库的Mini-core集合），在两个田间（I和II）随机种植并重复。</p></li><li><p>微生物与表型数据收集：采集根际微生物样本（基于16S rRNA测序），统计分蘖数，每个品种3-6个生物学重复，共获得2,128个根样本和78,653,817条高质量测序序列。</p></li><li><p>数据分析：通过线性回归模型评估根际微生物组成、水稻基因型及其交互作用对分蘖变异的贡献（使用QIIME 2和R进行微生物多样性分析）。</p></li></ul><ol><li>微生物与分蘖关联分析</li></ol><ul><li><p>多样性指标：计算α多样性（Shannon指数）和β多样性（Bray-Curtis差异），结合主坐标分析（PCoA）评估微生物群落结构与分蘖数的相关性。</p></li><li><p>关键菌属鉴定：通过相关性分析（FDR校正p&lt;0.05）确定与分蘖正相关（如Roseateles）和负相关（如Exiguobacterium）的细菌属。</p></li></ul><ol><li>功能验证实验</li></ol><ul><li><p>细菌分离与接种：从根际分离培养5个与分蘖相关的菌属（Exiguobacterium、Burkholderia、Pleomorphomonas、Roseateles、Piscinibacter），在实验室（水培）和田间接种水稻，观察分蘖表型。</p></li><li><p>分子机制研究：</p></li><li><p>免疫印迹：检测SL信号通路关键蛋白OsD53的降解。</p></li><li><p>代谢组学：分析SLs（如4-deoxyorobanchol、orobanchol）含量变化。</p></li><li><p>化合物分离：通过生物活性导向分离法从Exiguobacterium R2567培养物中提取活性化合物cyclo(Leu-Pro)，并通过NMR和LC-MS鉴定其结构。</p></li></ul><ol><li>结构生物学与互作验证</li></ol><ul><li><p>结合亲和力检测：微量热泳动（MST）和生物层干涉（BLI）实验测定cyclo(Leu-Pro)与OsD14的结合常数（Kd≈2.5 μM）。</p></li><li><p>晶体结构解析：利用X射线晶体学（分辨率1.4 Å）解析cyclo(Leu-Pro)与OsD14的复合结构，揭示其通过氢键和疏水作用结合的分子机制。</p></li></ul><h1 id="2-结果"><a href="#2-结果" class="headerlink" title="2 结果"></a>2 结果</h1><ol><li>微生物对分蘖的调控作用</li></ol><ul><li><p>贡献度分析：根际微生物组成解释了28.2%的分蘖变异，与基因型贡献（26.9%）相当，交互作用占21.5%（图1B）。</p></li><li><p>多样性关联：分蘖数与微生物Shannon指数显著正相关（ρ=5.3×10⁻¹⁰），且与特定菌属丰度相关（如Exiguobacterium负相关，Roseateles正相关）（图1C-D）。</p></li></ul><ol><li>细菌对分蘖的因果调控</li></ol><ul><li><p>实验室验证：接种Exiguobacterium R2567使分蘖数减少13.6%-35.2%，而Roseateles R780增加11.2%（图2A-B）。</p></li><li><p>田间一致性：分蘖抑制菌还降低穗数和地上部生物量（图2E-F）。</p></li></ul><ol><li>分子机制解析</li></ol><ul><li><p>SL信号通路激活：Exiguobacterium R2567通过分泌cyclo(Leu-Pro)诱导OsD53蛋白降解（降低59%），激活SL通路（图3B）。</p></li><li><p>受体依赖性：cyclo(Leu-Pro)的抑制作用在OsD14受体突变体（d14）中消失，但在SL合成突变体（d27）中保留（图3G）。</p></li></ul><ol><li>cyclo(Leu-Pro)的结构与功能</li></ol><ul><li><p>结构特征：cyclo(Leu-Pro)为环状二肽，通过氢键（Trp205、Ser270）和疏水作用（Phe186、Val194）结合OsD14（图5C-D）。</p></li><li><p>跨组织运输：水稻根系吸收cyclo(Leu-Pro)并运输至分蘖芽，抑制分蘖发育（图S4B-C）。</p></li></ul><ol><li>微生物与宿主的互作反馈</li></ol><ul><li>正反馈调节：水稻根分泌物刺激Exiguobacterium R2567增产cyclo(Leu-Pro)，同时该化合物抑制细菌运动性并促进生物膜形成，增强定殖能力（图S4H-I）。</li></ul><h1 id="3-讨论"><a href="#3-讨论" class="headerlink" title="3 讨论"></a>3 讨论</h1><ol><li>科学创新性</li></ol><ul><li><p>首例微生物源SL类似物：cyclo(Leu-Pro)是首个被发现的通过模拟SL信号调控分蘖的微生物代谢物，揭示了植物-微生物信号通路的趋同进化。</p></li><li><p>多维互作网络：根际微生物通过代谢物直接干预宿主发育，为“微生物组工程”优化作物性状提供新思路。</p></li></ul><ol><li>农业应用潜力</li></ol><ul><li><p>非遗传改良策略：利用特定根际菌群或化合物（如cyclo(Leu-Pro）调控分蘖，避免基因编辑的潜在风险。</p></li><li><p>环境适应性：微生物调控分蘖的机制可能增强水稻对资源分配和逆境的适应性。</p></li></ul><ol><li>局限性与展望</li></ol><ul><li><p>普适性验证：需扩大水稻品种和环境条件（如土壤类型、气候）验证结论。</p></li><li><p>机制深度解析：</p></li><li><p>解析D3-D14-D53复合体在cyclo(Leu-Pro)信号传递中的结构变化。</p></li><li><p>探索其他分蘖相关菌（如Burkholderia）的调控分子。</p></li><li><p>生态互作研究：微生物群落的稳定性及其与环境因子的互作需进一步评估。</p></li></ul><h1 id="4-结论"><a href="#4-结论" class="headerlink" title="4 结论"></a>4 结论</h1><p>根际微生物通过分泌特定代谢物（如Exiguobacterium R2567的cyclo(Leu-Pro））直接调控水稻分蘖，其作用依赖于SL信号通路受体OsD14。这一发现为利用微生物组工程提高作物产量和农业可持续性提供了理论依据，并拓展了植物-微生物互作的研究维度。</p><hr><h1 id="5-其他"><a href="#5-其他" class="headerlink" title="5 其他"></a>5 其他</h1><ul><li>独脚金内酯的生物合成通路<br>![[Pasted image 20250423095205.png|500]]</li><li>移栽8周后调查分蘖数，也就是营养生长结束后；每个小区中间6株水稻</li></ul><hr><h1 id="6-Cyclo-Leu-Pro-的鉴定步骤"><a href="#6-Cyclo-Leu-Pro-的鉴定步骤" class="headerlink" title="6 Cyclo(Leu-Pro)的鉴定步骤"></a>6 Cyclo(Leu-Pro)的鉴定步骤</h1><p>以下是论文中鉴定Exiguobacterium R2567产生的Cyclo(Leu-Pro)的详细流程：</p><ol><li>活性导向分馏（Bioactivity-guided fractionation）</li></ol><p>目标：从细菌培养物中分离具有生物活性的化合物。</p><p>提取：用乙酸乙酯（ethyl acetate）提取Exiguobacterium R2567的菌体培养物，获得粗提物。</p><p>初步活性验证：将粗提物处理水稻幼苗，观察到OsD53蛋白降解（类似SL类似物rac-GR24的效果），确认存在活性成分。</p><p>分馏纯化：</p><p>使用硅胶柱层析（silica chromatography）对粗提物进行分级分离，获得多个组分。</p><p>通过生物活性筛选确定诱导OsD53降解的活性组分（如F3-1）。</p><p>进一步通过半制备高效液相色谱（semi-preparative HPLC）对活性组分进行纯化，最终分离出单一活性化合物（命名为S6）。</p><ol><li>结构解析</li></ol><p>目标：确定化合物S6的化学结构。</p><p>质谱分析（LC-MS）：</p><p>通过液相色谱-质谱联用（LC-MS）测得S6的分子量为211.1440 Da（对应分子式C₁₁H₁₉N₂O₂）。</p><p>高分辨率质谱（HRMS）确认分子式为C₁₁H₁₈N₂O₂。</p><p>核磁共振（NMR）：</p><p>¹H NMR和¹³C NMR：检测到两个羰基信号（δc 172.8和168.9 ppm）、酰胺键特征峰（δH 4.25和4.12 ppm）以及脂肪链信号。</p><p>二维NMR（COSY、HSQC、HMBC）：</p><p>通过COSY谱确定氨基酸残基的连接顺序。</p><p>HMBC谱显示环状结构的连接方式（如Leu的侧链与Pro的α-碳连接）。</p><p>结论：S6被确定为环状二肽——cyclo(L-亮氨酸-L-脯氨酸)（cyclo(Leu-Pro)）。</p><ol><li>结构验证</li></ol><p>目标：确认S6与已知标准品的一致性。</p><p>对照实验：</p><p>将S6与商业购买的cyclo(Leu-Pro)标准品进行对比。</p><p>LC-MS保留时间和质谱图：完全匹配。</p><p>NMR数据：与标准品的¹H和¹³C谱图一致。</p><ol><li>功能验证</li></ol><p>目标：验证cyclo(Leu-Pro)的生物活性及其作用机制。</p><p>OsD53降解实验：</p><p>用纯化的cyclo(Leu-Pro)处理水稻，通过Western blot检测OsD53蛋白水平显著降低（类似SL类似物rac-GR24）。</p><p>表型分析：</p><p>实验室条件：cyclo(Leu-Pro)处理显著抑制水稻分蘖（减少50%），并影响根系发育（促进主根伸长，抑制侧根）。</p><p>田间试验：在多个水稻品种（如Nipponbare、9311）中验证分蘖抑制效果。</p><p>受体结合实验：</p><p>分子对接（Docking）：预测cyclo(Leu-Pro)与水稻SL受体OsD14的结合模式。</p><p>微量热泳动（MST）：测得cyclo(Leu-Pro)与OsD14的结合亲和力（Kd=2.56 μM），与rac-GR24（Kd=2.15 μM）相似。</p><p>X射线晶体学：解析OsD14与cyclo(Leu-Pro)复合物的晶体结构（分辨率1.4 Å），显示其结合位点与SL类似物rac-GR24重叠。</p><ol><li>代谢与转运分析</li></ol><p>目标：探究cyclo(Leu-Pro)的产生和运输机制。</p><p>细菌代谢调控：</p><p>水稻根系分泌物促进Exiguobacterium R2567合成cyclo(Leu-Pro)。</p><p>植物内运输：</p><p>通过靶向代谢组学检测，cyclo(Leu-Pro)从根系转运至分蘖芽，诱导OsD53降解。</p><ol><li>特异性验证</li></ol><p>目标：确认cyclo(Leu-Pro)仅作用于OsD14受体。</p><p>受体突变体实验：</p><p>在OsD14突变体（d14）中，cyclo(Leu-Pro)无法诱导OsD53降解或抑制分蘖。</p><p>其他受体（如OsKAI2）不结合cyclo(Leu-Pro)，显示其特异性。</p><p>总结</p><p>通过活性导向分馏结合色谱纯化、质谱与NMR结构解析、生物活性验证及受体相互作用分析，研究团队成功鉴定并证实了Exiguobacterium R2567产生的cyclo(Leu-Pro)通过激活水稻SL信号通路抑制分蘖。这一过程综合运用了化学分离、结构生物学和遗传学方法，揭示了微生物代谢产物调控植物发育的新机制。</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/article/undefined/"/>
      <url>/article/undefined/</url>
      
        <content type="html"><![CDATA[<div class="pretoc">  <p class="title">Kraken taxonomic sequence classification system</p>  <p class="version">Version 2.1.3</p>  <p>Operating Manual</p></div><h1>Table of Contents</h1><nav id="TOC" role="doc-toc"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#system-requirements">System Requirements</a></li><li><a href="#installation">Installation</a></li><li><a href="#kraken-2-databases">Kraken 2 Databases</a></li><li><a href="#standard-kraken-2-database">Standard Kraken 2 Database</a></li><li><a href="#classification">Classification</a></li><li><a href="#output-formats">Output Formats</a><ul><li><a href="#standard-kraken-output-format">Standard Kraken Output Format</a></li><li><a href="#sample-report-output-format">Sample Report Output Format</a></li></ul></li><li><a href="#translated-search">Translated Search</a></li><li><a href="#custom-databases">Custom Databases</a></li><li><a href="#masking-of-low-complexity-sequences">Masking of Low-complexity Sequences</a></li><li><a href="#special-databases">Special Databases</a><ul><li><a href="#s-databases">16S Databases</a></li></ul></li><li><a href="#confidence-scoring">Confidence Scoring</a></li><li><a href="#inspecting-a-kraken-2-databases-contents">Inspecting a Kraken 2 Database’s Contents</a></li><li><a href="#distinct-minimizer-count-information">Distinct minimizer count information</a></li><li><a href="#kraken-2-environment-variables">Kraken 2 Environment Variables</a></li></ul></nav><h1 id="introduction">Introduction</h1><p>Kraken is a taxonomic sequence classifier that assigns taxonomic labels to DNA sequences. Kraken examines the <span class="math inline"><em>k</em></span>-mers within a query sequence and uses the information within those <span class="math inline"><em>k</em></span>-mers to query a database. That database maps <span class="math inline"><em>k</em></span>-mers to the lowest common ancestor (LCA) of all genomes known to contain a given <span class="math inline"><em>k</em></span>-mer.</p><p>The first version of <a href="https://ccb.jhu.edu/software/kraken/">Kraken</a> used a large indexed and sorted list of <span class="math inline"><em>k</em></span>-mer/LCA pairs as its database. While fast, the large memory requirements posed some problems for users, and so Kraken 2 was created to provide a solution to those problems.</p><p><a href="https://ccb.jhu.edu/software/kraken2/">Kraken 2</a> differs from Kraken 1 in several important ways:</p><ol type="1"><li>Only minimizers of the <span class="math inline"><em>k</em></span>-mers in the query sequences are used as database queries. Similarly, only minimizers of the <span class="math inline"><em>k</em></span>-mers in the reference sequences in the database’s genomic library are stored in the database. We will also refer to the minimizers as <span class="math inline">ℓ</span>-mers, where <span class="math inline">ℓ ≤ <em>k</em></span>. All <span class="math inline"><em>k</em></span>-mers are considered to have the same LCA as their minimizer’s database LCA value.</li><li>Kraken 2 uses a compact hash table that is a probabilistic data structure. This means that occasionally, database queries will fail by either returning the wrong LCA, or by not resulting in a search failure when a queried minimizer was never actually stored in the database. By incurring the risk of these false positives in the data structure, Kraken 2 is able to achieve faster speeds and lower memory requirements. Users should be aware that database false positive errors occur in less than 1% of queries, and can be compensated for by use of confidence scoring thresholds.</li><li>Kraken 2 has the ability to build a database from amino acid sequences and perform a translated search of the query sequences against that database.</li><li>Kraken 2 utilizes spaced seeds in the storage and querying of minimizers to improve classification accuracy.</li><li>Kraken 2 provides support for “special” databases that are not based on NCBI’s taxonomy. These are currently limited to three popular 16S databases.</li></ol><p>Because Kraken 2 only stores minimizers in its hash table, and <span class="math inline"><em>k</em></span> can be much larger than <span class="math inline">ℓ</span>, only a small percentage of the possible <span class="math inline">ℓ</span>-mers in a genomic library are actually deposited in the database. This creates a situation similar to the Kraken 1 “MiniKraken” databases; however, preliminary testing has shown the accuracy of a reduced Kraken 2 database to be quite similar to the full-sized Kraken 2 database, while Kraken 1’s MiniKraken databases often resulted in a substantial loss of per-read sensitivity.</p><p>If you use Kraken 2 in your own work, please cite either the <a href="https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1891-0">Kraken 2 paper</a> and/or the original <a href="https://genomebiology.biomedcentral.com/articles/10.1186/gb-2014-15-3-r46">Kraken paper</a> as appropriate. Thank you!</p><h1 id="system-requirements">System Requirements</h1><ul><li><p><strong>Disk space</strong>: Construction of a Kraken 2 standard database requires approximately 100 GB of disk space. A test on 01 Jan 2018 of the default installation showed 42 GB of disk space was used to store the genomic library files, 26 GB was used to store the taxonomy information from NCBI, and 29 GB was used to store the Kraken 2 compact hash table.</p><p>Like in Kraken 1, we strongly suggest against using NFS storage to store the Kraken 2 database if at all possible.</p></li><li><p><strong>Memory</strong>: To run efficiently, Kraken 2 requires enough free memory to hold the database (primarily the hash table) in RAM. While this can be accomplished with a ramdisk, Kraken 2 will by default load the database into process-local RAM; the <code>--memory-mapping</code> switch to <code>kraken2</code> will avoid doing so. The default database size is 29 GB (as of Jan.&nbsp;2018), and you will need slightly more than that in RAM if you want to build the default database.</p></li><li><p><strong>Dependencies</strong>: Kraken 2 currently makes extensive use of Linux utilities such as sed, find, and wget. Many scripts are written using the Bash shell, and the main scripts are written using Perl. Core programs needed to build the database and run the classifier are written in C++11, and need to be compiled using a somewhat recent version of g++ that will support C++11. Multithreading is handled using OpenMP. Downloads of NCBI data are performed by wget and rsync. Most Linux systems will have all of the above listed programs and development libraries available either by default or via package download.</p><p>Unlike Kraken 1, Kraken 2 does not use an external <span class="math inline"><em>k</em></span>-mer counter. However, by default, Kraken 2 will attempt to use the <code>dustmasker</code> or <code>segmasker</code> programs provided as part of NCBI’s BLAST suite to mask low-complexity regions (see <a href="#masking-of-low-complexity-sequences">Masking of Low-complexity Sequences</a>).</p><p><strong>MacOS NOTE:</strong> MacOS and other non-Linux operating systems are <em>not</em> explicitly supported by the developers, and MacOS users should refer to the Kraken-users group for support in installing the appropriate utilities to allow for full operation of Kraken 2. We will attempt to use MacOS-compliant code when possible, but development and testing time is at a premium and we cannot guarantee that Kraken 2 will install and work to its full potential on a default installation of MacOS.</p><p>In particular, we note that the default MacOS X installation of GCC does not have support for OpenMP. Without OpenMP, Kraken 2 is limited to single-threaded operation, resulting in slower build and classification runtimes.</p></li><li><p><strong>Network connectivity</strong>: Kraken 2’s standard database build and download commands expect unfettered FTP and rsync access to the NCBI FTP server. If you’re working behind a proxy, you may need to set certain environment variables (such as <code>ftp_proxy</code> or <code>RSYNC_PROXY</code>) in order to get these commands to work properly.</p><p>Kraken 2’s scripts default to using rsync for most downloads; however, you may find that your network situation prevents use of rsync. In such cases, you can try the <code>--use-ftp</code> option to <code>kraken2-build</code> to force the downloads to occur via FTP.</p></li><li><p><strong>MiniKraken</strong>: At present, users with low-memory computing environments can replicate the “MiniKraken” functionality of Kraken 1 in two ways: first, by increasing the value of <span class="math inline"><em>k</em></span> with respect to <span class="math inline">ℓ</span> (using the <code>--kmer-len</code> and <code>--minimizer-len</code> options to <code>kraken2-build</code>); and secondly, through downsampling of minimizers (from both the database and query sequences) using a hash function. This second option is performed if the <code>--max-db-size</code> option to <code>kraken2-build</code> is used; however, the two options are not mutually exclusive. In a difference from Kraken 1, Kraken 2 does not require building a full database and then shrinking it to obtain a reduced database.</p></li></ul><h1 id="installation">Installation</h1><p>To begin using Kraken 2, you will first need to install it, and then either download or create a database.</p><p>Kraken 2 consists of two main scripts (<code>kraken2</code> and <code>kraken2-build</code>), along with several programs and smaller scripts. As part of the installation process, all scripts and programs are installed in the same directory. After installation, you can move the main scripts elsewhere, but moving the other scripts and programs requires editing the scripts and changing the <code>$KRAKEN2_DIR</code> variables in the main scripts.</p><p>Once an install directory is selected, you need to run the following command in the directory where you extracted the Kraken 2 source:</p><pre><code class="hljs">./install_kraken2.sh $KRAKEN2_DIR</code></pre><p>(Replace <code>$KRAKEN2_DIR</code> above with the directory where you want to install Kraken 2’s programs/scripts.)</p><p>The <code>install_kraken2.sh</code> script should compile all of Kraken 2’s code and setup your Kraken 2 program directory. Installation is successful if you see the message “<code>Kraken 2 installation complete.</code>”</p><p>Once installation is complete, you may want to copy the main Kraken 2 scripts into a directory found in your <code>PATH</code> variable (e.g., “<code>$HOME/bin</code>”):</p><pre><code class="hljs">cp $KRAKEN2_DIR/kraken2{,-build,-inspect} $HOME/bin</code></pre><p>After installation, you’re ready to either create or download a database.</p><h1 id="kraken-2-databases">Kraken 2 Databases</h1><p>A Kraken 2 database is a directory containing at least 3 files:</p><ul><li><code>hash.k2d</code>: Contains the minimizer to taxon mappings</li><li><code>opts.k2d</code>: Contains information about the options used to build the database</li><li><code>taxo.k2d</code>: Contains taxonomy information used to build the database</li></ul><p>None of these three files are in a human-readable format. Other files may also be present as part of the database build process, and can, if desired, be removed after a successful build of the database.</p><p>In interacting with Kraken 2, you should not have to directly reference any of these files, but rather simply provide the name of the directory in which they are stored. Kraken 2 allows both the use of a standard database as well as custom databases; these are described in the sections <a href="#standard-kraken-2-database">Standard Kraken 2 Database</a> and <a href="#custom-databases">Custom Databases</a> below, respectively.</p><h1 id="standard-kraken-2-database">Standard Kraken 2 Database</h1><p>To create the standard Kraken 2 database, you can use the following command:</p><pre><code class="hljs">kraken2-build --standard --db $DBNAME</code></pre><p>(Replace “<code>$DBNAME</code>” above with your preferred database name/location. Please note that the database will use approximately 100 GB of disk space during creation, with the majority of that being reference sequences or taxonomy mapping information that can be removed after the build.)</p><p>This will download NCBI taxonomic information, as well as the complete genomes in RefSeq for the bacterial, archaeal, and viral domains, along with the human genome and a collection of known vectors (UniVec_Core). After downloading all this data, the build process begins; this can be the most time-consuming step. If you have multiple processing cores, you can run this process with multiple threads, e.g.:</p><pre><code class="hljs">kraken2-build --standard --threads 24 --db $DBNAME</code></pre><p>Using 32 threads on an AWS EC2 r4.8xlarge instance with 16 dual-core hyperthreaded 2.30 GHz CPUs and 244 GB of RAM, the build process took approximately 35 minutes in Jan.&nbsp;2018.</p><p>The build process itself has two main steps, each of which requires passing over the contents of the reference library:</p><ol type="1"><li><strong>Estimation</strong> of the capacity needed in the Kraken 2 compact hash table. This uses a low-memory method to reliably estimate the number of minimizers present in the reference library given the selected parameters <span class="math inline"><em>k</em></span> and <span class="math inline">ℓ</span>.</li><li><strong>Population</strong> of the hash table (and conversion of the taxonomy to an internal format). This step is a second pass over the reference library to find minimizers and then place them in the database.</li></ol><p>(There is one other preliminary step where sequence IDs are mapped to taxonomy IDs, but this is usually a rather quick process and is mostly handled during library downloading.)</p><p>Unlike Kraken 1’s build process, Kraken 2 does not perform checkpointing after the estimation step. This is because the estimation step is dependent on the selected <span class="math inline"><em>k</em></span> and <span class="math inline">ℓ</span> values, and if the population step fails, it is likely because <span class="math inline"><em>k</em></span> needs to be increased (reducing the overall memory requirements).</p><h1 id="classification">Classification</h1><p>To classify a set of sequences, use the <code>kraken2</code> command:</p><pre><code class="hljs">kraken2 --db $DBNAME seqs.fa</code></pre><p>Output will be sent to standard output by default. The files containing the sequences to be classified should be specified on the command line. Sequences can also be provided through standard input using the special filename <code>/dev/fd/0</code>.</p><p>The <code>kraken2</code> program allows several different options:</p><ul><li><p><strong>Multithreading</strong>: Use the <code>--threads NUM</code> switch to use multiple threads.</p></li><li><p><strong>Quick operation</strong>: Rather than searching all <span class="math inline">ℓ</span>-mers in a sequence, stop classification after the first database hit; use <code>--quick</code> to enable this mode.</p></li><li><p><strong>Hit group threshold</strong>: The option <code>--minimum-hit-groups</code> will allow you to require multiple hit groups (a group of overlapping k-mers that share a common minimizer that is found in the hash table) be found before declaring a sequence classified, which can be especially useful with custom databases when testing to see if sequences either do or do not belong to a particular genome.</p></li><li><p><strong>Sequence filtering</strong>: Classified or unclassified sequences can be sent to a file for later processing, using the <code>--classified-out</code> and <code>--unclassified-out</code> switches, respectively.</p></li><li><p><strong>Output redirection</strong>: Output can be directed using standard shell redirection (<code>|</code> or <code>&gt;</code>), or using the <code>--output</code> switch.</p></li><li><p><strong>Compressed input</strong>: Kraken 2 can handle gzip and bzip2 compressed files as input by specifying the proper switch of <code>--gzip-compressed</code> or <code>--bzip2-compressed</code>.</p></li><li><p><strong>Input format auto-detection</strong>: If regular files (i.e., not pipes or device files) are specified on the command line as input, Kraken 2 will attempt to determine the format of your input prior to classification. You can disable this by explicitly specifying <code>--gzip-compressed</code> or <code>--bzip2-compressed</code> as appropriate. Note that use of the character device file <code>/dev/fd/0</code> to read from standard input (aka <code>stdin</code>) will <strong>not</strong> allow auto-detection.</p></li><li><p><strong>Paired reads</strong>: Kraken 2 provides an enhancement over Kraken 1 in its handling of paired read data. Rather than needing to concatenate the pairs together with an <code>N</code> character between the reads, Kraken 2 is able to process the mates individually while still recognizing the pairing information. Using the <code>--paired</code> option to <code>kraken2</code> will indicate to <code>kraken2</code> that the input files provided are paired read data, and data will be read from the pairs of files concurrently.</p><p>Usage of <code>--paired</code> also affects the <code>--classified-out</code> and <code>--unclassified-out</code> options; users should provide a <code>#</code> character in the filenames provided to those options, which will be replaced by <code>kraken2</code> with “<code>_1</code>” and “<code>_2</code>” with mates spread across the two files appropriately. For example:</p><pre><code class="hljs">  kraken2 --paired --classified-out cseqs#.fq seqs_1.fq seqs_2.fq</code></pre><p>will put the first reads from classified pairs in <code>cseqs_1.fq</code>, and the second reads from those pairs in <code>cseqs_2.fq</code>.</p></li></ul><p>To get a full list of options, use <code>kraken2 --help</code>.</p><h1 id="output-formats">Output Formats</h1><h2 id="standard-kraken-output-format">Standard Kraken Output Format</h2><p>Each sequence (or sequence pair, in the case of paired reads) classified by Kraken 2 results in a single line of output. Kraken 2’s output lines contain five tab-delimited fields; from left to right, they are:</p><ol type="1"><li><p>“C”/“U”: a one letter code indicating that the sequence was either classified or unclassified.</p></li><li><p>The sequence ID, obtained from the FASTA/FASTQ header.</p></li><li><p>The taxonomy ID Kraken 2 used to label the sequence; this is 0 if the sequence is unclassified.</p></li><li><p>The length of the sequence in bp. In the case of paired read data, this will be a string containing the lengths of the two sequences in bp, separated by a pipe character, e.g.&nbsp;“98|94”.</p></li><li><p>A space-delimited list indicating the LCA mapping of each <span class="math inline"><em>k</em></span>-mer in the sequence(s). For example, “562:13 561:4 A:31 0:1 562:3” would indicate that:</p><ul><li>the first 13 <span class="math inline"><em>k</em></span>-mers mapped to taxonomy ID #562</li><li>the next 4 <span class="math inline"><em>k</em></span>-mers mapped to taxonomy ID #561</li><li>the next 31 <span class="math inline"><em>k</em></span>-mers contained an ambiguous nucleotide</li><li>the next <span class="math inline"><em>k</em></span>-mer was not in the database</li><li>the last 3 <span class="math inline"><em>k</em></span>-mers mapped to taxonomy ID #562</li></ul><p>Note that paired read data will contain a “<code>|:|</code>” token in this list to indicate the end of one read and the beginning of another.</p><p>When Kraken 2 is run against a protein database (see <a href="#translated-search">Translated Search</a>), the LCA hitlist will contain the results of querying all six frames of each sequence. Reading frame data is separated by a “<code>-:-</code>” token.</p></li></ol><p>Kraken 1 offered a <code>kraken-translate</code> and <code>kraken-report</code> script to change the output into different formats. Through the use of <code>kraken2 --use-names</code>, Kraken 2 will replace the taxonomy ID column with the scientific name and the taxonomy ID in parenthesis (e.g., “Bacteria (taxid 2)” instead of “2”), yielding similar functionality to Kraken 1’s <code>kraken-translate</code> script. The sample report functionality now exists as part of the <code>kraken2</code> script, with the use of the <code>--report</code> option; the sample report formats are described below.</p><h2 id="sample-report-output-format">Sample Report Output Format</h2><p>Like Kraken 1, Kraken 2 offers two formats of sample-wide results. Kraken 2’s standard sample report format is tab-delimited with one line per taxon. The fields of the output, from left-to-right, are as follows:</p><ol type="1"><li>Percentage of fragments covered by the clade rooted at this taxon</li><li>Number of fragments covered by the clade rooted at this taxon</li><li>Number of fragments assigned directly to this taxon</li><li>A rank code, indicating (U)nclassified, (R)oot, (D)omain, (K)ingdom, (P)hylum, (C)lass, (O)rder, (F)amily, (G)enus, or (S)pecies. Taxa that are not at any of these 10 ranks have a rank code that is formed by using the rank code of the closest ancestor rank with a number indicating the distance from that rank. E.g., “G2” is a rank code indicating a taxon is between genus and species and the grandparent taxon is at the genus rank.</li><li>NCBI taxonomic ID number</li><li>Indented scientific name</li></ol><p>The scientific names are indented using space, according to the tree structure specified by the taxonomy.</p><p>By default, taxa with no reads assigned to (or under) them will not have any output produced. However, if you wish to have all taxa displayed, you can use the <code>--report-zero-counts</code> switch to do so. This can be useful if you are looking to do further downstream analysis of the reports, and want to compare samples. Sorting by the taxonomy ID (using <code>sort -k5,5n</code>) can provide a consistent line ordering between reports.</p><p>In addition, we also provide the option <code>--use-mpa-style</code> that can be used in conjunction with <code>--report</code>. This option provides output in a format similar to MetaPhlAn’s output. The output with this option provides one taxon per line, with a lowercase version of the rank codes in Kraken 2’s standard sample report format (except for ‘U’ and ‘R’), two underscores, and the scientific name of the taxon (e.g., "d__Viruses“). The full taxonomy of each taxon (at the eight ranks considered) is given, with each rank’s name separated by a pipe character (e.g.,”d__Viruses|o_Caudovirales"). Following this version of the taxon’s scientific name is a tab and the number of fragments assigned to the clade rooted at that taxon.</p><h1 id="translated-search">Translated Search</h1><p>Kraken 2 allows users to perform a six-frame translated search, similar to the well-known BLASTX program. To do this, Kraken 2 uses a reduced 15 amino acid alphabet and stores amino acid minimizers in its database. LCA results from all 6 frames are combined to yield a set of LCA hits, which is then resolved in the same manner as in Kraken’s normal operation.</p><p>To build a protein database, the <code>--protein</code> option should be given to <code>kraken2-build</code> (either along with <code>--standard</code>, or with all steps if building a custom database).</p><h1 id="custom-databases">Custom Databases</h1><p>We realize the standard database may not suit everyone’s needs. Kraken 2 also allows creation of customized databases.</p><p>To build a custom database:</p><ol type="1"><li><p>Install a taxonomy. Usually, you will just use the NCBI taxonomy, which you can easily download using:</p><pre><code class="hljs">kraken2-build --download-taxonomy --db $DBNAME</code></pre><p>This will download the accession number to taxon maps, as well as the taxonomic name and tree information from NCBI. These files can be found in <code>$DBNAME/taxonomy/</code> . If you need to modify the taxonomy, edits can be made to the <code>names.dmp</code> and <code>nodes.dmp</code> files in this directory; you may also need to modify the <code>*.accession2taxid</code> files appropriately.</p><p>Some of the standard sets of genomic libraries have taxonomic information associated with them, and don’t need the accession number to taxon maps to build the database successfully. These libraries include all those available through the <code>--download-library</code> option (see next point), except for the <code>plasmid</code> and non-redundant databases. If you are not using custom sequences (see the <code>--add-to-library</code> option) and are not using one of the <code>plasmid</code> or non-redundant database libraries, you may want to skip downloading of the accession number to taxon maps. This can be done by passing <code>--skip-maps</code> to the <code>kraken2-build --download-taxonomy</code> command.</p></li><li><p>Install one or more reference libraries. Several sets of standard genomes/proteins are made easily available through <code>kraken2-build</code>:</p><ul><li><code>archaea</code>: RefSeq complete archaeal genomes/proteins</li><li><code>bacteria</code>: RefSeq complete bacterial genomes/proteins</li><li><code>plasmid</code>: RefSeq plasmid nucleotide/protein sequences</li><li><code>viral</code>: RefSeq complete viral genomes/proteins</li><li><code>human</code>: GRCh38 human genome/proteins</li><li><code>fungi</code>: RefSeq complete fungal genomes/proteins</li><li><code>plant</code>: RefSeq complete plant genomes/proteins</li><li><code>protozoa</code>: RefSeq complete protozoan genomes/proteins</li><li><code>nr</code>: NCBI non-redundant protein database</li><li><code>nt</code>: NCBI non-redundant nucleotide database</li><li><code>UniVec</code>: NCBI-supplied database of vector, adapter, linker, and primer sequences that may be contaminating sequencing projects and/or assemblies</li><li><code>UniVec_Core</code>: A subset of UniVec chosen to minimize false positive hits to the vector database</li></ul><p>To download and install any one of these, use the <code>--download-library</code> switch, e.g.:</p><pre><code class="hljs">kraken2-build --download-library bacteria --db $DBNAME</code></pre><p>Multiple libraries can be downloaded into a database prior to building by issuing multiple <code>kraken2-build --download-library</code> commands, e.g.:</p><pre><code class="hljs">kraken2-build --download-library archaea --db $DBNAMEkraken2-build --download-library viral --db $DBNAME</code></pre><p>The above commands would prepare a database that would contain archaeal and viral genomes; the <code>--build</code> option (see below) will still need to be used after downloading these libraries to actually build the database, however.</p><p>(Note that downloading <code>nr</code> requires use of the <code>--protein</code> option, and that <code>UniVec</code> and <code>UniVec_Core</code> are incompatible with the <code>--protein</code> option.)</p><p>Other genomes can also be added, but such genomes must meet certain requirements:</p><ul><li>Sequences must be in a FASTA file (multi-FASTA is allowed)</li><li>Each sequence’s ID (the string between the <code>&gt;</code> and the first whitespace character on the header line) must contain either an NCBI accession number to allow Kraken 2 to lookup the correct taxa, or an explicit assignment of the taxonomy ID using <code>kraken:taxid</code> (see below).</li></ul><p>Sequences not downloaded from NCBI may need their taxonomy information assigned explicitly. This can be done using the string <code>kraken:taxid|XXX</code> in the sequence ID, with <code>XXX</code> replaced by the desired taxon ID. For example, to put a known adapter sequence in taxon 32630 (“synthetic construct”), you could use the following:</p><pre><code class="hljs">&gt;sequence16|kraken:taxid|32630  Adapter sequenceCAAGCAGAAGACGGCATACGAGATCTTCGAGTGACTGGAGTTCCTTGGCACCCGAGAATTCCA</code></pre><p>The <code>kraken:taxid</code> string must begin the sequence ID or be immediately preceded by a pipe character (<code>|</code>). Explicit assignment of taxonomy IDs in this manner will override the accession number mapping provided by NCBI.</p><p>If your genomes meet the requirements above, then you can add each sequence to your database’s genomic library using the <code>--add-to-library</code> switch, e.g.:</p><pre><code class="hljs">kraken2-build --add-to-library chr1.fa --db $DBNAMEkraken2-build --add-to-library chr2.fa --db $DBNAME</code></pre><p>Note that if you have a list of files to add, you can do something like this in <code>bash</code>:</p><pre><code class="hljs">for file in chr*.fado    kraken2-build --add-to-library $file --db $DBNAMEdone</code></pre><p>Or even add all <code>*.fa</code> files found in the directory <code>genomes</code>:</p><p><code>find genomes/ -name '*.fa' -print0 | xargs -0 -I{} -n1 kraken2-build --add-to-library {} --db $DBNAME</code></p><p>(You may also find the <code>-P</code> option to <code>xargs</code> useful to add many files in parallel if you have multiple processors.)</p></li><li><p>Once your library is finalized, you need to build the database. This can be done with the command:</p><pre><code class="hljs"> kraken2-build --build --db $DBNAME</code></pre><p>The <code>--threads</code> option is also helpful here to reduce build time.</p><p>By default, the values of <span class="math inline"><em>k</em></span> and <span class="math inline">ℓ</span> are 35 and 31, respectively (or 15 and 12 for protein databases). These values can be explicitly set with the <code>--kmer-len</code> and <code>--minimizer-len</code> options, however. Note that the minimizer length must be no more than 31 for nucleotide databases, and 15 for protein databases. Additionally, the minimizer length <span class="math inline">ℓ</span> must be no more than the <span class="math inline"><em>k</em></span>-mer length. There is no upper bound on the value of <span class="math inline"><em>k</em></span>, but sequences less than <span class="math inline"><em>k</em></span> bp in length cannot be classified.</p><p>Kraken 2 also utilizes a simple spaced seed approach to increase accuracy. A number <span class="math inline"><em>s</em></span> &lt; <span class="math inline">ℓ</span>/4 can be chosen, and <span class="math inline"><em>s</em></span> positions in the minimizer will be masked out during all comparisons. Masked positions are chosen to alternate from the second-to-last position in the minimizer; e.g., <span class="math inline"><em>s</em></span> = 5 and <span class="math inline">ℓ</span> = 31 will result in masking out the 0 positions shown here:</p><pre><code class="hljs">111 1111 1111 1111 1111 1101 0101 0101</code></pre><p>By default, <span class="math inline"><em>s</em></span> = 7 for nucleotide databases, and <span class="math inline"><em>s</em></span> = 0 for protein databases. This can be changed using the <code>--minimizer-spaces</code> option along with the <code>--build</code> task of <code>kraken2-build</code>.</p></li></ol><p>A full list of options for <code>kraken2-build</code> can be obtained using <code>kraken2-build --help</code>.</p><p>After building a database, if you want to reduce the disk usage of the database, you can use the <code>--clean</code> option for <code>kraken2-build</code> to remove intermediate files from the database directory.</p><h1 id="masking-of-low-complexity-sequences">Masking of Low-complexity Sequences</h1><p>Low-complexity sequences, e.g.&nbsp;“ACACACACACACACACACACACACAC”, are known to occur in many different organisms and are typically less informative for use in alignments; the BLAST programs often mask these sequences by default. Using this masking can help prevent false positives in Kraken 2’s results, and so we have added this functionality as a default option to Kraken 2’s library download/addition process.</p><p>Kraken 2 uses two programs to perform low-complexity sequence masking, both available from NCBI: <code>dustmasker</code>, for nucleotide sequences, and <code>segmasker</code>, for amino acid sequences. These programs are available as part of the NCBI BLAST+ suite. If these programs are not installed on the local system and in the user’s PATH when trying to use <code>kraken2-build</code>, the database build will fail. Users who do not wish to install these programs can use the <code>--no-masking</code> option to <code>kraken2-build</code> in conjunction with any of the <code>--download-library</code>, <code>--add-to-library</code>, or <code>--standard</code> options; use of the <code>--no-masking</code> option will skip masking of low-complexity sequences during the build of the Kraken 2 database.</p><h1 id="special-databases">Special Databases</h1><p>To support some common use cases, we provide the ability to build Kraken 2 databases using data from various external databases. These external databases may not follow the NCBI taxonomy, and so we’ve provided mechanisms to automatically create a taxonomy that will work with Kraken 2 (although such taxonomies may not be identical to NCBI’s).</p><p>To build one of these “special” Kraken 2 databases, use the following command:</p><pre><code class="hljs">kraken2-build --db $DBNAME --special TYPE</code></pre><p>where the <code>TYPE</code> string is one of the database names listed below.</p><p>At present, the “special” Kraken 2 database support we provide is limited to pre-packaged solutions for some public 16S sequence databases, but this may grow in the future.</p><h2 id="s-databases">16S Databases</h2><p>For targeted 16S sequencing projects, a normal Kraken 2 database using whole genome data may use more resources than necessary. A Kraken 2 database created from a well-curated genomic library of just 16S data can provide both a more efficient solution as well as a more accurate set of predictions for such projects. We provide support for building Kraken 2 databases from three publicly available 16S databases:</p><ul><li><a href="http://greengenes.lbl.gov/">Greengenes</a> (Kraken 2 database name: <code>greengenes</code>), using all available 16S data.</li><li><a href="http://rdp.cme.msu.edu/">RDP</a> (Kraken 2 database name: <code>rdp</code>), using the bacterial and archaeal 16S data.</li><li><a href="http://www.arb-silva.de/">SILVA</a> (Kraken 2 database name: <code>silva</code>), using the Small subunit NR99 sequence set.</li></ul><p>Note that these databases may have licensing restrictions regarding their data, and it is your responsibility to ensure you are in compliance with those restrictions; please visit the databases’ websites for further details. The <code>kraken2-build</code> script only uses publicly available URLs to download data and then converts that data into a form compatible for use with Kraken 2.</p><p>Furthermore, if you use one of these databases in your research, please visit the corresponding database’s website to determine the appropriate and up-to-date citation.</p><h1 id="confidence-scoring">Confidence Scoring</h1><p>At present, we have not yet developed a confidence score with a probabilistic interpretation for Kraken 2. However, we have developed a simple scoring scheme that has yielded good results for us, and we’ve made that available in Kraken 2 through use of the <code>--confidence</code> option to <code>kraken2</code>. The approach we use allows a user to specify a threshold score in the [0,1] interval; the classifier then will adjust labels up the tree until the label’s score (described below) meets or exceeds that threshold. If a label at the root of the taxonomic tree would not have a score exceeding the threshold, the sequence is called unclassified by Kraken 2 when this threshold is applied.</p><p>A sequence label’s score is a fraction <span class="math inline"><em>C</em></span>/<span class="math inline"><em>Q</em></span>, where <span class="math inline"><em>C</em></span> is the number of <span class="math inline"><em>k</em></span>-mers mapped to LCA values in the clade rooted at the label, and <span class="math inline"><em>Q</em></span> is the number of <span class="math inline"><em>k</em></span>-mers in the sequence that lack an ambiguous nucleotide (i.e., they were queried against the database). Consider the example of the LCA mappings in Kraken 2’s output given earlier:</p><p>“562:13 561:4 A:31 0:1 562:3” would indicate that:</p><ul><li>the first 13 <span class="math inline"><em>k</em></span>-mers mapped to taxonomy ID #562</li><li>the next 4 <span class="math inline"><em>k</em></span>-mers mapped to taxonomy ID #561</li><li>the next 31 <span class="math inline"><em>k</em></span>-mers contained an ambiguous nucleotide</li><li>the next <span class="math inline"><em>k</em></span>-mer was not in the database</li><li>the last 3 <span class="math inline"><em>k</em></span>-mers mapped to taxonomy ID #562</li></ul><p>In this case, ID #561 is the parent node of #562. Here, a label of #562 for this sequence would have a score of <span class="math inline"><em>C</em></span>/<span class="math inline"><em>Q</em></span> = (13+3)/(13+4+1+3) = 16/21. A label of #561 would have a score of <span class="math inline"><em>C</em></span>/<span class="math inline"><em>Q</em></span> = (13+4+3)/(13+4+1+3) = 20/21. If a user specified a <code>--confidence</code> threshold over 16/21, the classifier would adjust the original label from #562 to #561; if the threshold was greater than 20/21, the sequence would become unclassified.</p><h1 id="inspecting-a-kraken-2-databases-contents">Inspecting a Kraken 2 Database’s Contents</h1><p>The <code>kraken2-inspect</code> script allows users to gain information about the content of a Kraken 2 database. The output format of <code>kraken2-inspect</code> is identical to the reports generated with the <code>--report</code> option to <code>kraken2</code>. Instead of reporting how many reads in input data classified to a given taxon or clade, as <code>kraken2</code>’s <code>--report</code> option would, the <code>kraken2-inspect</code> script will report the number of minimizers in the database that are mapped to the various taxa/clades. For example, the first five lines of <code>kraken2-inspect</code>’s output on an example database might look like this:</p><pre><code class="hljs">$ kraken2-inspect --db EXAMPLE_DB | head -5100.00% 1770368409      1581179 R       1       root 96.50% 1708407622      58003   R1      131567    cellular organisms 91.28% 1615910070      985309  D       2           Bacteria 43.89% 777062062       1312736 P       1224          Proteobacteria 18.62% 329590216       555667  C       1236            Gammaproteobacteria</code></pre><p>This output indicates that 555667 of the minimizers in the database map directly to the Gammaproteobacteria class (taxid #1236), and 329590216 (18.62%) of the database’s minimizers map to a taxon in the clade rooted at Gammaproteobacteria. For more information on <code>kraken2-inspect</code>’s options, use its <code>--help</code> option.</p><h1 id="distinct-minimizer-count-information">Distinct minimizer count information</h1><p>The <a href="https://github.com/fbreitwieser/krakenuniq">KrakenUniq</a> project extended Kraken 1 by, among other things, reporting an estimate of the number of distinct k-mers associated with each taxon in the input sequencing data. This allows users to better determine if Kraken’s classifications are due to reads distributed throughout a reference genome, or due to only a small segment of a reference genome (and therefore likely false positive).</p><p>Thanks to the generosity of KrakenUniq’s developer Florian Breitwieser in allowing parts of the KrakenUniq source code to be licensed under Kraken 2’s MIT license, this distinct counting estimation is now available in Kraken 2. Development work by Martin Steinegger and Ben Langmead helped bring this functionality to Kraken 2.</p><p>At present, this functionality is an optional <em>experimental feature</em> – meaning that we may later alter it in a way that is not backwards compatible with previous versions of the feature.</p><p>To use this functionality, simply run the <code>kraken2</code> script with the additional <code>--report-minimizer-data</code> flag along with <code>--report</code>, e.g.:</p><pre><code class="hljs">kraken2 --db $DBNAME --report k2_report.txt --report-minimizer-data \    --output k2_output.txt sequence_data.fq</code></pre><p>This will put the standard Kraken 2 output (formatted as described in <a href="#standard-kraken-output-format">Standard Kraken Output Format</a>) in <code>k2_output.txt</code> and the report information in <code>k2_report.txt</code>. Within the report file, two additional columns will be present, e.g.:</p><p><strong>normal report format</strong>:</p><pre><code class="hljs">36.40   182 182 S2  211044                        Influenza A virus (A/Puerto Rico/8/1934(H1N1))</code></pre><p><strong>modified report format</strong>:</p><pre><code class="hljs">36.40   182 182 1688    18  S2  211044                        Influenza A virus (A/Puerto Rico/8/1934(H1N1))</code></pre><p>In this modified report format, the two new columns are the fourth and fifth, respectively representing the number of minimizers found to be associated with a taxon in the read sequences (1688), and the estimate of the number of distinct minimizers associated with a taxon in the read sequence data (18). This would indicate that although 182 reads were classified as belonging to H1N1 influenza, only 18 distinct minimizers led to those 182 classifications.</p><p>The format with the <code>--report-minimizer-data</code> flag, then, is similar to that described in <a href="#sample-report-output-format">Sample Report Output Format</a>, but slightly different. The fields in this new format, from left-to-right, are:</p><ol type="1"><li>Percentage of fragments covered by the clade rooted at this taxon</li><li>Number of fragments covered by the clade rooted at this taxon</li><li>Number of fragments assigned directly to this taxon</li><li>Number of minimizers in read data associated with this taxon (<strong>new</strong>)</li><li>An estimate of the number of distinct minimizers in read data associated with this taxon (<strong>new</strong>)</li><li>A rank code, indicating (U)nclassified, (R)oot, (D)omain, (K)ingdom, (P)hylum, (C)lass, (O)rder, (F)amily, (G)enus, or (S)pecies. Taxa that are not at any of these 10 ranks have a rank code that is formed by using the rank code of the closest ancestor rank with a number indicating the distance from that rank. E.g., “G2” is a rank code indicating a taxon is between genus and species and the grandparent taxon is at the genus rank.</li><li>NCBI taxonomic ID number</li><li>Indented scientific name</li></ol><p>We decided to make this an optional feature so as not to break existing software that processes Kraken 2’s standard report format. However, this new format can be converted to the standard report format with the command:</p><pre><code class="hljs">cut -f1-3,6-8 k2_new_report.txt &gt; k2_std_report.txt</code></pre><p>As noted above, this is an <em>experimental feature</em>. We intend to continue development on this feature, and may change the new format and/or its information if we determine it to be necessary.</p><p>For background on the data structures used in this feature and their interaction with Kraken, please read the <a href="https://genomebiology.biomedcentral.com/articles/10.1186/s13059-018-1568-0">KrakenUniq paper</a>, and please cite that paper if you use this functionality as part of your work.</p><h1 id="kraken-2-environment-variables">Kraken 2 Environment Variables</h1><p>The <code>kraken2</code> and <code>kraken2-inspect</code> scripts supports the use of some environment variables to help in reducing command line lengths:</p><ul><li><p><strong><code>KRAKEN2_NUM_THREADS</code></strong>: if the <code>--threads</code> option is not supplied to <code>kraken2</code>, then the value of this variable (if it is set) will be used as the number of threads to run <code>kraken2</code>. (This variable does not affect <code>kraken2-inspect</code>.)</p></li><li><p><strong><code>KRAKEN2_DB_PATH</code></strong>: much like the <code>PATH</code> variable is used for executables by your shell, <code>KRAKEN2_DB_PATH</code> is a colon-separated list of directories that will be searched for the database you name if the named database does not have a slash (<code>/</code>) character. By default, Kraken 2 assumes the value of this variable is “<code>.</code>” (i.e., the current working directory). This variable can be used to create one (or more) central repositories of Kraken databases in a multi-user system. Example usage in bash:</p><pre><code class="hljs">  export KRAKEN2_DB_PATH="/home/user/my_kraken2_dbs:/data/kraken2_dbs:"</code></pre><p>This will cause three directories to be searched, in this order:</p><ol type="1"><li><code>/home/user/my_kraken2_dbs</code></li><li><code>/data/kraken2_dbs</code></li><li>the current working directory (caused by the empty string as the third colon-separated field in the <code>KRAKEN2_DB_PATH</code> string)</li></ol><p>The search for a database will stop when a name match is found; if two directories in the <code>KRAKEN2_DB_PATH</code> have databases with the same name, the directory of the two that is searched first will have its database selected.</p><p>If the above variable and value are used, and the databases <code>/data/kraken2_dbs/mainDB</code> and <code>./mainDB</code> are present, then</p><pre><code class="hljs">  kraken2 --db mainDB sequences.fa</code></pre><p>will classify <code>sequences.fa</code> using <code>/data/kraken_dbs/mainDB</code>; if instead you wanted to use the <code>mainDB</code> present in the current directory, you would need to specify a directory path to that database in order to circumvent searching, e.g.:</p><pre><code class="hljs">  kraken2 --db ./mainDB sequences.fa</code></pre><p>Note that the <code>KRAKEN2_DB_PATH</code> directory list can be skipped by the use of any absolute (beginning with <code>/</code>) or relative pathname (including at least one <code>/</code>) as the database name.</p></li><li><p><strong><code>KRAKEN2_DEFAULT_DB</code></strong>: if no database is supplied with the <code>--db</code> option, the database named in this variable will be used instead. Using this variable, you can avoid using <code>--db</code> if you only have a single database that you usually use, e.g.&nbsp;in bash:</p><pre><code class="hljs">  export KRAKEN2_DEFAULT_DB="/home/user/kraken2db"  kraken2 sequences.fa &gt; kraken2.output</code></pre><p>This will classify <code>sequences.fa</code> using the <code>/home/user/kraken2db</code> database.</p><p>Note that the value of <code>KRAKEN2_DEFAULT_DB</code> will also be interpreted in the context of the value of <code>KRAKEN2_DB_PATH</code> if you don’t set <code>KRAKEN2_DEFAULT_DB</code> to an absolute or relative pathname. Given the earlier example in this section, the following:</p><pre><code class="hljs">  export KRAKEN2_DEFAULT_DB="mainDB"  kraken2 sequences.fa</code></pre><p>will use <code>/data/kraken_dbs/mainDB</code> to classify <code>sequences.fa</code>.</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/article/undefined/"/>
      <url>/article/undefined/</url>
      
        <content type="html"><![CDATA[{"$schema":"http://json-schema.org/draft-07/schema#","title":"FullConfig","type":"object","properties":{"$schema":{"default":"https://starship.rs/config-schema.json","type":"string"},"aws":{"default":{"disabled":false,"expiration_symbol":"X","force_display":false,"format":"on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)","profile_aliases":{},"region_aliases":{},"style":"bold yellow","symbol":"☁️  "},"allOf":[{"$ref":"#/definitions/AwsConfig"}]},"azure":{"default":{"disabled":true,"format":"on [$symbol($subscription)]($style) ","style":"blue bold","subscription_aliases":{},"symbol":"󰠅 "},"allOf":[{"$ref":"#/definitions/AzureConfig"}]},"battery":{"default":{"charging_symbol":"󰂄 ","disabled":false,"discharging_symbol":"󰂃 ","display":[{"charging_symbol":null,"discharging_symbol":null,"style":"red bold","threshold":10}],"empty_symbol":"󰂎 ","format":"[$symbol$percentage]($style) ","full_symbol":"󰁹 ","unknown_symbol":"󰁽 "},"allOf":[{"$ref":"#/definitions/BatteryConfig"}]},"buf":{"default":{"detect_extensions":[],"detect_files":["buf.yaml","buf.gen.yaml","buf.work.yaml"],"detect_folders":[],"disabled":false,"format":"with [$symbol($version )]($style)","style":"bold blue","symbol":"🐃 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/BufConfig"}]},"bun":{"default":{"detect_extensions":[],"detect_files":["bun.lockb","bunfig.toml"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold red","symbol":"🍞 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/BunConfig"}]},"c":{"default":{"commands":[["cc","--version"],["gcc","--version"],["clang","--version"]],"detect_extensions":["c","h"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version(-$name) )]($style)","style":"149 bold","symbol":"C ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/CConfig"}]},"character":{"default":{"disabled":false,"error_symbol":"[❯](bold red)","format":"$symbol ","success_symbol":"[❯](bold green)","vimcmd_replace_one_symbol":"[❮](bold purple)","vimcmd_replace_symbol":"[❮](bold purple)","vimcmd_symbol":"[❮](bold green)","vimcmd_visual_symbol":"[❮](bold yellow)"},"allOf":[{"$ref":"#/definitions/CharacterConfig"}]},"cmake":{"default":{"detect_extensions":[],"detect_files":["CMakeLists.txt","CMakeCache.txt"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold blue","symbol":"△ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/CMakeConfig"}]},"cmd_duration":{"default":{"disabled":false,"format":"took [$duration]($style) ","min_time":2000,"min_time_to_notify":45000,"show_milliseconds":false,"show_notifications":false,"style":"yellow bold"},"allOf":[{"$ref":"#/definitions/CmdDurationConfig"}]},"cobol":{"default":{"detect_extensions":["cbl","cob","CBL","COB"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold blue","symbol":"⚙️ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/CobolConfig"}]},"conda":{"default":{"disabled":false,"format":"via [$symbol$environment]($style) ","ignore_base":true,"style":"green bold","symbol":"🐳 ","truncation_length":1},"allOf":[{"$ref":"#/definitions/CondaConfig"}]},"container":{"default":{"disabled":false,"format":"[$symbol \\[$name\\]]($style) ","style":"red bold dimmed","symbol":"⬢"},"allOf":[{"$ref":"#/definitions/ContainerConfig"}]},"crystal":{"default":{"detect_extensions":["cr"],"detect_files":["shard.yml"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold red","symbol":"🔮 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/CrystalConfig"}]},"daml":{"default":{"detect_extensions":[],"detect_files":["daml.yaml"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold cyan","symbol":"Λ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/DamlConfig"}]},"dart":{"default":{"detect_extensions":["dart"],"detect_files":["pubspec.yaml","pubspec.yml","pubspec.lock"],"detect_folders":[".dart_tool"],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold blue","symbol":"🎯 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/DartConfig"}]},"deno":{"default":{"detect_extensions":[],"detect_files":["deno.json","deno.jsonc","mod.ts","deps.ts","mod.js","deps.js"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"green bold","symbol":"🦕 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/DenoConfig"}]},"directory":{"default":{"before_repo_root_style":null,"disabled":false,"fish_style_pwd_dir_length":0,"format":"[$path]($style)[$read_only]($read_only_style) ","home_symbol":"~","read_only":"🔒","read_only_style":"red","repo_root_format":"[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) ","repo_root_style":null,"style":"cyan bold","substitutions":{},"truncate_to_repo":true,"truncation_length":3,"truncation_symbol":"","use_logical_path":true,"use_os_path_sep":true},"allOf":[{"$ref":"#/definitions/DirectoryConfig"}]},"docker_context":{"default":{"detect_extensions":[],"detect_files":["docker-compose.yml","docker-compose.yaml","Dockerfile"],"detect_folders":[],"disabled":false,"format":"via [$symbol$context]($style) ","only_with_files":true,"style":"blue bold","symbol":"🐳 "},"allOf":[{"$ref":"#/definitions/DockerContextConfig"}]},"dotnet":{"default":{"detect_extensions":["csproj","fsproj","xproj"],"detect_files":["global.json","project.json","Directory.Build.props","Directory.Build.targets","Packages.props"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )(🎯 $tfm )]($style)","heuristic":true,"style":"blue bold","symbol":".NET ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/DotnetConfig"}]},"elixir":{"default":{"detect_extensions":[],"detect_files":["mix.exs"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version \\(OTP $otp_version\\) )]($style)","style":"bold purple","symbol":"💧 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/ElixirConfig"}]},"elm":{"default":{"detect_extensions":["elm"],"detect_files":["elm.json","elm-package.json",".elm-version"],"detect_folders":["elm-stuff"],"disabled":false,"format":"via [$symbol($version )]($style)","style":"cyan bold","symbol":"🌳 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/ElmConfig"}]},"env_var":{"default":{},"type":"object","additionalProperties":{"$ref":"#/definitions/EnvVarConfig"}},"erlang":{"default":{"detect_extensions":[],"detect_files":["rebar.config","erlang.mk"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold red","symbol":" ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/ErlangConfig"}]},"fennel":{"default":{"detect_extensions":["fnl"],"detect_files":[],"detect_folders":[],"disabled":true,"format":"via [$symbol($version )]($style)","style":"bold green","symbol":"🧅 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/FennelConfig"}]},"fill":{"default":{"disabled":false,"style":"bold black","symbol":"."},"allOf":[{"$ref":"#/definitions/FillConfig"}]},"fossil_branch":{"default":{"disabled":true,"format":"on [$symbol$branch]($style) ","style":"bold purple","symbol":" ","truncation_length":9223372036854776000,"truncation_symbol":"…"},"allOf":[{"$ref":"#/definitions/FossilBranchConfig"}]},"gcloud":{"default":{"detect_env_vars":[],"disabled":false,"format":"on [$symbol$account(@$domain)(\\($region\\))]($style) ","project_aliases":{},"region_aliases":{},"style":"bold blue","symbol":"☁️  "},"allOf":[{"$ref":"#/definitions/GcloudConfig"}]},"git_branch":{"default":{"always_show_remote":false,"disabled":false,"format":"on [$symbol$branch(:$remote_branch)]($style) ","ignore_branches":[],"only_attached":false,"style":"bold purple","symbol":" ","truncation_length":9223372036854776000,"truncation_symbol":"…"},"allOf":[{"$ref":"#/definitions/GitBranchConfig"}]},"git_commit":{"default":{"commit_hash_length":7,"disabled":false,"format":"[\\($hash$tag\\)]($style) ","only_detached":true,"style":"green bold","tag_disabled":true,"tag_max_candidates":0,"tag_symbol":" 🏷  "},"allOf":[{"$ref":"#/definitions/GitCommitConfig"}]},"git_metrics":{"default":{"added_style":"bold green","deleted_style":"bold red","disabled":true,"format":"([+$added]($added_style) )([-$deleted]($deleted_style) )","ignore_submodules":false,"only_nonzero_diffs":true},"allOf":[{"$ref":"#/definitions/GitMetricsConfig"}]},"git_state":{"default":{"am":"AM","am_or_rebase":"AM/REBASE","bisect":"BISECTING","cherry_pick":"CHERRY-PICKING","disabled":false,"format":"\\([$state( $progress_current/$progress_total)]($style)\\) ","merge":"MERGING","rebase":"REBASING","revert":"REVERTING","style":"bold yellow"},"allOf":[{"$ref":"#/definitions/GitStateConfig"}]},"git_status":{"default":{"ahead":"⇡","behind":"⇣","conflicted":"=","deleted":"✘","disabled":false,"diverged":"⇕","format":"([\\[$all_status$ahead_behind\\]]($style) )","ignore_submodules":false,"modified":"!","renamed":"»","staged":"+","stashed":"\\$","style":"red bold","typechanged":"","untracked":"?","up_to_date":""},"allOf":[{"$ref":"#/definitions/GitStatusConfig"}]},"golang":{"default":{"detect_extensions":["go"],"detect_files":["go.mod","go.sum","go.work","glide.yaml","Gopkg.yml","Gopkg.lock",".go-version"],"detect_folders":["Godeps"],"disabled":false,"format":"via [$symbol($version )]($style)","not_capable_style":"bold red","style":"bold cyan","symbol":"🐹 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/GoConfig"}]},"gradle":{"default":{"detect_extensions":["gradle","gradle.kts"],"detect_files":[],"detect_folders":["gradle"],"disabled":false,"format":"via [$symbol($version )]($style)","recursive":false,"style":"bold bright-cyan","symbol":"🅶 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/GradleConfig"}]},"guix_shell":{"default":{"disabled":false,"format":"via [$symbol]($style) ","style":"yellow bold","symbol":"🐃 "},"allOf":[{"$ref":"#/definitions/GuixShellConfig"}]},"haskell":{"default":{"detect_extensions":["hs","cabal","hs-boot"],"detect_files":["stack.yaml","cabal.project"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold purple","symbol":"λ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/HaskellConfig"}]},"haxe":{"default":{"detect_extensions":["hx","hxml"],"detect_files":["haxelib.json","hxformat.json",".haxerc"],"detect_folders":[".haxelib","haxe_libraries"],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold fg:202","symbol":"⌘ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/HaxeConfig"}]},"helm":{"default":{"detect_extensions":[],"detect_files":["helmfile.yaml","Chart.yaml"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold white","symbol":"⎈ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/HelmConfig"}]},"hg_branch":{"default":{"disabled":true,"format":"on [$symbol$branch(:$topic)]($style) ","style":"bold purple","symbol":" ","truncation_length":9223372036854776000,"truncation_symbol":"…"},"allOf":[{"$ref":"#/definitions/HgBranchConfig"}]},"hostname":{"default":{"disabled":false,"format":"[$ssh_symbol$hostname]($style) in ","ssh_only":true,"ssh_symbol":"🌐 ","style":"green dimmed bold","trim_at":"."},"allOf":[{"$ref":"#/definitions/HostnameConfig"}]},"java":{"default":{"detect_extensions":["java","class","jar","gradle","clj","cljc"],"detect_files":["pom.xml","build.gradle.kts","build.sbt",".java-version","deps.edn","project.clj","build.boot",".sdkmanrc"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"red dimmed","symbol":"☕ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/JavaConfig"}]},"jobs":{"default":{"disabled":false,"format":"[$symbol$number]($style) ","number_threshold":2,"style":"bold blue","symbol":"✦","symbol_threshold":1,"threshold":1},"allOf":[{"$ref":"#/definitions/JobsConfig"}]},"julia":{"default":{"detect_extensions":["jl"],"detect_files":["Project.toml","Manifest.toml"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold purple","symbol":"ஃ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/JuliaConfig"}]},"kotlin":{"default":{"detect_extensions":["kt","kts"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","kotlin_binary":"kotlin","style":"bold blue","symbol":"🅺 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/KotlinConfig"}]},"kubernetes":{"default":{"context_aliases":{},"detect_extensions":[],"detect_files":[],"detect_folders":[],"disabled":true,"format":"[$symbol$context( \\($namespace\\))]($style) in ","style":"cyan bold","symbol":"☸ ","user_aliases":{}},"allOf":[{"$ref":"#/definitions/KubernetesConfig"}]},"line_break":{"default":{"disabled":false},"allOf":[{"$ref":"#/definitions/LineBreakConfig"}]},"localip":{"default":{"disabled":true,"format":"[$localipv4]($style) ","ssh_only":true,"style":"yellow bold"},"allOf":[{"$ref":"#/definitions/LocalipConfig"}]},"lua":{"default":{"detect_extensions":["lua"],"detect_files":[".lua-version"],"detect_folders":["lua"],"disabled":false,"format":"via [$symbol($version )]($style)","lua_binary":"lua","style":"bold blue","symbol":"🌙 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/LuaConfig"}]},"memory_usage":{"default":{"disabled":true,"format":"via $symbol[$ram( | $swap)]($style) ","style":"white bold dimmed","symbol":"🐏 ","threshold":75},"allOf":[{"$ref":"#/definitions/MemoryConfig"}]},"meson":{"default":{"disabled":false,"format":"via [$symbol$project]($style) ","style":"blue bold","symbol":"⬢ ","truncation_length":4294967295,"truncation_symbol":"…"},"allOf":[{"$ref":"#/definitions/MesonConfig"}]},"nim":{"default":{"detect_extensions":["nim","nims","nimble"],"detect_files":["nim.cfg"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"yellow bold","symbol":"👑 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/NimConfig"}]},"nix_shell":{"default":{"disabled":false,"format":"via [$symbol$state( \\($name\\))]($style) ","heuristic":false,"impure_msg":"impure","pure_msg":"pure","style":"bold blue","symbol":"❄️  ","unknown_msg":""},"allOf":[{"$ref":"#/definitions/NixShellConfig"}]},"nodejs":{"default":{"detect_extensions":["js","mjs","cjs","ts","mts","cts"],"detect_files":["package.json",".node-version",".nvmrc"],"detect_folders":["node_modules"],"disabled":false,"format":"via [$symbol($version )]($style)","not_capable_style":"bold red","style":"bold green","symbol":" ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/NodejsConfig"}]},"ocaml":{"default":{"detect_extensions":["opam","ml","mli","re","rei"],"detect_files":["dune","dune-project","jbuild","jbuild-ignore",".merlin"],"detect_folders":["_opam","esy.lock"],"disabled":false,"format":"via [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)","global_switch_indicator":"","local_switch_indicator":"*","style":"bold yellow","symbol":"🐫 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/OCamlConfig"}]},"opa":{"default":{"detect_extensions":["rego"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold blue","symbol":"🪖  ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/OpaConfig"}]},"openstack":{"default":{"disabled":false,"format":"on [$symbol$cloud(\\($project\\))]($style) ","style":"bold yellow","symbol":"☁️  "},"allOf":[{"$ref":"#/definitions/OspConfig"}]},"os":{"default":{"disabled":true,"format":"[$symbol]($style)","style":"bold white","symbols":{"Alpaquita":"🔔 ","Alpine":"🏔️ ","Amazon":"🙂 ","Android":"🤖 ","Arch":"🎗️ ","Artix":"🎗️ ","CentOS":"💠 ","Debian":"🌀 ","DragonFly":"🐉 ","Emscripten":"🔗 ","EndeavourOS":"🚀 ","Fedora":"🎩 ","FreeBSD":"😈 ","Garuda":"🦅 ","Gentoo":"🗜️ ","HardenedBSD":"🛡️ ","Illumos":"🐦 ","Linux":"🐧 ","Mabox":"📦 ","Macos":"🍎 ","Manjaro":"🥭 ","Mariner":"🌊 ","MidnightBSD":"🌘 ","Mint":"🌿 ","NetBSD":"🚩 ","NixOS":"❄️ ","OpenBSD":"🐡 ","OpenCloudOS":"☁️ ","OracleLinux":"🦴 ","Pop":"🍭 ","Raspbian":"🍓 ","RedHatEnterprise":"🎩 ","Redhat":"🎩 ","Redox":"🧪 ","SUSE":"🦎 ","Solus":"⛵ ","Ubuntu":"🎯 ","Unknown":"❓ ","Windows":"🪟 ","openEuler":"🦉 ","openSUSE":"🦎 "}},"allOf":[{"$ref":"#/definitions/OSConfig"}]},"package":{"default":{"disabled":false,"display_private":false,"format":"is [$symbol$version]($style) ","style":"208 bold","symbol":"📦 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/PackageConfig"}]},"perl":{"default":{"detect_extensions":["pl","pm","pod"],"detect_files":["Makefile.PL","Build.PL","cpanfile","cpanfile.snapshot","META.json","META.yml",".perl-version"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"149 bold","symbol":"🐪 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/PerlConfig"}]},"php":{"default":{"detect_extensions":["php"],"detect_files":["composer.json",".php-version"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"147 bold","symbol":"🐘 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/PhpConfig"}]},"pijul_channel":{"default":{"disabled":true,"format":"on [$symbol$channel]($style) ","style":"bold purple","symbol":" ","truncation_length":9223372036854776000,"truncation_symbol":"…"},"allOf":[{"$ref":"#/definitions/PijulConfig"}]},"pulumi":{"default":{"disabled":false,"format":"via [$symbol($username@)$stack]($style) ","search_upwards":true,"style":"bold 5","symbol":" ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/PulumiConfig"}]},"purescript":{"default":{"detect_extensions":["purs"],"detect_files":["spago.dhall"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold white","symbol":"&lt;=&gt; ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/PureScriptConfig"}]},"python":{"default":{"detect_extensions":["py"],"detect_files":["requirements.txt",".python-version","pyproject.toml","Pipfile","tox.ini","setup.py","__init__.py"],"detect_folders":[],"disabled":false,"format":"via [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)","pyenv_prefix":"pyenv ","pyenv_version_name":false,"python_binary":["python","python3","python2"],"style":"yellow bold","symbol":"🐍 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/PythonConfig"}]},"raku":{"default":{"detect_extensions":["p6","pm6","pod6","raku","rakumod"],"detect_files":["META6.json"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version-$vm_version )]($style)","style":"149 bold","symbol":"🦋 ","version_format":"${raw}"},"allOf":[{"$ref":"#/definitions/RakuConfig"}]},"red":{"default":{"detect_extensions":["red","reds"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"red bold","symbol":"🔺 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/RedConfig"}]},"rlang":{"default":{"detect_extensions":["R","Rd","Rmd","Rproj","Rsx"],"detect_files":[".Rprofile"],"detect_folders":[".Rproj.user"],"disabled":false,"format":"via [$symbol($version )]($style)","style":"blue bold","symbol":"📐 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/RLangConfig"}]},"ruby":{"default":{"detect_extensions":["rb"],"detect_files":["Gemfile",".ruby-version"],"detect_folders":[],"detect_variables":["RUBY_VERSION","RBENV_VERSION"],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold red","symbol":"💎 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/RubyConfig"}]},"rust":{"default":{"detect_extensions":["rs"],"detect_files":["Cargo.toml"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold red","symbol":"🦀 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/RustConfig"}]},"scala":{"default":{"detect_extensions":["sbt","scala"],"detect_files":[".scalaenv",".sbtenv","build.sbt"],"detect_folders":[".metals"],"disabled":false,"format":"via [$symbol($version )]($style)","style":"red bold","symbol":"🆂 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/ScalaConfig"}]},"shell":{"default":{"bash_indicator":"bsh","cmd_indicator":"cmd","disabled":true,"elvish_indicator":"esh","fish_indicator":"fsh","format":"[$indicator]($style) ","ion_indicator":"ion","nu_indicator":"nu","powershell_indicator":"psh","style":"white bold","tcsh_indicator":"tsh","unknown_indicator":"","xonsh_indicator":"xsh","zsh_indicator":"zsh"},"allOf":[{"$ref":"#/definitions/ShellConfig"}]},"shlvl":{"default":{"disabled":true,"format":"[$symbol$shlvl]($style) ","repeat":false,"style":"bold yellow","symbol":"↕️  ","threshold":2},"allOf":[{"$ref":"#/definitions/ShLvlConfig"}]},"singularity":{"default":{"disabled":false,"format":"[$symbol\\[$env\\]]($style) ","style":"blue bold dimmed","symbol":""},"allOf":[{"$ref":"#/definitions/SingularityConfig"}]},"solidity":{"default":{"compiler":["solc"],"detect_extensions":["sol"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version)]($style)","style":"bold blue","symbol":"S ","version_format":"v${major}.${minor}.${patch}"},"allOf":[{"$ref":"#/definitions/SolidityConfig"}]},"spack":{"default":{"disabled":false,"format":"via [$symbol$environment]($style) ","style":"blue bold","symbol":"🅢 ","truncation_length":1},"allOf":[{"$ref":"#/definitions/SpackConfig"}]},"status":{"default":{"disabled":true,"format":"[$symbol$status]($style) ","map_symbol":false,"not_executable_symbol":"🚫","not_found_symbol":"🔍","pipestatus":false,"pipestatus_format":"\\[$pipestatus\\] =&gt; [$symbol$common_meaning$signal_name$maybe_int]($style)","pipestatus_separator":"|","recognize_signal_code":true,"sigint_symbol":"🧱","signal_symbol":"⚡","style":"bold red","success_symbol":"","symbol":"❌"},"allOf":[{"$ref":"#/definitions/StatusConfig"}]},"sudo":{"default":{"allow_windows":false,"disabled":true,"format":"[as $symbol]($style)","style":"bold blue","symbol":"🧙 "},"allOf":[{"$ref":"#/definitions/SudoConfig"}]},"swift":{"default":{"detect_extensions":["swift"],"detect_files":["Package.swift"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold 202","symbol":"🐦 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/SwiftConfig"}]},"terraform":{"default":{"detect_extensions":["tf","tfplan","tfstate"],"detect_files":[],"detect_folders":[".terraform"],"disabled":false,"format":"via [$symbol$workspace]($style) ","style":"bold 105","symbol":"💠 ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/TerraformConfig"}]},"time":{"default":{"disabled":true,"format":"at [$time]($style) ","style":"bold yellow","time_range":"-","use_12hr":false,"utc_time_offset":"local"},"allOf":[{"$ref":"#/definitions/TimeConfig"}]},"username":{"default":{"disabled":false,"format":"[$user]($style) in ","show_always":false,"style_root":"red bold","style_user":"yellow bold"},"allOf":[{"$ref":"#/definitions/UsernameConfig"}]},"vagrant":{"default":{"detect_extensions":[],"detect_files":["Vagrantfile"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"cyan bold","symbol":"⍱ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/VagrantConfig"}]},"vcsh":{"default":{"disabled":false,"format":"vcsh [$symbol$repo]($style) ","style":"bold yellow","symbol":""},"allOf":[{"$ref":"#/definitions/VcshConfig"}]},"vlang":{"default":{"detect_extensions":["v"],"detect_files":["v.mod","vpkg.json",".vpkg-lock.json"],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"blue bold","symbol":"V ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/VConfig"}]},"zig":{"default":{"detect_extensions":["zig"],"detect_files":[],"detect_folders":[],"disabled":false,"format":"via [$symbol($version )]($style)","style":"bold yellow","symbol":"↯ ","version_format":"v${raw}"},"allOf":[{"$ref":"#/definitions/ZigConfig"}]},"custom":{"default":{},"type":"object","additionalProperties":{"$ref":"#/definitions/CustomConfig"}},"format":{"default":"$all","type":"string"},"right_format":{"default":"","type":"string"},"continuation_prompt":{"default":"[∙](bright-black) ","type":"string"},"scan_timeout":{"default":30,"type":"integer","format":"uint64","minimum":0},"command_timeout":{"default":500,"type":"integer","format":"uint64","minimum":0},"add_newline":{"default":true,"type":"boolean"},"palette":{"type":["string","null"]},"palettes":{"default":{},"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}},"profiles":{"default":{},"type":"object","additionalProperties":{"type":"string"}}},"additionalProperties":false,"definitions":{"AwsConfig":{"title":"AWS","description":"The `aws` module shows the current AWS region and profile and an expiration timer when using temporary credentials. The output of the module uses the `AWS_REGION`, `AWS_DEFAULT_REGION`, and `AWS_PROFILE` env vars and the `~/.aws/config` and `~/.aws/credentials` files as required.\n\nThe module will display a profile only if its credentials are present in `~/.aws/credentials` or if a `credential_process` or `sso_start_url` are defined in `~/.aws/config`. Alternatively, having any of the `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, or `AWS_SESSION_TOKEN` env vars defined will also suffice. If the option `force_display` is set to `true`, all available information will be displayed even if no credentials per the conditions above are detected.\n\nWhen using [aws-vault](https://github.com/99designs/aws-vault) the profile is read from the `AWS_VAULT` env var and the credentials expiration date is read from the `AWS_SESSION_EXPIRATION` or `AWS_CREDENTIAL_EXPIRATION` var.\n\nWhen using [awsu](https://github.com/kreuzwerker/awsu) the profile is read from the `AWSU_PROFILE` env var.\n\nWhen using [`AWSume`](https://awsu.me) the profile is read from the `AWSUME_PROFILE` env var and the credentials expiration date is read from the `AWSUME_EXPIRATION` env var.","type":"object","properties":{"format":{"description":"The format for the module.","default":"on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)","type":"string"},"symbol":{"description":"The symbol used before displaying the current AWS profile.","default":"☁️  ","type":"string"},"style":{"description":"The style for the module.","default":"bold yellow","type":"string"},"disabled":{"description":"Disables the AWS module.","default":false,"type":"boolean"},"region_aliases":{"description":"Table of region aliases to display in addition to the AWS name.","default":{},"type":"object","additionalProperties":{"type":"string"}},"profile_aliases":{"description":"Table of profile aliases to display in addition to the AWS name.","default":{},"type":"object","additionalProperties":{"type":"string"}},"expiration_symbol":{"description":"The symbol displayed when the temporary credentials have expired.","default":"X","type":"string"},"force_display":{"description":"If true displays info even if `credentials`, `credential_process` or `sso_start_url` have not been setup.","default":false,"type":"boolean"}},"additionalProperties":false},"AzureConfig":{"type":"object","properties":{"format":{"default":"on [$symbol($subscription)]($style) ","type":"string"},"symbol":{"default":"󰠅 ","type":"string"},"style":{"default":"blue bold","type":"string"},"disabled":{"default":true,"type":"boolean"},"subscription_aliases":{"default":{},"type":"object","additionalProperties":{"type":"string"}}},"additionalProperties":false},"BatteryConfig":{"type":"object","properties":{"full_symbol":{"default":"󰁹 ","type":"string"},"charging_symbol":{"default":"󰂄 ","type":"string"},"discharging_symbol":{"default":"󰂃 ","type":"string"},"unknown_symbol":{"default":"󰁽 ","type":"string"},"empty_symbol":{"default":"󰂎 ","type":"string"},"display":{"default":[{"charging_symbol":null,"discharging_symbol":null,"style":"red bold","threshold":10}],"type":"array","items":{"$ref":"#/definitions/BatteryDisplayConfig"}},"disabled":{"default":false,"type":"boolean"},"format":{"default":"[$symbol$percentage]($style) ","type":"string"}},"additionalProperties":false},"BatteryDisplayConfig":{"type":"object","properties":{"threshold":{"default":10,"type":"integer","format":"int64"},"style":{"default":"red bold","type":"string"},"charging_symbol":{"default":null,"type":["string","null"]},"discharging_symbol":{"default":null,"type":["string","null"]}},"additionalProperties":false},"BufConfig":{"type":"object","properties":{"format":{"default":"with [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🐃 ","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["buf.yaml","buf.gen.yaml","buf.work.yaml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"BunConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🍞 ","type":"string"},"style":{"default":"bold red","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["bun.lockb","bunfig.toml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"CConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version(-$name) )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"style":{"default":"149 bold","type":"string"},"symbol":{"default":"C ","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["c","h"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}},"commands":{"default":[["cc","--version"],["gcc","--version"],["clang","--version"]],"type":"array","items":{"type":"array","items":{"type":"string"}}}},"additionalProperties":false},"CharacterConfig":{"type":"object","properties":{"format":{"default":"$symbol ","type":"string"},"success_symbol":{"default":"[❯](bold green)","type":"string"},"error_symbol":{"default":"[❯](bold red)","type":"string"},"vimcmd_symbol":{"default":"[❮](bold green)","type":"string"},"vimcmd_visual_symbol":{"default":"[❮](bold yellow)","type":"string"},"vimcmd_replace_symbol":{"default":"[❮](bold purple)","type":"string"},"vimcmd_replace_one_symbol":{"default":"[❮](bold purple)","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"CMakeConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"△ ","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["CMakeLists.txt","CMakeCache.txt"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"CmdDurationConfig":{"type":"object","properties":{"min_time":{"default":2000,"type":"integer","format":"int64"},"format":{"default":"took [$duration]($style) ","type":"string"},"style":{"default":"yellow bold","type":"string"},"show_milliseconds":{"default":false,"type":"boolean"},"disabled":{"default":false,"type":"boolean"},"show_notifications":{"default":false,"type":"boolean"},"min_time_to_notify":{"default":45000,"type":"integer","format":"int64"},"notification_timeout":{"type":["integer","null"],"format":"uint32","minimum":0}},"additionalProperties":false},"CobolConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"⚙️ ","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["cbl","cob","CBL","COB"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"CondaConfig":{"type":"object","properties":{"truncation_length":{"default":1,"type":"integer","format":"uint","minimum":0},"format":{"default":"via [$symbol$environment]($style) ","type":"string"},"symbol":{"default":"🅒 ","type":"string"},"style":{"default":"green bold","type":"string"},"ignore_base":{"default":true,"type":"boolean"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"ContainerConfig":{"type":"object","properties":{"format":{"default":"[$symbol \\[$name\\]]($style) ","type":"string"},"symbol":{"default":"⬢","type":"string"},"style":{"default":"red bold dimmed","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"CrystalConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🔮 ","type":"string"},"style":{"default":"bold red","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["cr"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["shard.yml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"DamlConfig":{"type":"object","properties":{"symbol":{"default":"Λ ","type":"string"},"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"style":{"default":"bold cyan","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["daml.yaml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"DartConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🎯 ","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["dart"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["pubspec.yaml","pubspec.yml","pubspec.lock"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[".dart_tool"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"DenoConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🦕 ","type":"string"},"style":{"default":"green bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["deno.json","deno.jsonc","mod.ts","deps.ts","mod.js","deps.js"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"DirectoryConfig":{"type":"object","properties":{"truncation_length":{"default":3,"type":"integer","format":"int64"},"truncate_to_repo":{"default":true,"type":"boolean"},"substitutions":{"default":{},"type":"object","additionalProperties":{"type":"string"}},"fish_style_pwd_dir_length":{"default":0,"type":"integer","format":"int64"},"use_logical_path":{"default":true,"type":"boolean"},"format":{"default":"[$path]($style)[$read_only]($read_only_style) ","type":"string"},"repo_root_format":{"default":"[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) ","type":"string"},"style":{"default":"cyan bold","type":"string"},"repo_root_style":{"default":null,"type":["string","null"]},"before_repo_root_style":{"default":null,"type":["string","null"]},"disabled":{"default":false,"type":"boolean"},"read_only":{"default":"🔒","type":"string"},"read_only_style":{"default":"red","type":"string"},"truncation_symbol":{"default":"","type":"string"},"home_symbol":{"default":"~","type":"string"},"use_os_path_sep":{"default":true,"type":"boolean"}},"additionalProperties":false},"DockerContextConfig":{"type":"object","properties":{"symbol":{"default":"🐳 ","type":"string"},"style":{"default":"blue bold","type":"string"},"format":{"default":"via [$symbol$context]($style) ","type":"string"},"only_with_files":{"default":true,"type":"boolean"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["docker-compose.yml","docker-compose.yaml","Dockerfile"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"DotnetConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )(🎯 $tfm )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":".NET ","type":"string"},"style":{"default":"blue bold","type":"string"},"heuristic":{"default":true,"type":"boolean"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["csproj","fsproj","xproj"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["global.json","project.json","Directory.Build.props","Directory.Build.targets","Packages.props"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"ElixirConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version \\(OTP $otp_version\\) )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"💧 ","type":"string"},"style":{"default":"bold purple","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["mix.exs"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"ElmConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🌳 ","type":"string"},"style":{"default":"cyan bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["elm"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["elm.json","elm-package.json",".elm-version"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":["elm-stuff"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"EnvVarConfig":{"type":"object","properties":{"symbol":{"default":"","type":"string"},"style":{"default":"black bold dimmed","type":"string"},"variable":{"type":["string","null"]},"default":{"type":["string","null"]},"format":{"default":"with [$env_value]($style) ","type":"string"},"disabled":{"default":false,"type":"boolean"},"description":{"default":"<env_var module="">","type":"string"}},"additionalProperties":false},"ErlangConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":" ","type":"string"},"style":{"default":"bold red","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["rebar.config","erlang.mk"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"FennelConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🧅 ","type":"string"},"style":{"default":"bold green","type":"string"},"disabled":{"default":true,"type":"boolean"},"detect_extensions":{"default":["fnl"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"FillConfig":{"type":"object","properties":{"style":{"default":"bold black","type":"string"},"symbol":{"default":".","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"FossilBranchConfig":{"type":"object","properties":{"format":{"default":"on [$symbol$branch]($style) ","type":"string"},"symbol":{"default":" ","type":"string"},"style":{"default":"bold purple","type":"string"},"truncation_length":{"default":9223372036854776000,"type":"integer","format":"int64"},"truncation_symbol":{"default":"…","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"GcloudConfig":{"type":"object","properties":{"format":{"default":"on [$symbol$account(@$domain)(\\($region\\))]($style) ","type":"string"},"symbol":{"default":"☁️  ","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"},"region_aliases":{"default":{},"type":"object","additionalProperties":{"type":"string"}},"project_aliases":{"default":{},"type":"object","additionalProperties":{"type":"string"}},"detect_env_vars":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"GitBranchConfig":{"type":"object","properties":{"format":{"default":"on [$symbol$branch(:$remote_branch)]($style) ","type":"string"},"symbol":{"default":" ","type":"string"},"style":{"default":"bold purple","type":"string"},"truncation_length":{"default":9223372036854776000,"type":"integer","format":"int64"},"truncation_symbol":{"default":"…","type":"string"},"only_attached":{"default":false,"type":"boolean"},"always_show_remote":{"default":false,"type":"boolean"},"ignore_branches":{"default":[],"type":"array","items":{"type":"string"}},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"GitCommitConfig":{"type":"object","properties":{"commit_hash_length":{"default":7,"type":"integer","format":"uint","minimum":0},"format":{"default":"[\\($hash$tag\\)]($style) ","type":"string"},"style":{"default":"green bold","type":"string"},"only_detached":{"default":true,"type":"boolean"},"disabled":{"default":false,"type":"boolean"},"tag_symbol":{"default":" 🏷  ","type":"string"},"tag_disabled":{"default":true,"type":"boolean"},"tag_max_candidates":{"default":0,"type":"integer","format":"uint","minimum":0}},"additionalProperties":false},"GitMetricsConfig":{"type":"object","properties":{"added_style":{"default":"bold green","type":"string"},"deleted_style":{"default":"bold red","type":"string"},"only_nonzero_diffs":{"default":true,"type":"boolean"},"format":{"default":"([+$added]($added_style) )([-$deleted]($deleted_style) )","type":"string"},"disabled":{"default":true,"type":"boolean"},"ignore_submodules":{"default":false,"type":"boolean"}},"additionalProperties":false},"GitStateConfig":{"type":"object","properties":{"rebase":{"default":"REBASING","type":"string"},"merge":{"default":"MERGING","type":"string"},"revert":{"default":"REVERTING","type":"string"},"cherry_pick":{"default":"CHERRY-PICKING","type":"string"},"bisect":{"default":"BISECTING","type":"string"},"am":{"default":"AM","type":"string"},"am_or_rebase":{"default":"AM/REBASE","type":"string"},"style":{"default":"bold yellow","type":"string"},"format":{"default":"\\([$state( $progress_current/$progress_total)]($style)\\) ","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"GitStatusConfig":{"type":"object","properties":{"format":{"default":"([\\[$all_status$ahead_behind\\]]($style) )","type":"string"},"style":{"default":"red bold","type":"string"},"stashed":{"default":"\\$","type":"string"},"ahead":{"default":"⇡","type":"string"},"behind":{"default":"⇣","type":"string"},"up_to_date":{"default":"","type":"string"},"diverged":{"default":"⇕","type":"string"},"conflicted":{"default":"=","type":"string"},"deleted":{"default":"✘","type":"string"},"renamed":{"default":"»","type":"string"},"modified":{"default":"!","type":"string"},"staged":{"default":"+","type":"string"},"untracked":{"default":"?","type":"string"},"typechanged":{"default":"","type":"string"},"ignore_submodules":{"default":false,"type":"boolean"},"disabled":{"default":false,"type":"boolean"},"windows_starship":{"type":["string","null"]}},"additionalProperties":false},"GoConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🐹 ","type":"string"},"style":{"default":"bold cyan","type":"string"},"disabled":{"default":false,"type":"boolean"},"not_capable_style":{"default":"bold red","type":"string"},"detect_extensions":{"default":["go"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["go.mod","go.sum","go.work","glide.yaml","Gopkg.yml","Gopkg.lock",".go-version"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":["Godeps"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"GradleConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🅶 ","type":"string"},"style":{"default":"bold bright-cyan","type":"string"},"disabled":{"default":false,"type":"boolean"},"recursive":{"default":false,"type":"boolean"},"detect_extensions":{"default":["gradle","gradle.kts"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":["gradle"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"GuixShellConfig":{"type":"object","properties":{"format":{"default":"via [$symbol]($style) ","type":"string"},"symbol":{"default":"🐃 ","type":"string"},"style":{"default":"yellow bold","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"HaskellConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"λ ","type":"string"},"style":{"default":"bold purple","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["hs","cabal","hs-boot"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["stack.yaml","cabal.project"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"HaxeConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"⌘ ","type":"string"},"style":{"default":"bold fg:202","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["hx","hxml"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["haxelib.json","hxformat.json",".haxerc"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[".haxelib","haxe_libraries"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"HelmConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"⎈ ","type":"string"},"style":{"default":"bold white","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["helmfile.yaml","Chart.yaml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"HgBranchConfig":{"type":"object","properties":{"symbol":{"default":" ","type":"string"},"style":{"default":"bold purple","type":"string"},"format":{"default":"on [$symbol$branch(:$topic)]($style) ","type":"string"},"truncation_length":{"default":9223372036854776000,"type":"integer","format":"int64"},"truncation_symbol":{"default":"…","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"HostnameConfig":{"type":"object","properties":{"ssh_only":{"default":true,"type":"boolean"},"ssh_symbol":{"default":"🌐 ","type":"string"},"trim_at":{"default":".","type":"string"},"format":{"default":"[$ssh_symbol$hostname]($style) in ","type":"string"},"style":{"default":"green dimmed bold","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"JavaConfig":{"type":"object","properties":{"disabled":{"default":false,"type":"boolean"},"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"style":{"default":"red dimmed","type":"string"},"symbol":{"default":"☕ ","type":"string"},"detect_extensions":{"default":["java","class","jar","gradle","clj","cljc"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["pom.xml","build.gradle.kts","build.sbt",".java-version","deps.edn","project.clj","build.boot",".sdkmanrc"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"JobsConfig":{"type":"object","properties":{"threshold":{"default":1,"type":"integer","format":"int64"},"symbol_threshold":{"default":1,"type":"integer","format":"int64"},"number_threshold":{"default":2,"type":"integer","format":"int64"},"format":{"default":"[$symbol$number]($style) ","type":"string"},"symbol":{"default":"✦","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"JuliaConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"ஃ ","type":"string"},"style":{"default":"bold purple","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["jl"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["Project.toml","Manifest.toml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"KotlinConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🅺 ","type":"string"},"style":{"default":"bold blue","type":"string"},"kotlin_binary":{"default":"kotlin","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["kt","kts"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"KubernetesConfig":{"type":"object","properties":{"symbol":{"default":"☸ ","type":"string"},"format":{"default":"[$symbol$context( \\($namespace\\))]($style) in ","type":"string"},"style":{"default":"cyan bold","type":"string"},"disabled":{"default":true,"type":"boolean"},"context_aliases":{"default":{},"type":"object","additionalProperties":{"type":"string"}},"user_aliases":{"default":{},"type":"object","additionalProperties":{"type":"string"}},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"LineBreakConfig":{"type":"object","properties":{"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"LocalipConfig":{"type":"object","properties":{"ssh_only":{"default":true,"type":"boolean"},"format":{"default":"[$localipv4]($style) ","type":"string"},"style":{"default":"yellow bold","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"LuaConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🌙 ","type":"string"},"style":{"default":"bold blue","type":"string"},"lua_binary":{"default":"lua","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["lua"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[".lua-version"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":["lua"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"MemoryConfig":{"type":"object","properties":{"threshold":{"default":75,"type":"integer","format":"int64"},"format":{"default":"via $symbol[$ram( | $swap)]($style) ","type":"string"},"style":{"default":"white bold dimmed","type":"string"},"symbol":{"default":"🐏 ","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"MesonConfig":{"type":"object","properties":{"truncation_length":{"default":4294967295,"type":"integer","format":"uint32","minimum":0},"truncation_symbol":{"default":"…","type":"string"},"format":{"default":"via [$symbol$project]($style) ","type":"string"},"symbol":{"default":"⬢ ","type":"string"},"style":{"default":"blue bold","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"NimConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"👑 ","type":"string"},"style":{"default":"yellow bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["nim","nims","nimble"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["nim.cfg"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"NixShellConfig":{"type":"object","properties":{"format":{"default":"via [$symbol$state( \\($name\\))]($style) ","type":"string"},"symbol":{"default":"❄️  ","type":"string"},"style":{"default":"bold blue","type":"string"},"impure_msg":{"default":"impure","type":"string"},"pure_msg":{"default":"pure","type":"string"},"unknown_msg":{"default":"","type":"string"},"disabled":{"default":false,"type":"boolean"},"heuristic":{"default":false,"type":"boolean"}},"additionalProperties":false},"NodejsConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":" ","type":"string"},"style":{"default":"bold green","type":"string"},"disabled":{"default":false,"type":"boolean"},"not_capable_style":{"default":"bold red","type":"string"},"detect_extensions":{"default":["js","mjs","cjs","ts","mts","cts"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["package.json",".node-version",".nvmrc"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":["node_modules"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"OCamlConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"global_switch_indicator":{"default":"","type":"string"},"local_switch_indicator":{"default":"*","type":"string"},"symbol":{"default":"🐫 ","type":"string"},"style":{"default":"bold yellow","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["opam","ml","mli","re","rei"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["dune","dune-project","jbuild","jbuild-ignore",".merlin"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":["_opam","esy.lock"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"OpaConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🪖  ","type":"string"},"style":{"default":"bold blue","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["rego"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"OspConfig":{"type":"object","properties":{"format":{"default":"on [$symbol$cloud(\\($project\\))]($style) ","type":"string"},"symbol":{"default":"☁️  ","type":"string"},"style":{"default":"bold yellow","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"OSConfig":{"type":"object","properties":{"format":{"default":"[$symbol]($style)","type":"string"},"style":{"default":"bold white","type":"string"},"symbols":{"default":{"Alpaquita":"🔔 ","Alpine":"🏔️ ","Amazon":"🙂 ","Android":"🤖 ","Arch":"🎗️ ","Artix":"🎗️ ","CentOS":"💠 ","Debian":"🌀 ","DragonFly":"🐉 ","Emscripten":"🔗 ","EndeavourOS":"🚀 ","Fedora":"🎩 ","FreeBSD":"😈 ","Garuda":"🦅 ","Gentoo":"🗜️ ","HardenedBSD":"🛡️ ","Illumos":"🐦 ","Linux":"🐧 ","Mabox":"📦 ","Macos":"🍎 ","Manjaro":"🥭 ","Mariner":"🌊 ","MidnightBSD":"🌘 ","Mint":"🌿 ","NetBSD":"🚩 ","NixOS":"❄️ ","OpenBSD":"🐡 ","OpenCloudOS":"☁️ ","OracleLinux":"🦴 ","Pop":"🍭 ","Raspbian":"🍓 ","RedHatEnterprise":"🎩 ","Redhat":"🎩 ","Redox":"🧪 ","SUSE":"🦎 ","Solus":"⛵ ","Ubuntu":"🎯 ","Unknown":"❓ ","Windows":"🪟 ","openEuler":"🦉 ","openSUSE":"🦎 "},"type":"object","additionalProperties":{"type":"string"}},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"PackageConfig":{"type":"object","properties":{"format":{"default":"is [$symbol$version]($style) ","type":"string"},"symbol":{"default":"📦 ","type":"string"},"style":{"default":"208 bold","type":"string"},"display_private":{"default":false,"type":"boolean"},"disabled":{"default":false,"type":"boolean"},"version_format":{"default":"v${raw}","type":"string"}},"additionalProperties":false},"PerlConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🐪 ","type":"string"},"style":{"default":"149 bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["pl","pm","pod"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["Makefile.PL","Build.PL","cpanfile","cpanfile.snapshot","META.json","META.yml",".perl-version"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"PhpConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🐘 ","type":"string"},"style":{"default":"147 bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["php"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["composer.json",".php-version"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"PijulConfig":{"type":"object","properties":{"symbol":{"default":" ","type":"string"},"style":{"default":"bold purple","type":"string"},"format":{"default":"on [$symbol$channel]($style) ","type":"string"},"truncation_length":{"default":9223372036854776000,"type":"integer","format":"int64"},"truncation_symbol":{"default":"…","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"PulumiConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($username@)$stack]($style) ","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":" ","type":"string"},"style":{"default":"bold 5","type":"string"},"disabled":{"default":false,"type":"boolean"},"search_upwards":{"default":true,"type":"boolean"}},"additionalProperties":false},"PureScriptConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"&lt;=&gt; ","type":"string"},"style":{"default":"bold white","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["purs"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["spago.dhall"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"PythonConfig":{"type":"object","properties":{"pyenv_version_name":{"default":false,"type":"boolean"},"pyenv_prefix":{"default":"pyenv ","type":"string"},"python_binary":{"default":["python","python3","python2"],"allOf":[{"$ref":"#/definitions/Either_for_String_and_Array_of_String"}]},"format":{"default":"via [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"style":{"default":"yellow bold","type":"string"},"symbol":{"default":"🐍 ","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["py"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["requirements.txt",".python-version","pyproject.toml","Pipfile","tox.ini","setup.py","__init__.py"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"Either_for_String_and_Array_of_String":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"RakuConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version-$vm_version )]($style)","type":"string"},"version_format":{"default":"${raw}","type":"string"},"symbol":{"default":"🦋 ","type":"string"},"style":{"default":"149 bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["p6","pm6","pod6","raku","rakumod"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["META6.json"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"RedConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🔺 ","type":"string"},"style":{"default":"red bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["red","reds"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"RLangConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"style":{"default":"blue bold","type":"string"},"symbol":{"default":"📐 ","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["R","Rd","Rmd","Rproj","Rsx"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[".Rprofile"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[".Rproj.user"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"RubyConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"💎 ","type":"string"},"style":{"default":"bold red","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["rb"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["Gemfile",".ruby-version"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}},"detect_variables":{"default":["RUBY_VERSION","RBENV_VERSION"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"RustConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🦀 ","type":"string"},"style":{"default":"bold red","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["rs"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["Cargo.toml"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"ScalaConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"disabled":{"default":false,"type":"boolean"},"style":{"default":"red bold","type":"string"},"symbol":{"default":"🆂 ","type":"string"},"detect_extensions":{"default":["sbt","scala"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[".scalaenv",".sbtenv","build.sbt"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[".metals"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"ShellConfig":{"type":"object","properties":{"format":{"default":"[$indicator]($style) ","type":"string"},"bash_indicator":{"default":"bsh","type":"string"},"fish_indicator":{"default":"fsh","type":"string"},"zsh_indicator":{"default":"zsh","type":"string"},"powershell_indicator":{"default":"psh","type":"string"},"ion_indicator":{"default":"ion","type":"string"},"elvish_indicator":{"default":"esh","type":"string"},"tcsh_indicator":{"default":"tsh","type":"string"},"nu_indicator":{"default":"nu","type":"string"},"xonsh_indicator":{"default":"xsh","type":"string"},"cmd_indicator":{"default":"cmd","type":"string"},"unknown_indicator":{"default":"","type":"string"},"style":{"default":"white bold","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"ShLvlConfig":{"type":"object","properties":{"threshold":{"default":2,"type":"integer","format":"int64"},"format":{"default":"[$symbol$shlvl]($style) ","type":"string"},"symbol":{"default":"↕️  ","type":"string"},"repeat":{"default":false,"type":"boolean"},"style":{"default":"bold yellow","type":"string"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"SingularityConfig":{"type":"object","properties":{"symbol":{"default":"","type":"string"},"format":{"default":"[$symbol\\[$env\\]]($style) ","type":"string"},"style":{"default":"blue bold dimmed","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"SolidityConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version)]($style)","type":"string"},"version_format":{"default":"v${major}.${minor}.${patch}","type":"string"},"disabled":{"default":false,"type":"boolean"},"style":{"default":"bold blue","type":"string"},"symbol":{"default":"S ","type":"string"},"compiler":{"default":["solc"],"allOf":[{"$ref":"#/definitions/Either_for_String_and_Array_of_String"}]},"detect_extensions":{"default":["sol"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"SpackConfig":{"type":"object","properties":{"truncation_length":{"default":1,"type":"integer","format":"uint","minimum":0},"format":{"default":"via [$symbol$environment]($style) ","type":"string"},"symbol":{"default":"🅢 ","type":"string"},"style":{"default":"blue bold","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"StatusConfig":{"type":"object","properties":{"format":{"default":"[$symbol$status]($style) ","type":"string"},"symbol":{"default":"❌","type":"string"},"success_symbol":{"default":"","type":"string"},"not_executable_symbol":{"default":"🚫","type":"string"},"not_found_symbol":{"default":"🔍","type":"string"},"sigint_symbol":{"default":"🧱","type":"string"},"signal_symbol":{"default":"⚡","type":"string"},"style":{"default":"bold red","type":"string"},"map_symbol":{"default":false,"type":"boolean"},"recognize_signal_code":{"default":true,"type":"boolean"},"pipestatus":{"default":false,"type":"boolean"},"pipestatus_separator":{"default":"|","type":"string"},"pipestatus_format":{"default":"\\[$pipestatus\\] =&gt; [$symbol$common_meaning$signal_name$maybe_int]($style)","type":"string"},"pipestatus_segment_format":{"type":["string","null"]},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"SudoConfig":{"type":"object","properties":{"format":{"default":"[as $symbol]($style)","type":"string"},"symbol":{"default":"🧙 ","type":"string"},"style":{"default":"bold blue","type":"string"},"allow_windows":{"default":false,"type":"boolean"},"disabled":{"default":true,"type":"boolean"}},"additionalProperties":false},"SwiftConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"🐦 ","type":"string"},"style":{"default":"bold 202","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["swift"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["Package.swift"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"TerraformConfig":{"type":"object","properties":{"format":{"default":"via [$symbol$workspace]($style) ","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"💠 ","type":"string"},"style":{"default":"bold 105","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["tf","tfplan","tfstate"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[".terraform"],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"TimeConfig":{"type":"object","properties":{"format":{"default":"at [$time]($style) ","type":"string"},"style":{"default":"bold yellow","type":"string"},"use_12hr":{"default":false,"type":"boolean"},"time_format":{"type":["string","null"]},"disabled":{"default":true,"type":"boolean"},"utc_time_offset":{"default":"local","type":"string"},"time_range":{"default":"-","type":"string"}},"additionalProperties":false},"UsernameConfig":{"type":"object","properties":{"format":{"default":"[$user]($style) in ","type":"string"},"style_root":{"default":"red bold","type":"string"},"style_user":{"default":"yellow bold","type":"string"},"show_always":{"default":false,"type":"boolean"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"VagrantConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"⍱ ","type":"string"},"style":{"default":"cyan bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_files":{"default":["Vagrantfile"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"VcshConfig":{"type":"object","properties":{"symbol":{"default":"","type":"string"},"style":{"default":"bold yellow","type":"string"},"format":{"default":"vcsh [$symbol$repo]($style) ","type":"string"},"disabled":{"default":false,"type":"boolean"}},"additionalProperties":false},"VConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"V ","type":"string"},"style":{"default":"blue bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["v"],"type":"array","items":{"type":"string"}},"detect_files":{"default":["v.mod","vpkg.json",".vpkg-lock.json"],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"ZigConfig":{"type":"object","properties":{"format":{"default":"via [$symbol($version )]($style)","type":"string"},"version_format":{"default":"v${raw}","type":"string"},"symbol":{"default":"↯ ","type":"string"},"style":{"default":"bold yellow","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_extensions":{"default":["zig"],"type":"array","items":{"type":"string"}},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}}},"additionalProperties":false},"CustomConfig":{"type":"object","properties":{"format":{"default":"[$symbol($output )]($style)","type":"string"},"symbol":{"default":"","type":"string"},"command":{"default":"","type":"string"},"when":{"default":false,"allOf":[{"$ref":"#/definitions/Either_for_Boolean_and_String"}]},"require_repo":{"default":false,"type":"boolean"},"shell":{"default":[],"allOf":[{"$ref":"#/definitions/Either_for_String_and_Array_of_String"}]},"description":{"default":"<custom config="">","type":"string"},"style":{"default":"green bold","type":"string"},"disabled":{"default":false,"type":"boolean"},"detect_files":{"default":[],"type":"array","items":{"type":"string"}},"detect_extensions":{"default":[],"type":"array","items":{"type":"string"}},"detect_folders":{"default":[],"type":"array","items":{"type":"string"}},"os":{"type":["string","null"]},"use_stdin":{"type":["boolean","null"]},"ignore_timeout":{"default":false,"type":"boolean"}},"additionalProperties":false},"Either_for_Boolean_and_String":{"anyOf":[{"type":"boolean"},{"type":"string"}]}}}</custom></env_var>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>泛基因组工具PGGB文档学习</title>
      <link href="/article/pggb/"/>
      <url>/article/pggb/</url>
      
        <content type="html"><![CDATA[<h1 id="文献笔记"><a href="#文献笔记" class="headerlink" title="文献笔记"></a>文献笔记</h1><p>泛基因组包含了所有的序列、基因组间的同源性和所有的变异类型。泛基因组可以用于变异检测、保守性估计、重组事件评估和推断系统发育关系。现有的方法使用reference的策略和tree-guide的方法构建泛基因组，这些方法得到的遗传变异信息会不完整，也不稳定。现有的方法基本上就是把与参考基因组足够相似的序列添加到参考基因组上，这些方法后对结构上高度可变的区域进行修剪处理，例如着丝粒和其他是卫星序列。PGGB是reference-free的流程，能够构建无偏差的泛基因组变异图。</p><h2 id="WFMASH两两比对"><a href="#WFMASH两两比对" class="headerlink" title="WFMASH两两比对"></a>WFMASH两两比对</h2><p>PGGB从序列比对开始。reads、genes和genome甚至是这三者的组合都可以用于构建泛基因组，格式是FASTA或者是FASTQ都可以。为了避免参考基因组和顺序的偏差影响，PGGB使用all-to-all的策略进行序列比对。这样的好处就是每条序列在泛基因组中都可以作为reference来描述遗传变异。有个问题就是两两比较的话会有个问题就是需要更多的计算资源和时间，PGGB使用的是WFMASH，这个软件利用序列片段进行同源性比较，而不是使用单个碱基来进行同源性比较。这个方法能够保留较长范围内的共线性，但是对转座子和微卫星序列之间的重复序列以和较短的相似序列并不敏感。WFMASH的比对结果是PGGB构建泛基因组的理想结构，但是PGGB也可以使用任何以PAF格式存储的比对结果构建泛基因组。</p><h2 id="SEQWISH构建variation-graph"><a href="#SEQWISH构建variation-graph" class="headerlink" title="SEQWISH构建variation graph"></a>SEQWISH构建variation graph</h2><p>第二步是泛基因组graph构建：使用SEQWISH将基因组和成对比对结果转换为变异图（variation graph）。SEQWISH能够将上一步比对结果中的不存在的同源关系进行恢复（The SEQWISH graph recovers transitive homology relationships that may not be present in the initial alignment set）。这样的好处是能够使用随机稀疏化来降低比对结果的复杂性。首先是提取WFMASH结果中的同源比对结果，然后只align上一步mapping结果中的一个子集。我们期望泛基因组的每个同源locus的alignment graph是局部全连接的，这样的话就需要足够多的mapping. PGGB使用基于 Erdös–Rényi 随机图模型的方法来确保稀疏化的安全阈值。这样做的好处是不用计算所有的两两比对就能重建variation graph中的传递关系。这样就能在保证结果准确的前提下还能降低运行时间，增加10倍基因组，只需要增加44倍左右的时间，而不是100倍。</p><h2 id="SMOOTHXG构建泛基因组"><a href="#SMOOTHXG构建泛基因组" class="headerlink" title="SMOOTHXG构建泛基因组"></a>SMOOTHXG构建泛基因组</h2><p>第三步是使用SMOOTHXG 局部压缩和简化泛基因组variation graph来完成泛基因组构建。上一步的SEQWISH构建的graph已经是近乎完整的模型，这个模型已经能够代表输入的基因组和序列之间的alignment了；但是通常会含有复杂的局部motif，这些motif会使得下游的分析变得更加复杂。之所以这样是因为输入的用于alignment的序列之间并没有进行相互标准化，从而导致低复杂度序列中变异的表示有所不同，还可能多出一些密集的小的looping motif. 为了解决这个问题，PGGB采用的方法是移除SEQWISH输入数据中短的match. 这样是可以降低复杂度，但是呢也可能会生成一个并不能代表所有局部成对关系的graph. 为了解决这个问题，PGGB使用偏序比对（partial order alignment，POA）来解决这个问题。这种方法会删除长度短于POA长度的小圈（small cycles），但是会保留更大的cycles，这些更大的cycles可以紧凑地表示结构可变的loci. 这样做有利于针对短reads、古老的和低覆盖度的基因组进行genotyping. SMOOTHXG能够使用POA的优势去优化泛基因组。GFAFFIX用于压缩非冗余的nodes，ODGI对最终的graph进行排序。</p><h2 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h2><p>PGGB输出的结果可以用于解释、质控和下游分析。使用ODGI可以对泛基因组进行基本的统计和可视化，也可以输出MultiQC报告。使用VG可以从PGGB输出的结果中鉴定遗传变异，生成对对应的VCF文件。为了便于后续分析，PGGB使用BiWFA将复杂的嵌套变异分解为最小化的reference-relative的表示。这时候PGGB就成为了多样本全基因组组装的遗传变异调用器。</p><h2 id="benchmark"><a href="#benchmark" class="headerlink" title="benchmark"></a>benchmark</h2><p>PGGB表现和MUMMER4大差不差，但是呢MUMMER4输出的结果是针对某个参考基因组的，而PGGB输出的结果是针对所有的基因组的。</p><p>在variation graph中，nodes表示的是alleles，可以将基因组理解为等位基因计数的载体。基于这种方法可以考虑所有的变异类型，而且不会因为参考基因组的不同而有偏差。PGGB构建的系统发育树和先前的研究使用SNP构建的系统发育树一致。有趣的是，基于MUMMER结果的SNV-based构建失败的系统发育树施用PGGB构建成功。Minigraph-Cactus这种方法构建的泛基因组构建的系统发育树和先前的研究所报道的有所差异。</p><h2 id="PGGB优势"><a href="#PGGB优势" class="headerlink" title="PGGB优势"></a>PGGB优势</h2><ul><li>无偏差：和序列顺序无关、和系统发育无关；</li><li>无损：输入的基因组都保留在了泛基因组中，每个基因组都可以作为下游分析的参考基因组；</li><li>模块化：每个模块输出的文件都是文本格式的，方便后续的其他泛基因组构建方法进行调用；</li><li>已验证：HPRC就是使用PGGB构建的人类泛基因组</li><li>开放性：社区开发，流程部署</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>需要用到的软件有：wfmash、seqwish、smoothxg、odgi和gfaffix. 这些软件可以使用conda安装。</p><p><a href="https://github.com/waveygang/wfmash">https://github.com/waveygang/wfmash</a></p><p><a href="https://github.com/ekg/seqwish">https://github.com/ekg/seqwish</a></p><p><a href="https://github.com/pangenome/smoothxg">https://github.com/pangenome/smoothxg</a></p><p><a href="https://github.com/pangenome/odgi">https://github.com/pangenome/odgi</a></p><p><a href="https://github.com/marschall-lab/GFAffix">https://github.com/marschall-lab/GFAffix</a></p><p>选择性安装的软件有：bcftools、vcfbub、vcfwave和vg.，这几个软件用于鉴定和标准化变异；MultiQC生成简单的描述统计结果；pigz用于压缩流程中的输出文件。</p><p><a href="https://github.com/samtools/bcftools">https://github.com/samtools/bcftools</a></p><p><a href="https://github.com/pangenome/vcfbub">https://github.com/pangenome/vcfbub</a></p><p><a href="https://manpages.ubuntu.com/manpages/noble/man1/vcfwave.1.html">https://manpages.ubuntu.com/manpages/noble/man1/vcfwave.1.html</a></p><p><a href="https://github.com/vgteam/vg">https://github.com/vgteam/vg</a></p><p><a href="https://github.com/MultiQC/MultiQC">https://github.com/MultiQC/MultiQC</a></p><p><a href="https://github.com/madler/pigz">https://github.com/madler/pigz</a></p><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull ghcr.io/pangenome/pggb:latest<br></code></pre></td></tr></tbody></table></figure><p>或者从dockerhub安装：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull pangenome/pggb<br></code></pre></td></tr></tbody></table></figure><p>示例用法：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -it -v <span class="hljs-variable">${PWD}</span>/data/:/data ghcr.io/pangenome/pggb:latest /bin/bash -c <span class="hljs-string">"pggb -i /data/HLA/DRB1-3123.fa.gz -p 70 -s 3000 -n 10 -t 16 -V 'gi|568815561' -o /data/out"</span><br></code></pre></td></tr></tbody></table></figure><p>-v这个参数最好是用全部的路径。</p><h2 id="Singularity"><a href="#Singularity" class="headerlink" title="Singularity"></a>Singularity</h2><p>集群上通常使用Singularity替代docker. </p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">singularity pull docker://ghcr.io/pangenome/pggb:latest<br></code></pre></td></tr></tbody></table></figure><p>下载示例数据：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --recursive https://github.com/pangenome/pggb.git<br><span class="hljs-built_in">cd</span> pggb<br></code></pre></td></tr></tbody></table></figure><h2 id="Bioconda"><a href="#Bioconda" class="headerlink" title="Bioconda"></a>Bioconda</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c bioconda pggb<br></code></pre></td></tr></tbody></table></figure><h2 id="GUIX"><a href="#GUIX" class="headerlink" title="GUIX"></a>GUIX</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/ekg/guix-genomics<br><span class="hljs-built_in">cd</span> guix-genomics<br>GUIX_PACKAGE_PATH=. guix package -i pggb<br></code></pre></td></tr></tbody></table></figure><h2 id="Nextflow"><a href="#Nextflow" class="headerlink" title="Nextflow"></a>Nextflow</h2><p><a href="https://github.com/nf-core/pangenome">https://github.com/nf-core/pangenome</a></p><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><p>泛基因组是一个物种或clade的所有序列的完整集合，能够使用variation graph这种格式来表示。为了方便交流/交换泛基因组，使用的标准格式是Graphical Fragment Assembly（GFA），现在的版本是version 1.</p><h2 id="第一步：数据准备"><a href="#第一步：数据准备" class="headerlink" title="第一步：数据准备"></a>第一步：数据准备</h2><p>将所有的fasta序列放到一个文件中，如果有很多样品和/或很多单倍型时，按照PanSN-spec规则对序列进行命名。可以选择是否使用bgzip进行压缩；然后使用SAMtools对输入文件构建索引。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">samtools faidx in.fa<br> 或者是<br>samtools faidx in.fa.gz<br></code></pre></td></tr></tbody></table></figure><h2 id="第二步：序列分割"><a href="#第二步：序列分割" class="headerlink" title="第二步：序列分割"></a>第二步：序列分割</h2><p>如果有输入的数据是全基因组的组装结果，那么可以考虑按照染色体将不同的染色体进行拆分，然后使用pggb对每条染色体进行泛基因组构建。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">partition-before-pggb -i in.fa \        input file <span class="hljs-keyword">in</span> FASTA format<br>                      -o output \       output directory<br>                      -n 9 \            number of haplotypes (optional with PanSN-spec)<br>                      -t 16 \           number of threads<br>                      -p 90 \           minimum average nucleotide identity <span class="hljs-keyword">for</span> segments<br>                      -s 5k \           segment length <span class="hljs-keyword">for</span> scaffolding the graph<br>                      -V <span class="hljs-string">'ref:1000'</span>     make a VCF against <span class="hljs-string">"ref"</span> decomposing variants &gt;1000bp<br></code></pre></td></tr></tbody></table></figure><p>上面的代码会生成两段独立的代码(如果有n个community的话就会生成n个下面的代码）：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">pggb -i output/in.fa.dd9e519.community.0.fa \<br>     -o output/in.fa.dd9e519.community.0.fa.out \<br>     -p 5k -l 25000 -p 90 -n 9 -K 19 -F 0.001 \<br>     -k 19 -f 0 -B 10000000 \<br>     -H 9 -j 0 -e 0 -G 700,900,1100 -P 1,19,39,3,81,1 -O 0.001 -d 100 -Q Consensus_ \<br>     -V ref:1000 --threads 16 --poa-threads 16<br>pggb -i output/in.fa.dd9e519.community.1.fa \<br>     -o output/in.fa.dd9e519.community.1.fa.out \<br>     -p 5k -l 25000 -p 90 -n 9 -K 19 -F 0.001 \<br>     -k 19 -f 0 -B 10000000 \<br>     -H 9 -j 0 -e 0 -G 700,900,1100 -P 1,19,39,3,81,1 -O 0.001 -d 100 -Q Consensus_ \<br>     -V ref:1000 --threads 16 --poa-threads 16<br></code></pre></td></tr></tbody></table></figure><h2 id="第三步：构建graph"><a href="#第三步：构建graph" class="headerlink" title="第三步：构建graph"></a>第三步：构建graph</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">pggb \<br>-i in.fa \        输入文件，是fasta格式<br>-o output \       输出文件夹<br>-n 9  \           单倍型的数量，如果使用PanSN-spec则需要，其他情况不需要<br>-t 16             线程数<br>-p 90 \           (default) minimum average nucleotide identity <span class="hljs-keyword">for</span> a seed mapping<br>-s 5000 \         (default) segment length<br>-V <span class="hljs-string">'ref:1000'</span>     make a VCF against <span class="hljs-string">"ref"</span> decomposing variants &gt;1000bp<br></code></pre></td></tr></tbody></table></figure><p>输出的结果是outdir/input.fa*smooth.fix.gfa. 输出的结果可以使用odgi进行可视化，可以选择1D和2D这两种方式进行展示。</p><h3 id="1D可视化"><a href="#1D可视化" class="headerlink" title="1D可视化"></a>1D可视化</h3><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740401529688-25064bdd-a738-4212-9448-3d5c0c2779f2.png" alt="img"></p><ul><li>从左到右</li><li>彩色条表示二进制矩阵中嵌入路径与该泛基因组序列的分箱线性化渲染</li><li>path的名称在最左侧</li><li>路径下的黑线，即所谓的链接，表示图的拓扑结构。</li></ul><h3 id="2D可视化"><a href="#2D可视化" class="headerlink" title="2D可视化"></a>2D可视化</h3><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740401659676-9dd9d279-f1ab-446d-90f8-56c7bd0dabc3.png" alt="img"></p><ul><li>每个彩色矩形代表路径的一个节点。节点的 x 坐标位于 x 轴上，y 坐标位于 y 轴上。</li><li>气泡表示此处某些路径具有发散序列，或者可以表示重复区域。</li></ul><h1 id="详细流程"><a href="#详细流程" class="headerlink" title="详细流程"></a>详细流程</h1><h2 id="序列准备"><a href="#序列准备" class="headerlink" title="序列准备"></a>序列准备</h2><p>数据量较大时，如果直接把所有数据放到一起，那么就需要很大的计算量和计算资源。建议的做法是把输入数据拆分为community，简单理解就是把相同的染色体拆分到一个文件中，以减少对计算资源的消耗，降低计算压力。但是如果有染色体易位等情况时，不建议把数据进行拆分。</p><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip3 install python-igraph<br>pip3 install pycairo  仅仅只是用于可视化<br></code></pre></td></tr></tbody></table></figure><h4 id="序列命名"><a href="#序列命名" class="headerlink" title="序列命名"></a>序列命名</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br>    sample_name=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span> | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span>);<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">${sample_name}</span><br>    fastix -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> <span class="hljs-variable">$f</span> &gt;&gt; scerevisiae7.fasta<br><span class="hljs-keyword">done</span><br>bgzip -@ 4 scerevisiae7.fasta<br>samtools faidx scerevisiae7.fasta.gz<br></code></pre></td></tr></tbody></table></figure><p>重命名使用的是fastix：</p><p><a href="https://github.com/ekg/fastix">https://github.com/ekg/fastix</a></p><p>上面这段代码所完成的工作：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa<br><br>列出当前目录中所有以 .fa 为后缀的文件。这通常是一种较简化的FASTA文件格式（但可以包含任意其他内容）。<br>| <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br><br>将 <span class="hljs-built_in">ls</span> 的输出通过管道传递给 <span class="hljs-keyword">while</span> 循环，每次循环读取一个文件名到变量 f 中进行处理。<br>sample_name=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span> | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span>);<br><br>使用 <span class="hljs-built_in">cut</span> 命令对文件名 f 进行截断操作，以 . 为分隔符，提取其第一个字段，作为 sample_name。这一般被用于提取不带扩展名的文件名部分。<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">${sample_name}</span><br><br>输出 sample_name 到终端，这样你可以看到每个处理的样本名称，方便调试或者确认。<br>fastix -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> <span class="hljs-variable">$f</span> &gt;&gt; scerevisiae7.fasta<br><br>fastix 是一个假设的工具（可能是一个特定功能的自定义程序），它被调用来处理每个文件 f。选项 -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> 可能是用来指定前缀或标记以包含在输出序列中。处理结果被附加（&gt;&gt;）到 scerevisiae7.fasta 这个文件中。<br>注意：fastix 不是一个标准程序名，所以具体行为需要根据实际程序功能确定。如果没有安装或者不是实际可用的话，需要更新为正确的可用工具。<br>bgzip -@ 4 scerevisiae7.fasta<br><br>使用 bgzip 工具来压缩 scerevisiae7.fasta 文件。选项 -@ 4 指定使用 4 个线程来进行压缩，以提高速度。压缩后的文件名通常为 scerevisiae7.fasta.gz。<br>samtools faidx scerevisiae7.fasta.gz<br><br>使用 samtools faidx 命令为压缩的 FASTA 文件创建索引文件。这会对 scerevisiae7.fasta.gz 生成一个索引文件 scerevisiae7.fasta.gz.fai。索引后的文件可以更快地使用一些生物信息学工具进行随机访问。<br></code></pre></td></tr></tbody></table></figure><p>这里将所有单倍型的编号都设置为1，是因为所用的样品是单倍体。</p><h4 id="Community-detection"><a href="#Community-detection" class="headerlink" title="Community detection"></a>Community detection</h4><h5 id="计算分歧度"><a href="#计算分歧度" class="headerlink" title="计算分歧度"></a>计算分歧度</h5><p>这一步需要获取输入的组装结果之间的关系，目的是为了检测底层的community，其实也就是计算不同序列之间的相似性。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wfmash scerevisiae7.fasta.gz -p 90 -n 6 -t 4 -m &gt; scerevisiae7.mapping.paf<br></code></pre></td></tr></tbody></table></figure><p>-p设位置为90是因为期望的序列之间的分歧度是10%左右，分歧度的估计参考下一节内容，-n表示单倍型的数量，最小值是1.</p><h5 id="paf格式转network格式"><a href="#paf格式转network格式" class="headerlink" title="paf格式转network格式"></a>paf格式转network格式</h5><p>接下来是将paf格式的结果转换为网络格式，使用脚本paf2net.py：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 ../../scripts/paf2net.py -p scerevisiae7.mapping.paf<br></code></pre></td></tr></tbody></table></figure><p>这个脚本生成三个文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">scerevisiae7.mapping.paf.edges.list.txt is the edge list representing the pairs of sequences mapped <span class="hljs-keyword">in</span> the PAF;<br><br>scerevisiae7.mapping.paf.edges.weights.txt is a list of edge weights (long and high estimated identity mappings have greater weight);<br><br>scerevisiae7.mapping.paf.vertices.id2name.txt is the <span class="hljs-string">'id to sequence name'</span> map.<br></code></pre></td></tr></tbody></table></figure><h5 id="鉴定community"><a href="#鉴定community" class="headerlink" title="鉴定community"></a>鉴定community</h5><p>紧接着运行下面的代码检测community：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 ../../scripts/net2communities.py \<br>    -e scerevisiae7.mapping.paf.edges.list.txt \<br>    -w scerevisiae7.mapping.paf.edges.weights.txt \<br>    -n scerevisiae7.mapping.paf.vertices.id2name.txt<br></code></pre></td></tr></tbody></table></figure><p>paf2net.py这个脚本会生成一系列的<em>.community.</em>.txt，每个文件里面的序列就是一个community，每一行是一条序列。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> scerevisiae7.mapping.paf.edges.weights.txt.community.6.txt<br></code></pre></td></tr></tbody></table></figure><p>示例输出：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">DBVPG6044<span class="hljs-comment">#1#chrVII</span><br>S288C<span class="hljs-comment">#1#chrVII</span><br>SK1<span class="hljs-comment">#1#chrVII</span><br>Y12<span class="hljs-comment">#1#chrVII</span><br>YPS128<span class="hljs-comment">#1#chrVII</span><br>DBVPG6044<span class="hljs-comment">#1#chrVIII</span><br>S288C<span class="hljs-comment">#1#chrVIII</span><br>SK1<span class="hljs-comment">#1#chrVIII</span><br>UWOPS034614<span class="hljs-comment">#1#chrVII</span><br>UWOPS034614<span class="hljs-comment">#1#chrVIII</span><br>Y12<span class="hljs-comment">#1#chrVIII</span><br>YPS128<span class="hljs-comment">#1#chrVIII</span><br>DBVPG6765<span class="hljs-comment">#1#chrVII</span><br>DBVPG6765<span class="hljs-comment">#1#chrVIII</span><br></code></pre></td></tr></tbody></table></figure><p>这个结果之所以会 chrVII和chrVIII是因为这些样品中有染色体重排现象。</p><h5 id="查看每个community"><a href="#查看每个community" class="headerlink" title="查看每个community"></a>查看每个community</h5><p>想查看每个community中的序列信息，执行下面的代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">seq</span> 0 14 | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> i; <span class="hljs-keyword">do</span><br>    chromosomes=$(<span class="hljs-built_in">cat</span> scerevisiae7.mapping.paf.edges.weights.txt.community.<span class="hljs-variable">$i</span>.txt | <span class="hljs-built_in">cut</span> -f 3 -d <span class="hljs-string">'#'</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">'\n'</span> <span class="hljs-string">' '</span>);<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"community <span class="hljs-variable">$i</span> --&gt; <span class="hljs-variable">$chromosomes</span>"</span>;<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>示例输出：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">community 0 --&gt; chrI<br>community 1 --&gt; chrII<br>community 2 --&gt; chrIII<br>community 3 --&gt; chrIV<br>community 4 --&gt; chrV<br>community 5 --&gt; chrVI<br>community 6 --&gt; chrVII chrVIII<br>community 7 --&gt; chrIX<br>community 8 --&gt; chrX chrXIII<br>community 9 --&gt; chrXI<br>community 10 --&gt; chrXII<br>community 11 --&gt; chrXIV<br>community 12 --&gt; chrXV<br>community 13 --&gt; chrXVI<br>community 14 --&gt; chrMT<br></code></pre></td></tr></tbody></table></figure><p>可以看到community 6和community 8这两个community有多个染色体。</p><h5 id="community可视化"><a href="#community可视化" class="headerlink" title="community可视化"></a>community可视化</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 ../../scripts/net2communities.py \<br>    -e scerevisiae7.mapping.paf.edges.list.txt \<br>    -w scerevisiae7.mapping.paf.edges.weights.txt \<br>    -n scerevisiae7.mapping.paf.vertices.id2name.txt \<br>    --plot<br></code></pre></td></tr></tbody></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740446386314-f3baff51-a1ab-4979-a152-0ff457b36c96.png" alt="img"></p><h4 id="数据拆分"><a href="#数据拆分" class="headerlink" title="数据拆分"></a>数据拆分</h4><p>鉴定完community后可以使用pggb进行管理。执行下面的代码拆分每个community：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">seq</span> 0 14 | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> i; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"community <span class="hljs-variable">$i</span>"</span><br>    samtools faidx scerevisiae7.fasta.gz $(<span class="hljs-built_in">cat</span> scerevisiae7.mapping.paf.edges.weights.txt.community.<span class="hljs-variable">$i</span>.txt) | \<br>    bgzip -@ 4 -c &gt; scerevisiae7.community.<span class="hljs-variable">$i</span>.fa.gz<br>    samtools faidx scerevisiae7.community.<span class="hljs-variable">$i</span>.fa.gz<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>生成的scerevisiae7.community.*.fa.gz文件现在就可以作为pggb的输入文件。如果需要整合所有的community的graphs，可以使用odgi squeeze.</p><h4 id="基于Mash的拆分方法"><a href="#基于Mash的拆分方法" class="headerlink" title="基于Mash的拆分方法"></a>基于Mash的拆分方法</h4><p>直接使用mash计算序列之间的距离：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mash dist scerevisiae7.fasta.gz scerevisiae7.fasta.gz -s 10000 -i &gt; scerevisiae7.distances.tsv<br></code></pre></td></tr></tbody></table></figure><p>-s设置得越大，得到的结果也越准确；-i参数表示比较输入文件内的序列，而不是比较整个输入文件。</p><p>查看结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">head</span> -n 5 scerevisiae7.distances.tsv | column -t<br>DBVPG6044<span class="hljs-comment">#1#chrI    DBVPG6044#1#chrI  0         0             10000/10000</span><br>DBVPG6044<span class="hljs-comment">#1#chrII   DBVPG6044#1#chrI  0.184461  0             105/10000</span><br>DBVPG6044<span class="hljs-comment">#1#chrIII  DBVPG6044#1#chrI  0.186761  0             100/10000</span><br>DBVPG6044<span class="hljs-comment">#1#chrIV   DBVPG6044#1#chrI  0.220489  1.83465e-228  49/10000</span><br>DBVPG6044<span class="hljs-comment">#1#chrV    DBVPG6044#1#chrI  0.176252  0             125/10000</span><br></code></pre></td></tr></tbody></table></figure><p>第三列表示mash距离，第四列是P值，第五列共享哈希值的数量除以所考虑哈希值的数量的比率。</p><p>也可以将mash距离转换为network格式，进一步坚定community：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 ../../scripts/mash2net.py -m scerevisiae7.distances.tsv<br><br>python3 ../../scripts/net2communities.py \<br>    -e scerevisiae7.distances.tsv.edges.list.txt \<br>    -w scerevisiae7.distances.tsv.edges.weights.txt \<br>    -n scerevisiae7.distances.tsv.vertices.id2name.txt<br><br><span class="hljs-built_in">seq</span> 0 14 | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> i; <span class="hljs-keyword">do</span><br>    chromosomes=$(<span class="hljs-built_in">cat</span> scerevisiae7.distances.tsv.edges.weights.txt.community.<span class="hljs-variable">$i</span>.txt | <span class="hljs-built_in">cut</span> -f 3 -d <span class="hljs-string">'#'</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">'\n'</span> <span class="hljs-string">' '</span>);<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"community <span class="hljs-variable">$i</span> --&gt; <span class="hljs-variable">$chromosomes</span>"</span>;<br><span class="hljs-keyword">done</span><br>community 0 --&gt; chrII<br>community 1 --&gt; chrI<br>community 2 --&gt; chrIII<br>community 3 --&gt; chrIV<br>community 4 --&gt; chrV<br>community 5 --&gt; chrVI<br>community 6 --&gt; chrVII chrVIII<br>community 7 --&gt; chrIX<br>community 8 --&gt; chrX chrXIII<br>community 9 --&gt; chrXI<br>community 10 --&gt; chrXII<br>community 11 --&gt; chrXIV<br>community 12 --&gt; chrXV<br>community 13 --&gt; chrXVI<br>community 14 --&gt; chrMT<br></code></pre></td></tr></tbody></table></figure><p>输出的结果和上一个方法是一致的。</p><h2 id="分歧度估计"><a href="#分歧度估计" class="headerlink" title="分歧度估计"></a>分歧度估计</h2><p>pggb中的一些参数会影响最终构建的graph的结构。例如，-p参数影响的是mapping identity，这个参数设置得越小，对比的灵敏度就会随之增加，就会得到更多压缩后的graphs. 这个参数的设置依赖于输入序列的分歧程度。</p><h3 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h3><h4 id="下载基因组"><a href="#下载基因组" class="headerlink" title="下载基因组"></a>下载基因组</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p assemblies/yprp_panel<br><span class="hljs-built_in">cd</span> assemblies/yprp_panel<br><span class="hljs-built_in">cat</span> ../../docs/data/scerevisiae.yprp.urls | parallel -j 4 <span class="hljs-string">'wget -q {} &amp;&amp; echo got {}'</span><br></code></pre></td></tr></tbody></table></figure><p>将基因组序列和线粒体序列合并：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa.gz | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span> | <span class="hljs-built_in">uniq</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span><br>    zcat <span class="hljs-variable">$f</span>.* &gt; <span class="hljs-variable">$f</span>.fa<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h4 id="重命名序列"><a href="#重命名序列" class="headerlink" title="重命名序列"></a>重命名序列</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> *.fa | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> f; <span class="hljs-keyword">do</span><br>    sample_name=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$f</span> | <span class="hljs-built_in">cut</span> -f 1 -d <span class="hljs-string">'.'</span>);<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">${sample_name}</span><br>    fastix -p <span class="hljs-string">"<span class="hljs-variable">${sample_name}</span>#1#"</span> <span class="hljs-variable">$f</span> &gt;&gt; scerevisiae7.fasta<br><span class="hljs-keyword">done</span><br>bgzip -@ 4 scerevisiae7.fasta<br>samtools faidx scerevisiae7.fasta.gz<br></code></pre></td></tr></tbody></table></figure><h4 id="序列分歧度"><a href="#序列分歧度" class="headerlink" title="序列分歧度"></a>序列分歧度</h4><p>假设一次只对一条染色体进行泛基因组构建，就需要估计染色体之间的分歧程度。使用下面的代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cut</span> -f 1 scerevisiae7.fasta.gz.fai | <span class="hljs-built_in">cut</span> -f 3 -d <span class="hljs-string">'#'</span> | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CHROM; <span class="hljs-keyword">do</span><br>    CHR_FASTA=scerevisiae7.<span class="hljs-variable">$CHROM</span>.fasta.gz<br>    samtools faidx scerevisiae7.fasta.gz $(grep -P $<span class="hljs-string">"<span class="hljs-variable">$CHROM</span>\t"</span> scerevisiae7.fasta.gz.fai | <span class="hljs-built_in">cut</span> -f 1) | bgzip -@ 4 &gt; <span class="hljs-variable">$CHR_FASTA</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Generated <span class="hljs-variable">$CHR_FASTA</span>"</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>计算分歧度的方法就是依次进行比较。mash triangle数据一个三角矩阵的结果，类似于相关性那种结果。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mash triangle scerevisiae7.chrMT.fasta.gz &gt; scerevisiae7.chrMT.mash_triangle.txt<br><span class="hljs-built_in">cat</span> scerevisiae7.chrMT.mash_triangle.txt | column -t<br></code></pre></td></tr></tbody></table></figure><p>输出的结果类似于：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">7<br>DBVPG6044<span class="hljs-comment">#1#chrMT</span><br>DBVPG6765<span class="hljs-comment">#1#chrMT    0.0192445</span><br>S288C<span class="hljs-comment">#1#chrMT        0.0151342  0.0182524</span><br>SK1<span class="hljs-comment">#1#chrMT          0.0023533  0.0202797  0.0144049</span><br>UWOPS034614<span class="hljs-comment">#1#chrMT  0.0186813  0.0210181  0.0185579  0.0179508</span><br>Y12<span class="hljs-comment">#1#chrMT          0.0188053  0.0208145  0.0126347  0.0178312  0.0148187</span><br>YPS128<span class="hljs-comment">#1#chrMT       0.0170687  0.0198213  0.0136991  0.0175939  0.0141502  0.0131603</span><br></code></pre></td></tr></tbody></table></figure><p>上面的结果可以看出这个community中有7条序列，mash距离从0到1之间。使用下面的代码计算最大分歧度：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed 1,1d scerevisiae7.chrMT.mash_triangle.txt | <span class="hljs-built_in">tr</span> <span class="hljs-string">'\t'</span> <span class="hljs-string">'\n'</span> | grep chr -v | LC_ALL=C <span class="hljs-built_in">sort</span> -g -k 1nr | <span class="hljs-built_in">uniq</span> | <span class="hljs-built_in">head</span> -n 1<br></code></pre></td></tr></tbody></table></figure><p>输出结果为0.0210181. 这个结果是一个community的mash分歧度，使用下面的代码计算所有community的最大分歧度：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> scerevisiae7.*.fasta.gz | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CHR_FASTA; <span class="hljs-keyword">do</span><br>    CHROM=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$CHR_FASTA</span> | <span class="hljs-built_in">cut</span> -f 2 -d <span class="hljs-string">'.'</span>)<br>    MAX_DIVERGENCE=$(mash triangle -p 4 <span class="hljs-variable">$CHR_FASTA</span> | sed 1,1d | <span class="hljs-built_in">tr</span> <span class="hljs-string">'\t'</span> <span class="hljs-string">'\n'</span> | grep chr -v | LC_ALL=C  <span class="hljs-built_in">sort</span> -g -k 1nr | <span class="hljs-built_in">uniq</span> | <span class="hljs-built_in">head</span> -n 1)<br><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">"<span class="hljs-variable">$CHROM</span>\t<span class="hljs-variable">$MAX_DIVERGENCE</span>"</span> &gt;&gt; scerevisiae7.divergence.txt<br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">cat</span> scerevisiae7.divergence.txt | column -t<br></code></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">chrI     0.0178312<br>chrII    0.00804257<br>chrIII   0.0121679<br>chrIV    0.00759618<br>chrIX    0.0106545<br>chrMT    0.0210181<br>chrV     0.00892796<br>chrVI    9.55247e-05<br>chrVII   0.0639874<br>chrVIII  0.0385787<br>chrX     0.0357395<br>chrXI    0.0324062<br>chrXII   0.00900687<br>chrXIII  0.052117<br>chrXIV   0.00838426<br>chrXV    0.0081558<br>chrXVI   0.00838426<br></code></pre></td></tr></tbody></table></figure><p>从结果中可以看出chrVII、chrVIII和chrXIII这三条染色体的分歧度排在前面，最大值是0.0639874. 那到底如何设置mapping identity也就是-p这个参数呢？通常的原则是100 - max_divergence * 100，这个数据中应该设置为93.60126，建议是等于或小于这个值。但是，为了解释那些被低估的序列分歧度，或者为了避免局部序列中较大或适中的结构变异造成的序列分歧差异，建议把这个参数设置为更小的值，比如90.</p><h4 id="染色体间的分歧度估计"><a href="#染色体间的分歧度估计" class="headerlink" title="染色体间的分歧度估计"></a>染色体间的分歧度估计</h4><p>如果样品之间有染色体重排或者是易位等现象，那就需要计算染色体之间的序列分歧度。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mash triangle scerevisiae7.community.0.fa.gz -s 10000 &gt; scerevisiae7.community.0.mash_triangle.txt<br><span class="hljs-built_in">cat</span> scerevisiae7.community.0.mash_triangle.txt | column -t<br></code></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">14<br>DBVPG6044<span class="hljs-comment">#1#chrVII</span><br>S288C<span class="hljs-comment">#1#chrVII         0.00811043</span><br>SK1<span class="hljs-comment">#1#chrVII           0.00160605  0.00759986</span><br>Y12<span class="hljs-comment">#1#chrVII           0.00721034  0.00710972  0.00740957</span><br>YPS128<span class="hljs-comment">#1#chrVII        0.00641651  0.00659004  0.00659004  0.00505504</span><br>DBVPG6044<span class="hljs-comment">#1#chrVIII    0.243761    0.222464    0.23782     0.215016    0.221466</span><br>S288C<span class="hljs-comment">#1#chrVIII        0.222464    0.203604    0.217673    0.194429    0.214163    0.00928959</span><br>SK1<span class="hljs-comment">#1#chrVIII          0.250557    0.221466    0.242205    0.215016    0.216771    0.000911163  0.00912584</span><br>UWOPS034614<span class="hljs-comment">#1#chrVII   0.0625263   0.0623939   0.0627391   0.0625528   0.0610962   0.0635756    0.0649949   0.0635211</span><br>UWOPS034614<span class="hljs-comment">#1#chrVIII  0.0512793   0.0517248   0.0514142   0.049118    0.0496087   0.0358693    0.0373731   0.0359997   0.258493</span><br>Y12<span class="hljs-comment">#1#chrVIII          0.236445    0.222464    0.236445    0.216771    0.231311    0.00815958   0.0081861   0.00759251  0.0625528  0.0354817</span><br>YPS128<span class="hljs-comment">#1#chrVIII       0.239237    0.199716    0.213325    0.208588    0.191209    0.00728616   0.00790009  0.006864    0.0628727  0.0345966  0.00614217</span><br>DBVPG6765<span class="hljs-comment">#1#chrVII     0.00890041  0.00474338  0.0079113   0.00866976  0.00768463  0.26803      0.256381    0.270747    0.0628995  0.0512793  0.26546     0.23011</span><br>DBVPG6765<span class="hljs-comment">#1#chrVIII    0.273629    0.26546     0.273629    0.26803     0.270747    0.00861155   0.0060471   0.00853035  0.0656244  0.0360829  0.00873594  0.00826588  0.26546</span><br></code></pre></td></tr></tbody></table></figure><p>输出结果中chrVII和chrVIII这两条染色体，因为前期的研究发现只有这两条染色体有重排现象。-s设置为10000是为了提高比对的准确度。较低的分歧度很大程度上是因为发生了染色体结构重排。</p><h2 id="小变异鉴定"><a href="#小变异鉴定" class="headerlink" title="小变异鉴定"></a>小变异鉴定</h2><p>主要组织相容性复合体 (MHC) 是脊椎动物 DNA 中的一个大型位点，包含一组紧密相连的多态性基因，这些基因编码对适应性免疫系统至关重要的细胞表面蛋白。在人类中，MHC 区域位于 6 号染色体上。</p><h3 id="详细步骤-1"><a href="#详细步骤-1" class="headerlink" title="详细步骤"></a>详细步骤</h3><h4 id="数据收集"><a href="#数据收集" class="headerlink" title="数据收集"></a>数据收集</h4><p>将chromosome 6 contigs比对到MHC ALT的单倍型上。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wfmash -t 16 -m -s 5000 -p 98 MHC.fa.gz chr6.pan.fa &gt; HPRCy1.pan.chr6_vs_MHC.paf<br></code></pre></td></tr></tbody></table></figure><p>然后根据比对结果构建一个BED文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk <span class="hljs-string">'{ print $1, $3, $4 }'</span> HPRCy1.pan.chr6_vs_MHC.paf | <span class="hljs-built_in">tr</span> <span class="hljs-string">' '</span> <span class="hljs-string">'\t'</span> | <span class="hljs-built_in">sort</span> -V &gt; HPRCy1.MHC.bed<br>bedtools merge -d 1000000 -i HPRCy1.MHC.bed &gt; HPRCy1.MHC.merge.bed<br></code></pre></td></tr></tbody></table></figure><p>最后一步是提取对应区域的序列：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">bedtools getfasta -<span class="hljs-keyword">fi</span> /lizardfs/erikg/HPRC/year1/parts/chr6.pan+refs.fa -bed HPRCy1.MHC.merge.bed | bgzip -c -@ 16 &gt; HPRCy1.MHC.fa.gz<br>samtools faidx HPRCy1.MHC.fa.gz<br></code></pre></td></tr></tbody></table></figure><h4 id="序列重命名"><a href="#序列重命名" class="headerlink" title="序列重命名"></a>序列重命名</h4><p>前面的处理已经保证名称的统一，直接使用即可：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | <span class="hljs-built_in">head</span> -n 6<br>HG00438<span class="hljs-comment">#1#JAHBCB010000040.1:22870000-27725000</span><br>HG00438<span class="hljs-comment">#2#JAHBCA010000042.1:22875000-27895000</span><br>HG00621<span class="hljs-comment">#1#JAHBCD010000020.1:22865000-27905000</span><br>HG00621<span class="hljs-comment">#2#JAHBCC010000005.1:28460000-33400000</span><br>HG00673<span class="hljs-comment">#1#JAHBBZ010000030.1:28480000-33310000</span><br>HG00673<span class="hljs-comment">#2#JAHBBY010000018.1:0-2900000</span><br></code></pre></td></tr></tbody></table></figure><h4 id="分歧度估计-1"><a href="#分歧度估计-1" class="headerlink" title="分歧度估计"></a>分歧度估计</h4><p>由于这个数据量很小，就省去了计算分歧度这一步。</p><h4 id="构建泛基因组"><a href="#构建泛基因组" class="headerlink" title="构建泛基因组"></a>构建泛基因组</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pggb -i HPRCy1.MHC.fa.gz -p 95 -n 90 -t 16 -G 13117,13219 -o HPRCy1.MHC.s10k.p95.output<br></code></pre></td></tr></tbody></table></figure><h4 id="graph统计"><a href="#graph统计" class="headerlink" title="graph统计"></a>graph统计</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">odgi stats -i HPRCy1.MHC.s10k.p95.output/*.final.gfa -t 16 -S<br><span class="hljs-comment">#length     nodes   edges   paths</span><br>5315371     309186  429323  126<br></code></pre></td></tr></tbody></table></figure><h4 id="使用vg鉴定突变"><a href="#使用vg鉴定突变" class="headerlink" title="使用vg鉴定突变"></a>使用vg鉴定突变</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vg deconstruct -P chm13 -H <span class="hljs-string">'?'</span> -e -a -t 48 HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.39ffa23.e34d4cd.be6be64.smooth.final.gfa | \<br>    bgzip -c -@ 16 &gt; HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.39ffa23.e34d4cd.be6be64.smooth.final.chm13.vcf.gz<br></code></pre></td></tr></tbody></table></figure><p>-H参数设置为’?’是为了path的名称，提取每个contigs的变异情况。</p><p>下一步是过滤变异并重新排列参考/突变的alleles：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vcfbub -l 0 -a 100000 --input HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.39ffa23.e34d4cd.be6be64.smooth.final.chm13.vcf.gz | \<br>    vcfwave -I 1000 -t 48 | bgzip -@ 16 \<br>    &gt; HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.39ffa23.e34d4cd.be6be64.smooth.final.chm13.vcfbub.a100k.wave.vcf.gz<br></code></pre></td></tr></tbody></table></figure><p>从PGGB的VCF文件提取SNP：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">REF=chm13<span class="hljs-comment">#chr6:28380000-33300000.fa</span><br>NAMEREF=chm13<br><br><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CONTIG; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$CONTIG</span><br><br>    bash vcf_preprocess.sh \<br>        HPRCy1.MHC.s10k.p95.output/*.vcfbub.a100k.wave.vcf.gz \<br>        <span class="hljs-variable">$CONTIG</span> \<br>        1 \<br>        <span class="hljs-variable">$REF</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h4 id="使用nucmer鉴定突变"><a href="#使用nucmer鉴定突变" class="headerlink" title="使用nucmer鉴定突变"></a>使用nucmer鉴定突变</h4><p>首先准备序列：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">samtools faidx HPRCy1.MHC.fa.gz chm13<span class="hljs-comment">#chr6:28380000-33300000 &gt; chm13#chr6:28380000-33300000.fa</span><br></code></pre></td></tr></tbody></table></figure><p>然后将序列必读到参考基因组：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">REF=chm13<span class="hljs-comment">#chr6:28380000-33300000.fa</span><br>NAMEREF=chm13<br><br><span class="hljs-built_in">mkdir</span> -p nucmer/<br><br><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CONTIG; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$CONTIG</span><br><br>    PREFIX=nucmer/<span class="hljs-variable">${CONTIG}</span>_vs_<span class="hljs-variable">${NAMEREF}</span><br>    samtools faidx HPRCy1.MHC.fa.gz <span class="hljs-variable">$CONTIG</span> &gt; <span class="hljs-variable">$CONTIG</span>.fa<br><br>    nucmer <span class="hljs-variable">$REF</span> <span class="hljs-variable">$CONTIG</span>.fa --prefix <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span><br><br>    show-snps -THC <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span>.delta &gt; <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span>.var.txt<br><br>    <span class="hljs-built_in">rm</span> <span class="hljs-variable">$CONTIG</span>.fa<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>再将nucmer的结果转换为vcf格式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">REF=chm13<span class="hljs-comment">#chr6:28380000-33300000.fa</span><br>NAMEREF=chm13<br><br>NUCMER_VERSION=<span class="hljs-string">"4.0.0beta2"</span><br><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CONTIG; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$CONTIG</span><br><br>    PREFIX=nucmer/<span class="hljs-variable">${CONTIG}</span>_vs_<span class="hljs-variable">${NAMEREF}</span><br>    Rscript nucmer2vcf.R <span class="hljs-string">"<span class="hljs-variable">$PREFIX</span>"</span>.var.txt <span class="hljs-variable">$CONTIG</span> <span class="hljs-variable">$REF</span> <span class="hljs-variable">$NUCMER_VERSION</span> <span class="hljs-variable">$PREFIX</span>.vcf<br>    bgzip -@ 16 <span class="hljs-variable">$PREFIX</span>.vcf<br>    tabix <span class="hljs-variable">$PREFIX</span>.vcf.gz<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h4 id="变异评估"><a href="#变异评估" class="headerlink" title="变异评估"></a>变异评估</h4><p>将参考序列转换为SDF格式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rtg format -o chm13<span class="hljs-comment">#chr6:28380000-33300000.sdf chm13#chr6:28380000-33300000.fa</span><br></code></pre></td></tr></tbody></table></figure><p>然后比较PGGB和nucmer两个方法鉴定到的SNP：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">REFSDF=chm13<span class="hljs-comment">#chr6:28380000-33300000.sdf</span><br>NAMEREF=chm13<br><br><span class="hljs-built_in">cut</span> -f 1 HPRCy1.MHC.fa.gz.fai | grep chm13 -v | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> CONTIG; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$CONTIG</span><br><br>    PREFIX=nucmer/<span class="hljs-variable">${CONTIG}</span>_vs_<span class="hljs-variable">${NAMEREF}</span><br><br>    PATH_PGGB_VCF=HPRCy1.MHC.s10k.p95.output/HPRCy1.MHC.fa.gz.*.smooth.final.chm13.vcfbub.a100k.wave.<span class="hljs-variable">${CONTIG}</span>.max1.vcf.gz<br><br>     Merge regions closer than 1000 bps to define the callable regions <span class="hljs-built_in">where</span> to evaluate the variants<br>    dist=1000<br><br>    rtg vcfeval \<br>        -t <span class="hljs-variable">$REFSDF</span> \<br>        -b <span class="hljs-variable">$PREFIX</span>.vcf.gz \<br>        -c <span class="hljs-variable">$PATH_PGGB_VCF</span> \<br>        -T 16 \<br>        -e &lt;(bedtools intersect -a &lt;(bedtools merge -d <span class="hljs-variable">$dist</span> -i <span class="hljs-variable">$PREFIX</span>.vcf.gz ) -b &lt;(bedtools merge -d <span class="hljs-variable">$dist</span> -i <span class="hljs-variable">$PATH_PGGB_VCF</span>)) \<br>        -o vcfeval/<span class="hljs-variable">${CONTIG}</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>获取统计结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> vcfeval<br>(<span class="hljs-built_in">echo</span> contig precision recall f1.score; grep None */*txt | sed <span class="hljs-string">'s,/summary.txt:,,'</span> | <span class="hljs-built_in">tr</span> -s <span class="hljs-string">' '</span> | <span class="hljs-built_in">cut</span> -f 1,7,8,9 -d <span class="hljs-string">' '</span> ) | <span class="hljs-built_in">tr</span> <span class="hljs-string">' '</span> <span class="hljs-string">'\t'</span> &gt; statistics.tsv<br></code></pre></td></tr></tbody></table></figure><p>最后使用R语言绘图：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">require(ggplot2)<br>require(tidyr)<br><br>stat_df &lt;- read.table(<span class="hljs-string">'statistics.tsv'</span>, sep = <span class="hljs-string">'\t'</span>, header = T, comment.char = <span class="hljs-string">'?'</span>)<br><br>stat_df &lt;- pivot_longer(stat_df,precision:f1.score,<span class="hljs-string">"Metric"</span>)<br><br>ggplot(stat_df,aes(x=contig,y=value,fill=contig))+<br>  geom_bar(<span class="hljs-built_in">stat</span>=<span class="hljs-string">"identity"</span>) +<br>  facet_wrap(~Metric, ncol = 1)+<br>  theme_bw() +<br>  theme(<br>    axis.ticks.x = element_blank(),<br>    axis.text.x = element_blank()<br>  ) +<br>  theme(legend.position=<span class="hljs-string">"none"</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/png/23014278/1740455099422-dbee3174-7ce3-40ca-8ef6-860daeb0a184.png" alt="img"></p><h1 id="重要的参数"><a href="#重要的参数" class="headerlink" title="重要的参数"></a>重要的参数</h1><h2 id="Mapping"><a href="#Mapping" class="headerlink" title="Mapping"></a>Mapping</h2><p>在pggb中，对泛基因组graph结构影响最大的是mapping iedntity参数-p和片段长度-s. 这两个参数传给wfmash后对泛基因组的基础结构的影响非常大。</p><p>当泛基因组比较小，或者是重复序列比较少时，-s这个参数可以设置小一些。更大的-s参数能够保证尽可能多的保留输入序列中的共线性区域，通常需要大于转座子和其他常见的重复的长度。在wfmash中默认只保留至少mapping了5次的segment，可以使用参数-l, —block-length BLOCK进行调整。</p><p>-p默认的参数是95，-s默认的参数是10000. 但是还是要根据实际情况来调调整这两个参数。如果是分歧度很高的样品群，那么就需要把-p和-s调整到不同的水平。增加这两个参数的话，会增加初始比对的时的严格程度；降低这两个参数呢会使得比对时的敏感性更高。</p><p>还有一个参数是-n，表示的是单倍型的数量，这个在执行PanSN-spec流程的时候会自动计算。</p><h2 id="分歧度估计-2"><a href="#分歧度估计-2" class="headerlink" title="分歧度估计"></a>分歧度估计</h2><p>使用mash dist或者是mash triangle来计算序列之间的分歧度，通过输出的结果调整-p参数，通常是100-100*最大的分歧度数值。</p><h2 id="Target-number-of-alignment"><a href="#Target-number-of-alignment" class="headerlink" title="Target number of alignment"></a>Target number of alignment</h2><p>pggb构建的泛基因组由每个基因组每个片段的mapping数决定，对应的参数是-c. 理想情况是设置为1，也就是每条序列都两两比较。但是，如果泛基因组中有拷贝数变异，那么-c这个参数就应该设置得更大一些。一个原则是：比对的次数与N*N成正比，而且有些多重mapping可能是冗余的。如果没有特殊的考虑，直接设置为1即可。</p><h2 id="match-filter设置"><a href="#match-filter设置" class="headerlink" title="match filter设置"></a>match filter设置</h2><p>当我们从输入的比对结果中把很短的match过滤掉时，得到的graph结合seqwish会有更好的表现结果。wfmash比对结果中的这些区域通常是具有较低比对质量的区域，通常是大片段的indels和结构变异。最后的smoothxg step这一步中会得到解决。这个过滤的方法对应的参数是-k. 默认的值是23，这时候的偏差可以达到5%左右。当序列分歧度较大时，增大-k的值；当序列的分歧度较小时，降低-k的值。人类的单倍型基因组可以把-k设置为79. 那么这个参数是什么意思呢？-k设置为N就表示可以容忍不超过1/N的局部差异比例。可以使用minimap2等方法来减少这个步骤的影响，这种方法是通过更好地展示输入的比对文件中的大片段indels实现的。</p><h2 id="Homogenizing-and-ordering-the-graph"><a href="#Homogenizing-and-ordering-the-graph" class="headerlink" title="Homogenizing and ordering the graph"></a>Homogenizing and ordering the graph</h2><p>pggb的最后一步是细化graph，这种细化是通过POA来实现的。这个步骤会涉及到3个参数：-G、-P和-O. -G参数在理想情况下可以设置为泛基因组中转座子重复序列的长度，可以大于这个值，这个值设置得越高，得到的泛基因组的质量就会更好一些；更高的-G参数会得到多样性更低的泛基因组。minimap2对-P这个参数给出了一些建议：</p><div class="table-container"><table><thead><tr><th><strong>asm mode</strong></th><th><code>**--poa-params**</code></th><th><strong>divergence in %</strong></th></tr></thead><tbody><tr><td>asm5</td><td>1,19,39,3,81,1</td><td>~0.1</td></tr><tr><td>asm10</td><td>1,9,16,2,41,1</td><td>~1</td></tr><tr><td>asm20</td><td>1,4,6,2,26,1</td><td>~5</td></tr></tbody></table></div><h1 id="Variant-Calling"><a href="#Variant-Calling" class="headerlink" title="Variant Calling"></a>Variant Calling</h1><p>-V参数指定Reference.</p><h1 id="Reporting"><a href="#Reporting" class="headerlink" title="Reporting"></a>Reporting</h1><p>-S生成graph统计，-m生成MultiQC报告，-v这个参数如果没有设置的话，会同时生成1D和2D的绘图结果。</p><h1 id="Parallelization"><a href="#Parallelization" class="headerlink" title="Parallelization"></a>Parallelization</h1><p>-t参数指定运行的线程数，通常是一半即可。smoothxg步骤中的POA可以设置对应的-T. </p><h1 id="更大的泛基因组"><a href="#更大的泛基因组" class="headerlink" title="更大的泛基因组"></a>更大的泛基因组</h1><p>还是关注-p和-s这两个参数。-s这个参数通常设置为5-20 kbp，-p设置为接近序列分歧度的那个值计算得到的值。如果想获得高质量的比对结果，就把-p设置大一些。增加-s和-p会减少运行的时间以及内存需求，但是会降低graph的压缩程度。</p><p>如果使用10-20个基因组，多样性在1-5%，那么这两个参数就可以设置为-s10000 -p 95；但是，如果想把其他物种的基因组也加进这个泛基因组（多样性20%），那么-p这个参数就应该设置为70. </p><p>使用SPOA或abPOA处理复杂的blocks时，需要大量的内存。可以设置-T参数来降低内存的消耗。</p><h1 id="示例文献"><a href="#示例文献" class="headerlink" title="示例文献"></a>示例文献</h1><h2 id="葡萄泛基因组"><a href="#葡萄泛基因组" class="headerlink" title="葡萄泛基因组"></a>葡萄泛基因组</h2><p><a href="https://www.nature.com/articles/s41588-024-01967-5">https://www.nature.com/articles/s41588-024-01967-5</a></p><p>To represent the genetic diversity of grapes, we constructed a graph pangenome that incorporated a total of 29 haplotype assemblies, including 18 newly sequenced haplotype assemblies from 9 phase-resolved accessions and 11 previously published assemblies based on continuous long read data (two phase-resolved and seven primary assemblies). Based on these genome assemblies, we used two tools to build graph pangenome, MC (v.2.6.11) and PGGB (v.0.5.4), respectively. We combined reads mapping and assembled alignments to validate the graph paths, edges and nodes in the grape pangenome. To address the issue of small fragments in assemblies, we implemented filtering steps to exclude minor, fragmented and diverse assemblies that could introduce the wrong structures.</p><h2 id="野生和驯化大麦"><a href="#野生和驯化大麦" class="headerlink" title="野生和驯化大麦"></a>野生和驯化大麦</h2><p><a href="https://www.nature.com/articles/s41586-024-08187-1">https://www.nature.com/articles/s41586-024-08187-1</a></p><p>The coordinates of amy1_1 copies in 76 genome assemblies were obtained by BLAST searches with the Morex allele of HORVU.MOREX.PROJ.6HG00545380. The genomic intervals surrounding amy1_1 from 10 kb upstream of the first copy to 10 kb downstream of the last copy were extracted from corresponding assemblies and used for further analyses. We applied PGGB (v.0.4.0, <a href="https://github.com/pangenome/pggb">https://github.com/pangenome/pggb</a>) for 76 amy1_1 sequences with parameters ‘-n 76 -t 20 -p 90 -s 1000 -N’. The graph was visualized using Bandage125 (v.0.8.1). ODGI (v.0.7.3, command ‘paths’)110 was used to get a sparse distance matrix for paths with the parameter ‘-d’. The resultant distance matrix was plotted with the R package pheatmap (<a href="https://cran.r-project.org/web/packages/pheatmap/pheatmap.pdf">https://cran.r-project.org/web/packages/pheatmap/pheatmap.pdf</a>). Six representative sequences of amy1_1 were aligned against Morex by BLAST+ (v.2.13.0).</p><h2 id="马铃薯泛基因组"><a href="#马铃薯泛基因组" class="headerlink" title="马铃薯泛基因组"></a>马铃薯泛基因组</h2><p><a href="https://www.nature.com/articles/s41586-024-08476-9">https://www.nature.com/articles/s41586-024-08476-9</a></p><p>The Minigraph-Cactus pipeline27 and PGGB26 were used to construct a pseudo-phased pangenome with all 61 haplotypes based on the whole-genome alignment (including the DMv6.1 reference genome). For the PGGB, we estimated the divergence of each chromosome with mash distances and confirmed chromosome community with wfmash87 mapping. Then, we used “pggb -s 10000 -n 61 -p 90 -k 47 -P asm20 -O 0.001” to build each chromosome graph. We visualized the 1D layout of the graph and estimated presence and absence ratios to the DMv6.1 reference in 100-kb sliding windows using ODGI88. The small variants and SVs were detected by vg deconstruct from snarls, and we only kept top-level and &lt;1-Mb variants with vcfbub. For the Minigraph-Cactus pipeline, we assigned DMv6.1 as the guide for the paths, and progressively aligned the 60 haplotypes to it. We used the cactus-pangenome script with parameters “—gfa full —gbz full —vcfReference DMv6.1” to generate complete workflows and execute commands. The generated graph fragment assembly (GFA) format graph was used for edge, node and coverage statistics and subgraph generation from a BED input. The VCF output file comprises all graph variations based on the DMv6.1 reference, enabling the calculation of polymorphisms.</p><h2 id="结构变异挖掘综述"><a href="#结构变异挖掘综述" class="headerlink" title="结构变异挖掘综述"></a>结构变异挖掘综述</h2><p><a href="https://www.cell.com/cell/abstract/S0092-8674(24)00004-7?rss=yes">https://www.cell.com/cell/abstract/S0092-8674(24)00004-7?rss=yes</a></p><h2 id="人类泛基因组"><a href="#人类泛基因组" class="headerlink" title="人类泛基因组"></a>人类泛基因组</h2><p><a href="https://www.nature.com/articles/s41586-023-05896-x">https://www.nature.com/articles/s41586-023-05896-x</a></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署GROBID和BioBERT</title>
      <link href="/article/deploygrobidandbiobert/"/>
      <url>/article/deploygrobidandbiobert/</url>
      
        <content type="html"><![CDATA[<h2 id="GROBID"><a href="#GROBID" class="headerlink" title="GROBID"></a>GROBID</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>重要是使用docker进行安装。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull grobid/grobid:0.8.1<br></code></pre></td></tr></tbody></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> --init --<span class="hljs-built_in">ulimit</span> core=0 -p 8070:8070 docker.1ms.run/grobid/grobid:0.8.1<br></code></pre></td></tr></tbody></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li>全量模式：有GPU的时候可以使用。</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> --gpus all --init --<span class="hljs-built_in">ulimit</span> core=0 -p 8070:8070 grobid/grobid:0.8.1<br></code></pre></td></tr></tbody></table></figure><ul><li>轻量模式：没有GPU的时候施用。</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> --init --<span class="hljs-built_in">ulimit</span> core=0 -p 8070:8070 lfoppiano/grobid:0.8.1<br></code></pre></td></tr></tbody></table></figure><p>可以使用Web界面，浏览器输入<code>http://服务器IP地址:8070</code>即可访问界面。</p><p>熟悉命令行处理的话可以使用官方推荐的<strong><a href="https://github.com/kermitt2/grobid_client_python">grobid_client_python</a></strong>. 下载方式很简单：<br></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 -m pip install grobid-client-python<br></code></pre></td></tr></tbody></table></figure><p></p><p>使用前需要先运行GROBID. 此外，还需要一个配置文件<code>config.json</code>，默认的配置文件是这样的：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">{<br>    <span class="hljs-string">"grobid_server"</span>: <span class="hljs-string">"http://localhost:8070"</span>,<br>    <span class="hljs-string">"batch_size"</span>: 1000,<br>    <span class="hljs-string">"sleep_time"</span>: 5,<br>    <span class="hljs-string">"timeout"</span>: 60,<br>    <span class="hljs-string">"coordinates"</span>: [ <span class="hljs-string">"persName"</span>, <span class="hljs-string">"figure"</span>, <span class="hljs-string">"ref"</span>, <span class="hljs-string">"biblStruct"</span>, <span class="hljs-string">"formula"</span>, <span class="hljs-string">"s"</span> ]<br>}<br></code></pre></td></tr></tbody></table></figure><p>此时使用下面的命令就可以处理PDF文件了：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grobid_client --input ./paper --output ./output processFulltextDocument <br></code></pre></td></tr></tbody></table></figure><p>输出结果是个<code>xml</code>文件。</p><p>测试了123篇PDF文献，耗时<code>260.039秒</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu配置程序开机自动运行</title>
      <link href="/article/autorun/"/>
      <url>/article/autorun/</url>
      
        <content type="html"><![CDATA[<p>以内网穿透工具<code>frp</code>为例。</p><p>要设置 <code>frpc</code> 在 Ubuntu 系统上开机自动启动，你可以创建一个 systemd 服务文件。以下是详细的步骤：</p><h3 id="1-创建-systemd-服务文件"><a href="#1-创建-systemd-服务文件" class="headerlink" title="1. 创建 systemd 服务文件"></a>1. 创建 systemd 服务文件</h3><p>首先，使用文本编辑器创建一个新的服务文件。我们将其命名为 <code>frpc.service</code>。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/systemd/system/frpc.service<br></code></pre></td></tr></tbody></table></figure><h3 id="2-添加服务配置"><a href="#2-添加服务配置" class="headerlink" title="2. 添加服务配置"></a>2. 添加服务配置</h3><p>在打开的文件中，添加以下内容：</p><figure class="highlight ini"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=FRP Client Service<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/path/to/frpc -c /path/to/frpc.toml<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></tbody></table></figure><p>请确保将 <code>/path/to/frpc</code> 和 <code>/path/to/frpc.toml</code> 替换为 <code>frpc</code> 可执行文件和配置文件的实际路径。</p><h3 id="3-保存并退出"><a href="#3-保存并退出" class="headerlink" title="3. 保存并退出"></a>3. 保存并退出</h3><p>在 <code>nano</code> 中，按 <code>CTRL + X</code>，然后按 <code>Y</code> 确认保存更改，最后按 <code>Enter</code> 退出编辑器。</p><h3 id="4-重新加载-systemd"><a href="#4-重新加载-systemd" class="headerlink" title="4. 重新加载 systemd"></a>4. 重新加载 systemd</h3><p>为了使新的服务文件生效，重新加载 systemd 配置：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl daemon-reload<br></code></pre></td></tr></tbody></table></figure><h3 id="5-启用服务"><a href="#5-启用服务" class="headerlink" title="5. 启用服务"></a>5. 启用服务</h3><p>使用以下命令启用服务，以便它在开机时自动启动：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> frpc.service<br></code></pre></td></tr></tbody></table></figure><h3 id="6-启动服务"><a href="#6-启动服务" class="headerlink" title="6. 启动服务"></a>6. 启动服务</h3><p>你可以立即启动服务以测试它是否正常工作：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start frpc.service<br></code></pre></td></tr></tbody></table></figure><h3 id="7-检查服务状态"><a href="#7-检查服务状态" class="headerlink" title="7. 检查服务状态"></a>7. 检查服务状态</h3><p>使用以下命令检查服务的状态，确保它正在运行：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl status frpc.service<br></code></pre></td></tr></tbody></table></figure><h3 id="8-日志查看"><a href="#8-日志查看" class="headerlink" title="8. 日志查看"></a>8. 日志查看</h3><p>如果服务未能启动，可以查看日志以获取更多信息：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">journalctl -u frpc.service<br></code></pre></td></tr></tbody></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过以上步骤，你已经成功设置 <code>frpc</code> 在 Ubuntu 系统上开机自动启动。如果有任何问题或需要进一步的帮助，请随时询问！</p><hr><p>我的配置文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=FRP Client Service<br>After=network.target<br><br>[Service]<br>Type=simple<br>ExecStart=/home/xxx/software/frp/frp_0.61.1_linux_amd64/frpc -c /home/xxx/software/frp/frp_0.61.1_linux_amd64/frpc.toml<br>Restart=on-failure<br>RestartSec=30          <span class="hljs-comment"># 重启前的等待时间（秒）</span><br>StartLimitInterval=6000s  <span class="hljs-comment"># 在这个时间窗口内的限制</span><br>StartLimitBurst=100      <span class="hljs-comment"># 允许的最大重启次数</span><br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>葡萄Science文章基因组学和群体遗传学代码</title>
      <link href="/article/genomecode/"/>
      <url>/article/genomecode/</url>
      
        <content type="html"><![CDATA[<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>Dong Y, Duan S, Xia Q, et al. Dual domestications and origin of traits in grapevine evolution[J]. Science, 2023, 379(6635): 892-901.</p></blockquote><h1 id="基因组组装和注释"><a href="#基因组组装和注释" class="headerlink" title="基因组组装和注释"></a>基因组组装和注释</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.NextDenovo<br>1.1 seq_stat calculated length cutoff of reads<br>~/NextDenovo/bin/seq_stat -g 500Mb input.fofn<br><span class="hljs-comment">#45x reads were used to correct reads</span><br>1.2 runnextDenovo（v2.1-beta.0）<br>~/NextDenovo/nextDenovo ./run.cfg -l log.txt<br><br><span class="hljs-comment"># config content</span><br>job_type = <span class="hljs-built_in">local</span><br>job_prefix = nextDenovo<br>task = all<br>rewrite = <span class="hljs-built_in">yes</span><br>deltmp = <span class="hljs-built_in">yes</span><br>rerun = 3<br>parallel_jobs = 20<br>input_type = raw<br>input_fofn = /data/nextdenovo/input.fofn<br>workdir = /data/nextdenovo<br><span class="hljs-comment">#cluster_options = -q gxyy -l nodes1:ppn=10 -j oe</span><br><span class="hljs-comment">#nodelist = avanode.list.fofn</span><br><br>[correct_option]<br>read_cuoff = 1k<br>seed_cutoff = 19703<br>seed_cutfiles = 40<br>blocksize = 10g<br><br>pa_correction = 40<br>minimap2_options_raw = -x ava-pb -t 16<br>sort_options = -m 50g -t 16 -k 50<br>correction_options = -p 32<br><br>[assemble_option]<br>random_round = 100<br>minimap2_options_cns = -x ava-pb -t 32 -k17 -w17<br>nextgraph_options = -a 1<br><br>2. purge haplotigs<br><br>minimap2 -t 10 -ax map-pb VS1.fasta total.fasta.gz  --secondary=no  | samtools <span class="hljs-built_in">sort</span> -m 1G -o aligned.bam -T tmp.ali<br><br>purge_haplotigs  hist  -b aligned.bam  -g VS1.fasta  -t 20<br>purge_haplotigs cov  -i aligned.bam.gencov -o coverage_stats.csv  -l 10  -m 68  -h 140<br>purge_haplotigs purge  -g VS1.fasta -c coverage_stats.csv   -t 4  -a 60<br><br><span class="hljs-comment">#get curated.fasta file</span><br><br>3.pilon polish <br>bwa  mem -t 20 ./curated.fasta  SV-1-1_TKD181000271_1.clean.fq.gz.clean.dup.clean SV-1-1_TKD181000271_2.clean.fq.gz.clean.dup.clean |samtools <span class="hljs-built_in">sort</span> -@ 20 -O BAM -o VS1-1.pe.sort.bam<br>samtools index VS1-1.pe.sort.bam<br><br>java -Xmx300g -jar pilon-1.21.jar --genome ./curated.fasta --frags ./round1_bam/VS1-1.pe.sort.bam --frags ./round1_bam/VS1-2.pe.sort.bam --frags ./round1_bam/VS1-3.pe.sort.bam --frags ./round1_bam/VS1-4.pe.sort.bam  --fix snps,indels --output VS1.round1.pilon --changes --threads 50<br><br>4.ccs extend<br>4.1CCS bam to fasta<br>~/bin/bam2fastx -AQa -o ABFC20191093-01.ccs.fasta.gz ABFC20191093-01.ccs.bam<br>4.2Canu assembly ccs reads<br>~/bin/canu -p vs1 -d vs1  gridEngine=PBS genomeSize=500m \<br>  batOptions=<span class="hljs-string">"-dg 3 -db 3 -dr 1 -ca 500 -cp 50 -M 250"</span> \<br>  correctedErrorRate=0.050 \<br>  gridOptions=<span class="hljs-string">"-q gxyy "</span> \<br>  -pacbio-hifi ABFC20191093-01.ccs.fasta.gz<br>4.3Mummer align result of pilon polished and  CCS assembly<br>4.4 Manual correction and links.<br><br>5. Nextpolish<br>nextPolish run.cfg<br><br><span class="hljs-comment">#run.cfg</span><br>[General]<br>job_type = <span class="hljs-built_in">local</span><br>job_prefix = nextPolish<br>task = best<br>rewrite = <span class="hljs-built_in">yes</span><br>rerun = 3<br>parallel_jobs = 10<br>multithread_jobs = 8<br>genome = ./genome.fasta<br>genome_size = auto<br>workdir = ./01_rundir<br>polish_options = -p {multithread_jobs}<br><br>[lgs_option]<br>//lgs_fofn = ./lgs.fofn<br>lgs_options = -min_read_len 1k -max_depth 60<br>lgs_minimap2_options = -x map-pb<br><br><span class="hljs-comment">#lgs.fofn</span><br>ABFC20191093-01.ccs.fasta.gz<br><br>6. 3ddna assembly<br>6.1 Juicer alignment<br>~/juicer/scripts/juicer.sh \<br> -z /data/references/VS1.pilon.merge.polish.fasta \<br> -d /data/NextDenovo2/VS1/hic_nextdenovo \<br> -s DpnII -t 50 \<br> -p /data/restriction_sites/VS1.pilon.merge.polish.chrom.sizes \<br> -y /data/restriction_sites/VS1.pilon.merge.polish_DpnII.txt \<br> -D ~/juicer<br> <br>6.2 3ddna assembly<br>~/3d-dna/run-asm-pipeline.sh VS1.pilon.merge.polish.fasta merged_nodups.txt<br><br>6.3 3ddna-review<br>~/3d-dna/run-asm-pipeline-post-review.sh  -s finalize --sort-output --build-gapped-map -r VS1.curated.FINAL.review.assembly VS1.curated.fa merged_nodups.txt<br><br>7. Mummber align the assembly to Pinot Noir genome<br>7.1 nucmer -c 100 -p out/1_1 VS1.FINAL.fa.cut//VS1.FINAL.fa.1 Vitis_vinifera.IGGP_12x.31.dna.genome.fa.cut//Vitis_vinifera.IGGP_12x.31.dna.genome.fa.1<br>7.2 python deal_delta.py out/ref_query.delta out/ref_query.deal.delta<br>7.3 delta-filter -i 89 -l 1000 -1 ref_query.deal.delta &gt;ref_query.deal.delta.identy_0.9.len1k.filter<br>7.4 show-coords -c ref_query.deal.delta.identy_0.9.len1k.filter &gt;ref_query.deal.delta.identy_0.9.len1k.filter.coords<br>7.5 ~/dotPlotly/mummerCoordsDotPlotly.R -i ref_query.deal.delta.identy_0.9.len1k.filter.coords -o ref_query.deal.delta.identy_0.9.len1k.filter.coords -s -t -m 5000 -q 5000 -k 25 -l<br><br>8. Repeat annotation<br>8.1 Ltr_finder: <br>LTR_FINDER_parallel -<span class="hljs-built_in">seq</span> VS1.FINAL.fa -threads 40 -harvest_out -size 1000000 -time 300 -finder ltr_finder<br>8.2 Ltrharvest: <br>gt suffixerator -db VS1.FINAL.fa -indexname VS1.FINAL.fa -tis -suf -lcp -des -ssp -sds -dna<br>gt ltrharvest -index VS1.FINAL.fa -minlenltr 100 -maxlenltr 7000 -mintsd 4 -maxtsd 6 -motif TGCA -motifmis 1 -similar 85 -vic 10 -seed 20 -seqids <span class="hljs-built_in">yes</span> &gt; VS1.genome.split.harvest.scn<br>8.3 LTR_retriever: <br>LTR_retriever -genome VS1.FINAL.fa -inharvest VS1.FINAL.fa.rawLTR.scn -threads 40<br>8.4 RepeatModeler<br>~/RepeatModeler-2.0/BuildDatabase -name mydb VS1.FINAL.fa &gt;<span class="hljs-built_in">log</span><br>~/RepeatModeler-2.0/RepeatModeler -pa 15 -database mydb &gt; run.out<br>8.5 Repeatmasker<br>perl RepeatMasker -nolow -no_is -norna -pa 1 -species Viridiplantae VS1.FINAL.fa &gt; VS1.FINAL.fa.log 2&gt; VS1.FINAL.fa.log2<br>8.6 Proteinmasker<br>perl RepeatProteinMask -engine ncbi -noLowSimple -pvalue 0.0001 VS1.FINAL.fa.masked<br>8.7repeatmasker_de<br>perl RepeatMasker -nolow -no_is -norna -pa 1 -lib denovo.library.fa VS1.FINAL.fa. masked.masked &gt;VS1.FINAL.fa. masked.masked.log 2&gt;VS1.FINAL.fa.masked.masked.log2<br>8.8 Trf<br>trf VS1.FINAL.fa 2 7 7 80 10 50 2000 -d -h<br><br>9. Gene annotation<br>9.1 Homolog: Arabidopsis thaliana (Ensembl release 43), V. riparia, V. vinifera cv. Chardonnay, 12x.v2 (Ensembl, NCBI, and vitviv2)<br>perl ~/Annotation_pipeline/01.gene_finding/protein-map-genome/bin/protein_map_genome.pl --cpu 100 --align_rate 0.25 --step 1234 --tophit 10  --lines 1000 --verbose --extend_len 2000 --queue clu /data/Arabidopsis_thaliana/Arabidopsis_thaliana.TAIR10.43.gff.pep ./VS1.FINAL.fa<br><br>9.2 Denovo<br>9.2.1 Augustus (2.5.5) db: BUSCO results<br>~/augustus.2.5.5/bin/augustus --species=BUSCO --AUGUSTUS_CONFIG_PATH=~/augustus_busco/ --uniqueGeneId=<span class="hljs-literal">true</span> --noInFrameStop=<span class="hljs-literal">true</span> --gff3=on --strand=both VS1.FINAL.fa &gt; VS1.FINAL.fa.augustus<br>9.2.2 glimmerHMM (3.0.2)，db: Arabidopsis thaliana<br>~/GlimmerHMM/bin/glimmerhmm  VS1.FINAL.fa  -d  ~/GlimmerHMM/trained_dir/arabidopsis  -f  -g  &gt;  VS1.FINAL.fa.gff<br>9.2.3 Genescan (2015-10-31)<br>perl  /nfs/nfs1/soft/Annotation_pipeline/01.gene_finding/denovo-predict/bin/split_seq.pl  -len  1000000  /nfs/nfs3/dongx/wild_vitis/VS1/VS1.FINAL.fa  &gt;  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./VS1.FINAL.fa.cut1Mb;  perl  /nfs/nfs1/soft/Annotation_pipeline/01.gene_finding/denovo-predict/bin/predict_run.pl  /nfs/nfs1/soft/soft_annotation/genscan/genscan  /nfs/nfs1/soft/soft_annotation/genscan/Arabidopsis.smat  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./VS1.FINAL.fa.cut1Mb  &gt;  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./VS1.FINAL.fa.genscan;  perl  /nfs/nfs1/soft/Annotation_pipeline/01.gene_finding/denovo-predict/bin/predict_convert_new.pl  --predict  genscan  --backcoor  --final  G  -outdir  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./VS1.FINAL.fa.genscan  /nfs/nfs3/dongx/wild_vitis/VS1/VS1.FINAL.fa;  perl  /nfs/nfs1/soft/Annotation_pipeline/01.gene_finding/denovo-predict/bin/Check_GFF.pl  -perfect  -check_cds  -mini_cds  150  -cds_ns  10  -outdir  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/genescan/./VS1.FINAL.fa.genscan.gff  /nfs/nfs3/dongx/wild_vitis/VS1/VS1.FINAL.fa<br>9.2.4 SNAP (Semi-HMM-based Nucleic Acid Parser, version 2006-07-28)<br>/nfs/nfs1/soft/soft_annotation/snap/snap  -gff  /nfs/nfs1/soft/soft_annotation/snap/HMM/A.thaliana.hmm  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/snap/./VS1.FINAL.fa.cut/VS1.FINAL.fa.1  &gt;  /nfs/nfs3/dongx/wild_vitis/VS1/2.gene/denovo/snap/./VS1.FINAL.fa.cut/VS1.FINAL.fa.1.snap<br><br>9.3 Transcriptome<br>9.3.1 Build index<br>hisat2-build -p 20 VS1.FINAL.fa VS1.FINAL.fa<br><br>9.3.2 Hisat alignment<br>hisat2  -p 10 -x VS1.FINAL.fa -U <span class="hljs-variable">${i}</span>.fq.gz.qtrim  -S <span class="hljs-variable">${i}</span>.sam<br>samtools  view -bS <span class="hljs-variable">${i}</span>.sam &gt; <span class="hljs-variable">${i}</span>.bam<br>samtools  <span class="hljs-built_in">sort</span> -o <span class="hljs-variable">${i}</span>.sorted.bam <span class="hljs-variable">${i}</span>.bam<br>stringtie   <span class="hljs-variable">${i}</span>.sorted.bam -o <span class="hljs-variable">${i}</span>.gtf -p 10<br><br>9.3.3 Stringtie merge gtf<br>stringtie --merge -o merged.gtf gtflist<br><br>9.4 EVM <br>perl ~/EVM_r2012-06-25/EvmUtils/partition_EVM_inputs.pl --genome VS1.FINAL.fa --gene_predictions denovo.gff3 \<br> --protein_alignments homolog.gff3 --transcript_alignments merged.gff3 \<br> --segmentSize 5000000 --overlapSize 10000 --partition_listing partitions_list.out<br>perl ~/EVM_r2012-06-25/EvmUtils/write_EVM_commands.pl \<br> --genome VS1.FINAL.fa --weights weight.txt \<br> --gene_predictions denovo.gff3 --protein_alignments homolog.gff3 --transcript_alignments merged.gff3 \<br> --output_file_name evm.out \<br> --partitions partition/partitions_list.out &gt; commands.list<br>sh commands.list<br><span class="hljs-comment">#weight</span><br>PROTEIN A. thaliana 3, V. riparia 5, Chardonnay 6, 12x (3 versions) 8<br>AB initio AUGUSTUS 5, Glimmer, GeneScan, SNAP 1<br>Transcript 8<br><br>perl ~/EVM_r2012-06-25/EvmUtils/recombine_EVM_partial_outputs.pl \<br> --partitions partition/partitions_list.out --output_file_name evm.out<br><br>perl ~/EVM_r2012-06-25/EvmUtils/convert_EVM_outputs_to_GFF3.pl \<br> --partitions partition/partitions_list.out --output_file_name evm.out --genome VS1.FINAL.fa<br> <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> partition/*; <span class="hljs-keyword">do</span> <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-variable">$i</span>/*out.gff3;<span class="hljs-keyword">do</span> <span class="hljs-built_in">cat</span> <span class="hljs-variable">$j</span>; <span class="hljs-keyword">done</span>;<span class="hljs-keyword">done</span> &gt;EVM.out.gff3<br> <br>9.5 PASA update<br>Transcriptome <span class="hljs-keyword">for</span> PASA<br>Trinity --seqType fq --left SRRxx.1.fastq.gz --right SRRxx.2.fastq.gz --CPU 24 --max_memory 20G<br><br>perl ~/pasa/PASApipeline/misc_utilities/accession_extractor.pl &lt;no_re_full-length.fasta&gt;tdn.accs<br>perl ~/pasa/PASApipeline/bin/seqclean all_transcripts.fasta -c 16 -v ~/pasa/UniVec/UniVec.fasta<br>perl ~/pasa/PASApipeline/Launch_PASA_pipeline.pl \<br> --TDN  tdn.accs \<br> -c alignAssembly.config -C -R -g VS1.FINAL.fa \<br> -t all_transcripts.fasta.clean -T -u all_transcripts.fasta \<br> --ALIGNERS blat --CPU 60<br>perl ~/pasa/PASApipeline/misc_utilities/pasa_gff3_validator.pl EVM.out.gff3<br>perl ~/pasa/PASApipeline/scripts/Load_Current_Gene_Annotations.dbi \<br> -c alignAssembly.config -g VS1.FINAL.fa \<br> -P EVM.out.gff3<br>perl ~/pasa/PASApipeline/Launch_PASA_pipeline.pl \<br>-c annotCompare.config -A \<br> -g VS1.FINAL.fa \<br> -t all_transcripts.fasta.clean --CPU 40<br> <br>9.6 Gene filter<br>python filter_one_exon_CDS_length.py VS1.sqlite.gene_structures_post_PASA_updates.108840.gff3 VS1.exon_CDS_stat.gene.txt VS1.exon_CDS_filter.gene.txt 300 0 <br>python filter_gene_base_repeat.py  VS1.sqlite.gene_structures_post_PASA_updates.108840.single_iso.sorted.1.bed  all_without_trf.sorted.merge.strand.1.bed VS1.repeat_percent.gene.1.txt  VS1.repeat_filter.gene.1.txt 0.5 <br><br>10 ncRNA annotation<br>10.1 rRNA<br>/nfs/nfs1/soft/soft_annotation/blast-2.2.26/bin/formatdb -p F -o T -i ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1; /nfs/nfs1/soft/soft_annotation/blast-2.2.26/bin/blastall -p blastn -e 1e-5 -v 10000 -b 10000 -d ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1 -i /nfs/nfs1/soft/Annotation_pipeline/04.ncRNA-finding/rRNA-tRNA-Rfam/dat/ref-rRNA/plant-rRNA/plant_rRNA.fa -o ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1.rRNA.blast; perl /nfs/nfs1/soft/Annotation_pipeline/common_bin/blast_parser.pl -nohead ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1.rRNA.blast &gt; ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1.rRNA.blast.tab;<br><br>10.2 tRNA tRNAscan-SE (version 1.3.1)<br>/nfs/nfs1/soft/soft_annotation/tRNAscan-SE-1.3/bin/tRNAscan-SE -o ./VS1.FINAL.fa.60.cut/VS1.FINAL.fa.60.1.tRNA -f ./VS1.FINAL.fa.60.cut/VS1.FINAL.fa.60.1.tRNA.structure  ./VS1.FINAL.fa.60.cut/VS1.FINAL.fa.60.1<br><br>10.3 miRNA<br>/nfs/nfs1/soft/soft_annotation/blast-2.2.26/bin/blastall -p blastn -W 7 -e 1 -v 10000 -b 10000 -m8 -d ./Rfam.fasta.miRNA -i ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1 -o ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1.miRNA.blast.m8;<br>/nfs/nfs1/soft/soft_annotation/infernal-0.81/bin/cmsearch  /nfs/nfs1/soft/Annotation_pipeline/04.ncRNA-finding/rRNA-tRNA-Rfam/dat/Rfam/Rfam/RF01043.cm ./VS1.FINAL.fa.miRNA.cmsearch/1001_2000/10__18670843_18671776.RF01043 &gt; ./VS1.FINAL.fa.miRNA.cmsearch/1001_2000/10__18670843_18671776.RF01043.cmsearch<br><br>10.4 snRNA<br>/nfs/nfs1/soft/soft_annotation/blast-2.2.26/bin/blastall -p blastn -W 7 -e 1 -v 10000 -b 10000 -m8 -d ./Rfam.fasta.snRNA -i ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1 -o ./VS1.FINAL.fa.cut/VS1.FINAL.fa.1.snRNA.blast.m8;<br>/nfs/nfs1/soft/soft_annotation/infernal-0.81/bin/cmsearch  /nfs/nfs1/soft/Annotation_pipeline/04.ncRNA-finding/rRNA-tRNA-Rfam/dat/Rfam/Rfam/RF01217.cm ./VS1.FINAL.fa.snRNA.cmsearch/1001_2000/10__10502775_10503210.RF01217 &gt; ./VS1.FINAL.fa.snRNA.cmsearch/1001_2000/10__10502775_10503210.RF01217.cmsearch<br><br>11 <span class="hljs-keyword">function</span><br><span class="hljs-comment">#SwissProt, TrEMBL, KEGG</span><br>~/blast-2.2.26/bin/blastall -b 100 -v 100 -p blastp -e 1e-05 -F F -d <span class="hljs-variable">${database}</span> -i VS1.pep.fa -o VS1.pep.fa.<span class="hljs-variable">${database}</span>.blast;<br><br><span class="hljs-comment">#InterProScan</span><br>interproscan.sh -dp -f tsv -iprlookup -goterms -i VS1.pep.fa -o VS1.pep.fa.iprscan -T ./tmp;<br></code></pre></td></tr></tbody></table></figure><p><code>filter_gene_base_repeat.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> commands<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) &lt;&gt; <span class="hljs-number">6</span>:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">"Usage: "</span> + sys.argv[<span class="hljs-number">0</span>] + <span class="hljs-string">" gene_bed repeat_bed out_all out_filtered set_repeat_percent(0.5) \nwrited by dsc"</span><br>        sys.exit(-<span class="hljs-number">1</span>)<br>file1=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">1</span>],<span class="hljs-string">'r'</span>)<br>file2=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">2</span>],<span class="hljs-string">'r'</span>)<br>file3=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">3</span>],<span class="hljs-string">'w'</span>)<br>file4=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">4</span>],<span class="hljs-string">'w'</span>)<br>set_repeat_percent=<span class="hljs-built_in">float</span>(sys.argv[<span class="hljs-number">5</span>])<br>file3.write(<span class="hljs-string">'Chr\tStart\tEnd\tStrand\tGene\tRepeat_Percent\n'</span>)<br>file4.write(<span class="hljs-string">'Chr\tStart\tEnd\tStrand\tGene\tRepeat_Percent\n'</span>)<br>Line1=file1.readlines()<br>Line2=file2.readlines()<br><span class="hljs-keyword">for</span> line1 <span class="hljs-keyword">in</span> Line1:<br>lin1=line1.strip(<span class="hljs-string">'\n'</span>).split(<span class="hljs-string">'\t'</span>)<br>gene_length=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>])-<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>])+<span class="hljs-number">1</span>)<br>repeat_length=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> line2 <span class="hljs-keyword">in</span> Line2:<br>lin2=line2.strip(<span class="hljs-string">'\n'</span>).split(<span class="hljs-string">'\t'</span>)<br><span class="hljs-keyword">if</span> lin2[<span class="hljs-number">3</span>]==lin1[<span class="hljs-number">3</span>]:<br><span class="hljs-keyword">if</span> lin2[<span class="hljs-number">0</span>]==lin1[<span class="hljs-number">0</span>]:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>]) &lt; <span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>]):<br><span class="hljs-keyword">continue</span><br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])&gt;<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>]):<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])&lt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])&gt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>]): <span class="hljs-comment">#repeat cover</span><br>repeat_length=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>])-<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>])+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])&lt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])&gt;<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])&lt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>]): <span class="hljs-comment">#left overlap</span><br>repeat_length+=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])-<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>])+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])&gt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])&lt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>]): <span class="hljs-comment">#cover repeat</span><br>repeat_length+=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])-<span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])+<span class="hljs-number">1</span>)<br>                                        <span class="hljs-keyword">else</span>:<br>                                                <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])&gt;=<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])&lt;<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>]) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">2</span>])&gt;<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>]): <span class="hljs-comment">#right overlap</span><br>repeat_length+=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">int</span>(lin1[<span class="hljs-number">2</span>])-<span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">1</span>])+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">break</span><br>repeat_percent=<span class="hljs-string">'%.3f'</span> % <span class="hljs-built_in">float</span>(<span class="hljs-built_in">float</span>(repeat_length)/<span class="hljs-built_in">float</span>(gene_length))<br>file3.write(<span class="hljs-string">'\t'</span>.join(lin1)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(repeat_percent)+<span class="hljs-string">'\n'</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(set_repeat_percent) == <span class="hljs-number">0</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(repeat_percent) == <span class="hljs-number">0</span>:<br>file4.write(<span class="hljs-string">'\t'</span>.join(lin1)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(repeat_percent)+<span class="hljs-string">'\n'</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(repeat_percent) &lt; <span class="hljs-built_in">float</span>(set_repeat_percent):<br>file4.write(<span class="hljs-string">'\t'</span>.join(lin1)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(repeat_percent)+<span class="hljs-string">'\n'</span>)<br>file1.close()<br>file2.close()<br>file3.close()<br>file4.close()<br></code></pre></td></tr></tbody></table></figure><p><code>filter_one_exon_CDS_length.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> commands<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) &lt;&gt; <span class="hljs-number">6</span>:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">"Usage: "</span> + sys.argv[<span class="hljs-number">0</span>] + <span class="hljs-string">" gff3 all_out filtered_out set_CDS_lengt(300) set_exon_nuber(0) \nwrited by dsc"</span><br>        sys.exit(-<span class="hljs-number">1</span>)<br>file1=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">1</span>],<span class="hljs-string">'r'</span>)<br>file2=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">2</span>],<span class="hljs-string">'w'</span>)<br>file3=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">3</span>],<span class="hljs-string">'w'</span>)<br>set_CDS_lengt=sys.argv[<span class="hljs-number">4</span>]<br>set_exon_nuber=sys.argv[<span class="hljs-number">5</span>]<br>file2.write(<span class="hljs-string">'Gene\texon_number\tCDS_length\n'</span>)<br>file3.write(<span class="hljs-string">'Gene\texon_number\tCDS_length\n'</span>)<br>new_file=[]<br>Line=file1.readlines()<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> Line:<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(line)&gt;<span class="hljs-number">1</span>:<br><span class="hljs-keyword">if</span> <span class="hljs-string">'#'</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> line:<br>new_file.append(line)<br>line1=new_file[<span class="hljs-number">0</span>]<br>lin1=line1.split(<span class="hljs-string">'\t'</span>)<br>exon_num=<span class="hljs-number">0</span><br>cds_len=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(new_file)):<br>line2=new_file[i]<br>lin2=line2.split(<span class="hljs-string">'\t'</span>)<br><span class="hljs-keyword">if</span> lin2[<span class="hljs-number">2</span>]==<span class="hljs-string">'CDS'</span>:<br>exon_num+=<span class="hljs-number">1</span><br>length=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">4</span>])-<span class="hljs-built_in">int</span>(lin2[<span class="hljs-number">3</span>])+<span class="hljs-number">1</span>)<br>cds_len+=length<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">if</span> lin2[<span class="hljs-number">2</span>]==<span class="hljs-string">'gene'</span>:<br>file2.write(lin1[<span class="hljs-number">8</span>].split(<span class="hljs-string">';'</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">'='</span>)[<span class="hljs-number">1</span>]+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(exon_num)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(cds_len)+<span class="hljs-string">'\n'</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(exon_num) &gt; <span class="hljs-built_in">int</span>(set_exon_nuber) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(cds_len)&gt;=<span class="hljs-built_in">int</span>(set_CDS_lengt):<br>file3.write(lin1[<span class="hljs-number">8</span>].split(<span class="hljs-string">';'</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">'='</span>)[<span class="hljs-number">1</span>]+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(exon_num)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(cds_len)+<span class="hljs-string">'\n'</span>)<br>line1=line2<br>lin1=lin2<br>exon_num=<span class="hljs-number">0</span><br>cds_len=<span class="hljs-number">0</span><br>file2.write(lin1[<span class="hljs-number">8</span>].split(<span class="hljs-string">';'</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">'='</span>)[<span class="hljs-number">1</span>]+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(exon_num)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(cds_len)+<span class="hljs-string">'\n'</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(exon_num) &gt;<span class="hljs-built_in">int</span>(set_exon_nuber) <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(cds_len)&gt;=<span class="hljs-built_in">int</span>(set_CDS_lengt):<br>file3.write(lin1[<span class="hljs-number">8</span>].split(<span class="hljs-string">';'</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">'='</span>)[<span class="hljs-number">1</span>]+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(exon_num)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(cds_len)+<span class="hljs-string">'\n'</span>) <span class="hljs-comment">#last line</span><br>file1.close()<br>file2.close()<br>file3.close()<br></code></pre></td></tr></tbody></table></figure><h1 id="变异检测和注释"><a href="#变异检测和注释" class="headerlink" title="变异检测和注释"></a>变异检测和注释</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs bash">Variant calling, validation, and annotation<br>  1. raw reads filtering<br>      ~/bin/fastp -i sample_1.clean.fq.gz -o sample_1.filtered.fq.gz -I sample_2.clean.fq.gz -O sample_2.filtered.fq.gz -q 20 -u 40 -l 70<br> <br>  2. Reads mapping<br>     ~/bin/bwa-mem2 index VS1.fa <br><br>    ~/bin/bwa-mem2  mem -R <span class="hljs-string">'@RG\tID:B44\tLB:B44\tSM:B44\tPL:ILLUMINA'</span> -t 30 VS1.final.fa sample_1.filtered.fq.gz  sample_2.filtered.fq.gz  |samtools view -Sb - &gt;sample.pe.bam<br><br>     ~/bin/gatk SortSam --INPUT sample.pe.bam --OUTPUT sample.sort.bam --SORT_ORDER coordinate<br><br>     ~/bin/gatk MarkDuplicates -I sample.sort.bam -O sample.sort.markdup.bam -M sample.sort.markdup_metrics.txt<br><br>     ~/bin/samtools index sample.sort.markdup.bam<br><br>   3. Sequencing statistics<br>      ~/bin/bamdst -p VS1.final.fa.bed -o ~/sample sample.sort.markdup.bam<br><br>   4. Variant calling <br>       time java -Xmx12g -Djava.io.tmpdir=./java_tmp -jar ~/bin/gatk3.8.0/GenomeAnalysisTK.jar -T HaplotypeCaller --num_cpu_threads_per_data_thread 40  -R VS1.final.fa  -I sample.sort.markdup.bam  -ERC GVCF  -variant_index_type LINEAR -variant_index_parameter 128000 -A StrandOddsRatio -A Coverage -A QualByDepth -A FisherStrand -A MappingQualityRankSumTest -A ReadPosRankSumTest -A RMSMappingQuality -o sample.g.vcf.gz<br><br>       <span class="hljs-comment">#joint-genotyping analysis of the gVCFs (-L 1..19)</span><br>       time java -Xmx12g -Djava.io.tmpdir=./java_tmp -jar ~/bin/gatk3.8.0/GenomeAnalysisTK.jar -T CombineGVCFs -R  VS1.final.fa -V sample1.g.vcf.gz -V sample2.g.vcf.gz -L 1 -o chr.1.g.vcf.gz<br><br>       time java -Xmx12g -Djava.io.tmpdir=./java_tmp -jar ~/bin/gatk3.8.0/GenomeAnalysisTK.jar  -T GenotypeGVCFs   -R VS1.final.fa -V  chr.1.g.vcf.gz -L 1 -o chr.1.raw.vcf.gz<br><br>       ~/bin/gatk SelectVariants  -select-type SNP  -V Grape.1.raw.vcf.gz -O Grape.1.snp.vcf.gz<br><br>       ~/bin/gatk SelectVariants  -select-type INDEL -V Grape.1.raw.vcf.gz -O Grape.1.indel.vcf.gz<br><br>   5. SNP and INDEL filtering<br>      ~/bin/gatk -V Grape.1.snp.vcf.gz -filter <span class="hljs-string">"QD &lt; 2.0"</span> --filter-name <span class="hljs-string">"QD2"</span>  -filter <span class="hljs-string">"QUAL &lt; 30.0"</span> --filter-name <span class="hljs-string">"QUAL30"</span> -filter <span class="hljs-string">"SOR &gt; 3.0"</span> --filter-name <span class="hljs-string">"SOR3"</span> -filter <span class="hljs-string">"FS &gt; 60.0"</span> --filter-name <span class="hljs-string">"FS60"</span> -filter <span class="hljs-string">"MQ &lt;40.0"</span> --filter-name <span class="hljs-string">"MQ40"</span> -filter <span class="hljs-string">"MQRankSum &lt; -10.0"</span> --filter-name <span class="hljs-string">"MQRankSum-10"</span> -filter <span class="hljs-string">"ReadPosRankSum &lt; -8.0"</span> --filter-name ReadPosRankSum-8  -O Grape.1.fliter.snp.vcf.gz<br><br>      ~/bin/vcftools --gzvcf Grape.1.fliter.snp.vcf.gz --remove-filtered-all --recode --stdout | gzip -c Grape.1.pass.snp.vcf.gz<br><br>      ~/bin/vcftools --gzvcf Grape.1.pass.snp.vcf.gz  --min-alleles 2 --max-alleles 2 --recode --stdout | gzip -c Grape.1.bi.snp.vcf.gz<br><br>      ~/bin/vcftools --gzvcf Grape.1.bi.snp.vcf.gz --max-missing 0.4 --maf  0.005 --recode --stdout | gzip -c &gt;Grape.1.bi.maf0.005mis0.4.snp.vcf.gz<br><br>      ~/bin/vcftools --gzvcf Grape.1.bi.snp.vcf.gz --TsTv-summary --out Grape.1.bisnp<br><br>      ~/bin/gatk -V Grape.1.max40.indel.vcf.gz -filter <span class="hljs-string">"QD &lt; 2.0"</span> --filter-name <span class="hljs-string">"QD2"</span>  -filter <span class="hljs-string">"QUAL &lt; 30.0"</span> --filter-name <span class="hljs-string">"QUAL30"</span> -filter <span class="hljs-string">"SOR &gt; 5.0"</span> --filter-name <span class="hljs-string">"SOR5"</span> -filter <span class="hljs-string">"FS &gt; 100.0"</span> --filter-name <span class="hljs-string">"FS100"</span>  -filter <span class="hljs-string">"InbreedingCoeff &lt;-0.8"</span> --filter-name <span class="hljs-string">"InbreedingCoeff-0.8"</span>  -O Grape.1.filter.indel.vcf.gz<br><br>      ~/bin/vcftools --gzvcf --remove-filtered-all --recode --stdout | gzip -c &gt;Grape.1.pass.indel.vcf.gz<br><br><br>    6. SNP Validation<br>       <span class="hljs-comment">## CHIP and previous 472 SNP validation</span><br>      perl get_snpfa.pl PN40024.fa chip.info 60<br>      ~/bin/makeblastdb -<span class="hljs-keyword">in</span> VS1.final.fa -dbtype nucl -out VS1.final.fa<br><br>      ~/bin/blastn -task megablast -use_index <span class="hljs-literal">true</span> -db  VS1.final.fa -query chip.snp.fa -outfmt 6 -out chip.snp.megablast.out<br><br>      <span class="hljs-comment">## 59 Chasselas clones validation</span><br>      ~/bin/gatk Mutect2 -R VS1.final.fa -I sample.sort.markdup.bam --independent-mates <span class="hljs-literal">true</span> -tumor sample -I 229.sort.markdup.bam -normal 229  -O sample.vcf.gz<br><br>      ~/bin/gatk FilterMutectCalls -R VS1.final.fa -V sample.vcf.gz -O sample.filter.vcf.gz<br><br>      ~/bin/gatk SelectVariants -select-type SNP -V sample.filter.vcf.gz -O sample.filter.snp.vcf.gz<br>      ~/bin/vcftools --gzvcf sample.filter.snp.vcf.gz --remove-filtered-all --recode --stdout | gzip -c &gt; sample.pass.snp.vcf.gz<br><br>    7. SNP annotation<br>       <span class="hljs-comment">## ANNOVAR annotation</span><br>         perl ~/bin/annovar/convert2annovar.pl -format vcf4 -allsample --withfreq Grape.filter.snp.vcf.gz &gt;Grape.filter.snp.annovar<br><br>         perl ~/bin/annovar/annotate_variation.pl --buildver VS1 --geneanno Grape.filter.snp.annovar -outfile Grape.snp annovar/vvdb/<br><br>         <span class="hljs-comment">## Function annotation by Provean</span><br>          ~/bin/provean-1.1.5/provean.sh -q  variation.fasta -v variation.var  --tmp_dir tmp_dir -V --num_threads 472<br></code></pre></td></tr></tbody></table></figure><p><code>get_snpfa.pl</code>：</p><figure class="highlight perl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#!usr/bin/perl -w</span><br><span class="hljs-keyword">use</span> strict;<br><span class="hljs-keyword">use</span> FileHandle;<br><span class="hljs-keyword">die</span> <span class="hljs-string">"\n Usage perl $0 &lt;fa&gt;&lt;snp&gt;&lt;length&gt;\n"</span> <span class="hljs-keyword">unless</span> (@ARGV==<span class="hljs-number">3</span>);<br>$/=<span class="hljs-string">"\&gt;"</span>;<br><span class="hljs-keyword">open</span> (AF,<span class="hljs-string">"$ARGV[0]"</span>)||<span class="hljs-keyword">die</span> <span class="hljs-string">"$!"</span>;<br>&lt;AF&gt;;<br><span class="hljs-keyword">my</span> %hash;<br><span class="hljs-keyword">while</span> (&lt;AF&gt;)<br>{<span class="hljs-keyword">chomp</span>;<br> <span class="hljs-keyword">my</span> @aa=<span class="hljs-keyword">split</span> <span class="hljs-regexp">/\n/</span>,$_;<br> <span class="hljs-keyword">my</span> $chr=<span class="hljs-keyword">shift</span> @aa;<br> $chr=(<span class="hljs-keyword">split</span> <span class="hljs-regexp">/\s+/</span>,$chr)[<span class="hljs-number">0</span>];<br> <span class="hljs-comment">#print "$chr\n";</span><br> <span class="hljs-keyword">my</span> $seq=<span class="hljs-keyword">join</span><span class="hljs-string">""</span>,@aa;<br> $hash{$chr}=$seq;<br>}<br><span class="hljs-keyword">close</span> AF;<br><br>$/=<span class="hljs-string">"\n"</span>;<br><span class="hljs-keyword">open</span> (BF,<span class="hljs-string">"$ARGV[1]"</span>)||<span class="hljs-keyword">die</span> <span class="hljs-string">"$!"</span>;<br><span class="hljs-comment">#open (OUT,"&gt;$ARGV[2]")||die "$!";</span><br><span class="hljs-keyword">my</span> %fh;<br>&lt;BF&gt;; <br><span class="hljs-keyword">my</span> $le=$ARGV[<span class="hljs-number">2</span>];<br><span class="hljs-keyword">while</span> (&lt;BF&gt;)<br>{<span class="hljs-keyword">chomp</span>;<br>  <span class="hljs-keyword">my</span> @aa=<span class="hljs-keyword">split</span>;<br>  <span class="hljs-keyword">my</span> $start;<br>  <span class="hljs-keyword">my</span> $sub1=<span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">my</span> $sub2=<span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">if</span> ($aa[<span class="hljs-number">1</span>]&lt;$le+<span class="hljs-number">1</span>)<br>   {$sub1=$aa[<span class="hljs-number">1</span>]-<span class="hljs-number">1</span>; $start=<span class="hljs-number">0</span>;<br>     $sub2=<span class="hljs-number">100</span>;}<br>  <span class="hljs-keyword">elsif</span> ((<span class="hljs-keyword">length</span> $hash{$aa[<span class="hljs-number">0</span>]})-$aa[<span class="hljs-number">1</span>]&lt;$le)<br>    {$sub2=(<span class="hljs-keyword">length</span> $hash{$aa[<span class="hljs-number">0</span>]})-$aa[<span class="hljs-number">1</span>];<br>     $sub1=$le;<br>      $start=$aa[<span class="hljs-number">1</span>]-$le-<span class="hljs-number">1</span>;}<br>  <span class="hljs-keyword">else</span>{$sub1=$le;$sub2=$le;$start=$aa[<span class="hljs-number">1</span>]-$le-<span class="hljs-number">1</span>;}<br>  <br>  <span class="hljs-keyword">my</span> $seq1=<span class="hljs-keyword">substr</span> $hash{$aa[<span class="hljs-number">0</span>]},$start,$sub1;<br>  <span class="hljs-keyword">my</span> $mid=<span class="hljs-keyword">substr</span> $hash{$aa[<span class="hljs-number">0</span>]},$aa[<span class="hljs-number">1</span>]-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">my</span> $seq2=<span class="hljs-keyword">substr</span> $hash{$aa[<span class="hljs-number">0</span>]},$aa[<span class="hljs-number">1</span>],$sub2;<br>  <span class="hljs-keyword">my</span> $alle=(<span class="hljs-keyword">split</span> <span class="hljs-regexp">/,/</span>,$aa[<span class="hljs-number">3</span>])[<span class="hljs-number">0</span>];<br>  <span class="hljs-keyword">my</span> $name=$aa[<span class="hljs-number">0</span>].<span class="hljs-string">"_"</span>.$aa[<span class="hljs-number">1</span>].<span class="hljs-string">"_"</span>.$aa[<span class="hljs-number">2</span>].<span class="hljs-string">"_"</span>.$alle;<br>   $alle=<span class="hljs-string">"["</span>.$aa[<span class="hljs-number">2</span>].<span class="hljs-string">"/"</span>.$alle.<span class="hljs-string">"]"</span>;<br>   <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">exists</span> $fh{$aa[<span class="hljs-number">0</span>]})<br>        {$fh{$aa[<span class="hljs-number">0</span>]}=FileHandle -&gt; new(<span class="hljs-string">"&gt;$aa[0].info"</span>);} <br>  <span class="hljs-keyword">if</span> ($mid <span class="hljs-keyword">ne</span> $aa[<span class="hljs-number">2</span>])<br>      {<span class="hljs-keyword">print</span> <span class="hljs-string">"$name error\n"</span>;}<br>    <span class="hljs-keyword">else</span><br>        {$fh{$aa[<span class="hljs-number">0</span>]} -&gt;<span class="hljs-keyword">print</span>(<span class="hljs-string">"$name\t$seq1$alle$seq2\n"</span>);}<br>    }<br><span class="hljs-keyword">close</span> BF;<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">keys</span> %fh)<br> {$fh{$_} -&gt; <span class="hljs-keyword">close</span>();}<br></code></pre></td></tr></tbody></table></figure><h1 id="Genetic-clonal-accessions"><a href="#Genetic-clonal-accessions" class="headerlink" title="Genetic clonal accessions"></a>Genetic clonal accessions</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>Genetic clonal accessions<br>    1. prepare data<br>       ~/bin/plink --allow-extra-chr --recode --chr-set 19 --vcf filter.mindepth7.vcf.gz   --make-bed --out  mindepth7<br><br>    2. run snpduo<br>      ~/bin/snpduo/snpduo --file mindepth7 --calculated --counts --out  mindepth7<br></code></pre></td></tr></tbody></table></figure><h1 id="系统发育树"><a href="#系统发育树" class="headerlink" title="系统发育树"></a>系统发育树</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. Filter snp by SNPhylo<br>   ~/bin/snphylo.sh -v Grape.vcf -r -A -b <br><br>2. Run RAxML-NG <br>   ~/bin/raxml-ng_v0.9.0_linux_x86_64_MPI/bin/raxml-ng --msa snphylo.output.phylip.txt --parse --model GTR+G<br><br>   ~/bin/raxml-ng_v0.9.0_linux_x86_64_MPI/bin/raxml-ng --search --msa Grape_raxml.raxml.rba --tree pars{1} --prefix CT<span class="hljs-variable">$i</span> --seed <span class="hljs-variable">$i</span> --threads 13<br>   <br>   ~/bin/raxml-ng_v0.9.0_linux_x86_64_MPI/bin/raxml-ng --search --msa Grape_raxml.raxml.rba --tree rand{1}  --prefix CT<span class="hljs-variable">$i</span> --seed <span class="hljs-variable">$i</span> --threads 13<br><br>   grep <span class="hljs-string">"Final LogLikelihood"</span> CT*.raxml.log | <span class="hljs-built_in">sort</span> -k 3<br><br>   <span class="hljs-comment">## bootstrap</span><br>     ~/bin/raxml-ng_v0.9.0_linux_x86_64_MPI/bin/raxml-ng --bootstrap --msa Grape_raxml.raxml.rba --bs-trees 100 --prefix CB<span class="hljs-variable">$i</span> --seed <span class="hljs-variable">$i</span> --threads 2 <br><br>     ~/bin/raxml-ng_v0.9.0_linux_x86_64_MPI/binraxml-ng --bsconverge --bs-trees allbootstraps --prefix CS --seed 2 --threads 1<br><br>     ~/bin/raxml-ng_v0.9.0_linux_x86_64_MPI/binraxml-ng --support --tree best.tre --bs-trees allbootstraps --prefix CS --threads 1<br></code></pre></td></tr></tbody></table></figure><h1 id="SplitsTree"><a href="#SplitsTree" class="headerlink" title="SplitsTree"></a>SplitsTree</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. prepare data<br>vcftools --gzvcf grape.all.bi.snp.vcf.gz --keep grape.core_2448.txt --max-missing 0.8 --maf 0.05 --recode --stdout | gzip -c &gt; grape.core.vcf.gz<br>plink --vcf grape.core.vcf.gz --set-missing-var-ids @:<span class="hljs-comment"># --make-bed --out grape.core</span><br>plink --bfile grape.core --indep-pairwise 50 1 0.1 -out grape.core.pruning<br>plink --bfile grape.core --extract grape.core.pruning.prune.in --recode vcf-iid --out grape.core.pruned<br><br><span class="hljs-comment"># vcf to phylip, download from  https://github.com/edgardomortiz/vcf2phylip</span><br>python vcf2phylip.py -i grape.core.pruned.vcf --nexus<br><br>2. run splitstree<br>SplitsTree -g -c cmd.txt<br></code></pre></td></tr></tbody></table></figure><p><code>CMD</code>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">begin SplitsTree;<br>LOAD FILE=grape.core.pruned.min4.nex;<br>EXECUTE FILE=grape.core.pruned.min4.nex;<br>SAVE FILE=grape.core.pruned.min4.splitstree.nex REPLACE=<span class="hljs-built_in">yes</span>;<br>QUIT;<br>end<br></code></pre></td></tr></tbody></table></figure><p><code>vcf2phylip.py</code>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin/env python2</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br><br><br><span class="hljs-string">''</span><span class="hljs-string">'</span><br><span class="hljs-string">The script converts a collection of SNPs in VCF format into a PHYLIP, FASTA, </span><br><span class="hljs-string">NEXUS, or binary NEXUS file for phylogenetic analysis. The code is optimized</span><br><span class="hljs-string">to process VCF files with sizes &gt;1GB. For small VCF files the algorithm slows</span><br><span class="hljs-string">down as the number of taxa increases (but is still fast).</span><br><span class="hljs-string"></span><br><span class="hljs-string">Any ploidy is allowed, but binary NEXUS is produced only for diploid VCFs.</span><br><span class="hljs-string">'</span><span class="hljs-string">''</span><br><br><br><br>__author__      = <span class="hljs-string">"Edgardo M. Ortiz"</span><br>__credits__     = <span class="hljs-string">"Juan D. Palacio-Mejía"</span><br>__version__     = <span class="hljs-string">"2.0"</span><br>__email__       = <span class="hljs-string">"e.ortiz.v@gmail.com"</span><br>__date__        = <span class="hljs-string">"2019-01-15"</span><br><br><br><br>import sys<br>import os<br>import argparse<br>import gzip<br><br><br><br>def main():<br>parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)<br>parser.add_argument(<span class="hljs-string">"-i"</span>, <span class="hljs-string">"--input"</span>, action=<span class="hljs-string">"store"</span>, dest=<span class="hljs-string">"filename"</span>, required=True,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"Name of the input VCF file, can be gzipped"</span>)<br>parser.add_argument(<span class="hljs-string">"-m"</span>, <span class="hljs-string">"--min-samples-locus"</span>, action=<span class="hljs-string">"store"</span>, dest=<span class="hljs-string">"min_samples_locus"</span>, <span class="hljs-built_in">type</span>=int, default=4,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"Minimum of samples required to be present at a locus, default=4 since is the minimum for phylogenetics."</span>)<br>parser.add_argument(<span class="hljs-string">"-o"</span>, <span class="hljs-string">"--outgroup"</span>, action=<span class="hljs-string">"store"</span>, dest=<span class="hljs-string">"outgroup"</span>, default=<span class="hljs-string">""</span>,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"Name of the outgroup in the matrix. Sequence will be written as first taxon in the alignment."</span>)<br>parser.add_argument(<span class="hljs-string">"-p"</span>, <span class="hljs-string">"--phylip-disable"</span>, action=<span class="hljs-string">"store_true"</span>, dest=<span class="hljs-string">"phylipdisable"</span>, default=False,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"A PHYLIP matrix is written by default unless you enable this flag"</span>)<br>parser.add_argument(<span class="hljs-string">"-f"</span>, <span class="hljs-string">"--fasta"</span>, action=<span class="hljs-string">"store_true"</span>, dest=<span class="hljs-string">"fasta"</span>, default=False,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"Write a FASTA matrix, disabled by default"</span>)<br>parser.add_argument(<span class="hljs-string">"-n"</span>, <span class="hljs-string">"--nexus"</span>, action=<span class="hljs-string">"store_true"</span>, dest=<span class="hljs-string">"nexus"</span>, default=False,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"Write a NEXUS matrix, disabled by default"</span>)<br>parser.add_argument(<span class="hljs-string">"-b"</span>, <span class="hljs-string">"--nexus-binary"</span>, action=<span class="hljs-string">"store_true"</span>, dest=<span class="hljs-string">"nexusbin"</span>, default=False,<br><span class="hljs-built_in">help</span>=<span class="hljs-string">"Write a binary NEXUS matrix for analysis of biallelic SNPs in SNAPP, disabled by default"</span>)<br>args = parser.parse_args()<br><br><br><br>filename = args.filename<br><br>    <span class="hljs-comment"># Prepare the opener if the SAM file is compressed</span><br><span class="hljs-keyword">if</span> filename.endswith(<span class="hljs-string">".gz"</span>):<br>opener = gzip.open<br><span class="hljs-keyword">else</span>:<br>opener = open<br><br>min_samples_locus = args.min_samples_locus<br>outgroup = args.outgroup<br>phylipdisable = args.phylipdisable<br>fasta = args.fasta<br>nexus = args.nexus<br>nexusbin = args.nexusbin<br><br><br><br><span class="hljs-comment"># Dictionary of IUPAC ambiguities for nucleotides</span><br><span class="hljs-comment"># '*' means deletion for GATK (and other software?)</span><br><span class="hljs-comment"># Deletions are ignored when making the consensus</span><br><span class="hljs-comment"># Dictionary to translate IUPAC ambiguities, lowercase letters are used when "*" or "N" were present for a position,</span><br><span class="hljs-comment"># however, software like Genious for example are case insensitive and will imply ignore capitalization</span><br>amb = {<span class="hljs-string">"*"</span>:<span class="hljs-string">"-"</span>, <span class="hljs-string">"A"</span>:<span class="hljs-string">"A"</span>, <span class="hljs-string">"C"</span>:<span class="hljs-string">"C"</span>, <span class="hljs-string">"G"</span>:<span class="hljs-string">"G"</span>, <span class="hljs-string">"N"</span>:<span class="hljs-string">"N"</span>, <span class="hljs-string">"T"</span>:<span class="hljs-string">"T"</span>,<br>   <span class="hljs-string">"*A"</span>:<span class="hljs-string">"a"</span>, <span class="hljs-string">"*C"</span>:<span class="hljs-string">"c"</span>, <span class="hljs-string">"*G"</span>:<span class="hljs-string">"g"</span>, <span class="hljs-string">"*N"</span>:<span class="hljs-string">"n"</span>, <span class="hljs-string">"*T"</span>:<span class="hljs-string">"t"</span>,<br>   <span class="hljs-string">"AC"</span>:<span class="hljs-string">"M"</span>, <span class="hljs-string">"AG"</span>:<span class="hljs-string">"R"</span>, <span class="hljs-string">"AN"</span>:<span class="hljs-string">"a"</span>, <span class="hljs-string">"AT"</span>:<span class="hljs-string">"W"</span>, <span class="hljs-string">"CG"</span>:<span class="hljs-string">"S"</span>,<br>   <span class="hljs-string">"CN"</span>:<span class="hljs-string">"c"</span>, <span class="hljs-string">"CT"</span>:<span class="hljs-string">"Y"</span>, <span class="hljs-string">"GN"</span>:<span class="hljs-string">"g"</span>, <span class="hljs-string">"GT"</span>:<span class="hljs-string">"K"</span>, <span class="hljs-string">"NT"</span>:<span class="hljs-string">"t"</span>,<br>   <span class="hljs-string">"*AC"</span>:<span class="hljs-string">"m"</span>, <span class="hljs-string">"*AG"</span>:<span class="hljs-string">"r"</span>, <span class="hljs-string">"*AN"</span>:<span class="hljs-string">"a"</span>, <span class="hljs-string">"*AT"</span>:<span class="hljs-string">"w"</span>, <span class="hljs-string">"*CG"</span>:<span class="hljs-string">"s"</span>,<br>   <span class="hljs-string">"*CN"</span>:<span class="hljs-string">"c"</span>, <span class="hljs-string">"*CT"</span>:<span class="hljs-string">"y"</span>, <span class="hljs-string">"*GN"</span>:<span class="hljs-string">"g"</span>, <span class="hljs-string">"*GT"</span>:<span class="hljs-string">"k"</span>, <span class="hljs-string">"*NT"</span>:<span class="hljs-string">"t"</span>,<br>   <span class="hljs-string">"ACG"</span>:<span class="hljs-string">"V"</span>, <span class="hljs-string">"ACN"</span>:<span class="hljs-string">"m"</span>, <span class="hljs-string">"ACT"</span>:<span class="hljs-string">"H"</span>, <span class="hljs-string">"AGN"</span>:<span class="hljs-string">"r"</span>, <span class="hljs-string">"AGT"</span>:<span class="hljs-string">"D"</span>,<br>   <span class="hljs-string">"ANT"</span>:<span class="hljs-string">"w"</span>, <span class="hljs-string">"CGN"</span>:<span class="hljs-string">"s"</span>, <span class="hljs-string">"CGT"</span>:<span class="hljs-string">"B"</span>, <span class="hljs-string">"CNT"</span>:<span class="hljs-string">"y"</span>, <span class="hljs-string">"GNT"</span>:<span class="hljs-string">"k"</span>,<br>   <span class="hljs-string">"*ACG"</span>:<span class="hljs-string">"v"</span>, <span class="hljs-string">"*ACN"</span>:<span class="hljs-string">"m"</span>, <span class="hljs-string">"*ACT"</span>:<span class="hljs-string">"h"</span>, <span class="hljs-string">"*AGN"</span>:<span class="hljs-string">"r"</span>, <span class="hljs-string">"*AGT"</span>:<span class="hljs-string">"d"</span>,<br>   <span class="hljs-string">"*ANT"</span>:<span class="hljs-string">"w"</span>, <span class="hljs-string">"*CGN"</span>:<span class="hljs-string">"s"</span>, <span class="hljs-string">"*CGT"</span>:<span class="hljs-string">"b"</span>, <span class="hljs-string">"*CNT"</span>:<span class="hljs-string">"y"</span>, <span class="hljs-string">"*GNT"</span>:<span class="hljs-string">"k"</span>,<br>   <span class="hljs-string">"ACGN"</span>:<span class="hljs-string">"v"</span>, <span class="hljs-string">"ACGT"</span>:<span class="hljs-string">"N"</span>, <span class="hljs-string">"ACNT"</span>:<span class="hljs-string">"h"</span>, <span class="hljs-string">"AGNT"</span>:<span class="hljs-string">"d"</span>, <span class="hljs-string">"CGNT"</span>:<span class="hljs-string">"b"</span>,<br>   <span class="hljs-string">"*ACGN"</span>:<span class="hljs-string">"v"</span>, <span class="hljs-string">"*ACGT"</span>:<span class="hljs-string">"N"</span>, <span class="hljs-string">"*ACNT"</span>:<span class="hljs-string">"h"</span>, <span class="hljs-string">"*AGNT"</span>:<span class="hljs-string">"d"</span>, <span class="hljs-string">"*CGNT"</span>:<span class="hljs-string">"b"</span>,<br>   <span class="hljs-string">"*ACGNT"</span>:<span class="hljs-string">"N"</span>}<br><br><br><br><span class="hljs-comment"># Dictionary for translating biallelic SNPs into SNAPP, only for diploid VCF</span><br><span class="hljs-comment"># 0 is homozygous reference</span><br><span class="hljs-comment"># 1 is heterozygous</span><br><span class="hljs-comment"># 2 is homozygous alternative</span><br>gen_bin = {<span class="hljs-string">"./."</span>:<span class="hljs-string">"?"</span>,<br>   <span class="hljs-string">".|."</span>:<span class="hljs-string">"?"</span>,<br>   <span class="hljs-string">"0/0"</span>:<span class="hljs-string">"0"</span>,<br>   <span class="hljs-string">"0|0"</span>:<span class="hljs-string">"0"</span>,<br>   <span class="hljs-string">"0/1"</span>:<span class="hljs-string">"1"</span>,<br>   <span class="hljs-string">"0|1"</span>:<span class="hljs-string">"1"</span>,<br>   <span class="hljs-string">"1/0"</span>:<span class="hljs-string">"1"</span>,<br>   <span class="hljs-string">"1|0"</span>:<span class="hljs-string">"1"</span>,<br>   <span class="hljs-string">"1/1"</span>:<span class="hljs-string">"2"</span>,<br>   <span class="hljs-string">"1|1"</span>:<span class="hljs-string">"2"</span>}<br><br><br><br><span class="hljs-comment">############################</span><br><span class="hljs-comment"># Process header of VCF file</span><br>ploidy = 0<br>gt_idx = []<br>missing = <span class="hljs-string">""</span><br><br>with opener(filename) as vcf:<br><br><span class="hljs-comment"># Create a list to store sample names</span><br>sample_names = []<br><br><span class="hljs-comment"># Keep track of longest sequence name for padding with spaces in the output file</span><br>len_longest_name = 0<br><br><span class="hljs-comment"># Look for the line in the VCF header with the sample names</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> vcf:<br><span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">"#CHROM"</span>):<br><br><span class="hljs-comment"># Split line into fields</span><br>broken = line.strip(<span class="hljs-string">"\n"</span>).<span class="hljs-built_in">split</span>(<span class="hljs-string">"\t"</span>)<br><br><span class="hljs-comment"># If the minimum-samples-per-locus parameter is larger than the number of</span><br><span class="hljs-comment"># species in the alignment make it the same as the number of species</span><br><span class="hljs-keyword">if</span> min_samples_locus &gt; len(broken[9:]):<br>min_samples_locus = len(broken[9:])<br><br><span class="hljs-comment"># Create a list of sample names and the keep track of the longest name length</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(9, len(broken)):<br>name_sample = broken[i].replace(<span class="hljs-string">"./"</span>,<span class="hljs-string">""</span>) <span class="hljs-comment"># GATK adds "./" to sample names sometimes</span><br>sample_names.append(name_sample)<br>len_longest_name = max(len_longest_name, len(name_sample))<br><br><span class="hljs-comment"># Find out the ploidy of the genotypes, just distinguishes if sample is not haploid vs n-ploid</span><br><span class="hljs-keyword">elif</span> not line.startswith(<span class="hljs-string">"#"</span>) and line.strip(<span class="hljs-string">"\n"</span>) != <span class="hljs-string">""</span>:<br><span class="hljs-keyword">while</span> ploidy == 0 and missing == <span class="hljs-string">""</span>:<br>broken = line.strip(<span class="hljs-string">"\n"</span>).<span class="hljs-built_in">split</span>(<span class="hljs-string">"\t"</span>)<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(9, len(broken)):<br><span class="hljs-keyword">if</span> ploidy == 0:<br><span class="hljs-keyword">if</span> broken[j].<span class="hljs-built_in">split</span>(<span class="hljs-string">":"</span>)[0][0] != <span class="hljs-string">"."</span>:<br>ploidy = (len(broken[j].<span class="hljs-built_in">split</span>(<span class="hljs-string">":"</span>)[0]) // 2) + 1<br>gt_idx = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0, len(broken[j].<span class="hljs-built_in">split</span>(<span class="hljs-string">":"</span>)[0]), 2)]<br>missing = <span class="hljs-string">"/"</span>.<span class="hljs-built_in">join</span>([<span class="hljs-string">"."</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(gt_idx))])<br><span class="hljs-comment"># print missing</span><br><span class="hljs-comment"># print broken[j]</span><br><span class="hljs-comment"># print gt_idx</span><br><span class="hljs-comment"># print ploidy</span><br><span class="hljs-built_in">break</span><br><br>vcf.close()<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"\nConverting file "</span> + filename + <span class="hljs-string">":\n"</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Number of samples in VCF: "</span> + str(len(sample_names)))<br><br><br><span class="hljs-comment">####################</span><br><span class="hljs-comment"># SETUP OUTPUT FILES </span><br><span class="hljs-comment"># Output filename will be the same as input file, indicating the minimum of samples specified</span><br><span class="hljs-keyword">if</span> filename.endswith(<span class="hljs-string">".gz"</span>):<br>outfile = filename.replace(<span class="hljs-string">".vcf.gz"</span>,<span class="hljs-string">".min"</span>+str(min_samples_locus))<br><span class="hljs-keyword">else</span>:<br>outfile = filename.replace(<span class="hljs-string">".vcf"</span>,<span class="hljs-string">".min"</span>+str(min_samples_locus))<br><br><span class="hljs-comment"># We need to create an intermediate file to hold the sequence data </span><br><span class="hljs-comment"># vertically and then transpose it to create the matrices</span><br><span class="hljs-keyword">if</span> fasta or nexus or not phylipdisable:<br>temporal = open(outfile+<span class="hljs-string">".tmp"</span>, <span class="hljs-string">"w"</span>)<br><br><span class="hljs-comment"># if binary NEXUS is selected also create a separate temporal</span><br><span class="hljs-keyword">if</span> nexusbin:<br><span class="hljs-keyword">if</span> ploidy == 2:<br>temporalbin = open(outfile+<span class="hljs-string">".bin.tmp"</span>, <span class="hljs-string">"w"</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Binary NEXUS not available for "</span>+str(ploidy)+<span class="hljs-string">"-ploid VCF."</span>)<br>nexusbin = False<br><br><br><br><span class="hljs-comment">##################</span><br><span class="hljs-comment"># PROCESS VCF FILE</span><br>index_last_sample = len(sample_names)+9<br><br><span class="hljs-comment"># Start processing SNPs of VCF file</span><br>with opener(filename) as vcf:<br><br><span class="hljs-comment"># Initialize line counter</span><br>snp_num = 0<br>snp_accepted = 0<br>snp_shallow = 0<br>snp_multinuc = 0<br>snp_biallelic = 0<br><span class="hljs-keyword">while</span> 1:<br><br><span class="hljs-comment"># Load large chunks of file into memory</span><br>vcf_chunk = vcf.readlines(50000)<br><span class="hljs-keyword">if</span> not vcf_chunk:<br><span class="hljs-built_in">break</span><br><br><span class="hljs-comment"># Now process the SNPs one by one</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> vcf_chunk:<br><span class="hljs-keyword">if</span> not line.startswith(<span class="hljs-string">"#"</span>) and line.strip(<span class="hljs-string">"\n"</span>) != <span class="hljs-string">""</span>: <span class="hljs-comment"># pyrad sometimes produces an empty line after the #CHROM line</span><br><br><span class="hljs-comment"># Split line into columns</span><br>broken = line.strip(<span class="hljs-string">"\n"</span>).<span class="hljs-built_in">split</span>(<span class="hljs-string">"\t"</span>)<br><span class="hljs-keyword">for</span> g <span class="hljs-keyword">in</span> range(9,len(broken)):<br><span class="hljs-keyword">if</span> broken[g].<span class="hljs-built_in">split</span>(<span class="hljs-string">":"</span>)[0][0] == <span class="hljs-string">"."</span>:<br>broken[g] = missing<br><br><span class="hljs-comment"># Keep track of number of genotypes processed</span><br>snp_num += 1<br><br><span class="hljs-comment"># Print progress every 500000 lines</span><br><span class="hljs-keyword">if</span> snp_num % 500000 == 0:<br><span class="hljs-built_in">print</span>(str(snp_num)+<span class="hljs-string">" genotypes processed."</span>)<br><br><span class="hljs-comment"># Check if the SNP has the minimum of samples required</span><br><span class="hljs-keyword">if</span> (len(broken[9:]) - <span class="hljs-string">''</span>.<span class="hljs-built_in">join</span>(broken[9:]).count(missing)) &gt;= min_samples_locus:<br><br><span class="hljs-comment"># Check that ref genotype is a single nucleotide and alternative genotypes are single nucleotides</span><br><span class="hljs-keyword">if</span> len(broken[3]) == 1 and (len(broken[4])-broken[4].count(<span class="hljs-string">","</span>)) == (broken[4].count(<span class="hljs-string">","</span>)+1):<br><br><span class="hljs-comment"># Add to running sum of accepted SNPs</span><br>snp_accepted += 1<br><br><span class="hljs-comment"># If nucleotide matrices are requested</span><br><span class="hljs-keyword">if</span> fasta or nexus or not phylipdisable:<br><br><span class="hljs-comment"># Create a dictionary for genotype to nucleotide translation</span><br><span class="hljs-comment"># each SNP may code the nucleotides in a different manner</span><br>nuc = {str(0):broken[3], <span class="hljs-string">"."</span>:<span class="hljs-string">"N"</span>}<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(len(broken[4].<span class="hljs-built_in">split</span>(<span class="hljs-string">","</span>))):<br>nuc[str(n+1)] = broken[4].<span class="hljs-built_in">split</span>(<span class="hljs-string">","</span>)[n]<br><br><span class="hljs-comment"># Translate genotypes into nucleotides and the obtain the IUPAC ambiguity</span><br><span class="hljs-comment"># for heterozygous SNPs, and append to DNA sequence of each sample</span><br>site_tmp = <span class="hljs-string">''</span>.<span class="hljs-built_in">join</span>([amb[<span class="hljs-string">''</span>.<span class="hljs-built_in">join</span>(sorted(<span class="hljs-built_in">set</span>([nuc[broken[i][j]] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> gt_idx])))] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(9, index_last_sample)])<br><br><span class="hljs-comment"># Write entire row of single nucleotide genotypes to temporary file</span><br>temporal.write(site_tmp+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># print nuc</span><br><span class="hljs-comment"># print [i.split(":")[0] for i in broken[9:]]</span><br><span class="hljs-comment"># print site_tmp</span><br><br><span class="hljs-comment"># Write binary NEXUS for SNAPP if requested</span><br><span class="hljs-keyword">if</span> nexusbin:<br><br><span class="hljs-comment"># Check taht the SNP only has two alleles</span><br><span class="hljs-keyword">if</span> len(broken[4]) == 1:<br><br><span class="hljs-comment"># Add to running sum of biallelic SNPs</span><br>snp_biallelic += 1<br><br><span class="hljs-comment"># Translate genotype into 0 for homozygous ref, 1 for heterozygous, and 2 for homozygous alt</span><br>binsite_tmp = <span class="hljs-string">''</span>.<span class="hljs-built_in">join</span>([(gen_bin[broken[i][0:3]]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(9, index_last_sample)])<br><br><span class="hljs-comment"># Write entire row to temporary file</span><br>temporalbin.write(binsite_tmp+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-keyword">else</span>:<br><span class="hljs-comment"># Keep track of loci rejected due to multinucleotide genotypes</span><br>snp_multinuc += 1<br><span class="hljs-comment"># Keep track of loci rejected due to exceeded missing data</span><br>snp_shallow += 1<br><br><span class="hljs-keyword">else</span>:<br><span class="hljs-comment"># Keep track of loci rejected due to exceeded missing data</span><br>snp_shallow += 1<br><br><span class="hljs-comment"># Print useful information about filtering of SNPs</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Total of genotypes processed: "</span> + str(snp_num))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Genotypes excluded because they exceeded the amount of missing data allowed: "</span> + str(snp_shallow))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Genotypes that passed missing data filter but were excluded for not being SNPs: "</span> + str(snp_multinuc))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"SNPs that passed the filters: "</span> + str(snp_accepted)) <br><span class="hljs-keyword">if</span> nexusbin:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Biallelic SNPs selected for binary NEXUS: "</span> + str(snp_biallelic))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">""</span>)<br><br>vcf.close()<br><span class="hljs-keyword">if</span> fasta or nexus or not phylipdisable:<br>temporal.close()<br><span class="hljs-keyword">if</span> nexusbin:<br>temporalbin.close()<br><br><br><br><span class="hljs-comment">#######################</span><br><span class="hljs-comment"># WRITE OUTPUT MATRICES</span><br><br><span class="hljs-keyword">if</span> not phylipdisable:<br>output_phy = open(outfile+<span class="hljs-string">".phy"</span>, <span class="hljs-string">"w"</span>)<br>header_phy = str(len(sample_names))+<span class="hljs-string">" "</span>+str(snp_accepted)+<span class="hljs-string">"\n"</span><br>output_phy.write(header_phy)<br><br><span class="hljs-keyword">if</span> fasta:<br>output_fas = open(outfile+<span class="hljs-string">".fasta"</span>, <span class="hljs-string">"w"</span>)<br><br><span class="hljs-keyword">if</span> nexus:<br>output_nex = open(outfile+<span class="hljs-string">".nexus"</span>, <span class="hljs-string">"w"</span>)<br>header_nex = <span class="hljs-string">"#NEXUS\n\nBEGIN DATA;\n\tDIMENSIONS NTAX="</span> + str(len(sample_names)) + <span class="hljs-string">" NCHAR="</span> + str(snp_accepted) + <span class="hljs-string">";\n\tFORMAT DATATYPE=DNA"</span> + <span class="hljs-string">" MISSING=N"</span> + <span class="hljs-string">" GAP=- ;\nMATRIX\n"</span><br>output_nex.write(header_nex)<br><br><span class="hljs-keyword">if</span> nexusbin:<br>output_nexbin = open(outfile+<span class="hljs-string">".bin.nexus"</span>, <span class="hljs-string">"w"</span>)<br>header_nexbin = <span class="hljs-string">"#NEXUS\n\nBEGIN DATA;\n\tDIMENSIONS NTAX="</span> + str(len(sample_names)) + <span class="hljs-string">" NCHAR="</span> + str(snp_biallelic) + <span class="hljs-string">";\n\tFORMAT DATATYPE=SNP"</span> + <span class="hljs-string">" MISSING=?"</span> + <span class="hljs-string">" GAP=- ;\nMATRIX\n"</span><br>output_nexbin.write(header_nexbin)<br><br><br><span class="hljs-comment"># Store index of outgroup in list of sample names</span><br>idx_outgroup = <span class="hljs-string">"NA"</span><br><br><span class="hljs-comment"># Write outgroup as first sequence in alignment if the name is specified</span><br><span class="hljs-keyword">if</span> outgroup <span class="hljs-keyword">in</span> sample_names:<br>idx_outgroup = sample_names.index(outgroup)<br><br><span class="hljs-keyword">if</span> fasta or nexus or not phylipdisable:<br>with open(outfile+<span class="hljs-string">".tmp"</span>) as tmp_seq:<br>seqout = <span class="hljs-string">""</span><br><br><span class="hljs-comment"># This is where the transposing happens</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> tmp_seq:<br>seqout += line[idx_outgroup]<br><br><span class="hljs-comment"># Write FASTA line</span><br><span class="hljs-keyword">if</span> fasta:<br>output_fas.write(<span class="hljs-string">"&gt;"</span>+sample_names[idx_outgroup]+<span class="hljs-string">"\n"</span>+seqout+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># Pad sequences names and write PHYLIP or NEXUS lines</span><br>padding = (len_longest_name + 3 - len(sample_names[idx_outgroup])) * <span class="hljs-string">" "</span><br><span class="hljs-keyword">if</span> not phylipdisable:<br>output_phy.write(sample_names[idx_outgroup]+padding+seqout+<span class="hljs-string">"\n"</span>)<br><span class="hljs-keyword">if</span> nexus:<br>output_nex.write(sample_names[idx_outgroup]+padding+seqout+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># Print current progress</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Outgroup, "</span>+outgroup+<span class="hljs-string">", added to the matrix(ces)."</span>)<br><br><span class="hljs-keyword">if</span> nexusbin:<br>with open(outfile+<span class="hljs-string">".bin.tmp"</span>) as bin_tmp_seq:<br>seqout = <span class="hljs-string">""</span><br><br><span class="hljs-comment"># This is where the transposing happens</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> bin_tmp_seq:<br>seqout += line[idx_outgroup]<br><br><span class="hljs-comment"># Write line of binary SNPs to NEXUS</span><br>padding = (len_longest_name + 3 - len(sample_names[idx_outgroup])) * <span class="hljs-string">" "</span><br>output_nexbin.write(sample_names[idx_outgroup]+padding+seqout+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># Print current progress</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Outgroup, "</span>+outgroup+<span class="hljs-string">", added to the binary matrix."</span>)<br><br><br><span class="hljs-comment"># Write sequences of the ingroup</span><br><span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> range(0, len(sample_names)):<br><span class="hljs-keyword">if</span> s != idx_outgroup:<br><span class="hljs-keyword">if</span> fasta or nexus or not phylipdisable:<br>with open(outfile+<span class="hljs-string">".tmp"</span>) as tmp_seq:<br>seqout = <span class="hljs-string">""</span><br><br><span class="hljs-comment"># This is where the transposing happens</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> tmp_seq:<br>seqout += line[s]<br><br><span class="hljs-comment"># Write FASTA line</span><br><span class="hljs-keyword">if</span> fasta:<br>output_fas.write(<span class="hljs-string">"&gt;"</span>+sample_names[s]+<span class="hljs-string">"\n"</span>+seqout+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># Pad sequences names and write PHYLIP or NEXUS lines</span><br>padding = (len_longest_name + 3 - len(sample_names[s])) * <span class="hljs-string">" "</span><br><span class="hljs-keyword">if</span> not phylipdisable:<br>output_phy.write(sample_names[s]+padding+seqout+<span class="hljs-string">"\n"</span>)<br><span class="hljs-keyword">if</span> nexus:<br>output_nex.write(sample_names[s]+padding+seqout+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># Print current progress</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Sample "</span>+str(s+1)+<span class="hljs-string">" of "</span>+str(len(sample_names))+<span class="hljs-string">", "</span>+sample_names[s]+<span class="hljs-string">", added to the nucleotide matrix(ces)."</span>)<br><br><span class="hljs-keyword">if</span> nexusbin:<br>with open(outfile+<span class="hljs-string">".bin.tmp"</span>) as bin_tmp_seq:<br>seqout = <span class="hljs-string">""</span><br><br><span class="hljs-comment"># This is where the transposing happens</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> bin_tmp_seq:<br>seqout += line[s]<br><br><span class="hljs-comment"># Write line of binary SNPs to NEXUS</span><br>padding = (len_longest_name + 3 - len(sample_names[s])) * <span class="hljs-string">" "</span><br>output_nexbin.write(sample_names[s]+padding+seqout+<span class="hljs-string">"\n"</span>)<br><br><span class="hljs-comment"># Print current progress</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Sample "</span>+str(s+1)+<span class="hljs-string">" of "</span>+str(len(sample_names))+<span class="hljs-string">", "</span>+sample_names[s]+<span class="hljs-string">", added to the binary matrix."</span>)<br><br><br><span class="hljs-keyword">if</span> not phylipdisable:<br>output_phy.close()<br><span class="hljs-keyword">if</span> fasta:<br>output_fas.close()<br><span class="hljs-keyword">if</span> nexus:<br>output_nex.write(<span class="hljs-string">";\nEND;\n"</span>)<br>output_nex.close()<br><span class="hljs-keyword">if</span> nexusbin:<br>output_nexbin.write(<span class="hljs-string">";\nEND;\n"</span>)<br>output_nexbin.close()<br><br><span class="hljs-keyword">if</span> fasta or nexus or not phylipdisable:<br>os.remove(outfile+<span class="hljs-string">".tmp"</span>)<br><span class="hljs-keyword">if</span> nexusbin:<br>os.remove(outfile+<span class="hljs-string">".bin.tmp"</span>)<br><br><br><span class="hljs-built_in">print</span>( <span class="hljs-string">"\nDone!\n"</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:<br>    main()<br></code></pre></td></tr></tbody></table></figure><h1 id="PCA和群体结构"><a href="#PCA和群体结构" class="headerlink" title="PCA和群体结构"></a>PCA和群体结构</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">Principal Component Analysis and ADMIXTURE<br>     1. PCA<br>        ~/bin/plink --allow-extra-chr --recode --chr-set 19 --vcf total.snp.vcf.gz --make-bed --out total.snp<br><br>        ~/bin/gcta64 --bfile total.snp  --make-grm --autosome --out total.snp.grim<br><br>        ~/bin/gcta64 --grm --pca 3 --out total.snp.pca<br><br>     2. ADMIXTURE<br>       ~/bin/admixture --cv=10 total.snp.bed 2 |<span class="hljs-built_in">tee</span> log2.out<br></code></pre></td></tr></tbody></table></figure><h1 id="Archetypal-Analysis"><a href="#Archetypal-Analysis" class="headerlink" title="Archetypal Analysis"></a>Archetypal Analysis</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. prepare data<br>vcftools --gzvcf grape.all.bi.snp.vcf.gz --keep grape.core_2448.txt --max-missing 0.4 --maf 0.05 --recode --stdout | gzip -c &gt; grape.core.vcf.gz<br>plink --vcf grape.core.vcf.gz --set-missing-var-ids @:<span class="hljs-comment"># --make-bed --out grape.core</span><br>plink --bfile grape.core --indep-pairwise 50 5 0.5 -out grape.core.pruning<br>plink --bfile grape.core --extract grape.core.pruning.prune.in --make-bed --out grape.core.pruned<br><br>2. run archetypal-analysis<br><span class="hljs-keyword">for</span> ((i=<span class="hljs-number">2</span>;i&lt;<span class="hljs-number">13</span>;i++))<br><span class="hljs-keyword">do</span> <span class="hljs-built_in">mkdir</span> /public/archetypal-analysis/k<span class="hljs-variable">${i}</span><br>archetypal-analysis -i /public/archetypal-analysis/k<span class="hljs-variable">${i}</span>/grape.core.pruned.bed -o /public/archetypal-analysis/k<span class="hljs-variable">${i}</span> -k <span class="hljs-variable">${i}</span> --tolerance 0.0001 --max_iter 400;<br><span class="hljs-keyword">done</span><br><br></code></pre></td></tr></tbody></table></figure><h1 id="主要亚群鉴定"><a href="#主要亚群鉴定" class="headerlink" title="主要亚群鉴定"></a>主要亚群鉴定</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. Linkage disequilibrium<br>   ~/bin/PopLDdecay -InVCF total.bi.snp.vcf.gz  -MaxDist 1000 -OutStat total.ld<br><br>2. Nucleotide diversity<br>   ~/bin/vcftools --gzvcf Grape.snp.vcf.gz --window-pi 100000 --out Grape.pi<br><br>3. pairwise population fixation index<br>~/bin/vcftools --gzvcf Grape.snp.vcf.gz --weir-fst-pop pop1.txt --weir-fst-pop pop2.txt --fst-window-size 100000 --out grape.pop1_po2<br><br>4. individual heterozygosity<br>~/bin/vcftools --gzvcf Grape.snp.vcf.gz --het --out grape<br></code></pre></td></tr></tbody></table></figure><h1 id="Isolation-by-distance-analysis"><a href="#Isolation-by-distance-analysis" class="headerlink" title="Isolation-by-distance analysis"></a>Isolation-by-distance analysis</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-number">1.</span> calculated fst<br>vcftools <span class="hljs-operator">-</span><span class="hljs-operator">-</span>gzvcf grape.all.bi.snp.vcf.gz <span class="hljs-operator">-</span><span class="hljs-operator">-</span>weir<span class="hljs-operator">-</span>fst<span class="hljs-operator">-</span>pop pop1.txt <span class="hljs-operator">-</span><span class="hljs-operator">-</span>weir<span class="hljs-operator">-</span>fst<span class="hljs-operator">-</span>pop pop2.txt <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fst<span class="hljs-operator">-</span>window<span class="hljs-operator">-</span>size <span class="hljs-number">100000</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>out grape.pop1_po2<br><br><span class="hljs-number">2.</span> calculated haversine distances<br>library<span class="hljs-punctuation">(</span>geosphere<span class="hljs-punctuation">)</span><br>distHaversine<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>longitude1<span class="hljs-punctuation">,</span>latitude1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>longitude2<span class="hljs-punctuation">,</span>latitude2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-number">3.</span> obtain linear regressions<br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggpmisc<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span> <br>a<span class="hljs-operator">=</span>read.table<span class="hljs-punctuation">(</span><span class="hljs-string">"distance_fst.txt"</span><span class="hljs-punctuation">,</span>header<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span>sep<span class="hljs-operator">=</span><span class="hljs-string">'\t'</span><span class="hljs-punctuation">)</span><br>p1<span class="hljs-operator">&lt;-</span>ggplot<span class="hljs-punctuation">(</span>a<span class="hljs-punctuation">,</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span> Distance<span class="hljs-punctuation">,</span>y<span class="hljs-operator">=</span> Fst<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span>geom_point<span class="hljs-punctuation">(</span>shape<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>color<span class="hljs-operator">=</span><span class="hljs-string">"gray"</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>theme_classic<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span>xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">20000</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span>ylim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.4</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>stat_smooth<span class="hljs-punctuation">(</span>method<span class="hljs-operator">=</span><span class="hljs-string">"lm"</span><span class="hljs-punctuation">,</span>formula <span class="hljs-operator">=</span> y <span class="hljs-operator">~</span> x<span class="hljs-punctuation">)</span><br><br>model.lm <span class="hljs-operator">&lt;-</span> lm<span class="hljs-punctuation">(</span>Fst <span class="hljs-operator">~</span> Distance<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> a<span class="hljs-punctuation">)</span><br>summary<span class="hljs-punctuation">(</span>model.lm<span class="hljs-punctuation">)</span><br>group_l <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> format<span class="hljs-punctuation">(</span>coef<span class="hljs-punctuation">(</span>model.lm<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> digits <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> format<span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>coef<span class="hljs-punctuation">(</span>model.lm<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> digits <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> r2 <span class="hljs-operator">=</span> format<span class="hljs-punctuation">(</span>summary<span class="hljs-punctuation">(</span>model.lm<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>r.squared<span class="hljs-punctuation">,</span> digits <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> p <span class="hljs-operator">=</span> format<span class="hljs-punctuation">(</span>summary<span class="hljs-punctuation">(</span>model.lm<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>coefficients<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> digits <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#distance_fst.txt</span><br><span class="hljs-comment">#CountryDistanceFst</span><br><span class="hljs-comment">#Afghanistan.Albania4218.8520.0904883</span><br><span class="hljs-comment">#Afghanistan.Algeria6230.2620.0478774</span><br><br><br><span class="hljs-number">4.</span> mantel test<br>library<span class="hljs-punctuation">(</span>ade4<span class="hljs-punctuation">)</span><br>fst <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">"fst.matrix.txt"</span><span class="hljs-punctuation">,</span>header<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>distance <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">"distance.matrix.txt"</span><span class="hljs-punctuation">,</span>header<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>fst_dist<span class="hljs-operator">=</span>as.dist<span class="hljs-punctuation">(</span>fst<span class="hljs-punctuation">)</span><br>distance_dist<span class="hljs-operator">=</span>as.dist<span class="hljs-punctuation">(</span>distance<span class="hljs-punctuation">)</span><br>mantel.rtest<span class="hljs-punctuation">(</span>distance_dist<span class="hljs-punctuation">,</span> fst_dist<span class="hljs-punctuation">,</span> nrepet <span class="hljs-operator">=</span> <span class="hljs-number">9999</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="生态位建模"><a href="#生态位建模" class="headerlink" title="生态位建模"></a>生态位建模</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-number">1.</span> ENMeval test <br>Rscript enmevaluate.R<br><br><span class="hljs-number">2.</span> run MaxEnt<br>According to the result of ENMeval test<span class="hljs-punctuation">,</span>  MaxEnt runs with the suggested parameters.<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs R">setwd<span class="hljs-punctuation">(</span><span class="hljs-string">"/public/paleoclimate_data/LH_v1_2_5m"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#Don't forget to set your working directory!</span><br><br><span class="hljs-comment">#only need to run this code the first time you install these packages on your machine/user account.</span><br><br><span class="hljs-comment">#install.packages("rJava")</span><br><span class="hljs-comment">#install.packages("ENMeval")</span><br><br><span class="hljs-comment">##installing rJava can be tricky. If you're experiencing problems installing either rJava or</span><br><span class="hljs-comment">##ENMeval, it's the installation of rJava that is very likely your problem. Keeping in mind</span><br><span class="hljs-comment">##that these instructions are for a PC, visit this website for troubleshooting:</span><br><span class="hljs-comment">##https://cimentadaj.github.io/blog/2018-05-25-installing-rjava-on-windows-10/installing-rjava-on-windows-10/</span><br>options<span class="hljs-punctuation">(</span>java.parameters <span class="hljs-operator">=</span> <span class="hljs-string">"-Xmx100g"</span> <span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rJava<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ENMeval<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>raster<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#Find where the java directory is for the dismo package using the command below. Then, </span><br><span class="hljs-comment">#you need to put the file maxent.jar into the indicated directory. You'll need to do</span><br><span class="hljs-comment">#this second step by hand (not using r)</span><br><br>system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"java"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"dismo"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#put here the names of your environmental layers, following the pattern below:</span><br>bio1 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_1.asc"</span><span class="hljs-punctuation">)</span><br>bio2 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_2.asc"</span><span class="hljs-punctuation">)</span><br>bio3 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_3.asc"</span><span class="hljs-punctuation">)</span><br>bio4 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_4.asc"</span><span class="hljs-punctuation">)</span><br>bio5 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_5.asc"</span><span class="hljs-punctuation">)</span><br>bio6 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_6.asc"</span><span class="hljs-punctuation">)</span><br>bio7 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_7.asc"</span><span class="hljs-punctuation">)</span><br>bio8 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_8.asc"</span><span class="hljs-punctuation">)</span><br>bio9 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_9.asc"</span><span class="hljs-punctuation">)</span><br>bio10 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_10.asc"</span><span class="hljs-punctuation">)</span><br>bio11 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_11.asc"</span><span class="hljs-punctuation">)</span><br>bio12 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_12.asc"</span><span class="hljs-punctuation">)</span><br>bio13 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_13.asc"</span><span class="hljs-punctuation">)</span><br>bio14 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_14.asc"</span><span class="hljs-punctuation">)</span><br>bio15 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_15.asc"</span><span class="hljs-punctuation">)</span><br>bio16 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_16.asc"</span><span class="hljs-punctuation">)</span><br>bio17 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_17.asc"</span><span class="hljs-punctuation">)</span><br>bio18 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_18.asc"</span><span class="hljs-punctuation">)</span><br>bio19 <span class="hljs-operator">&lt;-</span> raster<span class="hljs-punctuation">(</span><span class="hljs-string">"bio_19.asc"</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment">#Do what's called "stacking" the rasters together into a single r object</span><br><br>env <span class="hljs-operator">&lt;-</span> stack<span class="hljs-punctuation">(</span>bio1<span class="hljs-punctuation">,</span> bio2<span class="hljs-punctuation">,</span> bio3<span class="hljs-punctuation">,</span> bio4<span class="hljs-punctuation">,</span> bio5<span class="hljs-punctuation">,</span> bio6<span class="hljs-punctuation">,</span> bio7<span class="hljs-punctuation">,</span> bio8<span class="hljs-punctuation">,</span> bio9<span class="hljs-punctuation">,</span> bio10<span class="hljs-punctuation">,</span> bio11<span class="hljs-punctuation">,</span> bio12<span class="hljs-punctuation">,</span> bio13<span class="hljs-punctuation">,</span> bio14<span class="hljs-punctuation">,</span> bio15<span class="hljs-punctuation">,</span> bio16<span class="hljs-punctuation">,</span> bio17<span class="hljs-punctuation">,</span> bio18<span class="hljs-punctuation">,</span> bio19<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#Display the stacked environment layer. Make a note of the position in the list </span><br><span class="hljs-comment">#of any categorical variables (do that by hand)</span><br><br>env<br><br><span class="hljs-comment">#in this example, the categorical variables are #s 9 and 10 in the list. But know your own data!</span><br><br><span class="hljs-comment">#load in your occurrence points</span><br><br>occ <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"grape.csv"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment">#check how many potential background points you have available</span><br><br><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>which<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>values<span class="hljs-punctuation">(</span>subset<span class="hljs-punctuation">(</span>env<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#If this number is far in excess of 10,000, then use 10,000 background points.</span><br><span class="hljs-comment">#If this number is comprable to, or smaller than 10,000, then use 5,000, 1,000, 500,</span><br><span class="hljs-comment">#or even 100 background points. The number of available non-NA spaces should </span><br><span class="hljs-comment">#be well in excess of the number of background points used.</span><br><br><span class="hljs-comment">#For the evalution below, we need to convert the bias object into another format.</span><br><span class="hljs-comment">#The code is set up to sample 5,000 background points. It would be better if we</span><br><span class="hljs-comment">#could sample 10,000 background points, but there are not enough places available.</span><br><span class="hljs-comment">#If we could change it to 10,000 background points we would change the ", 5000," to ",10000,"</span><br><br><span class="hljs-comment">#run the evaluation</span><br><br><span class="hljs-comment">##This run uses the "randomkfold" method of cross-validation and 10 cross-validation folds. </span><br><span class="hljs-comment">##There are two categorical variables: they are numbers 9 and 10 in the list of environmental </span><br><span class="hljs-comment">##variables from the stacked raster object.</span><br><br>enmeval_results <span class="hljs-operator">&lt;-</span> ENMevaluate<span class="hljs-punctuation">(</span>occ<span class="hljs-punctuation">,</span> env<span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">"jackknife"</span><span class="hljs-punctuation">,</span> n.bg<span class="hljs-operator">=</span><span class="hljs-number">10000</span><span class="hljs-punctuation">,</span> algorithm<span class="hljs-operator">=</span><span class="hljs-string">'maxent.jar'</span><span class="hljs-punctuation">)</span><br><br>enmeval_results<span class="hljs-operator">@</span>results<br><br>write.csv<span class="hljs-punctuation">(</span>enmeval_results<span class="hljs-operator">@</span>results<span class="hljs-punctuation">,</span> <span class="hljs-string">"grape_enmeval_results.csv"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#If you were to use the block method, you would replace:</span><br><span class="hljs-comment">#method="randomkfold", kfolds = 10</span><br><span class="hljs-comment">#with:</span><br><span class="hljs-comment">#method = "block"</span><br><br><span class="hljs-comment">#############################</span><br><span class="hljs-comment">##########IMPORTANT##########</span><br><span class="hljs-comment">#############################</span><br><span class="hljs-comment">#If you have fewer than 50 occurrence points, you will need to use the "jackknife" method of</span><br><span class="hljs-comment">#model validation instread. To do that, you would replace:</span><br><span class="hljs-comment">#method="randomkfold", kfolds = 10</span><br><span class="hljs-comment">#with:</span><br><span class="hljs-comment">#method = "jackknife"</span><br><br><span class="hljs-comment">#If there are no categorical variables in your dataset, you would get rid of:</span><br><span class="hljs-comment">#categoricals=c(9,10)</span><br><span class="hljs-comment">#In general, be very careful that the categoricals argument points to the right variable(s).</span><br></code></pre></td></tr></tbody></table></figure><h1 id="MSMC2"><a href="#MSMC2" class="headerlink" title="MSMC2"></a>MSMC2</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. prepare input data<br>1.1 generate the mask <span class="hljs-keyword">for</span> SNPable Regions<br>~/msmc-tools/seqbility-20091110/splitfa VS1.final.chr.fa 35 &gt;VS1.splitfa.35.fa<br>bwa aln -t 50 -R 1000000 -O 3 -E 3 VS1.final.chr.fa VS1.splitfa.35.fa &gt;VS1.splitfa.35.sai<br>bwa samse -f VS1.splitfa.35.sam VS1.final.chr.fa VS1.splitfa.35.sai VS1.splitfa.35.fa<br>perl ~/msmc-tools/seqbility-20091110/gen_raw_mask.pl VS1.splitfa.35.sam &gt;VS1.rawMask_35.fa<br>~/msmc-tools/seqbility-20091110/gen_mask -l 35 -r 0.5 VS1.rawMask_35.fa &gt;VS1.mask_35_50.fa<br>python makeMappabilityMask.py<br><br>1.2 estimate the mean coverage<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `<span class="hljs-built_in">cat</span> sample.txt`;<br><span class="hljs-keyword">do</span> <span class="hljs-keyword">for</span> ((j=<span class="hljs-number">1</span>;j&lt;<span class="hljs-number">20</span>;j++));<br>samtools depth -r <span class="hljs-variable">${j}</span> <span class="hljs-variable">${i}</span>.bam |awk <span class="hljs-string">'{sum += $3} END {print sum / NR}'</span> &gt;&gt;<span class="hljs-variable">${i}</span>.depth.txt;<br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br>1.3 calling vcf<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `<span class="hljs-built_in">cat</span> sample.txt`;<br><span class="hljs-keyword">do</span> <span class="hljs-keyword">for</span> ((j=<span class="hljs-number">1</span>;j&lt;<span class="hljs-number">20</span>;j++));<br><span class="hljs-keyword">do</span> ~/samtools-0.1.19/samtools mpileup -q 20 -Q 20 -C 50 -u -r <span class="hljs-variable">${j}</span> -f /public/Genome/VS1.final.fa <span class="hljs-variable">${i}</span>.bam | ~/samtools-0.1.19/bcftools/bcftools view -cgI - | ~/msmc-tools/bamCaller.py &lt;mean_cov&gt; <span class="hljs-variable">${i}</span>.chr<span class="hljs-variable">${j}</span>.mask.bed.gz |gzip -c &gt; <span class="hljs-variable">${i}</span>.chr<span class="hljs-variable">${j}</span>.vcf.gz<br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br>1.4 phase vcf<br><span class="hljs-keyword">for</span> ((i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">20</span>;i++));<br><span class="hljs-keyword">do</span> java -Xmx100g -jar ~/beagle/beagle_4.1.jar gtgl=/public/grape.chr<span class="hljs-variable">${i}</span>.vcf.gz out=grape.chr<span class="hljs-variable">$i</span>.imp gprobs=<span class="hljs-literal">true</span> nthreads=20;<br>~/shapeit/bin/shapeit -T 10 -V grape.chr<span class="hljs-variable">$i</span>.imp.vcf.gz --window 0.5 -O grape.chr<span class="hljs-variable">$i</span>.imp.phased;<br>~/shapeit/bin/shapeit -convert --input-haps grape.chr<span class="hljs-variable">$i</span>.imp.phased --output-ref grape.chr<span class="hljs-variable">$i</span>.phased.haplotypes grape.chr<span class="hljs-variable">$i</span>.phased.legend grape.chr<span class="hljs-variable">$i</span>.phased.sample --output-vcf grape.chr<span class="hljs-variable">$i</span>.phased.vcf<br><span class="hljs-keyword">done</span><br><br>1.5 phase a single-sample vcf file against a reference panel.<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `<span class="hljs-built_in">cat</span> sample.txt`;<br><span class="hljs-keyword">do</span> <span class="hljs-keyword">for</span> ((j=<span class="hljs-number">1</span>;j&lt;<span class="hljs-number">20</span>;j++));<br><span class="hljs-keyword">do</span> ~/msmc-tools/run_shapeit.sh <span class="hljs-variable">${i}</span>.chr<span class="hljs-variable">${j}</span>.vcf.gz tmp <span class="hljs-variable">${j}</span>; <span class="hljs-comment">#need change the location of dir of reference panel in file run_shapeit.sh.</span><br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br>1.6 generate input files <span class="hljs-keyword">for</span> msmc <span class="hljs-keyword">for</span> one chromosome.<br><span class="hljs-keyword">for</span> ((i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">20</span>;i++));<br><span class="hljs-keyword">do</span> ~/msmc-tools/generate_multihetsep.py --mask=sample1.chr<span class="hljs-variable">${i}</span>.mask.bed.gz --mask=sample2.chr<span class="hljs-variable">${i}</span>.mask.bed.gz --mask=sample3.chr<span class="hljs-variable">${i}</span>.mask.bed.gz --mask=sample4.chr<span class="hljs-variable">${i}</span>.mask.bed.gz --mask=/public/SNPable/VS1.chr<span class="hljs-variable">${i}</span>.mask.bed sample1.chr<span class="hljs-variable">${i}</span>.phased.vcf.gz sample2.chr<span class="hljs-variable">${i}</span>.phased.vcf.gz sample3.chr<span class="hljs-variable">${i}</span>.phased.vcf.gz sample4.chr<span class="hljs-variable">${i}</span>.phased.vcf.gz &gt;multihetsep.sample1.sample2.sample3.sample4.chr<span class="hljs-variable">${i}</span>.txt<br><span class="hljs-keyword">done</span><br><br>2. population size estimation<br>~/msmc2/build/release/msmc2 -t 19 -o sample1.sample2.sample3.sample4.msmc2.out {multihetsep.sample1.sample2.sample3.sample4.chr1.txt to multihetsep.sample1.sample2.sample3.sample4.chr19.txt}<br><br>3. cross-population analysis<br>~/msmc2/build/release/msmc2 -t 19 -s -I 0,1,2,3 -o sample1.sample2.sample3.sample4.pop1.msmc2.out {multihetsep.sample1.sample2.sample3.sample4.chr1.txt to multihetsep.sample1.sample2.sample3.sample4.chr19.txt}<br>~/msmc2/build/release/msmc2 -t 19 -s -I 4,5,6,7 -o sample1.sample2.sample3.sample4.pop2.msmc2.out {multihetsep.sample1.sample2.sample3.sample4.chr1.txt to multihetsep.sample1.sample2.sample3.sample4.chr19.txt}<br>~/msmc2/build/release/msmc2 -t 19 -s -I 0-4,0-5,0-6,0-7,1-4,1-5,1-6,1-7,2-4,2-5,2-6,2-7,3-4,3-5,3-6,3-7 -o sample1.sample2.sample3.sample4.across.msmc2.out  {multihetsep.sample1.sample2.sample3.sample4.chr1.txt to multihetsep.sample1.sample2.sample3.sample4.chr19.txt}<br>~/msmc-tools/combineCrossCoal.py sample1.sample2.sample3.sample4.across.msmc2.out sample1.sample2.sample3.sample4.pop1.msmc2.out sample1.sample2.sample3.sample4.pop2.msmc2.out &gt;sample1.sample2.sample3.sample4.combined.msmc2.final.txt<br></code></pre></td></tr></tbody></table></figure><p><code>makeMappabilityMask.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><br><span class="hljs-keyword">import</span> gzip<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MaskGenerator</span>:<br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, filename, <span class="hljs-built_in">chr</span></span>):<br>    self.lastCalledPos = -<span class="hljs-number">1</span><br>    self.lastStartPos = -<span class="hljs-number">1</span><br>    sys.stderr.write(<span class="hljs-string">"making mask {}\n"</span>.<span class="hljs-built_in">format</span>(filename))<br><span class="hljs-comment">#    self.file = gzip.open(filename, "w")</span><br>    self.file = <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">"w"</span>)<br>    self.<span class="hljs-built_in">chr</span> = <span class="hljs-built_in">chr</span><br>  <br>  <span class="hljs-comment"># assume 1-based coordinate, output in bed format</span><br> <span class="hljs-comment"># shouldd be 0-based ##dsc</span><br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">addCalledPosition</span>(<span class="hljs-params">self, pos</span>):<br>    <span class="hljs-keyword">if</span> self.lastCalledPos == -<span class="hljs-number">1</span>:<br>      self.lastCalledPos = pos<br>      self.lastStartPos = pos<br>    <span class="hljs-keyword">elif</span> pos == self.lastCalledPos + <span class="hljs-number">1</span>:<br>      self.lastCalledPos = pos<br>    <span class="hljs-keyword">else</span>:<br>      self.file.write(<span class="hljs-string">"{}\t{}\t{}\n"</span>.<span class="hljs-built_in">format</span>(self.<span class="hljs-built_in">chr</span>, self.lastStartPos - <span class="hljs-number">1</span>, self.lastCalledPos))<br>      self.lastStartPos = pos<br>      self.lastCalledPos = pos<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"/public/SNPable/VS1.mask_35_50.fa"</span>, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> f:<br>  <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>    <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">'&gt;'</span>):<br>      <span class="hljs-built_in">chr</span> = line.split()[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>:]<br>      mask = MaskGenerator(<span class="hljs-string">"/public/SNPable/VS1.chr{}.mask.bed"</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">chr</span>), <span class="hljs-built_in">chr</span>)<br>      pos = <span class="hljs-number">0</span><br>      <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> line.strip():<br>      pos += <span class="hljs-number">1</span><br>      <span class="hljs-keyword">if</span> pos % <span class="hljs-number">1000000</span> == <span class="hljs-number">0</span>:<br>        sys.stderr.write(<span class="hljs-string">"processing pos:{}\n"</span>.<span class="hljs-built_in">format</span>(pos))<br>      <span class="hljs-keyword">if</span> c == <span class="hljs-string">"3"</span>:<br>        mask.addCalledPosition(pos)<br></code></pre></td></tr></tbody></table></figure><h1 id="Stairway-plot"><a href="#Stairway-plot" class="headerlink" title="Stairway plot"></a>Stairway plot</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. filter SNPs<br>vcftools --gzvcf grape.snp.vcf.gz --keep group.txt --max-missing 1 --mac 1 --bed VS1.SNPable.bed.exclude_cds.bed --recode --stdout | gzip -c &gt; grape.group.vcf.gz<br><br>2. construction of the site frequency spectrum<br>~/easySFS/easySFS.py -i grape.group.vcf.gz -p pop.group.txt --proj={2*sample size} -a -o output_group --prefix group<br><br>3. run stairway_plot<br>java -<span class="hljs-built_in">cp</span> stairway_plot_es Stairbuilder group.blueprint<br>sh group.blueprint.sh<br></code></pre></td></tr></tbody></table></figure><p><code>group.blueprint</code>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#example blueprint file</span><br><span class="hljs-comment">#input setting</span><br>popid: group <span class="hljs-comment"># id of the population (no white space)</span><br>nseq: 102 <span class="hljs-comment"># number of sequences</span><br>L: 257128778 <span class="hljs-comment"># total number of observed nucleic sites, including polymorphic and monomorphic #278161037 SNPable</span><br>whether_folded: <span class="hljs-literal">true</span> <span class="hljs-comment"># whethr the SFS is folded (true or false)</span><br>SFS: 689610 445144 318665 270834 237351 208996 181977 177559 163511 152628 138020 136121 126102 119257 112212 104448 99962 97062 92585 86347 82904 78861 75324 73939 72378 69395 66293 63918 64790 62330 59988 58041 56322 56471 55612 53506 52584 53598 53513 51691 51295 50252 50349 51070 51566 50365 50424 51334 51405 51300 30261<br>smallest_size_of_SFS_bin_used_for_estimation: 2 <span class="hljs-comment"># default is 1; to ignore singletons, uncomment this line and change this number to 2</span><br>largest_size_of_SFS_bin_used_for_estimation: 51  <span class="hljs-comment"># default is nseq/2 for folded SFS</span><br>pct_training: 0.67 <span class="hljs-comment"># percentage of sites for training</span><br>nrand: 255075100 <span class="hljs-comment"># number of random break points for each try (separated by white space)</span><br>project_dir: group <span class="hljs-comment"># project directory</span><br>stairway_plot_dir: stairway_plot_es <span class="hljs-comment"># directory to the stairway plot files</span><br>ninput: 200 <span class="hljs-comment"># number of input files to be created for each estimation</span><br><span class="hljs-comment">#random_seed: 6</span><br><span class="hljs-comment">#output setting</span><br>mu: 5.4e-9 <span class="hljs-comment"># assumed mutation rate per site per generation</span><br>year_per_generation: 3 <span class="hljs-comment"># assumed generation time (in years)</span><br><span class="hljs-comment">#plot setting</span><br>plot_title: group <span class="hljs-comment"># title of the plot</span><br>xrange: 0,0 <span class="hljs-comment"># Time (1k year) range; format: xmin,xmax; "0,0" for default</span><br>yrange: 0,0 <span class="hljs-comment"># Ne (1k individual) range; format: xmin,xmax; "0,0" for default</span><br>xspacing: 2 <span class="hljs-comment"># X axis spacing</span><br>yspacing: 2 <span class="hljs-comment"># Y axis spacing</span><br>fontsize: 12 <span class="hljs-comment"># Font size</span><br></code></pre></td></tr></tbody></table></figure><h1 id="Momi2"><a href="#Momi2" class="headerlink" title="Momi2"></a>Momi2</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. generate input data<br><span class="hljs-keyword">for</span> ((i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">20</span>;i++));<br><span class="hljs-keyword">do</span> vcftools --gzvcf grape.snp.chr<span class="hljs-variable">${i}</span>.vcf.gz --keep group.txt --max-missing 1 --mac 1 --bed VS1.SNPable.bed.exclude_cds.bed.chr<span class="hljs-variable">${i}</span> --recode --stdout &gt; grape.group.chr<span class="hljs-variable">${i}</span>.vcf;<br>bgzip grape.group.chr<span class="hljs-variable">${i}</span>.vcf;<br>tabix grape.group.chr<span class="hljs-variable">${i}</span>.vcf.gz;<br>python -m momi.read_vcf grape.group.chr<span class="hljs-variable">${i}</span>.vcf.gz pop.txt grape.group.chr<span class="hljs-variable">${i}</span>.snpAlleleCounts.gz --bed VS1.SNPable.bed.exclude_cds.bed.chr<span class="hljs-variable">${i}</span> --no_aa<br><span class="hljs-keyword">done</span><br><br>python -m momi.extract_sfs sfs.gz 100 *.snpAlleleCounts.gz<br><br>2. run momi2, repeat 20 <span class="hljs-built_in">times</span>.<br>python momi2.py<br><br>3. run bootstrap, repeat 100 <span class="hljs-built_in">times</span>.<br>python momi2.bootstrap.py<br><br></code></pre></td></tr></tbody></table></figure><p><code>pop.txt</code>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">IS97WEUE<br>IS103WEUE<br>IS95WEUE<br>IS135WEUE<br>IS99WEUE<br>Fre61CEUG<br>IS52CEUG<br>IS65CEUG<br>IS39CEUG<br>198-ACEUG<br>Spa10CEUA<br>Spa27CEUA<br>Spa7CEUA<br>PO120CEUA<br>PO113CEUA<br>539WEUG<br>559WEUG<br>581WEUG<br>554WEUG<br>Fre305WEUG<br></code></pre></td></tr></tbody></table></figure><p><code>momi2.bootstrap.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> momi<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> dill<br><br>logging.basicConfig(level=logging.INFO, filename=<span class="hljs-string">"tutorial.bootstrap.log"</span>)<br><br>sfs = momi.Sfs.load(<span class="hljs-string">"sfs.gz"</span>)<br><br>add_pulse_model = dill.load(<span class="hljs-built_in">open</span>(<span class="hljs-string">'best_run/add_pulse_model.txt'</span>, <span class="hljs-string">'rb'</span>))<br>results = pickle.load(<span class="hljs-built_in">open</span>(<span class="hljs-string">'best_run/results.txt'</span>, <span class="hljs-string">'rb'</span>))<br>best_result = pickle.load(<span class="hljs-built_in">open</span>(<span class="hljs-string">'best_run/best_result.txt'</span>, <span class="hljs-string">'rb'</span>))<br><br>add_pulse_model.set_params(best_result.parameters)<br><br>n_bootstraps = <span class="hljs-number">1</span><br><span class="hljs-comment"># make copies of the original models to avoid changing them</span><br><span class="hljs-comment">#no_pulse_copy = no_pulse_model.copy()</span><br>add_pulse_copy = add_pulse_model.copy()<br><br>bootstrap_results = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n_bootstraps):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"Fitting <span class="hljs-subst">{i+<span class="hljs-number">1</span>}</span>-th bootstrap out of <span class="hljs-subst">{n_bootstraps}</span>"</span>)<br>    <span class="hljs-comment"># resample the data</span><br>    resampled_sfs = sfs.resample()<br>    <span class="hljs-comment"># tell models to use the new dataset</span><br>    <span class="hljs-comment">#no_pulse_copy.set_data(resampled_sfs)</span><br>    add_pulse_copy.set_data(resampled_sfs)<br>    <span class="hljs-comment"># choose new random parameters for submodel, optimize</span><br>    <span class="hljs-comment">#no_pulse_copy.set_params(randomize=True)</span><br>    <span class="hljs-comment">#no_pulse_copy.optimize()</span><br>    <span class="hljs-comment"># initialize parameters from submodel, randomizing the new parameters</span><br>    add_pulse_copy.set_params(randomize=<span class="hljs-literal">True</span>) <span class="hljs-comment">#no_pulse_copy.get_params(),       </span><br>    add_pulse_copy.optimize()<br>    bootstrap_results.append(add_pulse_copy.get_params())<br><br>pickle.dump(bootstrap_results, <span class="hljs-built_in">open</span>(<span class="hljs-string">'bootstrap_results.txt'</span>, <span class="hljs-string">'wb'</span>))<br></code></pre></td></tr></tbody></table></figure><p><code>momi2.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> momi<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> dill<br>logging.basicConfig(level=logging.INFO, filename=<span class="hljs-string">"tutorial.log"</span>)<br><br>sfs = momi.Sfs.load(<span class="hljs-string">"sfs.gz"</span>)<br>add_pulse_model = momi.DemographicModel(N_e=<span class="hljs-number">1e3</span>, gen_time=<span class="hljs-number">3</span>, muts_per_gen=<span class="hljs-number">5.4e-9</span>)<br>add_pulse_model.set_data(sfs)<br><br>add_pulse_model.add_size_param(<span class="hljs-string">"n_weug"</span>,lower=<span class="hljs-number">500</span>,upper=<span class="hljs-number">1e6</span>)<br>add_pulse_model.add_size_param(<span class="hljs-string">"n_weue"</span>,lower=<span class="hljs-number">500</span>,upper=<span class="hljs-number">1e6</span>)<br>add_pulse_model.add_size_param(<span class="hljs-string">"n_ceug"</span>,lower=<span class="hljs-number">500</span>,upper=<span class="hljs-number">1e6</span>)<br>add_pulse_model.add_size_param(<span class="hljs-string">"n_ceua"</span>,lower=<span class="hljs-number">500</span>,upper=<span class="hljs-number">1e6</span>)<br><br>add_pulse_model.add_time_param(<span class="hljs-string">"t_weue_ceug"</span>, lower=<span class="hljs-number">8.95e3</span>,upper=<span class="hljs-number">1.54e4</span>)<br>add_pulse_model.add_time_param(<span class="hljs-string">"t_ceug_ceua"</span>, lower=<span class="hljs-number">7.74e3</span>,upper=<span class="hljs-number">1.14e4</span>,upper_constraints=[<span class="hljs-string">"t_weue_ceug"</span>])<br>add_pulse_model.add_time_param(<span class="hljs-string">"t_weue_weug"</span>, lower=<span class="hljs-number">3.69e5</span>,upper=<span class="hljs-number">3.98e5</span>)<br><br>add_pulse_model.add_leaf(<span class="hljs-string">"CEUA"</span>, N=<span class="hljs-string">"n_ceua"</span>)<br>add_pulse_model.add_leaf(<span class="hljs-string">"CEUG"</span>, N=<span class="hljs-string">"n_ceug"</span>)<br>add_pulse_model.add_leaf(<span class="hljs-string">"WEUE"</span>, N=<span class="hljs-string">"n_weue"</span>)<br>add_pulse_model.add_leaf(<span class="hljs-string">"WEUG"</span>, N=<span class="hljs-string">"n_weug"</span>)<br><br><br>add_pulse_model.move_lineages(<span class="hljs-string">"CEUA"</span>, <span class="hljs-string">"CEUG"</span>, t=<span class="hljs-string">"t_ceug_ceua"</span>,p=<span class="hljs-number">1</span>)<br>add_pulse_model.move_lineages(<span class="hljs-string">"CEUG"</span>, <span class="hljs-string">"WEUE"</span>, t=<span class="hljs-string">"t_weue_ceug"</span>,p=<span class="hljs-number">1</span>)<br>add_pulse_model.move_lineages(<span class="hljs-string">"WEUG"</span>, <span class="hljs-string">"WEUE"</span>, t=<span class="hljs-string">"t_weue_weug"</span>,p=<span class="hljs-number">1</span>)<br><br><span class="hljs-comment">#adding a WEUG-&gt;CEUA migration arrow.</span><br>add_pulse_model.add_pulse_param(<span class="hljs-string">"weug_ceua_pulse"</span>, upper=<span class="hljs-number">.5</span>)<br>add_pulse_model.add_time_param(<span class="hljs-string">"t_weug_ceua_pulse"</span>, upper_constraints=[<span class="hljs-string">"t_ceug_ceua"</span>])<br>add_pulse_model.move_lineages(<span class="hljs-string">"CEUA"</span>, <span class="hljs-string">"WEUG"</span>, t=<span class="hljs-string">"t_weug_ceua_pulse"</span>, p=<span class="hljs-string">"weug_ceua_pulse"</span>)<br><br>results = []<br>n_runs = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n_runs):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"Starting run <span class="hljs-subst">{i+<span class="hljs-number">1</span>}</span> out of <span class="hljs-subst">{n_runs}</span>..."</span>)<br>    add_pulse_model.set_params(<br>        <span class="hljs-comment"># parameters inherited from no_pulse_model are set to their previous values</span><br>        <span class="hljs-comment"># no_pulse_model.get_params(),</span><br>        <span class="hljs-comment"># other parmaeters are set to random initial values</span><br>        randomize=<span class="hljs-literal">True</span>)<br><span class="hljs-comment">#    results.append(add_pulse_model.optimize(method="L-BFGS-B",options={"maxiter":200}))</span><br>    results.append(add_pulse_model.optimize(method=<span class="hljs-string">"TNC"</span>,options={<span class="hljs-string">"maxiter"</span>:<span class="hljs-number">200</span>}))<br><br>dill.dump(add_pulse_model, <span class="hljs-built_in">open</span>(<span class="hljs-string">'add_pulse_model.txt'</span>, <span class="hljs-string">'wb'</span>))<br>pickle.dump(results, <span class="hljs-built_in">open</span>(<span class="hljs-string">'results.txt'</span>, <span class="hljs-string">'wb'</span>))<br>best_result = results[<span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(best_result)<br>pickle.dump(best_result, <span class="hljs-built_in">open</span>(<span class="hljs-string">'best_result.txt'</span>, <span class="hljs-string">'wb'</span>))<br><br>add_pulse_model.set_params(best_result.parameters)<br><br>yticks = [<span class="hljs-number">1e3</span>,<span class="hljs-number">1e4</span>, <span class="hljs-number">2.5e4</span>, <span class="hljs-number">5e4</span>, <span class="hljs-number">7.5e4</span>, <span class="hljs-number">1e5</span>, <span class="hljs-number">2.5e5</span>, <span class="hljs-number">5e5</span>]<br>fig = momi.DemographyPlot(<br>    add_pulse_model, [<span class="hljs-string">"WEUE"</span>, <span class="hljs-string">"CEUG"</span>, <span class="hljs-string">"CEUA"</span>,<span class="hljs-string">"WEUG"</span>],<br>    figsize=(<span class="hljs-number">8</span>,<span class="hljs-number">10</span>),<br>    major_yticks=yticks,<br>    linthreshy=<span class="hljs-number">1e3</span>, pulse_color_bounds=(<span class="hljs-number">0</span>,<span class="hljs-number">.5</span>))<br>plt.savefig(<span class="hljs-string">"WEUE_CEUG_CEUA_WEUG.pdf"</span>)<br><br><span class="hljs-comment">#fig.draw_N_legend(loc="upper right")</span><br></code></pre></td></tr></tbody></table></figure><h1 id="选择扫描信号"><a href="#选择扫描信号" class="headerlink" title="选择扫描信号"></a>选择扫描信号</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. calculated Fst<br>vcftools --gzvcf grape.all.vcf.gz --weir-fst-pop Syl-E1.txt --weir-fst-pop CG1.txt --fst-window-size 50000 --fst-window-step 10000 --out grape.Syl-E1.CG1<br>vcftools --gzvcf grape.all.vcf.gz --weir-fst-pop Syl-E2.txt --weir-fst-pop CG2.txt --fst-window-size 50000 --fst-window-step 10000 --out grape.Syl-E2.CG2<br><br>2. calculated pi<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> {Syl-E1,Syl-E2,CG1,CG2};<br><span class="hljs-keyword">do</span> vcftools --gzvcf grape.<span class="hljs-variable">${i}</span>.vcf.gz --window-pi 50000 --window-pi-step 10000 --out grape.<span class="hljs-variable">${i}</span><br><span class="hljs-keyword">done</span><br><br>3. get selective regions.<br>python extract_signification.py grape.Syl-E1.CG1.fst_pi grape.Syl-E1.CG1.fst_pi.txt grape.Syl-E1.CG1.fst_pi.plot 0.05<br>python extract_signification.py grape.Syl-E2.CG2.fst_pi grape.Syl-E2.CG2.fst_pi.txt grape.Syl-E2.CG2.fst_pi.plot 0.05<br><br><span class="hljs-comment"># head -3 grape.Syl-E1.CG1.fst_pi</span><br><span class="hljs-comment">#CHROMBIN_STARTBIN_ENDWEIGHTED_FSTSyl-E1CG1</span><br><span class="hljs-comment">#11500000.04753120.003654580.0043379</span><br><span class="hljs-comment">#110001600000.0500450.003705610.00445387</span><br></code></pre></td></tr></tbody></table></figure><p><code>extract_signification.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> commands<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) &lt;&gt; <span class="hljs-number">5</span>:<br><span class="hljs-built_in">print</span> <span class="hljs-string">"Usage: "</span> + sys.argv[<span class="hljs-number">0</span>] + <span class="hljs-string">" input output_signification output_to_plot signification_cutoff (0.05)"</span><br>sys.exit(-<span class="hljs-number">1</span>)<br>file1=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">1</span>],<span class="hljs-string">'r'</span>)<br>file2=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">2</span>],<span class="hljs-string">'w'</span>)<br>file3=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">3</span>],<span class="hljs-string">'w'</span>)<br>top=<span class="hljs-built_in">float</span>(sys.argv[<span class="hljs-number">4</span>])<br>file2.write(<span class="hljs-string">'Chr\tBin_start\tBin_end\tFst\tPi_log2\n'</span>)<br>file3.write(<span class="hljs-string">'Fst\tPi_log2\n'</span>)<br>head=file1.readline()<br>fst_list=[]<br>pi_list=[]<br>Line1=file1.readlines()<br><span class="hljs-keyword">for</span> line1 <span class="hljs-keyword">in</span> Line1:<br>lin1=line1.strip(<span class="hljs-string">'\n'</span>).split(<span class="hljs-string">'\t'</span>)<br>fst_list.append(<span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">3</span>]))<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">4</span>])==<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">5</span>])==<span class="hljs-number">0</span>:<br>pi_list.append(<span class="hljs-built_in">float</span>(<span class="hljs-number">0</span>))<br><span class="hljs-keyword">else</span>:<br>pi=np.log2(<span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">4</span>])/<span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">5</span>]))<br>pi_list.append(<span class="hljs-built_in">float</span>(pi))<br><span class="hljs-comment">#file2.write('\t'.join(lin1[:4])+'\t'+str(pi)+'\n')</span><br>fst_list_sorted=<span class="hljs-built_in">sorted</span>(fst_list,reverse=<span class="hljs-literal">True</span>)<br>fst_index=<span class="hljs-built_in">int</span>(math.ceil(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">len</span>(fst_list))*top))<br>fst_cut_off=fst_list_sorted[fst_index]<br>pi_list_sorted=<span class="hljs-built_in">sorted</span>(pi_list,reverse=<span class="hljs-literal">True</span>)<br>pi_index=<span class="hljs-built_in">int</span>(math.ceil(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">len</span>(pi_list))*top))<br>pi_cut_off=pi_list_sorted[pi_index]<br>file_name=sys.argv[<span class="hljs-number">1</span>]+<span class="hljs-string">'.threshold.txt'</span><br>file=<span class="hljs-built_in">open</span>(file_name,<span class="hljs-string">'w'</span>)<br>file.write(<span class="hljs-string">'Fst_cutoff\tPi_cutoff\n'</span>)<br>file.write(<span class="hljs-built_in">str</span>(fst_cut_off)+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(pi_cut_off)+<span class="hljs-string">'\n'</span>)<br>file.close()<br><span class="hljs-keyword">for</span> line1 <span class="hljs-keyword">in</span> Line1:<br>lin1=line1.strip(<span class="hljs-string">'\n'</span>).split(<span class="hljs-string">'\t'</span>)<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">4</span>]) !=<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">5</span>]) !=<span class="hljs-number">0</span>:<br>pi=np.log2(<span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">4</span>])/<span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">5</span>]))<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(lin1[<span class="hljs-number">3</span>]) &gt; fst_cut_off <span class="hljs-keyword">and</span> <span class="hljs-built_in">float</span>(pi) &gt; pi_cut_off:<br>file2.write(<span class="hljs-string">'\t'</span>.join(lin1[:<span class="hljs-number">4</span>])+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(pi)+<span class="hljs-string">'\n'</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(fst_list)):<br>file3.write(<span class="hljs-built_in">str</span>(fst_list[i])+<span class="hljs-string">'\t'</span>+<span class="hljs-built_in">str</span>(pi_list[i])+<span class="hljs-string">'\n'</span>)<br>file1.close()<br>file2.close()<br>file3.close()<br></code></pre></td></tr></tbody></table></figure><h1 id="Treemix"><a href="#Treemix" class="headerlink" title="Treemix"></a>Treemix</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. generate input data<br>vcftools --gzvcf grape.snp.vcf.gz --keep group.txt --max-missing 1 --mac 1 --recode --stdout | gzip -c &gt; grape.group.vcf.gz<br>file=grape.group<br>vcftools --gzvcf <span class="hljs-variable">$file</span>.vcf.gz --plink-tped --out <span class="hljs-variable">$file</span><br>plink --tfile <span class="hljs-variable">$file</span> --make-bed --out <span class="hljs-variable">$file</span><br>plink --bfile <span class="hljs-variable">$file</span> --indep-pairwise 50 1 0.5 -out <span class="hljs-variable">$file</span>.pruning<br>plink --bfile <span class="hljs-variable">$file</span> --extract <span class="hljs-variable">$file</span>.pruning.prune.in --make-bed --out <span class="hljs-variable">$file</span>.pruned<br>plink --bfile <span class="hljs-variable">$file</span>.pruned --recode tab transpose --out <span class="hljs-variable">$file</span>.pruned.subset<br><span class="hljs-built_in">mv</span> <span class="hljs-variable">$file</span>.pruned.subset.tfam <span class="hljs-variable">$file</span>.pruned.subset.tfam.old<br><span class="hljs-built_in">cat</span> group*.txt &gt;pop.cov<br>python change_FID.py pop.cov <span class="hljs-variable">$file</span>.pruned.subset.tfam.old <span class="hljs-variable">$file</span>.pruned.subset.tfam<br>plink --tfile <span class="hljs-variable">$file</span>.pruned.subset --freq --noweb --missing --within pop.cov --out <span class="hljs-variable">$file</span>.pruned.subset<br>gzip <span class="hljs-variable">$file</span>.pruned.subset.frq.strat<br>python plink2treemix.py <span class="hljs-variable">$file</span>.pruned.subset.frq.strat.gz <span class="hljs-variable">$file</span>.pruned.subset.treemix.gz<br><br><span class="hljs-comment"># head -1 pop.cov</span><br><span class="hljs-comment">#group1sample1group1</span><br><br>2.run treemix (m=0 to m=10), 10 iterations per m:<br><span class="hljs-keyword">for</span> ((i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">11</span>;i++));<br><span class="hljs-keyword">do</span> <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> {1..10};<br><span class="hljs-keyword">do</span> s=<span class="hljs-variable">$RANDOM</span>;<br>~/treemix-1.12/bin/treemix -i grape.group.pruned.subset.treemix.gz -o grape.group.pruned.subset.stem.m<span class="hljs-variable">${i}</span>.<span class="hljs-variable">${j}</span> -global -m <span class="hljs-variable">${i}</span> -k 500 -seed <span class="hljs-variable">${s}</span> -bootstrap 1000 -root Syl-E1;<br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br>3. Estimating the optimal number of migration edges from Treemix<br>R:<br>library(<span class="hljs-string">"OptM"</span>)<br>folder &lt;- <span class="hljs-string">"treemix_Syl-E1"</span><br>test.optM = optM(folder)<br>plot_optM(test.optM, method = <span class="hljs-string">"Evanno"</span>,pdf=<span class="hljs-string">"treemix.OptM.pdf"</span>)<br></code></pre></td></tr></tbody></table></figure><p><code>change_FID.py</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> commands<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) &lt;&gt; <span class="hljs-number">4</span>:<br><span class="hljs-built_in">print</span> <span class="hljs-string">"Usage: "</span> + sys.argv[<span class="hljs-number">0</span>] + <span class="hljs-string">" file1 file2"</span><br>sys.exit(-<span class="hljs-number">1</span>)<br>file1=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">1</span>],<span class="hljs-string">'r'</span>)<br>file2=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">2</span>],<span class="hljs-string">'r'</span>)<br>file3=<span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">3</span>],<span class="hljs-string">'w'</span>)<br>file1_dict={}<br>Line1=file1.readlines()<br><span class="hljs-keyword">for</span> line1 <span class="hljs-keyword">in</span> Line1:<br>lin1=line1.split(<span class="hljs-string">'\t'</span>)<br>file1_dict[lin1[<span class="hljs-number">1</span>]]=lin1[<span class="hljs-number">0</span>]<br>Line2=file2.readlines()<br><span class="hljs-keyword">for</span> line2 <span class="hljs-keyword">in</span> Line2:<br>lin2=line2.split(<span class="hljs-string">'\t'</span>)<br>group=file1_dict[lin2[<span class="hljs-number">0</span>]]<br>file3.write(group+<span class="hljs-string">'\t'</span>+<span class="hljs-string">'\t'</span>.join(lin2[<span class="hljs-number">1</span>:]))<br>file1.close()<br>file2.close()<br>file3.close()<br></code></pre></td></tr></tbody></table></figure><h1 id="Dsuite-admixr"><a href="#Dsuite-admixr" class="headerlink" title="Dsuite_admixr"></a>Dsuite_admixr</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. filter SNPs<br>vcftools --gzvcf grape.snp.vcf.gz --keep group.txt --max-missing 1 --mac 1 --recode --stdout | gzip -c &gt; grape.vcf.gz<br><br>2. run Dtrios<br>~/Dsuite/Build/Dsuite Dtrios -n grape grape.vcf.gz SETS.txt<br><br><span class="hljs-comment">#head -2 SETS.txt</span><br>ZZ01Outgroup<br>TA-6228WEUA<br><br>3. <span class="hljs-built_in">df</span> and fdM statistics<br>~/Dsuite/Build/Dsuite Dinvestigate -w 50,5 grape.vcf.gz SETS.txt need_group.txt<br><br>4. f3 statistics<br><span class="hljs-comment">#convert vcf to eigenstrat format for ADMIXTOOLS</span><br>sh convertVCFtoEigenstrat.sh grape.vcf.gz<br><br>R:<br>library(admixr)<br>library(readr)<br>data_prefix &lt;- <span class="hljs-string">"grape"</span><br>snps &lt;- eigenstrat(data_prefix)<br>pops &lt;- c(<span class="hljs-string">"group1"</span>,<span class="hljs-string">"group2"</span>,<span class="hljs-string">"group3"</span>.......)<br>result &lt;- f3(A = pops, B = pops, C = <span class="hljs-string">"rotundifolia"</span>, data = snps)<br>write.table(result,file=<span class="hljs-string">"grape.f3statistics.txt"</span>,row.names=FALSE,sep=<span class="hljs-string">"\t"</span>,quote=FALSE)<br></code></pre></td></tr></tbody></table></figure><p><code>convertVCFtoEigenstrat.sh</code>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># Script to convert vcf to eigenstrat format for ADMIXTOOLS</span><br><span class="hljs-comment"># Written by Joana Meier</span><br><span class="hljs-comment"># It takes a single argument: the vcf file (can be gzipped) and </span><br><span class="hljs-comment"># optionally you can specify --renameScaff if you have scaffold names (not chr1, chr2...)</span><br><br><span class="hljs-comment"># Here, you can change the recombination rate which is currently set to 2 cM/Mb </span><br>rec=2<br><br><span class="hljs-comment"># It requires vcftools and admixtools</span><br><br><span class="hljs-comment"># for some clusters, it is needed to load these modules:</span><br><span class="hljs-comment"># module load gcc/4.8.2 vcftools openblas/0.2.13_seq perl/5.18.4 admixtools</span><br><br>renameScaff=<span class="hljs-string">"FALSE"</span><br><br><span class="hljs-comment"># If help is requested</span><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$1</span> == <span class="hljs-string">"-h"</span> ]]<br><span class="hljs-keyword">then</span><br> <span class="hljs-built_in">echo</span> <span class="hljs-string">"Please provide the vcf file to parse, and optionally add --renameScaff if you have scaffolds instead of chromosomes"</span><br> <span class="hljs-built_in">echo</span> <span class="hljs-string">"Usage: convertVCFtoEigenstrat.sh &lt;vcf file&gt; --renameScaff (note, the second argument is optional)"</span><br> <span class="hljs-built_in">exit</span> 1<br><br><span class="hljs-comment"># If the second argument renameScaff is given, set it to True</span><br><span class="hljs-keyword">elif</span> [[ <span class="hljs-variable">$2</span> == <span class="hljs-string">"--renameScaff"</span> ]]<br><span class="hljs-keyword">then</span><br> renameScaff=<span class="hljs-string">"TRUE"</span><br><br><span class="hljs-comment"># If no argument is given or the second one is not -removeChr, give information and quit</span><br><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$#</span> -ne 1 ]<br><span class="hljs-keyword">then</span><br> <span class="hljs-built_in">echo</span> <span class="hljs-string">"Please provide the vcf file to parse, and optionally add --renameScaff if you have scaffolds instead of chromosomes"</span><br> <span class="hljs-built_in">echo</span> <span class="hljs-string">"Usage: ./convertVCFtoEigenstrat.sh &lt;vcf file&gt; --renameScaff (note, the second argument is optional)"</span><br> <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># Set the first argument to the file name</span><br>file=<span class="hljs-variable">$1</span><br>file=<span class="hljs-variable">${file%.gz}</span><br>file=<span class="hljs-variable">${file%.vcf}</span><br><br><br><span class="hljs-comment"># if the vcf file is gzipped:</span><br><br><span class="hljs-keyword">if</span> [ -s <span class="hljs-variable">$file</span>.vcf.gz ]<br><span class="hljs-keyword">then</span><br><br> <span class="hljs-comment"># If renaming of scaffolds is requested, set all chromosome/scaffold names to 1</span><br> <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$renameScaff</span> == <span class="hljs-string">"TRUE"</span> ]<br> <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">"setting scaffold names to 1 and positions to additive numbers"</span><br>  zcat <span class="hljs-variable">$file</span><span class="hljs-string">".vcf.gz"</span> | awk <span class="hljs-string">'BEGIN {OFS = "\t";add=0;lastPos=0;scaff=""}{</span><br><span class="hljs-string">    if($1!~/^#/){</span><br><span class="hljs-string">       if($1!=scaff){add=lastPos;scaff=$1}</span><br><span class="hljs-string">       $1="1"</span><br><span class="hljs-string">       $2=$2+add</span><br><span class="hljs-string">       lastPos=$2</span><br><span class="hljs-string">     }</span><br><span class="hljs-string">     print $0}'</span> | gzip &gt; <span class="hljs-variable">$file</span>.renamedScaff.vcf.gz<br><br>  <span class="hljs-comment"># Get a .map and .ped file (remove multiallelic SNPs, monomorphic sites and indels)</span><br>  vcftools --gzvcf <span class="hljs-variable">$file</span><span class="hljs-string">".renamedScaff.vcf.gz"</span> \<br>         --plink --mac 1.0 --remove-indels --max-alleles 2 --out <span class="hljs-variable">$file</span><br><br> <span class="hljs-keyword">else</span><br> <span class="hljs-comment"># Get a .map and .ped file (remove multiallelic SNPs, monomorphic sites and indels)</span><br> vcftools --gzvcf <span class="hljs-variable">$file</span><span class="hljs-string">".vcf.gz"</span> \<br>         --plink --mac 1.0 --remove-indels --max-alleles 2 --out <span class="hljs-variable">$file</span><br> <span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># if the file is not gzipped</span><br><span class="hljs-keyword">else</span><br> <span class="hljs-comment"># If renaming of scaffolds is requested, set all chromosome/scaffold names to 1</span><br> <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$renameScaff</span> == <span class="hljs-string">"TRUE"</span> ]<br> <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">"setting scaffold names to 1 and positions to additive numbers"</span><br>  awk <span class="hljs-string">'BEGIN {OFS = "\t";add=0;lastPos=0;scaff=""}{</span><br><span class="hljs-string">    if($1!~/^#/){</span><br><span class="hljs-string">       if($1!=scaff){add=lastPos;scaff=$1}</span><br><span class="hljs-string">       $1="1"</span><br><span class="hljs-string">       $2=$2+add</span><br><span class="hljs-string">       lastPos=$2</span><br><span class="hljs-string">     }</span><br><span class="hljs-string">     print $0}'</span> <span class="hljs-variable">$file</span>.vcf | gzip &gt; <span class="hljs-variable">$file</span>.renamedScaff.vcf.gz<br><br>  <span class="hljs-comment"># Get a .map and .ped file (remove multiallelic SNPs, monomorphic sites and indels)</span><br>  vcftools --gzvcf <span class="hljs-variable">$file</span><span class="hljs-string">".renamedScaff.vcf.gz"</span> \<br>         --plink --mac 1.0 --remove-indels --max-alleles 2 --out <span class="hljs-variable">$file</span><br> <span class="hljs-keyword">else</span><br> vcftools --vcf <span class="hljs-variable">$file</span><span class="hljs-string">".vcf"</span> --plink --mac 1.0 --remove-indels --max-alleles 2 --out <span class="hljs-variable">$file</span><br> <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><br><br><span class="hljs-comment"># Change the .map file to match the requirements of ADMIXTOOLS by adding fake Morgan positions (assuming a recombination rate of 2 cM/Mbp)</span><br>awk -F<span class="hljs-string">"\t"</span> -v rec=<span class="hljs-variable">$rec</span> <span class="hljs-string">'BEGIN{scaff="";add=0}{</span><br><span class="hljs-string">        split($2,newScaff,":")</span><br><span class="hljs-string">        if(!match(newScaff[1],scaff)){</span><br><span class="hljs-string">                scaff=newScaff[1]</span><br><span class="hljs-string">                add=lastPos</span><br><span class="hljs-string">        }</span><br><span class="hljs-string">        pos=add+$4</span><br><span class="hljs-string">count+=0.00000001*rec*(pos-lastPos)</span><br><span class="hljs-string">        print newScaff[1]"\t"$2"\t"count"\t"pos</span><br><span class="hljs-string">        lastPos=pos</span><br><span class="hljs-string">}'</span> <span class="hljs-variable">${file}</span>.map  | sed <span class="hljs-string">'s/^chr//'</span> &gt; better.map<br><span class="hljs-built_in">mv</span> better.map <span class="hljs-variable">${file}</span>.map<br><br><span class="hljs-comment"># Change the .ped file to match the ADMIXTOOLS requirements</span><br>awk <span class="hljs-string">'BEGIN{ind=1}{printf ind"\t"$2"\t0\t0\t0\t1\t"; </span><br><span class="hljs-string"> for(i=7;i&lt;=NF;++i) printf $i"\t";ind++;printf "\n"}'</span> <span class="hljs-variable">${file}</span>.ped &gt; tmp.ped<br><span class="hljs-built_in">mv</span> tmp.ped <span class="hljs-variable">${file}</span>.ped<br><br><br><span class="hljs-comment"># create an inputfile for convertf</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"genotypename:    <span class="hljs-variable">${file}</span>.ped"</span> &gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"snpname:         <span class="hljs-variable">${file}</span>.map"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"indivname:       <span class="hljs-variable">${file}</span>.ped"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"outputformat:    EIGENSTRAT"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"genotypeoutname: <span class="hljs-variable">${file}</span>.eigenstratgeno"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"snpoutname:      <span class="hljs-variable">${file}</span>.snp"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"indivoutname:    <span class="hljs-variable">${file}</span>.ind"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"familynames:     NO"</span> &gt;&gt; par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><br><br><span class="hljs-comment"># Use CONVERTF to parse PED to eigenstrat</span><br>convertf -p par.PED.EIGENSTRAT.<span class="hljs-variable">${file}</span><br><br><span class="hljs-comment"># change the snp file for ADMIXTOOLS:</span><br>awk <span class="hljs-string">'BEGIN{i=0}{i=i+1; print $1"\t"$2"\t"$3"\t"i"\t"$5"\t"$6}'</span> <span class="hljs-variable">$file</span>.snp &gt; <span class="hljs-variable">$file</span>.snp.tmp<br><span class="hljs-built_in">mv</span> <span class="hljs-variable">$file</span>.snp.tmp <span class="hljs-variable">$file</span>.snp<br></code></pre></td></tr></tbody></table></figure><h1 id="GWAS"><a href="#GWAS" class="headerlink" title="GWAS"></a>GWAS</h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">1. gwas <span class="hljs-keyword">for</span> muscat and non-muscat grapevines<br>1.1 filter SNPs<br>vcftools --gzvcf grape.all.vcf.gz --keep muscat_nonmuscat.txt --max-missing 0.8 --maf 0.01 --recode --stdout |gzip -c &gt; grape.muscat.vcf.gz<br><br>1.2 run gwas<br>file=grape.muscat<br>plink --vcf <span class="hljs-variable">${file}</span>.vcf.gz --set-missing-var-ids @:<span class="hljs-comment"># --make-bed --out ${file}</span><br>~/gcta_1.93.3beta2/gcta64 --bfile <span class="hljs-variable">${file}</span> --make-grm --thread-num 20 --out geno_grm<br>~/gcta_1.93.3beta2/gcta64 --grm geno_grm --make-bK-sparse 0.05 --out sp_grm<br>~/gcta_1.93.3beta2/gcta64 --bfile <span class="hljs-variable">${file}</span> --grm-sparse sp_grm --fastGWA-mlm-binary --pheno phenotype.txt --threads 20 --out geno_assoc<br><br>2. gwas <span class="hljs-keyword">for</span> berry skin color<br>2.1 filter SNPs<br>vcftools --gzvcf grape.all.vcf.gz --keep OIV_225.txt --max-missing 0.7 --maf 0.01 --recode --stdout |gzip -c &gt; grape.OIV_225.vcf.gz<br><br>2.2 run gwas<br>file=grape.OIV_225<br>plink --vcf <span class="hljs-variable">${file}</span>.vcf.gz --set-missing-var-ids @:<span class="hljs-comment"># --make-bed --out ${file}</span><br>~/gcta_1.93.3beta2/gcta64 --mlma-loco --bfile <span class="hljs-variable">${file}</span> --pheno phenotype.txt --threads 20 --out OIV_225.geno_assoc<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R包biohelpers使用说明</title>
      <link href="/article/biohelpers/"/>
      <url>/article/biohelpers/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>从<a href="https://github.com/lixiang117423/biohelpers">GitHub</a>上安装：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">devtools<span class="hljs-operator">::</span>install_github<span class="hljs-punctuation">(</span><span class="hljs-string">"lixiang117423/biohelpers"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="常用的功能模块"><a href="#常用的功能模块" class="headerlink" title="常用的功能模块"></a>常用的功能模块</h1><h2 id="主成分分析（PCA）"><a href="#主成分分析（PCA）" class="headerlink" title="主成分分析（PCA）"></a>主成分分析（PCA）</h2><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li><code>data</code>：数据框，行是样品，列是特征值，比如基因表达量表行为样品名称，列为基因名称。</li><li><code>sample</code>：样品分组信息，有一列是<code>sample</code>，表示样品名称，需要和<code>data</code>的样品名称完全一致，</li><li><code>pca.num</code>：要保留计算结果中的多少个主成分轴，默认值是10，如果特征值少于十个则使用特征值数量。</li><li><code>plot</code>：是否绘图，默认是<code>TRUE</code>.</li><li><code>x</code>：用于绘制<code>X</code>轴的主成分，默认是<code>pc1</code>.</li><li><code>y</code>：用于绘制<code>Y</code>轴的主成分，默认是<code>pc2</code>.</li><li><code>color</code>：用于散点图上色的分组信息。</li><li><code>shape</code>：用于散点图形状的分组信息。</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tibble<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>magrittr<span class="hljs-punctuation">)</span><br><br>data <span class="hljs-operator">&lt;-</span> iris<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><br>sample <span class="hljs-operator">&lt;-</span> iris<span class="hljs-operator">$</span>Species <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"sample"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"species"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>CommonlyUsed.PCA<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> result.pca<br></code></pre></td></tr></tbody></table></figure><h3 id="返回的结果"><a href="#返回的结果" class="headerlink" title="返回的结果"></a>返回的结果</h3><ul><li><code>result.pca</code>：<code>FactoMineR::PCA()</code>输出的结果。</li><li><code>plot.pca</code>：绘图结果。</li><li><code>point.data</code>：样品在每个主成分上的位置信息，用于绘制散点图。</li><li><code>eigenvalue.pca</code>：主成分的解释度。</li></ul><h1 id="转录组"><a href="#转录组" class="headerlink" title="转录组"></a>转录组</h1><h1 id="代谢组"><a href="#代谢组" class="headerlink" title="代谢组"></a>代谢组</h1><h1 id="微生物组"><a href="#微生物组" class="headerlink" title="微生物组"></a>微生物组</h1><h2 id="差异微生物鉴定"><a href="#差异微生物鉴定" class="headerlink" title="差异微生物鉴定"></a>差异微生物鉴定</h2><h3 id="LEfSe"><a href="#LEfSe" class="headerlink" title="LEfSe"></a>LEfSe</h3><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><ul><li><code>data</code>：数据框，行是特征值，列是样品名称，比如OTU丰度为行，样品名称在列。</li><li><code>sample</code>：样品分组信息，行名称是样品名称，需要和<code>data</code>的样品名称完全一致，</li><li><code>groupCol</code>：分组信息所在列的列名称。</li><li><code>kruskal.threshold</code>：Kruskal检验的阈值，默认是0.05.</li><li><code>wilcox.threshold</code>：Wilcox检验的阈值，默认是0.05.</li><li><code>lda.threshold</code>：LDA的阈值，默认是1.</li></ul><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>biohelpers<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br><br>data<span class="hljs-punctuation">(</span>df.call_DAMs_LEfSe.otu<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>df.call_DAMs_LEfSe.sample<span class="hljs-punctuation">)</span><br><br>Microbiome.call_DAMs_LEfSe<span class="hljs-punctuation">(</span>df.call_DAMs_LEfSe.otu<span class="hljs-punctuation">,</span> df.call_DAMs_LEfSe.sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> lefse.result<br></code></pre></td></tr></tbody></table></figure><h4 id="返回的结果-1"><a href="#返回的结果-1" class="headerlink" title="返回的结果"></a>返回的结果</h4><p>返回的是数据框，第一列是<code>feature</code>，第二列是<code>scores</code>.</p><h1 id="宏基因组"><a href="#宏基因组" class="headerlink" title="宏基因组"></a>宏基因组</h1><h1 id="基因家族"><a href="#基因家族" class="headerlink" title="基因家族"></a>基因家族</h1>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从NCBI批量获取物种的分类信息</title>
      <link href="/article/gettaxonomy/"/>
      <url>/article/gettaxonomy/</url>
      
        <content type="html"><![CDATA[<h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>从<a href="https://www.ncbi.nlm.nih.gov/datasets/docs/v2/download-and-install/">NCBI</a>官方网站下载<a href="https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/datasets">datasets</a>和<a href="https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/v2/linux-amd64/dataformat">dataformat</a>，<code>chmod</code>修改为可执行文件即可。</p><h2 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h2><p>直接用拉丁名即可。但是不能是<em>Hordeum vulgare L.</em>这种格式，不然会报错：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">The taxonomy name <span class="hljs-string">'Hordeum vulgare L.'</span> is not exact. Try using one of the suggested taxids:<br>Hordeum vulgare (species, taxid: 4513)<br>Hordeum vulgare alphaendornavirus (species, taxid: 1774276, Hordeum vulgare endornavirus)<br>Hordeum vulgare subsp. vulgare (subspecies, taxid: 112509, Hordeum vulgare var. vulgare)<br>Hordeum vulgare var. distichon (varietas, taxid: 1288821, Hordeum vulgare var. distichum)<br>Hordeum vulgare var. coeleste (varietas, taxid: 2881371)<br>Hordeum vulgare subsp. spontaneum (subspecies, taxid: 77009)<br>Hordeum vulgare var. trifurcatum (varietas, taxid: 2821315)<br>Hordeum vulgare var. hexastichon (varietas, taxid: 1288822)<br>Hordeum vulgare f. agriocrithon (forma, taxid: 191506)<br>Hordeum vulgare dicistro-like virus 1 (species, taxid: 2872415)<br><br>No valid taxons provided <span class="hljs-keyword">for</span> summary - exiting<br></code></pre></td></tr></tbody></table></figure><h2 id="输出文件"><a href="#输出文件" class="headerlink" title="输出文件"></a>输出文件</h2><p>输出文件就是标准的<code>tsv</code>格式的：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Query   Taxid   Tax name        Authority       Rank    Basionym        Basionym authority      Curator common name     Has <span class="hljs-built_in">type</span> material       Group name       Superkingdom name       Superkingdom taxid      Kingdom name    Kingdom taxid   Phylum name     Phylum taxid    Class name      Class taxid      Order name      Order taxid     Family name     Family taxid    Genus name      Genus taxid     Species name    Species taxid   Scientific name is formal<br>Oryza minuta    63629   Oryza minuta    J.Presl, 1830   SPECIES                         no      monocots        Eukaryota       2759    Viridiplantae    33090   Streptophyta    35493   Magnoliopsida   3398    Poales  38820   Poaceae 4479    Oryza   4527    Oryza minuta    63629   TRUE<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全基因组DNA甲基化分析流程</title>
      <link href="/article/dnamethylation/"/>
      <url>/article/dnamethylation/</url>
      
        <content type="html"><![CDATA[<h1 id="测序原理"><a href="#测序原理" class="headerlink" title="测序原理"></a>测序原理</h1><p>甲基化的<code>C</code>在<code>Bisulfite</code>处理后不会发生变化；未发生甲基化的<code>C</code>在处理后会变为<code>U</code>，PCR扩增后会变为<code>T</code>. 因此甲基化比对时需要特定的基因组，所以需要对基因组进行转换：<code>C-&gt;T</code> 和 <code>G-&gt;A</code>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301301916249.png" alt="img" style="zoom:33%;"></p><h1 id="上游分析"><a href="#上游分析" class="headerlink" title="上游分析"></a>上游分析</h1><p>DNA甲基化比对使用最广泛的比对软件是<code>Bowtie2</code>，因此选择<code>Bowtie2</code>作为比对器（不同的比对软件需要不同的index文件）。</p><h2 id="基因组准备"><a href="#基因组准备" class="headerlink" title="基因组准备"></a>基因组准备</h2><p>需要基因组序列文件，把<code>gff3</code>文件也准备了，后续用得上：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">-rw-rw-r-- 1 lixiang lixiang 3.0G  8月 27 15:14 genome.fa<br>-rw-rw-r-- 1 lixiang lixiang 308M  8月 27 15:02 genome.gff3<br></code></pre></td></tr></tbody></table></figure><p>使用如下的命令生成<code>Bismark</code>比对需要的基因组：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bismark_genome_preparation --path_to_aligner ~/mambaforge/envs/bismark/bin/ --bowtie2 --parallel 60 --verbose 02.genome<br></code></pre></td></tr></tbody></table></figure><p>运行完成会生成如下的文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">02.genome<br>├── Bisulfite_Genome<br>│   ├── CT_conversion<br>│   │   ├── BS_CT.1.bt2<br>│   │   ├── BS_CT.2.bt2<br>│   │   ├── BS_CT.3.bt2<br>│   │   ├── BS_CT.4.bt2<br>│   │   ├── BS_CT.rev.1.bt2<br>│   │   ├── BS_CT.rev.2.bt2<br>│   │   └── genome_mfa.CT_conversion.fa<br>│   └── GA_conversion<br>│       ├── BS_GA.1.bt2<br>│       ├── BS_GA.2.bt2<br>│       ├── BS_GA.3.bt2<br>│       ├── BS_GA.4.bt2<br>│       ├── BS_GA.rev.1.bt2<br>│       ├── BS_GA.rev.2.bt2<br>│       └── genome_mfa.GA_conversion.fa<br>├── genome.fa<br>├── genome.fa.fai<br>└── genome.gff3<br><br>3 directories, 17 files<br></code></pre></td></tr></tbody></table></figure><h2 id="合并测序数据"><a href="#合并测序数据" class="headerlink" title="合并测序数据"></a>合并测序数据</h2><p>如果分成很多批次测序的话，需要先将原始文件合并，使用R语言生成合并代码。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/xx/data/all.rawdata.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> delim <span class="hljs-operator">=</span> <span class="hljs-string">"\t"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">":"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span><span class="hljs-string">" "</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    sample <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"/SOL"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"01.rawdata/"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"C88"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    type <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span>stringr<span class="hljs-operator">::</span>str_detect<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"_1.clean.fq.gz"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_1"</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_2"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file<br><br>all.comm <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  df.file <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>group <span class="hljs-operator">==</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file.sub<br><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>j <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file.sub<span class="hljs-operator">$</span>path<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"cat %s &gt;&gt; 03.cleandata/%s.fq.gz"</span><span class="hljs-punctuation">,</span> j<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.comm<br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br><br>all.comm <span class="hljs-operator">%&gt;%</span><br>  write.table<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/xx/data/merge.data.sh"</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="批量比对"><a href="#批量比对" class="headerlink" title="批量比对"></a>批量比对</h2><p>使用R生成批量比对代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/all.rawdata.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> delim <span class="hljs-operator">=</span> <span class="hljs-string">"\t"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">":"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span><span class="hljs-string">" "</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    sample <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"/SOL"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"01.rawdata/"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"C88"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    type <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span>stringr<span class="hljs-operator">::</span>str_detect<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"_1.clean.fq.gz"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_1"</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_2"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file<br><br>all.comm <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/%s_1.fq.gz -2 03.cleandata/%s_2.fq.gz -o 04.mapping"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.comm<br><span class="hljs-punctuation">}</span><br><br>all.comm <span class="hljs-operator">%&gt;%</span><br>  write.table<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/mapping.sh"</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>具体的代码如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/YS3_1.fq.gz -2 03.cleandata/YS3_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/YS2_1.fq.gz -2 03.cleandata/YS2_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/YS1_1.fq.gz -2 03.cleandata/YS1_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/WT3_1.fq.gz -2 03.cleandata/WT3_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/WT2_1.fq.gz -2 03.cleandata/WT2_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/WT1_1.fq.gz -2 03.cleandata/WT1_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/RS3_1.fq.gz -2 03.cleandata/RS3_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/RS2_1.fq.gz -2 03.cleandata/RS2_2.fq.gz -o 04.mapping<br>bismark -p 60 --bowtie2 --genome 02.genome -1 03.cleandata/RS1_1.fq.gz -2 03.cleandata/RS1_2.fq.gz -o 04.mapping<br></code></pre></td></tr></tbody></table></figure><h2 id="结果去重"><a href="#结果去重" class="headerlink" title="结果去重"></a>结果去重</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/all.rawdata.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> delim <span class="hljs-operator">=</span> <span class="hljs-string">"\t"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">":"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span><span class="hljs-string">" "</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    sample <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"/SOL"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"01.rawdata/"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"C88"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    type <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span>stringr<span class="hljs-operator">::</span>str_detect<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"_1.clean.fq.gz"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_1"</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_2"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file<br><br>all.comm <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"deduplicate_bismark --bam 04.mapping/%s_1_bismark_bt2_pe.bam --output_dir 05.deduplicate"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.comm<br><span class="hljs-punctuation">}</span><br><br>all.comm <span class="hljs-operator">%&gt;%</span><br>  write.table<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/deduplicate.sh"</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>生成的代码如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">deduplicate_bismark --bam 04.mapping/YS3_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/YS2_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/YS1_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/WT3_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/WT2_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/WT1_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/RS3_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/RS2_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br>deduplicate_bismark --bam 04.mapping/RS1_1_bismark_bt2_pe.bam --output_dir 05.deduplicate<br></code></pre></td></tr></tbody></table></figure><h2 id="提取甲基化结果"><a href="#提取甲基化结果" class="headerlink" title="提取甲基化结果"></a>提取甲基化结果</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/all.rawdata.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> delim <span class="hljs-operator">=</span> <span class="hljs-string">"\t"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">":"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span><span class="hljs-string">" "</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    sample <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"/SOL"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"01.rawdata/"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"C88"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    type <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span>stringr<span class="hljs-operator">::</span>str_detect<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"_1.clean.fq.gz"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_1"</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_2"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file<br><br>all.comm <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/%s.bam -o 08.methylation/ "</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.comm<br><span class="hljs-punctuation">}</span><br><br>all.comm <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>slice<span class="hljs-punctuation">(</span>nrow<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  write.table<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/methylation_extractor.sh"</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>具体的代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/RS1.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/RS2.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/RS3.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/WT1.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/WT2.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/WT3.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/YS1.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/YS2.bam -o 08.methylation/ <br>bismark_methylation_extractor --parallel 60 --scaffolds --gzip --bedGraph 05.deduplicate/YS3.bam -o 08.methylation/ <br></code></pre></td></tr></tbody></table></figure><h1 id="下游分析"><a href="#下游分析" class="headerlink" title="下游分析"></a>下游分析</h1><p>下游分析主要使用<code>methylKit</code>这个R包完成。</p><blockquote><p><a href="https://link.springer.com/article/10.1186/gb-2012-13-10-R87">Akalin A, Kormaksson M, Li S, et al. methylKit: a comprehensive R package for the analysis of genome-wide DNA methylation profiles[J]. Genome biology, 2012, 13: 1-9.</a></p></blockquote><h2 id="bam转sam"><a href="#bam转sam" class="headerlink" title="bam转sam"></a>bam转sam</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/all.rawdata.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> delim <span class="hljs-operator">=</span> <span class="hljs-string">"\t"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">":"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span><span class="hljs-string">" "</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    sample <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"/SOL"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"01.rawdata/"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span><span class="hljs-string">"C88"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    type <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span>stringr<span class="hljs-operator">::</span>str_detect<span class="hljs-punctuation">(</span>path<span class="hljs-punctuation">,</span> <span class="hljs-string">"_1.clean.fq.gz"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_1"</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"_2"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file<br><br>all.comm <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"samtools view -@ 70 -h 07.sort.bam/%s.sorted.bam | samtools sort -@ 70 -o 13.sam4methkit/%s.sorted.sam"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.comm<br><span class="hljs-punctuation">}</span><br><br>all.comm <span class="hljs-operator">%&gt;%</span><br>  write.table<span class="hljs-punctuation">(</span><span class="hljs-string">"data/其他项目/张兴/data/bam2sam.sh"</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>生成的代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">samtools view -@ 70 -h 07.sort.bam/YS3.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/YS3.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/YS2.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/YS2.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/YS1.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/YS1.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/WT3.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/WT3.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/WT2.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/WT2.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/WT1.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/WT1.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/RS3.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/RS3.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/RS2.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/RS2.sorted.sam<br>samtools view -@ 70 -h 07.sort.bam/RS1.sorted.bam | samtools <span class="hljs-built_in">sort</span> -@ 70 -o 13.sam4methkit/RS1.sorted.sam<br></code></pre></td></tr></tbody></table></figure><h2 id="提取甲基化结果-1"><a href="#提取甲基化结果-1" class="headerlink" title="提取甲基化结果"></a>提取甲基化结果</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 合并CpG结果</span><br>    files_list <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>      <span class="hljs-string">"13.sam4methkit/WT1.sorted.sam"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"13.sam4methkit/WT2.sorted.sam"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"13.sam4methkit/WT3.sorted.sam"</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">"13.sam4methkit/YS1.sorted.sam"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"13.sam4methkit/YS2.sorted.sam"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"13.sam4methkit/YS3.sorted.sam"</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">"13.sam4methkit/RS1.sorted.sam"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"13.sam4methkit/RS2.sorted.sam"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"13.sam4methkit/RS3.sorted.sam"</span><br>    <span class="hljs-punctuation">)</span><br><br>    methylKit<span class="hljs-operator">::</span>processBismarkAln<span class="hljs-punctuation">(</span><br>      location <span class="hljs-operator">=</span> files_list<span class="hljs-punctuation">,</span><br>      sample.id <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-string">"WT1"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"WT2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"WT3"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"YS1"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"YS2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"YS3"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"RS1"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"RS2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"RS3"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      assembly <span class="hljs-operator">=</span> <span class="hljs-string">"C88"</span><span class="hljs-punctuation">,</span><br>      save.folder <span class="hljs-operator">=</span> <span class="hljs-string">"14.methykit"</span><span class="hljs-punctuation">,</span><br>      read.context <span class="hljs-operator">=</span> <span class="hljs-string">"CpG"</span><span class="hljs-punctuation">,</span><br>      save.context <span class="hljs-operator">=</span> <span class="hljs-string">"CpG"</span><span class="hljs-punctuation">,</span><br>      treatment <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> obj.cpg<br><br>    save<span class="hljs-punctuation">(</span>obj.cpg<span class="hljs-punctuation">,</span> file <span class="hljs-operator">=</span> <span class="hljs-string">"14.methykit/CpG.RData"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>会生成每个样品的甲基化结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">14.methykit<br>├── WT1_CHG.txt<br>├── WT1_CHH.txt<br>└── WT1_CpG.txt<br><br>0 directories, 3 files<br></code></pre></td></tr></tbody></table></figure><p>输出的结果就是<code>methylKit</code>需要的标准化的输入数据：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">chrBase chr     base    strand  coverage        freqC   freqT<br>chr1_1.10277    chr1_1  10277   F       10      100.00  0.00<br>chr1_1.1032     chr1_1  1032    F       17      94.12   5.88<br>chr1_1.10356    chr1_1  10356   F       10      80.00   20.00<br>chr1_1.1065     chr1_1  1065    F       14      92.86   7.14<br>chr1_1.10717    chr1_1  10717   F       11      90.91   9.09<br>chr1_1.10730    chr1_1  10730   F       11      81.82   18.18<br>chr1_1.10747    chr1_1  10747   F       12      83.33   16.67<br>chr1_1.10780    chr1_1  10780   F       12      100.00  0.00<br>chr1_1.10787    chr1_1  10787   F       10      100.00  0.00<br></code></pre></td></tr></tbody></table></figure><p>每一列依次是：</p><ul><li>染色体编号+碱基位置</li><li>染色体编号</li><li>碱基位置</li><li>正负链</li><li>比对的覆盖度（<code>methylKit</code>要求最低是10）</li><li><code>C</code>碱基的频率</li><li><code>T</code>碱基的频率</li></ul><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>methylKit<span class="hljs-punctuation">)</span><br><br>rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>file.list<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <br>                            <span class="hljs-string">"test1.myCpG.txt"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"methylKit"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-string">"test2.myCpG.txt"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"methylKit"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <br>                            <span class="hljs-string">"control1.myCpG.txt"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"methylKit"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <br>                            <span class="hljs-string">"control2.myCpG.txt"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"methylKit"</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># read the files to a methylRawList object: myobj</span><br>myobj<span class="hljs-operator">=</span>methRead<span class="hljs-punctuation">(</span>file.list<span class="hljs-punctuation">,</span><br>           sample.id<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-string">"test1"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"test2"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"ctrl1"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"ctrl2"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           assembly<span class="hljs-operator">=</span><span class="hljs-string">"hg18"</span><span class="hljs-punctuation">,</span><br>           treatment<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           context<span class="hljs-operator">=</span><span class="hljs-string">"CpG"</span><span class="hljs-punctuation">,</span><br>           mincov <span class="hljs-operator">=</span> <span class="hljs-number">10</span><br>           <span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="样品描述性统计"><a href="#样品描述性统计" class="headerlink" title="样品描述性统计"></a>样品描述性统计</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 描述性统计, 第一个样品</span><br>myobj<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> <br>  methylKit<span class="hljs-operator">::</span>getMethylationStats<span class="hljs-punctuation">(</span>plot <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> both.strands <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> labels <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>myobj<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> <br>  methylKit<span class="hljs-operator">::</span>getCoverageStats<span class="hljs-punctuation">(</span>plot <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> both.strands <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="比较分析"><a href="#比较分析" class="headerlink" title="比较分析"></a>比较分析</h2><h3 id="合并样本"><a href="#合并样本" class="headerlink" title="合并样本"></a>合并样本</h3><p><code>CpG</code>的结果可以把参数设置为<code>destrand=TRUE</code>，但是<code>CpH</code>的结果只能是<code>destrand=FALSE</code>.</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 合并样品</span><br>meth<span class="hljs-operator">=</span>unite<span class="hljs-punctuation">(</span>myobj<span class="hljs-punctuation">,</span> destrand<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br>head<span class="hljs-punctuation">(</span>meth<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R">methylBase object with <span class="hljs-number">6</span> rows<br><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><br>    chr   start     end strand coverage1 numCs1 numTs1 coverage2 numCs2 numTs2 coverage3 numCs3 numTs3 coverage4 numCs4 numTs4<br><span class="hljs-number">1</span> chr21 <span class="hljs-number">9853296</span> <span class="hljs-number">9853296</span>      <span class="hljs-operator">+</span>        <span class="hljs-number">17</span>     <span class="hljs-number">10</span>      <span class="hljs-number">7</span>       <span class="hljs-number">333</span>    <span class="hljs-number">268</span>     <span class="hljs-number">65</span>        <span class="hljs-number">18</span>     <span class="hljs-number">16</span>      <span class="hljs-number">2</span>       <span class="hljs-number">395</span>    <span class="hljs-number">341</span>     <span class="hljs-number">54</span><br><span class="hljs-number">2</span> chr21 <span class="hljs-number">9853326</span> <span class="hljs-number">9853326</span>      <span class="hljs-operator">+</span>        <span class="hljs-number">17</span>     <span class="hljs-number">12</span>      <span class="hljs-number">5</span>       <span class="hljs-number">329</span>    <span class="hljs-number">249</span>     <span class="hljs-number">79</span>        <span class="hljs-number">16</span>     <span class="hljs-number">14</span>      <span class="hljs-number">2</span>       <span class="hljs-number">379</span>    <span class="hljs-number">284</span>     <span class="hljs-number">95</span><br><span class="hljs-number">3</span> chr21 <span class="hljs-number">9860126</span> <span class="hljs-number">9860126</span>      <span class="hljs-operator">+</span>        <span class="hljs-number">39</span>     <span class="hljs-number">38</span>      <span class="hljs-number">1</span>        <span class="hljs-number">83</span>     <span class="hljs-number">78</span>      <span class="hljs-number">5</span>        <span class="hljs-number">83</span>     <span class="hljs-number">83</span>      <span class="hljs-number">0</span>        <span class="hljs-number">41</span>     <span class="hljs-number">40</span>      <span class="hljs-number">1</span><br><span class="hljs-number">4</span> chr21 <span class="hljs-number">9906604</span> <span class="hljs-number">9906604</span>      <span class="hljs-operator">+</span>        <span class="hljs-number">68</span>     <span class="hljs-number">42</span>     <span class="hljs-number">26</span>       <span class="hljs-number">111</span>     <span class="hljs-number">97</span>     <span class="hljs-number">14</span>        <span class="hljs-number">23</span>     <span class="hljs-number">18</span>      <span class="hljs-number">5</span>        <span class="hljs-number">37</span>     <span class="hljs-number">33</span>      <span class="hljs-number">4</span><br><span class="hljs-number">5</span> chr21 <span class="hljs-number">9906616</span> <span class="hljs-number">9906616</span>      <span class="hljs-operator">+</span>        <span class="hljs-number">68</span>     <span class="hljs-number">52</span>     <span class="hljs-number">16</span>       <span class="hljs-number">111</span>    <span class="hljs-number">104</span>      <span class="hljs-number">7</span>        <span class="hljs-number">23</span>     <span class="hljs-number">14</span>      <span class="hljs-number">9</span>        <span class="hljs-number">37</span>     <span class="hljs-number">27</span>     <span class="hljs-number">10</span><br><span class="hljs-number">6</span> chr21 <span class="hljs-number">9906619</span> <span class="hljs-number">9906619</span>      <span class="hljs-operator">+</span>        <span class="hljs-number">68</span>     <span class="hljs-number">59</span>      <span class="hljs-number">9</span>       <span class="hljs-number">111</span>    <span class="hljs-number">109</span>      <span class="hljs-number">2</span>        <span class="hljs-number">22</span>     <span class="hljs-number">18</span>      <span class="hljs-number">4</span>        <span class="hljs-number">37</span>     <span class="hljs-number">29</span>      <span class="hljs-number">8</span><br><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><br>sample.ids<span class="hljs-operator">:</span> test1 test2 ctrl1 ctrl2 <br>destranded <span class="hljs-literal">FALSE</span> <br>assembly<span class="hljs-operator">:</span> hg18 <br>context<span class="hljs-operator">:</span> CpG <br>treament<span class="hljs-operator">:</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <br>resolution<span class="hljs-operator">:</span> base <br></code></pre></td></tr></tbody></table></figure><p><code>coverage2</code>后面的123啥的就是样品的分组信息编号。</p><h3 id="样品相关性"><a href="#样品相关性" class="headerlink" title="样品相关性"></a>样品相关性</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 样品间的相关性</span><br>methylKit<span class="hljs-operator">::</span>getCorrelation<span class="hljs-punctuation">(</span>meth<span class="hljs-punctuation">,</span> plot <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202410101034240.png" alt="image-20241010103420362" style="zoom:67%;"></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">          test1     test2     ctrl1     ctrl2<br>test1 <span class="hljs-number">1.0000000</span> <span class="hljs-number">0.9252530</span> <span class="hljs-number">0.8767865</span> <span class="hljs-number">0.8737509</span><br>test2 <span class="hljs-number">0.9252530</span> <span class="hljs-number">1.0000000</span> <span class="hljs-number">0.8791864</span> <span class="hljs-number">0.8801669</span><br>ctrl1 <span class="hljs-number">0.8767865</span> <span class="hljs-number">0.8791864</span> <span class="hljs-number">1.0000000</span> <span class="hljs-number">0.9465369</span><br>ctrl2 <span class="hljs-number">0.8737509</span> <span class="hljs-number">0.8801669</span> <span class="hljs-number">0.9465369</span> <span class="hljs-number">1.0000000</span><br></code></pre></td></tr></tbody></table></figure><h3 id="样品聚类"><a href="#样品聚类" class="headerlink" title="样品聚类"></a>样品聚类</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">clusterSamples<span class="hljs-punctuation">(</span>meth<span class="hljs-punctuation">,</span> dist<span class="hljs-operator">=</span><span class="hljs-string">"correlation"</span><span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">"ward"</span><span class="hljs-punctuation">,</span> plot<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ggtree<span class="hljs-operator">::</span>ggtree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202410101045254.png" alt="image-20241010104510976" style="zoom:67%;"></p><h3 id="PCA"><a href="#PCA" class="headerlink" title="PCA"></a>PCA</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">PCASamples<span class="hljs-punctuation">(</span>meth<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202410101048634.png" alt="image-20241010104810186" style="zoom:67%;"></p><h3 id="DMR鉴定"><a href="#DMR鉴定" class="headerlink" title="DMR鉴定"></a>DMR鉴定</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R">myDiff<span class="hljs-operator">=</span>calculateDiffMeth<span class="hljs-punctuation">(</span>meth<span class="hljs-punctuation">,</span> mc.cores<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># get hyper methylated bases</span><br>myDiff25p.hyper<span class="hljs-operator">=</span>getMethylDiff<span class="hljs-punctuation">(</span>myDiff<span class="hljs-punctuation">,</span>difference<span class="hljs-operator">=</span><span class="hljs-number">25</span><span class="hljs-punctuation">,</span>qvalue<span class="hljs-operator">=</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span>type<span class="hljs-operator">=</span><span class="hljs-string">"hyper"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># get hypo methylated bases</span><br>myDiff25p.hypo<span class="hljs-operator">=</span>getMethylDiff<span class="hljs-punctuation">(</span>myDiff<span class="hljs-punctuation">,</span>difference<span class="hljs-operator">=</span><span class="hljs-number">25</span><span class="hljs-punctuation">,</span>qvalue<span class="hljs-operator">=</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span>type<span class="hljs-operator">=</span><span class="hljs-string">"hypo"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># get all differentially methylated bases</span><br>myDiff25p<span class="hljs-operator">=</span>getMethylDiff<span class="hljs-punctuation">(</span>myDiff<span class="hljs-punctuation">,</span>difference<span class="hljs-operator">=</span><span class="hljs-number">25</span><span class="hljs-punctuation">,</span>qvalue<span class="hljs-operator">=</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">)</span><br><br>diffMethPerChr<span class="hljs-punctuation">(</span>myDiff<span class="hljs-punctuation">,</span>plot<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span>qvalue.cutoff<span class="hljs-operator">=</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> meth.cutoff<span class="hljs-operator">=</span><span class="hljs-number">25</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.chr<br></code></pre></td></tr></tbody></table></figure><h2 id="DMR注释"><a href="#DMR注释" class="headerlink" title="DMR注释"></a>DMR注释</h2><p>使用基因进行注释。这个注释操作将告诉我们启动子/intro/ex ONS/inter 与 IC 区域上的四个差异甲基化区域的百分比。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>genomation<span class="hljs-punctuation">)</span><br><br>gene.obj<span class="hljs-operator">=</span>readTranscriptFeatures<span class="hljs-punctuation">(</span>system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"refseq.hg18.bed.txt"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"methylKit"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>annotateWithGeneParts<span class="hljs-punctuation">(</span>as<span class="hljs-punctuation">(</span>myDiff25p<span class="hljs-punctuation">,</span><span class="hljs-string">"GRanges"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>gene.obj<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>输出结果：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R">Summary of target set annotation with genic parts<br>Rows <span class="hljs-keyword">in</span> target set<span class="hljs-operator">:</span> <span class="hljs-number">133</span><br><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span><br>percentage of target features overlapping with annotation<span class="hljs-operator">:</span><br>  promoter       exon     intron intergenic <br>     <span class="hljs-number">27.82</span>      <span class="hljs-number">15.04</span>      <span class="hljs-number">34.59</span>      <span class="hljs-number">57.14</span> <br><br>percentage of target features overlapping with annotation<span class="hljs-operator">:</span><br><span class="hljs-punctuation">(</span>with promoter <span class="hljs-operator">&gt;</span> exon <span class="hljs-operator">&gt;</span> intron precedence<span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br>  promoter       exon     intron intergenic <br>     <span class="hljs-number">27.82</span>       <span class="hljs-number">0.00</span>      <span class="hljs-number">15.04</span>      <span class="hljs-number">57.14</span> <br><br>percentage of annotation boundaries with feature overlap<span class="hljs-operator">:</span><br>promoter     exon   intron <br>    <span class="hljs-number">0.29</span>     <span class="hljs-number">0.03</span>     <span class="hljs-number">0.17</span> <br><br>summary of distances to the nearest TSS<span class="hljs-operator">:</span><br>   Min. <span class="hljs-number">1</span>st Qu.  Median    Mean <span class="hljs-number">3</span>rd Qu.    Max. <br>      <span class="hljs-number">5</span>     <span class="hljs-number">828</span>   <span class="hljs-number">45158</span>   <span class="hljs-number">52034</span>   <span class="hljs-number">94644</span>  <span class="hljs-number">313528</span> <br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bismark过程中的一个小细节</title>
      <link href="/article/bismarkbug/"/>
      <url>/article/bismarkbug/</url>
      
        <content type="html"><![CDATA[<p>在最后一步<code>bismark_methylation_extractor</code>的时候，输出的<code>.bedGraph</code> 和 <code>.bismark.cov</code>是空文件，在目标目录下有一大堆的<code>.temp</code>文件。看了<code>mapping</code>这一步的结果的<code>report</code>和<code>summary</code>，是没有问题的。那肯定是哪里有问题了。</p><p>各种检索，终于是发现了问题所在，参考<a href="https://github.com/FelixKrueger/Bismark/issues/180">no bedGraph output #180</a>:</p><blockquote><p>Your genome of interest seems to contain tens of thousands of scaffolds which makes it difficult to write to temporary files as we can do for chromosome based genomes. I recommend you use the option <code>--scaffolds</code> to fix this. This is taken from the <code>bismark2bedGraph</code> help file:</p></blockquote><p>于是，我把这个参数加上了，然后就正常了。</p><hr><p>推荐一个不错的甲基化分析教程：</p><p><a href="https://github.com/NIGMS/DNA-Methylation-Sequencing-Analysis-with-WGBS">DNA-Methylation-Sequencing-Analysis-with-WGBS</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>真菌分泌蛋白预测流程</title>
      <link href="/article/secretome4fungi/"/>
      <url>/article/secretome4fungi/</url>
      
        <content type="html"><![CDATA[<h1 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h1><h2 id="DeepLoc-2-0"><a href="#DeepLoc-2-0" class="headerlink" title="DeepLoc 2.0"></a>DeepLoc 2.0</h2><p>参考文献：</p><blockquote><p><a href="https://academic.oup.com/nar/article/50/W1/W228/6576357?login=false">Thumuluri V, Almagro Armenteros J J, Johansen A R, et al. DeepLoc 2.0: multi-label subcellular localization prediction using protein language models[J]. Nucleic acids research, 2022, 50(W1): W228-W234.</a></p></blockquote><p>首先需要使用教育邮箱申请后才能进行下载，申请网址为：<a href="https://services.healthtech.dtu.dk/cgi-bin/sw_request?software=deeploc&amp;version=2.0&amp;packageversion=2.0&amp;platform=All">https://services.healthtech.dtu.dk/cgi-bin/sw_request?software=deeploc&amp;version=2.0&amp;packageversion=2.0&amp;platform=All</a></p><p>解压后可以直接进行安装，官方建议的安装方式为：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 第一种方式：</span><br>pip install deeploc2.tar.gz<br><br><span class="hljs-section"># 第二种方式</span><br><span class="hljs-section">#or within the deeploc2<span class="hljs-emphasis">_package directory:</span></span><br><span class="hljs-emphasis"><span class="hljs-section">pip install .</span></span><br></code></pre></td></tr></tbody></table></figure><p>但是我尝试了很多次都安装失败了，报错信息为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">modulenotfounderror: no module named <span class="hljs-string">'_sysconfigdata_x86_64_conda_cos7_linux_gnu'</span><br></code></pre></td></tr></tbody></table></figure><p>索性直接重新建立一个单独的环境安装<code>DeepLoc</code>.</p><p>由于需要安装一些机器学习框架，所以呢我选择单个安装，不然一直报错。<code>setup.py</code>文件如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> setuptools<br><span class="hljs-keyword">import</span> atexit<br><span class="hljs-keyword">from</span> setuptools.command.develop <span class="hljs-keyword">import</span> develop<br><span class="hljs-keyword">from</span> setuptools.command.install <span class="hljs-keyword">import</span> install<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_download_models</span>():<br>    <span class="hljs-keyword">from</span> esm <span class="hljs-keyword">import</span> pretrained<br>    <span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> T5Tokenizer, T5EncoderModel, logging<br>    logging.set_verbosity_error()<br>    _, _ = pretrained.load_model_and_alphabet(<span class="hljs-string">"esm1b_t33_650M_UR50S"</span>) <br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">PostDevelopCommand</span>(<span class="hljs-title class_ inherited__">develop</span>):<br>    <span class="hljs-string">"""Post-installation for development mode."""</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        <span class="hljs-built_in">super</span>(PostDevelopCommand, self).__init__(*args, **kwargs)<br>        atexit.register(_download_models)<br>        <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">PostInstallCommand</span>(<span class="hljs-title class_ inherited__">install</span>):<br>    <span class="hljs-string">"""Post-installation for installation mode."""</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        <span class="hljs-built_in">super</span>(PostInstallCommand, self).__init__(*args, **kwargs)<br>        atexit.register(_download_models)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"README.md"</span>, <span class="hljs-string">"r"</span>, encoding=<span class="hljs-string">"utf-8"</span>) <span class="hljs-keyword">as</span> fh:<br>    long_description = fh.read()<br><br>setup_requires = [<span class="hljs-string">'numpy'</span>,<span class="hljs-string">'transformers'</span>,<span class="hljs-string">'fair-esm'</span>,<span class="hljs-string">'sentencepiece'</span>,<span class="hljs-string">'torch&gt;=1.6'</span>]<br><br>install_requires = [<br>        <span class="hljs-string">'numpy'</span>,<br>        <span class="hljs-string">'matplotlib'</span>,<br>        <span class="hljs-string">'pandas'</span>,<br>        <span class="hljs-string">'scipy'</span>,<br>        <span class="hljs-string">'Bio'</span>,<br>        <span class="hljs-string">'torch&gt;=1.6'</span>,<br>        <span class="hljs-string">'onnxruntime&gt;=1.7.0'</span>,<br>        <span class="hljs-string">'fair-esm'</span>,<br>        <span class="hljs-string">'transformers'</span>,<br>        <span class="hljs-string">'pytorch_lightning'</span>,<br>        <span class="hljs-string">'sentencepiece'</span><br>        ]<br><br>setuptools.setup(<br>    name=<span class="hljs-string">"DeepLoc2"</span>,<br>    version=<span class="hljs-string">"1.0.0"</span>,<br>    author=<span class="hljs-string">"Jose Juan Almagro Armenteros"</span>,<br>    author_email=<span class="hljs-string">"jjaa@stanford.edu"</span>,<br>    description=<span class="hljs-string">"Prediction of subcellular localization"</span>,<br>    <span class="hljs-comment">#scripts=['bin/deeploc2'],</span><br>    entry_points={<span class="hljs-string">'console_scripts'</span>:[<span class="hljs-string">'deeploc2=DeepLoc2.deeploc2:predict'</span>]},<br>    long_description=long_description,<br>    long_description_content_type=<span class="hljs-string">"text/markdown"</span>,<br>    url=<span class="hljs-string">"https://services.healthtech.dtu.dk/service.php?DeepLoc-2.0"</span>,<br>    project_urls={<br>        <span class="hljs-string">"Bug Tracker"</span>: <span class="hljs-string">"https://services.healthtech.dtu.dk/service.php?DeepLoc-2.0"</span>,<br>    },<br>    install_requires=install_requires,<br>    setup_requires=setup_requires,<br>    cmdclass={<span class="hljs-string">'develop'</span>:PostDevelopCommand,<span class="hljs-string">'install'</span>:PostInstallCommand},<br>    packages=setuptools.find_packages(),<br>    package_data={<span class="hljs-string">'DeepLoc2'</span>: [<span class="hljs-string">'models/*'</span>, <span class="hljs-string">'models/models_esm1b/*'</span>,<span class="hljs-string">'models/models_prott5/*'</span>,<br>                  <span class="hljs-string">'models/models_esm1b/signaltype/*'</span>,<span class="hljs-string">'models/models_prott5/signaltype/*'</span>]},<br>    python_requires=<span class="hljs-string">"&gt;=3.6"</span>,<br>)<br></code></pre></td></tr></tbody></table></figure><p>需要下载一些模型文件：<a href="https://huggingface.co/Rostlab/prot_t5_xl_uniref50/tree/main">点击访问下载地址</a></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408291039068.png" alt="image-20240829103915476"></p><p>这些模型文件只有科学上网才能下载，索性选择开一个新加坡的云服务器下载了再传回到实验室服务器上。传输文件的时候遇到一个报错：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">OpenSSL version mismatch. Built against 30000020, you have 30200000<br></code></pre></td></tr></tbody></table></figure><p>解决方法是更新<code>ssh</code>版本。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt remove --purge openssh-client<br>sudo apt install openssh-client<br></code></pre></td></tr></tbody></table></figure><p>把这些文件下载好几本上就可以开始使用了。</p><h2 id="SignalP-v6-0"><a href="#SignalP-v6-0" class="headerlink" title="SignalP v6.0"></a>SignalP v6.0</h2><p>真的是太难配置了啊。。。。。。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">mamba create -n signalp.6<br>mamba activate signalp.6<br><br>mm install predector::signalp6<br></code></pre></td></tr></tbody></table></figure><p>这样并没有安装完成，需要去<a href="https://services.healthtech.dtu.dk/services/SignalP-6.0/">https://services.healthtech.dtu.dk/services/SignalP-6.0/</a>申请下载软件，需要用到教育邮箱。然后再注册：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">signalp6-register signalp-6.0h.fast.tar.gz<br></code></pre></td></tr></tbody></table></figure><p>然后就可以开始使用了：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> signalp6 --fastafile rice_brownspot.pep.fa --output_dir ./ --organism eukarya --mode fast &amp;<br></code></pre></td></tr></tbody></table></figure><h2 id="TargetP-v2-0"><a href="#TargetP-v2-0" class="headerlink" title="TargetP v2.0"></a>TargetP v2.0</h2><p>同样需要去<a href="https://services.healthtech.dtu.dk/services/TargetP-2.0/">https://services.healthtech.dtu.dk/services/TargetP-2.0/</a>申请下载，然后安装注册：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mm install predector::targetp2<br>targetp2-register targetp-2.0.Linux.tar.gz<br></code></pre></td></tr></tbody></table></figure><p>然后开始运行：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> targetp2 -batch 1000 -fasta rice_brownspot.pep.fa -gff3 -org non-pl  -prefix heban &amp;<br></code></pre></td></tr></tbody></table></figure><h2 id="TMHMM-v2-0"><a href="#TMHMM-v2-0" class="headerlink" title="TMHMM v2.0"></a>TMHMM v2.0</h2><p>同样要申请下载，然后安装：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://services.healthtech.dtu.dk/services/TMHMM-2.0/<br></code></pre></td></tr></tbody></table></figure><p>需要注意的是，要将<code>bin</code>目录下的<code>tmhmm</code>和<code>tmhmmformat.pl</code>两个文件的第一行修改为<code>perl</code>的绝对路径。我的：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">/home/xxx/mambaforge/envs/tools4bioinf/bin/perl<br><br><span class="hljs-comment"># This is version 2.0c of tmhmm</span><br><br><br><span class="hljs-comment"># Give ONE fasta file on cmdline OR use stdin</span><br><span class="hljs-comment"># A single sequence can be given WITHOUT the ID line ("&gt;ID")</span><br><span class="hljs-comment"># Such a sequence will be called "WEBSEQUENCE"</span><br><br><span class="hljs-comment"># OPTION PARSING ##########################################</span><br></code></pre></td></tr></tbody></table></figure><h1 id="SignalP结果处理"><a href="#SignalP结果处理" class="headerlink" title="SignalP结果处理"></a>SignalP结果处理</h1>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遗传力的概念和计算</title>
      <link href="/article/heritability01/"/>
      <url>/article/heritability01/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在作物育种过程中，通常会有多年多点的试验，这种试验通常叫做多环境试验（multi-environment trial，MET）。为了对MET进行准确的测量、最终实现实现MET的准确比较，育种学家通常会计算广义遗传力和狭义遗传力。这个文档主要有三个目的：</p><ul><li>说清楚遗传力的概念；</li><li>展示使用合适的方法计算遗传力；</li><li>提供稳定的方法计算和比较田间试验的准确信。</li></ul><h1 id="遗传力的定义"><a href="#遗传力的定义" class="headerlink" title="遗传力的定义"></a>遗传力的定义</h1><p>下图A中的公式表示表型可以用截距$\mu<em>i$加上第<em>i</em> 种基因型的效应加上其他的非基因型效应$e</em>{ij}$，非基因型效应会影响基因型效应对表型的解释。</p><p>下图B就解释了什么什么是遗传力：</p><p>1）表型和基因型之间的回归关系；</p><p>2）表型和基因型之间的平方相关性；</p><p>3）被描述为选择差异中能够实现的选择反应的比例。</p><p>个人理解：基因型在表型决定过程中占了多大比例，也就是$g<em>i$对$y</em>{ij}$的大小的影响程度。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408270951619.png" alt="image-20240827095155028" style="zoom:67%;"></p><p>表型的方差可以分为两部分：</p><p>1）遗传方差：由遗传差异引起的表型方差；</p><p>2）误差方差：非遗传因素引起的表型方差，如环境引起的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271004638.png" alt="image-20240827100435457" style="zoom:67%;"></p><h1 id="遗传力的误解"><a href="#遗传力的误解" class="headerlink" title="遗传力的误解"></a>遗传力的误解</h1><ul><li><strong>A heritability of x indicates that x% of the trait is determined by genetics</strong>. 遗传力为0.4表示这个性状的表型变异中，有40%是由基因型的变异引起的；但是不能认为每个植株的性状表现有40%是基因决定了，其余部分是由其他因素影响决定的。</li><li><strong>A low heritability means that traits are not determined by genes</strong>. 只要遗传力的值大于0，就说明基因对表型有影响。遗传力是由遗传方差个表型方差的比例决定的。一个很低的遗传力只能说明遗传变异比表型变异更小。（例如，玉米的分枝在很大程度上是由遗传决定的，但由于现代玉米育种项目中使用的大多数基因型只有一个主茎，因此分枝的遗传方差非常低。）</li><li><strong>A low heritability means that genetic differences are small</strong>. 遗传力很低时并不能<strong>直接</strong>说是遗传变异很小，还有可能是误差变异很大，比如环境的影响巨大，遗传的影响较小。（例如，对某种感染的抵抗力将取决于抵御该感染的遗传潜力；问题在于如何测量这种潜力。如果仅对甜菜植物中的线虫感染进行一次田间测量，它只会记录当时感染的植物，但这可能会因选择的环境而影响感染水平的记录。）</li><li><strong>A heritability is a fixed value</strong>. 遗传力反映的是在一个特定的群体的表型变异中，遗传变异组分的相对权重。遗传力不仅取决于群体的遗传变异，还会受到环境和观测的准确度的影响。一个群体的遗传变异很可能和另外一个群体的遗传变异不同。而且，<strong>一个群体的遗传力会随时间发生变化</strong>。</li><li><strong>A high heritability implies a major-effect QTL</strong>. A major-QTL trait like eye color can have low heritability if the population scanned have only one type of eye color, or a high heritability of we observe all types of color. A highly quantitative trait like yield can have a high heritability is the experiment is well conducted with high appropriate replication levels, but can also have low heritability if the agronomic management is poor.</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271035039.png" alt="Common misconceptions of heritability."></p><p>In 1), a misunderstanding of the concept results in the conclusion that a percentage of the phenotype is due to genes. In 2), the lack of variation resulting in low heritability is misunderstood to be consequence of no genetics contributing to the expression of the trait. In 3), a low heritability is misunderstood to reflect a small difference between genotypes when it could also be attributed to a large error variance. In 4), heritability is wrongly thought to be the always the same across time or populations. In 5), heritability is wrongly interpreted to be correlated to the number of large QTLs. In 6), the correct interpretation of heritability is provided.</p><h1 id="遗传力的计算"><a href="#遗传力的计算" class="headerlink" title="遗传力的计算"></a>遗传力的计算</h1><h2 id="Cullis等提出的广义遗传力计算方法"><a href="#Cullis等提出的广义遗传力计算方法" class="headerlink" title="Cullis等提出的广义遗传力计算方法"></a>Cullis等提出的广义遗传力计算方法</h2><script type="math/tex; mode=display">H_{Cullis}^2 = 1 - \frac{\bar{\nu}_{\triangle}^{BLUP}}{2 * \sigma_g^2}</script><p>在这个公式中：</p><ul><li>$\sigma^2$表示方差；</li><li><em>g</em>表示基因型；</li><li>$\bar{\nu}_{\triangle}^{BLUP}$表示基因型BLUPs的平均标准差。</li></ul><p>这个公式的优点在于，它可以作为常规田间试验分析的一部分进行计算，能够处理不平衡的数据集，并利用随机变量的特性，例如方差成分的估计。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271055890.png" alt="image-20240827105507402"></p><p>计算比较直接简单，<strong>但是需要每个个体都有2个及以上的重复，不然没法计算标准误</strong>。最后的结果0.43说明有43%的表型变异是由遗传差异引起的。</p><h2 id="标准的广义遗传力计算方法"><a href="#标准的广义遗传力计算方法" class="headerlink" title="标准的广义遗传力计算方法"></a>标准的广义遗传力计算方法</h2><p>这种方法的优点在于计算简单且参数选择直观。缺点包括在数据不平衡时（在单一或多环境设置中，每个基因型的重复次数不同）可能会倾向于高估值，因为<strong>它假设数据集是平衡的</strong>。</p><script type="math/tex; mode=display">H_{Standard}^2 = \frac{\sigma_g^2}{\sigma_p^2}</script><p>其中${\sigma<em>p^2 = \sigma_g^2 + \frac{\sigma</em>{ga}^2}{\sigma<em>{n_a}^2} + \frac{\sigma</em>{gl}^2}{\sigma<em>{n_l}^2} + \frac{\sigma</em>{gal}^2}{\sigma<em>{n_an_l}^2} + \frac{\sigma</em>{plot}^2}{\sigma_{n_an_ln_r}^2}}$</p><p>在这个公式中：</p><ul><li>$\sigma^2$表示方差；</li><li><em>g</em>表示基因型；</li><li><em>n</em>表示重复数量；</li><li><em>a</em>表示年份；</li><li><em>l</em>表示地点；</li><li><em>plot</em>表示plot error.</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271134731.png" alt="image-20240827113423300"></p><h2 id="Ad-hoc-Holland广义遗传力计算方法"><a href="#Ad-hoc-Holland广义遗传力计算方法" class="headerlink" title="Ad hoc Holland广义遗传力计算方法"></a>Ad hoc Holland广义遗传力计算方法</h2><p>这个方法主要是解决重复数量不一样等问题。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271138833.png" alt="image-20240827113845810"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271139207.png" alt="image-20240827113906587"></p><h2 id="Piepho’s广义遗传力计算"><a href="#Piepho’s广义遗传力计算" class="headerlink" title="Piepho’s广义遗传力计算"></a>Piepho’s广义遗传力计算</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271140989.png" alt="image-20240827114000715"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271140896.png" alt="image-20240827114013592"></p><h2 id="Walsh-and-Lynch广义遗传力计算"><a href="#Walsh-and-Lynch广义遗传力计算" class="headerlink" title="Walsh and Lynch广义遗传力计算"></a>Walsh and Lynch广义遗传力计算</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271141408.png" alt="image-20240827114102152"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408271141662.png" alt="image-20240827114122002"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>This manual has set out the correct interpretation of heritability alongside some common misconceptions to be avoided. Additionally, an overview was provided of the features, advantages and disadvantages of some of the more robust heritability calculation methods in order to promote the adoption of common and transparent methods among breeding programs. Among those, the Cullis method (Cullis et al., 2006) was recommended as a robust method to account for unbalanced datasets. In addition, the Piepho and Walsh &amp; Lynch methods are also considered robust but require additional considerations.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动下载校验fastq文件</title>
      <link href="/article/downloadfastq/"/>
      <url>/article/downloadfastq/</url>
      
        <content type="html"><![CDATA[<p>首先，直接在<a href="https://www.ebi.ac.uk/ena/browser/view/">ENA</a>上检索想要下载的数据，如：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408211518146.png" alt="image-20240821151842690" style="zoom: 67%;"></p><p>有两个信息很重要，MD5值和Aspera链接。</p><p>选择TSV下载格式将信息下载下来，然后使用R进行处理，获得最终要的数据格式。R代码如下：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>dir<span class="hljs-punctuation">(</span><span class="hljs-string">"data/生信挖掘/水稻多效基因/data/ENA下载信息/"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.file<br><br>all.ena <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.file<span class="hljs-operator">$</span>file<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"data/生信挖掘/水稻多效基因/data/ENA下载信息/%s"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Run"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"md5"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"link"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>md5 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>md5<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                  link <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>link<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    tidyr<span class="hljs-operator">::</span>unnest<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>link<span class="hljs-punctuation">,</span> <span class="hljs-string">"/"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>Run<span class="hljs-punctuation">,</span> file<span class="hljs-punctuation">,</span> md5<span class="hljs-punctuation">,</span> link<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.ena<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.ena <br><span class="hljs-punctuation">}</span><br><br>all.ena  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> md5<span class="hljs-punctuation">,</span> link<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  readr<span class="hljs-operator">::</span>write_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"data/生信挖掘/水稻多效基因/data/ena.info.txt"</span><span class="hljs-punctuation">,</span> delim <span class="hljs-operator">=</span> <span class="hljs-string">"\t"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>得到的文件长这样：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202408211521455.png" alt="image-20240821152147291"></p><p>把这个文件上传到服务器，就可以开始下载了。批量下载代码（代码来自<a href="https://mp.weixin.qq.com/s/HnJJk0ke6s5EiZkvQrPzAQ">生信技能树微信公众号</a>）：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 定义文件列表的文本文件路径</span><br>FILE_LIST=<span class="hljs-string">"ena.info.txt"</span><br><br><span class="hljs-comment"># 定义最大重试次数</span><br>MAX_RETRIES=10<br><br><span class="hljs-comment"># 检查文件列表文件是否存在</span><br><span class="hljs-keyword">if</span> [ ! -f <span class="hljs-string">"<span class="hljs-variable">$FILE_LIST</span>"</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"文件列表文件 <span class="hljs-variable">$FILE_LIST</span> 不存在。"</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 读取文件列表文件</span><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> -r filename <span class="hljs-built_in">md5sum</span> download_url; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"处理文件: <span class="hljs-variable">$filename</span>"</span><br><br>    <span class="hljs-comment"># 定义下载的文件路径</span><br>    download_path=<span class="hljs-string">"<span class="hljs-variable">$filename</span>"</span><br><br>    <span class="hljs-comment"># 初始化重试次数</span><br>    retries=0<br><br>    <span class="hljs-comment"># 循环直到文件校验成功或达到最大重试次数</span><br>    <span class="hljs-keyword">while</span> [ <span class="hljs-variable">$retries</span> -lt <span class="hljs-variable">$MAX_RETRIES</span> ]; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">"尝试下载文件 (尝试次数: <span class="hljs-subst">$((retries + 1)</span>) / <span class="hljs-variable">$MAX_RETRIES</span>)..."</span><br><br>        <span class="hljs-comment"># 使用curl下载文件</span><br>        <span class="hljs-comment">#curl -o "$download_path" -L "$download_url"</span><br>        <span class="hljs-comment"># 使用 ascp 下载文件</span><br>        <span class="hljs-comment"># 换成自己的asperaweb_id_dsa.openssh路径</span><br>        ascp -QT -l 100m -P33001 -k 1 -i ~/mambaforge/envs/tools4bioinf/etc/asperaweb_id_dsa.openssh era-fasp@<span class="hljs-variable">$download_url</span>  .  <br><br>        <span class="hljs-comment"># 计算下载文件的MD5校验和</span><br>        actual_md5=$(<span class="hljs-built_in">md5sum</span> <span class="hljs-string">"<span class="hljs-variable">$download_path</span>"</span> | awk <span class="hljs-string">'{print $1}'</span>)<br><br>        <span class="hljs-comment"># 校验文件</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-string">"<span class="hljs-variable">$actual_md5</span>"</span> = <span class="hljs-string">"<span class="hljs-variable">$md5sum</span>"</span> ]; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">"文件 <span class="hljs-variable">$filename</span> 下载成功，并且MD5校验和正确。"</span><br>            <span class="hljs-built_in">break</span><br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">"文件校验失败，正在重试..."</span><br>            <span class="hljs-built_in">rm</span> <span class="hljs-string">"<span class="hljs-variable">$download_path</span>"</span> <br>            retries=$((retries + <span class="hljs-number">1</span>))<br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-comment"># 检查是否达到最大重试次数</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$retries</span> -eq <span class="hljs-variable">$MAX_RETRIES</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">"文件 <span class="hljs-variable">$filename</span> 下载和校验失败，已达到最大重试次数。"</span><br>       <span class="hljs-comment"># exit 1</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span> &lt; <span class="hljs-string">"<span class="hljs-variable">$FILE_LIST</span>"</span><br></code></pre></td></tr></tbody></table></figure><p>直接后台运行即可：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> bash dl.sh &gt; dl.log 2&gt;&amp;1 &amp;<br><span class="hljs-built_in">echo</span> 1646575 &gt; dl.id<br></code></pre></td></tr></tbody></table></figure><p>输出日志：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">处理文件: SRR12976775_1.fastq.gz<br>尝试下载文件 (尝试次数: 1 / 10)...<br>SRR12976775_1.fastq.gz                                                                                         100% 1420MB 10.7Mb/s    10:12    <br>Completed: 1454518K bytes transferred <span class="hljs-keyword">in</span> 612 seconds<br> (19438K bits/sec), <span class="hljs-keyword">in</span> 1 file.<br>文件 SRR12976775_1.fastq.gz 下载成功，并且MD5校验和正确。<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BLUP和BLUE</title>
      <link href="/article/blueandblup/"/>
      <url>/article/blueandblup/</url>
      
        <content type="html"><![CDATA[<h2 id="为何要计算-BLUE-值？"><a href="#为何要计算-BLUE-值？" class="headerlink" title="为何要计算 BLUE 值？"></a>为何要计算 BLUE 值？</h2><p>一年多点或者多年多点的植物数据中，一个基因型（品种）往往有多个表型数据，但只有一个基因型，在 GWAS 关联分析中，就需要一个基因型对应一个表型数据。</p><p><strong>之所以有多个表型数据的原因：</strong></p><ul><li>或者是多个重复</li><li>或者是多个地点的数据</li><li>或者是多个年份的数据</li></ul><p><strong>问题：如何计算得到一个表型数据呢？</strong></p><p><strong>解答：可以使用多个表型值的平均值，作为品种的表型值，现在有更好的方法：BLUE 值。</strong></p><h2 id="为何使用-BLUE-值？"><a href="#为何使用-BLUE-值？" class="headerlink" title="为何使用 BLUE 值？"></a>为何使用 BLUE 值？</h2><p>一般，有两个选择，BLUE 值或者 BLUP 值，在 GWAS 中大都使用的 BLUE 值。</p><p><strong>BLUE 和 BLUP 的区别：</strong></p><ul><li>BLUE 值是混合线性模型中固定因子的估计效应值</li><li>BLUP 值是混合线性模型中随机因子的估计效应值</li></ul><p><strong>BLUE 和 BLUP 的代表：</strong></p><ul><li>BLUE 值着重在于评估品种现在的表现</li><li>BLUP 值着重在于预测品种将来的表现</li></ul><p><strong>BLUE 和 BLUP 的方差变化</strong></p><ul><li>BLUE 只是对表型值根据地点，年份进行矫正，得到的数据和原来数据尺度一样</li><li>BLUP 值会对表型数据进行压缩</li></ul><p>一年多点的数据，如何更好的计算 BLUE 值进行 GWAS 分析？</p><p>常规的方法，是将品种作为固定因子，将地点作为随机因子，计算品种的 BLUE 值，然后将其作为表型数据进行 GWAS 分析。这样是有作用的，起码比平均值要准确。</p><p>其实，还有更高级的模型，比如一年多点的数据，如果地点有重复（区组），可以将品种与地点互作考虑到模型中，这样计算出的 BLUE 值是排除基因与环境互作后的，更能代表品种的真值。</p><p>最后，还有更高级的玩法，比如一年多点的数据，默认的是方差齐次，如果不齐次就不能进行联合方差分析，这时候可以将设置残差异质，包括基因与环境互作的异质，这样通过不同模型的比较，选择最优模型，这时候计算的 BLUE 值才是最优的。</p><p>后面几章，会系统介绍一下一年多点数据如何计算 BLUE 值，分别是：</p><ul><li><p>一年多点数据，没有重复时，如何计算 BLUE 值？</p></li><li><p>一年多点的数据，有重复时，进行联合方差分析计算 BLUE 值</p></li><li><p>一年多点的数据，有重复时，通过设置残差异质以及互作异质，比较最优模型，计算 BLUE 值。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Positron设置快捷键</title>
      <link href="/article/positronshortcuts/"/>
      <url>/article/positronshortcuts/</url>
      
        <content type="html"><![CDATA[<p>毫无疑问，<code>Positron</code>是非常好用的，可是一些快捷键无法设置，那就直接编辑快捷键吧。</p><p>找到<code>Positron</code>的安装路径下的这个文件<code>keybindings.json</code>，我的路径是：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Users\xxx\AppData\Roaming\Positron\User\keybindings.json<br></code></pre></td></tr></tbody></table></figure><p>我编辑的是我自己常用的三个快捷键：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"key"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"ctrl+m"</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">"command"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"editor.action.insertSnippet"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"args"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">"snippet"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"%&gt;%"</span> <span class="hljs-punctuation">}</span><br>    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"key"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"ctrl+n"</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">"command"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"editor.action.insertSnippet"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"args"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">"snippet"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"-&gt;"</span> <span class="hljs-punctuation">}</span><br>    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"key"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"ctrl+b"</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">"command"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"editor.action.insertSnippet"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"args"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">"snippet"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"%in%"</span> <span class="hljs-punctuation">}</span><br>    <span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><p>搞定~继续搬砖。。。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCBI数据库BioProject中的Description</title>
      <link href="/article/ncbi.bioproject/"/>
      <url>/article/ncbi.bioproject/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br>file_path = <span class="hljs-string">"D:/OneDrive/NAS/科研相关/PhData/data/生信挖掘/水稻多效基因/data/NCBI.BioProject.Rice.txt"</span><br><br>file_out = <span class="hljs-built_in">open</span>(<span class="hljs-string">"D:/OneDrive/NAS/科研相关/PhData/data/生信挖掘/水稻多效基因/data/NCBI.BioProject.Rice.description.txt"</span>, <span class="hljs-string">"w"</span>, encoding=<span class="hljs-string">'utf-8'</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>        <span class="hljs-comment"># print(line.replace("\n", ""))</span><br><br>        <span class="hljs-comment"># URL of the BioProject</span><br>        url = <span class="hljs-string">"https://www.ncbi.nlm.nih.gov/bioproject/"</span> + line.replace(<span class="hljs-string">"\n"</span>, <span class="hljs-string">""</span>)<br><br>        <span class="hljs-comment"># print(url)</span><br><br>        <span class="hljs-comment"># Send a GET request to the webpage</span><br>        response = requests.get(url)<br><br>        <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>            <span class="hljs-comment"># Parse the page content</span><br>            soup = BeautifulSoup(response.content, <span class="hljs-string">"html.parser"</span>)<br>            <br>            <span class="hljs-comment"># Extract specific information</span><br>            <span class="hljs-comment"># title = soup.find("div", id="DescrAll").get_text(strip=True)</span><br><br>            <span class="hljs-keyword">try</span>:<br>                description = soup.find(<span class="hljs-string">"div"</span>, <span class="hljs-built_in">id</span>=<span class="hljs-string">"DescrAll"</span>).get_text(strip=<span class="hljs-literal">True</span>).replace(<span class="hljs-string">"\n"</span>, <span class="hljs-string">" "</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                description = <span class="hljs-string">"None"</span><br>            <span class="hljs-keyword">except</span> UnicodeEncodeError:<br>                <span class="hljs-keyword">continue</span><br>            <br>            <span class="hljs-comment"># Print the extracted information</span><br>            <span class="hljs-comment"># print(f"Title: {title}")</span><br>            <span class="hljs-comment"># print(f"Description: {description}")</span><br><br>            file_out.write(line.replace(<span class="hljs-string">"\n"</span>, <span class="hljs-string">""</span>) + <span class="hljs-string">"\t"</span> + description + <span class="hljs-string">"\n"</span>)<br><br>            <span class="hljs-built_in">print</span>(line.replace(<span class="hljs-string">"\n"</span>, <span class="hljs-string">""</span>) + <span class="hljs-string">"\t"</span> + description + <span class="hljs-string">"\n"</span>) <br><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">"================================================"</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f"BioProject<span class="hljs-subst">{line}</span>: Failed to retrieve the webpage. Status code: <span class="hljs-subst">{response.status_code}</span>"</span>)<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代谢物鉴定函数</title>
      <link href="/article/calldams/"/>
      <url>/article/calldams/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">callDAMs<span class="hljs-punctuation">(</span>metabolites.table <span class="hljs-operator">=</span> metabolites.table<span class="hljs-punctuation">,</span><br>         phenotype.table <span class="hljs-operator">=</span> phenotype.table<span class="hljs-punctuation">,</span><br>         group.table <span class="hljs-operator">=</span> group.table<span class="hljs-punctuation">,</span><br>         use.lm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>         use.cor <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>         lm.R2 <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> lx<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202406122140515.png" alt="image-20240612214038800"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202406122140174.png" alt="image-20240612214054944"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202406122141286.png" alt="image-20240612214115695"></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#' <span class="hljs-doctag">@name</span> callDAMs</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@author</span> Xiang LI &lt;lixiang117423@<span class="hljs-doctag">@foxmail</span>.com&gt;</span><br><span class="hljs-comment">#'</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@title</span> DAMs using multiple methods.</span><br><span class="hljs-comment">#'</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment">#'</span><br><span class="hljs-comment"># load my functions</span><br><span class="hljs-comment"># ggplot2 theme</span><br><br>callDAMs <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>metabolites.table<span class="hljs-punctuation">,</span> <br>                     phenotype.table<span class="hljs-punctuation">,</span> <br>                     group.table<span class="hljs-punctuation">,</span><br>                     CK.group <span class="hljs-operator">=</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">,</span><br>                     use.oplsda <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <br>                     use.log2FC <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <br>                     use.wilcox <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <br>                     use.DESeq2 <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <br>                     use.lm <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>                     use.cor <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>                     VIP.value <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                     log2FC.value.abs <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                     Wilcokx.pvalue <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><br>                     DESeq2.log2FC.abs <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                     DESeq2.pvalue <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><br>                     DESeq2.qvalue <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><br>                     lm.R2 <span class="hljs-operator">=</span> <span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span><br>                     lm.pvalue <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><br>                     cor.method <span class="hljs-operator">=</span> <span class="hljs-string">"pearson"</span><span class="hljs-punctuation">,</span><br>                     cor.value.abs <span class="hljs-operator">=</span> <span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span><br>                     cor.pvalue <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  <span class="hljs-comment"># OPLS-DA</span><br>  group.table<span class="hljs-operator">$</span>group <span class="hljs-operator">%&gt;%</span><br>    factor<span class="hljs-punctuation">(</span>levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"CK"</span><span class="hljs-punctuation">,</span> setdiff<span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>group.table<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> group<br>  <br>  metabolites.table <span class="hljs-operator">%&gt;%</span> <br>    tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.meta<br>  <br>  ropls<span class="hljs-operator">::</span>opls<span class="hljs-punctuation">(</span>df.meta<span class="hljs-punctuation">,</span> group<span class="hljs-punctuation">,</span> crossvalI <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> predI <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> orthoI <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> opls.da<br>  <br>  opls.da<span class="hljs-operator">@</span>vipVn <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"VIP"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>VIP <span class="hljs-operator">&gt;=</span> VIP.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"Index"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>rename<span class="hljs-punctuation">(</span>value <span class="hljs-operator">=</span> VIP<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>method <span class="hljs-operator">=</span> <span class="hljs-string">"OPLS-DA"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.vip<br>  <br>  <span class="hljs-comment"># log2FC</span><br>  metabolites.table <span class="hljs-operator">%&gt;%</span> <br>    tidyr<span class="hljs-operator">::</span>pivot_longer<span class="hljs-punctuation">(</span>cols <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>group.table<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>summarise<span class="hljs-punctuation">(</span>mean.value <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    tidyr<span class="hljs-operator">::</span>pivot_wider<span class="hljs-punctuation">(</span>names_from <span class="hljs-operator">=</span> group<span class="hljs-punctuation">,</span> values_from <span class="hljs-operator">=</span> mean.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">,</span> CK<span class="hljs-punctuation">,</span> setdiff<span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>group.table<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Index"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"treatment"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>log2FC <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span>treatment <span class="hljs-operator">/</span> CK<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> log2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>Index<span class="hljs-punctuation">,</span> log2FC<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>log2FC<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> log2FC.value.abs<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.log2FC<br>  <br>  <span class="hljs-comment"># Wilcox</span><br>  metabolites.table <span class="hljs-operator">%&gt;%</span> <br>    tidyr<span class="hljs-operator">::</span>pivot_longer<span class="hljs-punctuation">(</span>cols <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>group.table<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    rstatix<span class="hljs-operator">::</span>wilcox_test<span class="hljs-punctuation">(</span>value <span class="hljs-operator">~</span> group<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>p <span class="hljs-operator">&lt;</span> Wilcokx.pvalue<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">,</span> p<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Index"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Wilcox.pvalue"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.wilcox<br>  <br>  <span class="hljs-comment"># DESeq2</span><br>  metabolites.table <span class="hljs-operator">%&gt;%</span> <br>    tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    t<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.meta<br>  <br>  group.table <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> level <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"CK"</span><span class="hljs-punctuation">,</span> setdiff<span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>group.table<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.group<br>  <br>  DESeq2<span class="hljs-operator">::</span>DESeqDataSetFromMatrix<span class="hljs-punctuation">(</span><br>    countData <span class="hljs-operator">=</span> df.meta<span class="hljs-punctuation">,</span><br>    colData <span class="hljs-operator">=</span> df.group<span class="hljs-punctuation">,</span><br>    design <span class="hljs-operator">=</span> <span class="hljs-operator">~</span> group<br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    DESeq2<span class="hljs-operator">::</span>DESeq<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    DESeq2<span class="hljs-operator">::</span>results<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>signif.group <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>      log2FoldChange <span class="hljs-operator">&gt;</span> DESeq2.log2FC.abs <span class="hljs-operator">&amp;</span> pvalue <span class="hljs-operator">&lt;</span> DESeq2.pvalue <span class="hljs-operator">~</span> <span class="hljs-string">"Up"</span><span class="hljs-punctuation">,</span><br>      log2FoldChange <span class="hljs-operator">&lt;</span> <span class="hljs-operator">-</span>DESeq2.log2FC.abs <span class="hljs-operator">&amp;</span> pvalue <span class="hljs-operator">&lt;</span> DESeq2.pvalue <span class="hljs-operator">~</span> <span class="hljs-string">"Down"</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"NS"</span><br>    <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"Index"</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>log2FoldChange<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> DESeq2.log2FC.abs<span class="hljs-punctuation">,</span> pvalue <span class="hljs-operator">&lt;</span> DESeq2.pvalue<span class="hljs-punctuation">,</span> padj <span class="hljs-operator">&lt;</span> DESeq2.qvalue<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.deseq2<br>  <br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>use.cor<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-comment"># 相关性</span><br>    metabolites.table <span class="hljs-operator">%&gt;%</span> <br>      tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.meta<br>    <br>    phenotype.table <span class="hljs-operator">%&gt;%</span> <br>      tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.phenotype<br>    <br>    WGCNA<span class="hljs-operator">::</span>corAndPvalue<span class="hljs-punctuation">(</span>df.meta<span class="hljs-punctuation">,</span> df.phenotype<span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> cor.method<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> cor.p<br>    <br>    cor.p<span class="hljs-operator">$</span>cor <span class="hljs-operator">%&gt;%</span> <br>      as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>      magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"cor"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"Index"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.cor<br>    <br>    cor.p<span class="hljs-operator">$</span>p <span class="hljs-operator">%&gt;%</span> <br>      as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"p"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"Index"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df.cor<span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>Index<span class="hljs-punctuation">,</span> cor<span class="hljs-punctuation">,</span> p<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>cor<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> cor.value.abs<span class="hljs-punctuation">,</span> p <span class="hljs-operator">&lt;</span> cor.pvalue<span class="hljs-punctuation">)</span><span class="hljs-operator">-&gt;</span> df.cor.p<br>    <br>    <span class="hljs-comment"># Intersection</span><br>    intersect<span class="hljs-punctuation">(</span>df.vip<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">,</span> df.log2FC<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      intersect<span class="hljs-punctuation">(</span>df.wilcox<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      intersect<span class="hljs-punctuation">(</span>df.deseq2<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      intersect<span class="hljs-punctuation">(</span>df.cor.p<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.intersection.1<br>  <span class="hljs-punctuation">}</span><span class="hljs-keyword">else</span><span class="hljs-punctuation">{</span><br>    df.cor.p <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br>    <span class="hljs-comment"># Intersection</span><br>    intersect<span class="hljs-punctuation">(</span>df.vip<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">,</span> df.log2FC<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      intersect<span class="hljs-punctuation">(</span>df.wilcox<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      intersect<span class="hljs-punctuation">(</span>df.deseq2<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.intersection.1<br>  <span class="hljs-punctuation">}</span><br>  <br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>use.lm<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-comment"># lm</span><br>    metabolites.table <span class="hljs-operator">%&gt;%</span> <br>      tidyr<span class="hljs-operator">::</span>pivot_longer<span class="hljs-punctuation">(</span>cols <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>phenotype.table<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.tmp<br>    <br>    all.lm <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br>    <br>    <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df.tmp<span class="hljs-operator">$</span>name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      df.tmp <span class="hljs-operator">%&gt;%</span> <br>        dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>name <span class="hljs-operator">==</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.tmp.2<br>      <br>      lm<span class="hljs-punctuation">(</span>value <span class="hljs-operator">~</span> phenotype<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df.tmp.2<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> fit<br>    <span class="hljs-punctuation">}</span><br>    <br>    data.frame<span class="hljs-punctuation">(</span>R2 <span class="hljs-operator">=</span> summary<span class="hljs-punctuation">(</span>fit<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>adj.r.squared <span class="hljs-operator">%&gt;%</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               p.model <span class="hljs-operator">=</span> anova<span class="hljs-punctuation">(</span>fit<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>`Pr(&gt;F)`<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>Index <span class="hljs-operator">=</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>Index<span class="hljs-punctuation">,</span> R2<span class="hljs-punctuation">,</span> p.model<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>all.lm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.lm <br>    <br>    all.lm <span class="hljs-operator">%&gt;%</span> <br>      dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>R2 <span class="hljs-operator">&gt;</span> lm.R2<span class="hljs-punctuation">,</span> p.model <span class="hljs-operator">&lt;</span> lm.pvalue<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.lm<br>    <br>    intersect<span class="hljs-punctuation">(</span>df.intersection.1<span class="hljs-punctuation">,</span> df.lm<span class="hljs-operator">$</span>Index<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.intersection.2<br>  <span class="hljs-punctuation">}</span><span class="hljs-keyword">else</span><span class="hljs-punctuation">{</span><br>    df.lm <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br>    df.intersection.1 <span class="hljs-operator">-&gt;</span> df.intersection.2<br>  <span class="hljs-punctuation">}</span><br>  <br>  <span class="hljs-comment"># # Intersection</span><br>  <span class="hljs-comment"># intersect(df.vip$Index, df.log2FC$Index) %&gt;% </span><br>  <span class="hljs-comment">#   intersect(df.wilcox$Index) %&gt;% </span><br>  <span class="hljs-comment">#   intersect(df.deseq2$Index) %&gt;% </span><br>  <span class="hljs-comment">#   intersect(df.cor.p$Index) %&gt;% </span><br>  <span class="hljs-comment">#   intersect(df.lm$Index) -&gt; df.intersection</span><br>  <span class="hljs-comment"># </span><br>  <span class="hljs-comment"># 返回结果</span><br>  reture.list <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>OPLS.DA <span class="hljs-operator">=</span> df.vip<span class="hljs-punctuation">,</span><br>                     log2FC <span class="hljs-operator">=</span> df.log2FC<span class="hljs-punctuation">,</span><br>                     Wilcox <span class="hljs-operator">=</span> df.wilcox<span class="hljs-punctuation">,</span><br>                     DESeq2 <span class="hljs-operator">=</span> df.deseq2<span class="hljs-punctuation">,</span><br>                     cor <span class="hljs-operator">=</span> df.cor.p<span class="hljs-punctuation">,</span><br>                     lm <span class="hljs-operator">=</span> df.lm<span class="hljs-punctuation">,</span><br>                     intersection <span class="hljs-operator">=</span> df.intersection.2<br>                     <span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>reture.list<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JASPAR爬取Class信息</title>
      <link href="/article/jaspar/"/>
      <url>/article/jaspar/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br>file_out = <span class="hljs-built_in">open</span>(<span class="hljs-string">"D:/群晖NAS/Desktop/MEME网站结果/JASPAR.爬虫结果.txt"</span>, <span class="hljs-string">"w"</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"D:/群晖NAS/Desktop/MEME网站结果/JASPAR.id.txt"</span>, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> file_id:<br>    lines = file_id.readlines()<br><br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>        <span class="hljs-comment"># 指定要爬取的网址</span><br>        url = <span class="hljs-string">'https://jaspar.elixir.no/matrix/'</span> + line.replace(<span class="hljs-string">"\n"</span>, <span class="hljs-string">""</span>)  + <span class="hljs-string">'/'</span><br><br>        <span class="hljs-built_in">print</span>(url)<br><br>        <span class="hljs-comment"># 发送 GET 请求并获取网页内容</span><br>        response = requests.get(url)<br><br>        soup = BeautifulSoup(response.text, <span class="hljs-string">'html.parser'</span>)<br><br>        profile = soup.find(<span class="hljs-string">'table'</span>, class_=<span class="hljs-string">'table table-hover'</span>)<br><br>        tr_tags = profile.find_all(<span class="hljs-string">"tr"</span>)<br><br>        class_txt = tr_tags[<span class="hljs-number">2</span>].find_all(<span class="hljs-string">'td'</span>)[<span class="hljs-number">1</span>].get_text()<br><br>        file_out.write(line.replace(<span class="hljs-string">"\n"</span>, <span class="hljs-string">""</span>) + <span class="hljs-string">"\t"</span> + class_txt + <span class="hljs-string">"\n"</span>)<br><br>file_out.close()<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rstudio-Server安装igraph报错解决</title>
      <link href="/article/rstudioerror/"/>
      <url>/article/rstudioerror/</url>
      
        <content type="html"><![CDATA[<p>加载<code>igraph</code>时报错：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">错误<span class="hljs-operator">:</span> package or namespace load failed <span class="hljs-keyword">for</span> ‘phyloseq’ <span class="hljs-keyword">in</span> dyn.load<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> DLLpath <span class="hljs-operator">=</span> DLLpath<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br> 无法载入共享目标对象‘<span class="hljs-operator">/</span>usr<span class="hljs-operator">/</span>local<span class="hljs-operator">/</span>lib<span class="hljs-operator">/</span>R<span class="hljs-operator">/</span>site<span class="hljs-operator">-</span>library<span class="hljs-operator">/</span>igraph<span class="hljs-operator">/</span>libs<span class="hljs-operator">/</span>igraph.so’：<span class="hljs-operator">:</span><br>  libglpk.so.40<span class="hljs-operator">:</span> 无法打开共享对象文件<span class="hljs-operator">:</span> 没有那个文件或目录<br></code></pre></td></tr></tbody></table></figure><p>还好我有管理员权限（很害怕这样操作的……）：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install libglpk40<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>混合效应模型学习笔记</title>
      <link href="/article/mixefflearning/"/>
      <url>/article/mixefflearning/</url>
      
        <content type="html"><![CDATA[<h2 id="线性回归模型的局限性"><a href="#线性回归模型的局限性" class="headerlink" title="线性回归模型的局限性"></a>线性回归模型的局限性</h2><h3 id="正态性判断"><a href="#正态性判断" class="headerlink" title="正态性判断"></a>正态性判断</h3><p>不依赖于直方图，而是构建一个模型，看模型的残差。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微生物组VSEARCH学习笔记</title>
      <link href="/article/vsearch/"/>
      <url>/article/vsearch/</url>
      
        <content type="html"><![CDATA[<h2 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h2><blockquote><p><a href="https://peerj.com/articles/2584/#fig-7">Rognes T, Flouri T, Nichols B, et al. VSEARCH: a versatile open source tool for metagenomics[J]. PeerJ, 2016, 4: e2584.</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接使用<code>mamba</code>安装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba install bioconda::vsearch<br></code></pre></td></tr></tbody></table></figure><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>常规的扩增子流程：</p><blockquote><p>序列双端合并；去除两端接头，Fastqc 质量检测；序列去重复；嵌合体检测；OTU 聚类；分类信息注释等步骤。</p></blockquote><h3 id="合并数据"><a href="#合并数据" class="headerlink" title="合并数据"></a>合并数据</h3><p>将双末端数据合并为一个,对<code>bash</code>批处理不是很熟悉，我选择使用<code>R</code>时长批量处理代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs r">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>dir<span class="hljs-punctuation">(</span><span class="hljs-string">"./01.data/"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as_data_frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"file"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>sample <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">".338"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df<br><br>comm <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> unique<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  f.file <span class="hljs-operator">=</span> sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"./01.data/%s.338F_806R.R1.clean.fastq"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span><br>  r.file <span class="hljs-operator">=</span> sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"./01.data/%s.338F_806R.R2.clean.fastq"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span><br>  out.file <span class="hljs-operator">=</span> sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"./02.merge/%s.merged.fq"</span><span class="hljs-punctuation">,</span>i<span class="hljs-punctuation">)</span><br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"vsearch --threads 60 --fastq_mergepairs %s --reverse %s --fastqout %s --relabel %s-"</span><span class="hljs-punctuation">,</span> f.file<span class="hljs-punctuation">,</span> r.file<span class="hljs-punctuation">,</span> out.file<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as_data_frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>bind_rows<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br><span class="hljs-punctuation">}</span><br><br>comm <span class="hljs-operator">%&gt;%</span><br>  write.table<span class="hljs-punctuation">(</span><span class="hljs-string">"./00.code/01.vsearch.merge.sh"</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure><p>生成的批处理代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_6.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_6.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXZR_6.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXZR_6<br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_5.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_5.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXZR_5.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXZR_5<br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_4.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_4.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXZR_4.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXZR_4<br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_3.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_3.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXZR_3.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXZR_3<br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_2.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_2.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXZR_2.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXZR_2<br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_1.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXZR_1.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXZR_1.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXZR_1<br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>threads <span class="hljs-number">60</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_mergepairs .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXXG_6.338F_806R.R1.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>reverse .<span class="hljs-operator">/</span><span class="hljs-number">01.</span>data<span class="hljs-operator">/</span>LXXG_6.338F_806R.R2.clean.fastq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout .<span class="hljs-operator">/</span><span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>LXXG_6.merged.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>relabel LXXG_6<br></code></pre></td></tr></tbody></table></figure><h3 id="切除引物接头"><a href="#切除引物接头" class="headerlink" title="切除引物接头"></a>切除引物接头</h3><p>由于我用<code>fastp</code>质控过数据，就省略了这一步。参考的代码是：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">cat <span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span><span class="hljs-operator">*</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>all.fq<br><br>time vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastx_filter temp<span class="hljs-operator">/</span>all.fq <span class="hljs-punctuation">\</span><br>  <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_stripleft <span class="hljs-number">29</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_stripright <span class="hljs-number">18</span> <span class="hljs-punctuation">\</span><br>  <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastqout temp<span class="hljs-operator">/</span>stripped.fq <span class="hljs-comment"># 34s</span><br></code></pre></td></tr></tbody></table></figure><h3 id="质控"><a href="#质控" class="headerlink" title="质控"></a>质控</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># cat 02.merge/* &gt; 02.merge/all.fq</span><br>vsearch <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastx_filter <span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>all.fq <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastq_maxee_rate <span class="hljs-number">0.01</span> <span class="hljs-operator">-</span><span class="hljs-operator">-</span>fastaout <span class="hljs-number">02.</span>merge<span class="hljs-operator">/</span>all.filtered.fq<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">vsearch v2.27.0_linux_x86_64<span class="hljs-punctuation">,</span> <span class="hljs-number">503.3</span>GB RAM<span class="hljs-punctuation">,</span> <span class="hljs-number">80</span> cores<br>https<span class="hljs-operator">:</span><span class="hljs-operator">/</span><span class="hljs-operator">/</span>github.com<span class="hljs-operator">/</span>torognes<span class="hljs-operator">/</span>vsearch<br><br>Reading input file <span class="hljs-number">100</span>%  <br><span class="hljs-number">6566012</span> sequences kept <span class="hljs-punctuation">(</span>of which <span class="hljs-number">0</span> truncated<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">66629</span> sequences discarded.<br></code></pre></td></tr></tbody></table></figure><p>102个样品，5.9G数据质控后还有3.0G.</p><h3 id="去冗余"><a href="#去冗余" class="headerlink" title="去冗余"></a>去冗余</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch --derep_fulllength 02.merge/all.filtered.fq --sizeout --minuniquesize 8 --output 02.merge/unique.fa<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch v2.27.0_linux_x86_64, 503.3GB RAM, 80 cores<br>https://github.com/torognes/vsearch<br><br>Dereplicating file 02.merge/all.filtered.fq 100%  <br>3053614330 nt <span class="hljs-keyword">in</span> 6566009 seqs, min 32, max 578, avg 465<br>minseqlength 32: 3 sequences discarded.<br>Sorting 100%<br>4570066 unique sequences, avg cluster 1.4, median 1, max 897<br>Writing FASTA output file 100% <br>30033 uniques written, 4540033 clusters discarded (99.3%)<br></code></pre></td></tr></tbody></table></figure><h3 id="生成OTU"><a href="#生成OTU" class="headerlink" title="生成OTU"></a>生成OTU</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch --cluster_fast 02.merge/unique.fa --<span class="hljs-built_in">id</span> 0.97 --centroids 04.otu/otus.fa --relabel OTU_<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch v2.27.0_linux_x86_64, 503.3GB RAM, 80 cores<br>https://github.com/torognes/vsearch<br><br>Reading file 02.merge/unique.fa 100%  <br>13862140 nt <span class="hljs-keyword">in</span> 30033 seqs, min 141, max 500, avg 462<br>Masking 100% <br>Sorting by length 100%<br>Counting k-mers 100% <br>Clustering 100%  <br>Sorting clusters 100%<br>Writing clusters 100% <br>Clusters: 1025 Size min 1, max 856, avg 29.3<br>Singletons: 318, 1.1% of seqs, 31.0% of clusters<br></code></pre></td></tr></tbody></table></figure><p>细菌可以使用Usearch作者整理的RDP Gold数据库去除嵌合体：</p><p>下载：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget http://drive5.com/uchime/rdp_gold.fa<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch --uchime_ref 04.otu/otus.fa --db rdp_gold.fa --nonchimeras 04.otu/otus.nochimer.fa<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch v2.27.0_linux_x86_64, 503.3GB RAM, 80 cores<br>https://github.com/torognes/vsearch<br><br>Reading file rdp_gold.fa 100%  <br>29007378 nt <span class="hljs-keyword">in</span> 20098 seqs, min 320, max 2210, avg 1443<br>Masking 100% <br>Counting k-mers 100% <br>Creating k-mer index 100% <br>Detecting chimeras 100%  <br>Found 31 (3.0%) chimeras, 992 (96.8%) non-chimeras,<br>and 2 (0.2%) borderline sequences <span class="hljs-keyword">in</span> 1025 unique sequences.<br>Taking abundance information into account, this corresponds to<br>31 (3.0%) chimeras, 992 (96.8%) non-chimeras,<br>and 2 (0.2%) borderline sequences <span class="hljs-keyword">in</span> 1025 total sequences.<br></code></pre></td></tr></tbody></table></figure><h3 id="生成OTU表"><a href="#生成OTU表" class="headerlink" title="生成OTU表"></a>生成OTU表</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch --usearch_global 02.merge/all.filtered.fq --db 04.otu/otus.nochimer.fa --<span class="hljs-built_in">id</span> 0.97 --otutabout 04.otu/bacteria.otu.abun.txt --threads 60<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch v2.27.0_linux_x86_64, 503.3GB RAM, 80 cores<br>https://github.com/torognes/vsearch<br><br>Reading file 04.otu/otus.nochimer.fa 100%  <br>460361 nt <span class="hljs-keyword">in</span> 992 seqs, min 141, max 500, avg 464<br>Masking 100% <br>Counting k-mers 100% <br>Creating k-mer index 100% <br>Searching 100%  <br>Matching unique query sequences: 2383628 of 6566012 (36.30%)<br>Writing OTU table (classic) 100% <br></code></pre></td></tr></tbody></table></figure><h3 id="OTU注释"><a href="#OTU注释" class="headerlink" title="OTU注释"></a>OTU注释</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vsearch --sintax 04.otu/otus.nochimer.fa -db silva_16s_v123.fa --sintax_cutoff 0.1 --tabbedout 04.otu/bacteria.otu.tax.txt --threads 60<br></code></pre></td></tr></tbody></table></figure><h2 id="所有代码"><a href="#所有代码" class="headerlink" title="所有代码"></a>所有代码</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">vsearch --fastx_filter 02.merge/all.fq --fastq_maxee_rate 0.01 --fastaout 02.merge/all.filtered.fq<br>vsearch --derep_fulllength 02.merge/all.filtered.fq --sizeout --minuniquesize 4 --output 02.merge/unique.fa<br>vsearch --cluster_fast 02.merge/unique.fa --<span class="hljs-built_in">id</span> 0.97 --centroids 04.otu/otus.fa --relabel OTU_<br>vsearch --uchime_ref 04.otu/otus.fa --db rdp_gold.fa --nonchimeras 04.otu/otus.nochimer.fa<br>vsearch --usearch_global 02.merge/all.filtered.fq --db 04.otu/otus.nochimer.fa --<span class="hljs-built_in">id</span> 0.97 --otutabout 04.otu/bacteria.otu.abun.txt --threads 60<br>vsearch --sintax 04.otu/otus.nochimer.fa -db silva_16s_v123.fa --sintax_cutoff 0.1 --tabbedout 04.otu/bacteria.otu.tax.txt --threads 60<br></code></pre></td></tr></tbody></table></figure><h2 id="真菌参数"><a href="#真菌参数" class="headerlink" title="真菌参数"></a>真菌参数</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">vsearch --fastx_filter 02.merge/all.fq --fastq_maxee_rate 0.01 --fastaout 02.merge/all.filtered.fq<br>vsearch --derep_fulllength 02.merge/all.filtered.fq --sizeout --minuniquesize 4 --output 02.merge/unique.fa<br>vsearch --cluster_fast 02.merge/unique.fa --<span class="hljs-built_in">id</span> 0.97 --centroids 04.otu/otus.fa --relabel OTU_<br>vsearch --uchime_ref 04.otu/otus.fa --db rdp_gold.fa --nonchimeras 04.otu/fungi.otus.nochimer.fa<br>vsearch --usearch_global 02.merge/all.filtered.fq --db 04.otu/fungi.otus.nochimer.fa --<span class="hljs-built_in">id</span> 0.97 --otutabout 04.otu/fungi.otu.abun.txt --threads 60<br>vsearch --sintax 04.otu/fungi.otus.nochimer.fa -db fungi.unite.9.0.fa --sintax_cutoff 0.1 --tabbedout 04.otu/fungi.otu.tax.txt --threads 60<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TASSEL进行GWAS分析</title>
      <link href="/article/tasselgwas/"/>
      <url>/article/tasselgwas/</url>
      
        <content type="html"><![CDATA[<p>一开始折腾的是GAPIT，可是老是报错，实在是没办法了，就折腾TASSEL.</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://academic.oup.com/bioinformatics/article-abstract/23/19/2633/185151">Bradbury P J, Zhang Z, Kroon D E, et al. TASSEL: software for association mapping of complex traits in diverse samples[J]. Bioinformatics, 2007, 23(19): 2633-2635.</a></p></blockquote><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>直接从<a href="https://tassel.bitbucket.io/">https://tassel.bitbucket.io/</a>下载安装即可。</p><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><h3 id="基因型文件"><a href="#基因型文件" class="headerlink" title="基因型文件"></a>基因型文件</h3><p>一开始准备了各种文件，但是一直报错，索性就直接用VCF文件了：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041354350.png" alt="image-20240104135444715"></p><h3 id="表型文件"><a href="#表型文件" class="headerlink" title="表型文件"></a>表型文件</h3><p>表型文件前面需要加上<code>&lt;Trait&gt;</code>，第二列就是表型名称。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041355106.png" alt="image-20240104135530587"></p><h2 id="导入文件"><a href="#导入文件" class="headerlink" title="导入文件"></a>导入文件</h2><p>选择这个模式就会自动识别数据类型。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041357481.png" alt="image-20240104135720088"></p><p>基因型文件长这样：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041358812.png" alt="image-20240104135816522"></p><p>表型文件长这样：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041358761.png" alt="image-20240104135853884"></p><p>同时选中基因型文件和表型文件，选择<code>Data</code>中的数据合并就能将两个数据合并为一个：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041401404.png" alt="image-20240104140108733"></p><h2 id="GLM"><a href="#GLM" class="headerlink" title="GLM"></a>GLM</h2><p>选择上一步中合并得到的文件，选择<code>Analysis</code>中的<code>GLM</code>就能使用<code>GLM</code>进行GWAS分析。选中得到的结果文件，选择<code>Results</code>中的Q-Q图和曼哈顿图就能得到这两个图形：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041403573.png" alt="image-20240104140328617"></p><h2 id="MLM"><a href="#MLM" class="headerlink" title="MLM"></a>MLM</h2><p>在使用MLM之前需要先构建<code>Kinship</code>，选中基因型文件，再选择<code>Analysis</code>中的<code>Kinship</code>就能得到<code>Kinship</code>. </p><p><img src="C:\Users\lixia\AppData\Roaming\Typora\typora-user-images\image-20240104140509292.png" alt="image-20240104140509292"></p><p>选中之前合并的基因型文件和表型文件，再选中生成的<code>Kinship</code>矩阵就能使用<code>MLM</code>进行GWAS分析了：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202401041407344.png" alt="image-20240104140723883"></p><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p>得到结果表格后就可以使用<code>ggplot2</code>对数据进行可视化了。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2绘制GWAS曼哈顿图</title>
      <link href="/article/manhattan/"/>
      <url>/article/manhattan/</url>
      
        <content type="html"><![CDATA[<p>数据长这样：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">chr01;25000.0;1.8163221360895787<br>chr01;75000.0;2.1779931093884595<br>chr01;125000.0;7.688242894056851<br>chr01;175000.0;6.450387596899228<br>chr01;225000.0;7.576356589147288<br>chr01;275000.0;4.8746339362618425<br></code></pre></td></tr></tbody></table></figure><p>代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 的一个文件</span><br>readr<span class="hljs-operator">::</span>read_delim<span class="hljs-punctuation">(</span><span class="hljs-string">"./pi-per-site-acuce_windows-50000.csv"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"chr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"pos"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"pi"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>chr <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">,</span> <span class="hljs-string">"chr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                snp <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">,</span> pos<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-&gt;</span> df.pi<br><br>df.pi <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">,</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  <span class="hljs-comment"># dplyr::filter(!duplicated(temp)) %&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>chr.len <span class="hljs-operator">=</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>pos<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span>  <span class="hljs-comment"># 染色体长度</span><br>  dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>total <span class="hljs-operator">=</span> <span class="hljs-built_in">cumsum</span><span class="hljs-punctuation">(</span>chr.len<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> chr.len<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span>  <span class="hljs-comment"># 每条染色体起始位置</span><br>  dplyr<span class="hljs-operator">::</span>arrange<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">,</span> pos<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>cum <span class="hljs-operator">=</span> pos <span class="hljs-operator">+</span> total<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>new.pi <span class="hljs-operator">=</span> <span class="hljs-operator">-</span>log2<span class="hljs-punctuation">(</span><span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>rs <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">,</span> pos<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>chr <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">,</span> <span class="hljs-string">"chr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-&gt;</span> df<br><br>df <span class="hljs-operator">%&gt;%</span><br>  group_by<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  summarize<span class="hljs-punctuation">(</span>center<span class="hljs-operator">=</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>cum<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>cum<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> X_axis<br><br>df <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>cum<span class="hljs-punctuation">,</span> <span class="hljs-built_in">pi</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_jitter<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> as.factor<span class="hljs-punctuation">(</span>chr<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"Chromosome"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"π"</span><span class="hljs-punctuation">,</span> title <span class="hljs-operator">=</span> <span class="hljs-string">"pi-per-site-acuce_windows-50000"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#00A087FF"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#3C5488FF"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_continuous<span class="hljs-punctuation">(</span> label <span class="hljs-operator">=</span> X_axis<span class="hljs-operator">$</span>chr<span class="hljs-punctuation">,</span> breaks<span class="hljs-operator">=</span> X_axis<span class="hljs-operator">$</span>center<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">250</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">250</span><span class="hljs-punctuation">,</span><span class="hljs-number">50</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme_cn<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"none"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> p.3a.1<br></code></pre></td></tr></tbody></table></figure><p>图：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202312211916316.png" alt="image-20231221191649833"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录安装Mambaforge遇到的坑</title>
      <link href="/article/mambaerror/"/>
      <url>/article/mambaerror/</url>
      
        <content type="html"><![CDATA[<p>我安装的是<code>zsh</code>，安装<code>Mambaforge</code>的时候始终无法使用，运行<code>mamba init</code>显示下面的内容：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">no change     /home/lixiang/mambaforge/condabin/conda<br>no change     /home/lixiang/mambaforge/bin/conda<br>no change     /home/lixiang/mambaforge/bin/conda-env<br>no change     /home/lixiang/mambaforge/bin/activate<br>no change     /home/lixiang/mambaforge/bin/deactivate<br>no change     /home/lixiang/mambaforge/etc/profile.d/conda.sh<br>no change     /home/lixiang/mambaforge/etc/fish/conf.d/conda.fish<br>no change     /home/lixiang/mambaforge/shell/condabin/Conda.psm1<br>no change     /home/lixiang/mambaforge/shell/condabin/conda-hook.ps1<br>no change     /home/lixiang/mambaforge/lib/python3.10/site-packages/xontrib/conda.xsh<br>no change     /home/lixiang/mambaforge/etc/profile.d/conda.csh<br>modified      /home/lixiang/.bashrc<br><br>==&gt; For changes to take effect, close and re-open your current shell. &lt;==<br><br>Added mamba to /home/lixiang/.bashrc<br><br>==&gt; For changes to take effect, close and re-open your current shell. &lt;==<br></code></pre></td></tr></tbody></table></figure><p>折腾了好久，终于找到解决方法了。把<code>.bashrc</code>中下面的内容 复制粘贴到<code>.zshrc</code>就可以了。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br><span class="hljs-comment"># !! Contents within this block are managed by 'conda init' !!</span><br>__conda_setup=<span class="hljs-string">"<span class="hljs-subst">$('/home/lixiang/mambaforge/bin/conda' 'shell.bash' 'hook' 2&gt; /dev/null)</span>"</span><br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">eval</span> <span class="hljs-string">"<span class="hljs-variable">$__conda_setup</span>"</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">"/home/lixiang/mambaforge/etc/profile.d/conda.sh"</span> ]; <span class="hljs-keyword">then</span><br>        . <span class="hljs-string">"/home/lixiang/mambaforge/etc/profile.d/conda.sh"</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">export</span> PATH=<span class="hljs-string">"/home/lixiang/mambaforge/bin:<span class="hljs-variable">$PATH</span>"</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">unset</span> __conda_setup<br><br><span class="hljs-keyword">if</span> [ -f <span class="hljs-string">"/home/lixiang/mambaforge/etc/profile.d/mamba.sh"</span> ]; <span class="hljs-keyword">then</span><br>    . <span class="hljs-string">"/home/lixiang/mambaforge/etc/profile.d/mamba.sh"</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br><span class="hljs-comment"># conda </span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blossom配置</title>
      <link href="/article/blossom/"/>
      <url>/article/blossom/</url>
      
        <content type="html"><![CDATA[<p>准备在NAS上折腾的，各种端口开放不方便，直接就用腾讯云服务器折腾吧。。。。。。</p><h2 id="安装并运行数据库"><a href="#安装并运行数据库" class="headerlink" title="安装并运行数据库"></a>安装并运行数据库</h2><p>安装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker pull mysql:8.0.31<br></code></pre></td></tr></tbody></table></figure><p>运行：</p><ul><li>官方模板</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run \<br>-d \<br>--name mysql \<br><span class="hljs-comment">#【可选修改】数据库 root 用户的密码 </span><br>-e MYSQL_ROOT_PASSWORD=jasmine888 \<br>-p 3306:3306 \<br><span class="hljs-comment">#【需修改】挂载数据库文件保存路径。 </span><br><span class="hljs-comment"># 注意：只需要将冒号前的路径改为你 Docker 所在设备的某个路径，不要修改冒号后面的内容。 </span><br>-v /usr/local/docker/mysql/data:/var/lib/mysql \<br>-v /usr/local/docker/mysql-files/log:/var/lib/mysql-files \<br>-v /usr/local/docker/mysql/log:/var/log/mysql \<br>mysql:8.0.31<br></code></pre></td></tr></tbody></table></figure><ul><li>我的版本</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run \<br>-d \<br>--name mysql \<br>-e MYSQL_ROOT_PASSWORD=123456789 \<br>-p 3306:3306 \<br>-v /home/user/mysql/data:/var/lib/mysql \<br>-v /home/user/mysql/mysql-files/log:/var/lib/mysql-files \<br>-v /home/user/mysql/log:/var/log/mysql \<br>mysql:8.0.31<br></code></pre></td></tr></tbody></table></figure><p>创建数据库：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker <span class="hljs-built_in">exec</span> -it mysql /bin/bash<br>mysql -uroot -p123456789 <span class="hljs-comment"># -p后面是root的密码</span><br>CREATE DATABASE `blossom` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;<br></code></pre></td></tr></tbody></table></figure><h2 id="配置blossom"><a href="#配置blossom" class="headerlink" title="配置blossom"></a>配置blossom</h2><p>拉取镜像：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker pull jasminexzzz/blossom:latest<br></code></pre></td></tr></tbody></table></figure><p>启动容器：</p><ul><li>官方模板：</li></ul><figure class="highlight livescript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs livescript">docker run -d <span class="hljs-string">\</span><br>  <span class="hljs-comment"># 容器名称</span><br>  --name blossom-backend <span class="hljs-string">\</span><br>  <span class="hljs-comment"># 指定端口映射</span><br>  -p <span class="hljs-number">9999</span>:<span class="hljs-number">9999</span> <span class="hljs-string">\</span><br>  <span class="hljs-comment">#【需修改】挂载图片保存路径，如果是 windows 环境，可以使用 /c/home/bl/ 来指定磁盘 </span><br>  <span class="hljs-comment"># 注意：只需要将冒号前的路径改为你 Docker 所在设备的某个路径，不要修改冒号后面的内容。 </span><br>  -v <span class="hljs-regexp">/home/bl/</span>:<span class="hljs-regexp">/home/bl/</span> <span class="hljs-string">\</span><br>  <span class="hljs-comment"># 启动的镜像名称</span><br>  jasminexzzz/blossom:latest <span class="hljs-string">\</span><br>  <span class="hljs-comment">#【需修改】配置图片上传后对应生成的访问URL，需要以/pic/结尾。注意，该访问URL需要与访问后台的域名和端口相同 </span><br>  --project.iaas.blos.domain=<span class="hljs-string">"http://127.0.0.1:9999/pic/"</span> <span class="hljs-string">\</span><br>  <span class="hljs-comment"># 配置图片保存的磁盘路径，请使用 -v 将该路径挂载为本地路径，如上方示例</span><br>  --project.iaas.blos.<span class="hljs-keyword">default</span>-path=<span class="hljs-string">"/home/bl/img/"</span> <span class="hljs-string">\</span><br>  <span class="hljs-comment">#【需修改】配置数据库访问地址</span><br>  --spring.datasource.url=<span class="hljs-string">"jdbc:mysql://192.168.31.99:3306/blossom?useUnicode=true&amp;characterEncoding=utf-8&amp;allowPublicKeyRetrieval=true&amp;allowMultiQueries=true&amp;useSSL=false&amp;&amp;serverTimezone=GMT%2B8"</span> <span class="hljs-string">\</span><br>  <span class="hljs-comment">#【可选修改】配置数据库用户名</span><br>  --spring.datasource.username=root <span class="hljs-string">\</span><br>  <span class="hljs-comment">#【可选修改】配置数据库密码</span><br>  --spring.datasource.password=jasmine888<br></code></pre></td></tr></tbody></table></figure><ul><li>我的版本</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -d --name blossom.231210 -p 9999:9999 -v /home/user/blossom/bl/:/home/bl/ jasminexzzz/blossom:latest --project.iaas.blos.domain=<span class="hljs-string">"http://127.0.0.1:9999/pic/"</span>  --project.iaas.blos.default-path=<span class="hljs-string">"/home/bl/img/"</span> --spring.datasource.url=<span class="hljs-string">"jdbc:mysql://IP地址:3306/blossom?useUnicode=true&amp;characterEncoding=utf-8&amp;allowPublicKeyRetrieval=true&amp;allowMultiQueries=true&amp;useSSL=false&amp;&amp;serverTimezone=GMT%2B8"</span> --spring.datasource.username=root --spring.datasource.password=123466789<br></code></pre></td></tr></tbody></table></figure><h3 id="NAS同步数据库"><a href="#NAS同步数据库" class="headerlink" title="NAS同步数据库"></a>NAS同步数据库</h3><p>参考<a href="https://www.freedidi.com/10566.html">如何把网站和重要数据定时自动备份到 Nas 群晖上？</a>把MySQL备份到NAS上。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次Docker使用的坑</title>
      <link href="/article/dockererror/"/>
      <url>/article/dockererror/</url>
      
        <content type="html"><![CDATA[<p>最近在使用谷歌的<code>DeepVariant</code>处理三代数据，然后发现某个文件系统爆满了。。。。。。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">/dev/sda2       439G   439G  0G    0% /<br></code></pre></td></tr></tbody></table></figure><p>然后我就发现Rstudio Server无法使用了（<a href="https://www.web4xiang.com/blog/article/rstudioservererror/">点击跳转</a>），我以为是Rstudio Server出问题了，没多想。晚上的时候我想创建个<code>conda</code>环境，遇到报错说无法写入磁盘，磁盘空间已满。奇了怪了，我的<code>conda</code>是安装在家目录下的，按理说不应该啊。那就只能排查这个文件系统了，一个一个排查我发现<code>/var/lib/docker</code>这个目录居然有428G，那应该就是它的问题了。同时，我放在后台的<code>docker</code>程序也报错了：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker: Error response from daemon: symlink ../83015c017c4cbeca7cbaf3248462fd13528f81549c038e88c26ec76507e77c5c-init/diff /var/lib/docker/overlay2/l/TD4TFUUO33QMTKMIODMQWLAJE4: no space left on device.<br>See <span class="hljs-string">'docker run --help'</span>.<br>docker: Error response from daemon: symlink ../5433420e38c356b530dda7918881973db38bb75628c30e7705e6f3d8eca2cd56-init/diff /var/lib/docker/overlay2/l/KD57PX56I2UU6VYEXXDTTUZ574: no space left on device.<br>See <span class="hljs-string">'docker run --help'</span>.<br>docker: Error response from daemon: symlink ../c9467a5a794bd582ec479484962214ef5b1d68b3ca1db78e4db2ee4234df9b3e-init/diff /var/lib/docker/overlay2/l/5VQY4MJCHU5OSCQPLUUFU2RU6A: no space left on device.<br>See <span class="hljs-string">'docker run --help'</span>.<br></code></pre></td></tr></tbody></table></figure><p><code>no space left on device</code>提示我没有磁盘空间了。OK，就是<code>docker</code>的锅了。</p><hr><p>我原来的代码没有把运行完的<code>docker</code>容器删除掉，每个容器都在后台运行，就导致这样。把后台已经运行完的容器删除就好了：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker container prune<br></code></pre></td></tr></tbody></table></figure><p>居然释放出来那么多空间：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">4e484d315349990e9d9e7f1af1bd73fab8b71c4bcb07385adce56df9c40c6fdb<br>2a6418adfb0a4d80c6b1a4efcf7a28bc533bd68f4bc87f8bccf6a5ebea2ccb63<br>52bbb6fb5e4c5f7032329a5fc12c3b2cf987880d6de0145781a399ab340a8085<br>8cb62d49ec1de2d6add8bb84308b1b886eb22871bc60562f4e611ae1f941ed73<br>49360b64b5fed645556812abbe497d3447032471a8f398dc4939a895e17dfc3b<br>fc1c04824659a1486ef78bb6c48eeff4f7ef256164efbd1a548cff67b6961d40<br>260db0bfffcd5952191ab62d33fad991be06bcc9d9f3d46bd7ce396bf6d56572<br>6918be1fb05fba1d60c8be35ff89f62a8093d013d58e9aae4cebe1e008e389ec<br>e88d0c5f0622f0cee1880d2ec4aa281664d1a2dbd3627c77a9fe6c4606084f4e<br>92dfe46e3d82704b68e34be8cbabd52c46a1694954106bdc6ed3d03a99570b9e<br>8afbcaad109db4472967c82cee7b1d9b9fbb07f4a487e89e63fa7fcc020c1b8c<br>2f56fce34cd5b9499eee8ddecc4532ed9f08d5ef86d868993fe2158e3a0d4edf<br><br>Total reclaimed space: 441.3GB<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RstudioServer报错解决</title>
      <link href="/article/rstudioservererror/"/>
      <url>/article/rstudioservererror/</url>
      
        <content type="html"><![CDATA[<p>突然的报错。。。。。。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311111738324.png" alt="image-20231111173827973"></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">👉👉👉➡️  <span class="hljs-built_in">df</span> -hl /tmp<br>文件系统        容量  已用  可用 已用% 挂载点<br>/dev/sda2       439G  426G     0  100% /<br></code></pre></td></tr></tbody></table></figure><p>原来是这个系统盘爆满了，系统在上面，也不敢随便删文件。</p><p>检索一番，找到解决方法：在自己的家目录下创建<code>.Renviron</code>这个文件，输入下面的内容：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">TMP=/home/username/temp<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>崩溃的一天-配置Minigraph-Cactus</title>
      <link href="/article/minigraph-cactus/"/>
      <url>/article/minigraph-cactus/</url>
      
        <content type="html"><![CDATA[<p>看到这篇文章：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311021005647.png" alt="image-20231102100555416"></p><p>参考文献：</p><blockquote><p><a href="https://www.nature.com/articles/s41587-023-01793-w">Hickey G, Monlong J, Ebler J, et al. Pangenome graph construction from genome alignments with Minigraph-Cactus[J]. Nature Biotechnology, 2023: 1-11.</a></p></blockquote><p>官方推荐使用docker安装，可是真的不想在实验室服务器上安装docker，conda上也是很久的包了，没有最新的。实验室服务器能不手动编译最好，那就在个人云服务器上线编译好再下载上传到实验室服务器。</p><p>直接手动编译：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/ComparativeGenomicsToolkit/cactus.git --recursive<br></code></pre></td></tr></tbody></table></figure><p>安装依赖：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">python3 -m pip install virtualenv<br><span class="hljs-built_in">cd</span> cactus<br>virtualenv -p python3 cactus_env<br><span class="hljs-built_in">echo</span> <span class="hljs-string">"export PATH=<span class="hljs-subst">$(pwd)</span>/bin:\$PATH"</span> &gt;&gt; cactus_env/bin/activate<br><span class="hljs-built_in">echo</span> <span class="hljs-string">"export PYTHONPATH=<span class="hljs-subst">$(pwd)</span>/lib:\$PYTHONPATH"</span> &gt;&gt; cactus_env/bin/activate<br><span class="hljs-built_in">source</span> cactus_env/bin/activate<br>python3 -m pip install -U setuptools pip wheel<br>python3 -m pip install -U .<br>python3 -m pip install -U -r ./toil-requirement.txt<br></code></pre></td></tr></tbody></table></figure><p>再安装一些依赖：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">grep apt-get Dockerfile | <span class="hljs-built_in">head</span> -1 | sed -e <span class="hljs-string">'s/RUN //g'</span> -e <span class="hljs-string">'s/apt-get/sudo apt-get/g'</span><br></code></pre></td></tr></tbody></table></figure><p>开始编译：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">make -j 8<br></code></pre></td></tr></tbody></table></figure><p>最需要的流程是Minigraph-Cactus：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">build-tools/downloadPangenomeTools<br></code></pre></td></tr></tbody></table></figure><p>快编译完了报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">[ 98%] Building CXX object CMakeFiles/odgi.dir/src/main.cpp.o<br>[ 98%] Linking CXX static library ../lib/libodgi.a<br>[ 98%] Linking CXX executable ../bin/odgi<br>/usr/bin/ld: cannot find -ljemalloc<br>collect2: error: ld returned 1 <span class="hljs-built_in">exit</span> status<br>make[2]: *** [CMakeFiles/odgi.dir/build.make:345: ../bin/odgi] Error 1<br>make[1]: *** [CMakeFiles/Makefile2:660: CMakeFiles/odgi.dir/all] Error 2<br>make[1]: *** Waiting <span class="hljs-keyword">for</span> unfinished <span class="hljs-built_in">jobs</span>....<br>/usr/bin/ld: cannot find -ljemalloc<br>collect2: error: ld returned 1 <span class="hljs-built_in">exit</span> status<br>make[2]: *** [CMakeFiles/libodgi_shared.dir/build.make:330: ../lib/libodgi.so] Error 1<br>make[1]: *** [CMakeFiles/Makefile2:1056: CMakeFiles/libodgi_shared.dir/all] Error 2<br>[ 98%] Built target libodgi_static<br>make: *** [Makefile:141: all] Error 2<br></code></pre></td></tr></tbody></table></figure><p>先把这个给安装了（PS：个人云服务器的好处就是随便玩，<code>sudo</code>都随便玩，大不了重装系统）：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt install libjemalloc-dev<br></code></pre></td></tr></tbody></table></figure><p>然后重复上一步重新编译。</p><p>通过没有加速，那下载这一堆东西都要崩溃：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">+ wget -q https://github.com/ComparativeGenomicsToolkit/hal2vg/releases/download/v1.1.4/hal2vg<br>+ <span class="hljs-built_in">chmod</span> +x hal2vg<br>+ [[ <span class="hljs-string">''</span> -ne 1 ]]<br>+ <span class="hljs-built_in">mv</span> hal2vg /home/lixiang/temp/cactus/bin<br>+ <span class="hljs-built_in">cd</span> /home/lixiang/temp/cactus/build-pangenome-tools<br>+ wget -q https://github.com/ComparativeGenomicsToolkit/hal2vg/releases/download/v1.1.4/clip-vg<br>+ <span class="hljs-built_in">chmod</span> +x clip-vg<br>+ [[ <span class="hljs-string">''</span> -ne 1 ]]<br>+ <span class="hljs-built_in">mv</span> clip-vg /home/lixiang/temp/cactus/bin<br>+ <span class="hljs-built_in">cd</span> /home/lixiang/temp/cactus/build-pangenome-tools<br>+ wget -q https://github.com/ComparativeGenomicsToolkit/hal2vg/releases/download/v1.1.4/halRemoveDupes<br>+ <span class="hljs-built_in">chmod</span> +x halRemoveDupes<br>+ [[ <span class="hljs-string">''</span> -ne 1 ]]<br>+ <span class="hljs-built_in">mv</span> halRemoveDupes /home/lixiang/temp/cactus/bin<br>+ <span class="hljs-built_in">cd</span> /home/lixiang/temp/cactus/build-pangenome-tools<br>+ wget -q https://github.com/ComparativeGenomicsToolkit/hal2vg/releases/download/v1.1.4/halMergeChroms<br>+ <span class="hljs-built_in">chmod</span> +x halMergeChroms<br>+ [[ <span class="hljs-string">''</span> -ne 1 ]]<br>+ <span class="hljs-built_in">mv</span> halMergeChroms /home/lixiang/temp/cactus/bin<br>+ <span class="hljs-built_in">cd</span> /home/lixiang/temp/cactus/build-pangenome-tools<br>+ wget -q https://github.com/ComparativeGenomicsToolkit/hal2vg/releases/download/v1.1.4/halUnclip<br></code></pre></td></tr></tbody></table></figure><p>顺便把这个也编译了：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">build-tools/downloadMafTools<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加速服务器访问GitHub</title>
      <link href="/article/jiasugithub/"/>
      <url>/article/jiasugithub/</url>
      
        <content type="html"><![CDATA[<p>访问<code>GitHub</code>的速度真的是一言难尽啊，加速吧。。。。</p><ul><li><p>下载个<a href="https://github.com/Dreamacro/clash/releases/tag/v1.18.0">Clash</a>，搞个配置文件；</p></li><li><p>下载<a href="https://github.com/Dreamacro/maxmind-geoip/releases">Country.mmdb</a>；</p></li><li><p>放后台运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> ./clash-linux-amd64-v1.18.0 -f clashconfig.yml &amp;<br></code></pre></td></tr></tbody></table></figure></li><li><p>指定端口：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> http_proxy=http://127.0.0.1:7890<br><span class="hljs-built_in">export</span> https_proxy=http://127.0.0.1:7890<br></code></pre></td></tr></tbody></table></figure></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311020950973.png" alt="image-20231102095022512"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从二代测序数据中鉴定是否含有特定基因</title>
      <link href="/article/findseqinfastq/"/>
      <url>/article/findseqinfastq/</url>
      
        <content type="html"><![CDATA[<h2 id="基因组下载"><a href="#基因组下载" class="headerlink" title="基因组下载"></a>基因组下载</h2><p>下载参考基因组数据。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">get https://www.mbkbase.org/R498/R498_Chr.soft.fasta.gz<br>get https://www.mbkbase.org/R498/R498_IGDBv3_coreset.tar.gz<br>get https://www.mbkbase.org/R498/R498_CoreSet.pro.tar.gz<br>get https://www.mbkbase.org/R498/R498_CoreSet.pro.tar.gz<br></code></pre></td></tr></tbody></table></figure><h2 id="Blast比对"><a href="#Blast比对" class="headerlink" title="Blast比对"></a>Blast比对</h2><p>核酸序列建库疯狂报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">BLAST Database error: No <span class="hljs-built_in">alias</span> or index file found <span class="hljs-keyword">for</span> protein database [./blastdb/piapik] <span class="hljs-keyword">in</span> search path [/sas16t/lixiang/yyt.reseq/02.blast::]<br></code></pre></td></tr></tbody></table></figure><p>换蛋白序列建库比对：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">makeblastdb -<span class="hljs-keyword">in</span> piapik.fa -dbtype prot -out blastdb/piapik<br>blastp -query R498_CoreSet.pros.format.fasta -db blastdb/piapik -evalue 1e-5 -num_threads 60 -outfmt 6 -out blast.out.txt<br></code></pre></td></tr></tbody></table></figure><h2 id="提取gff文件和基因序列"><a href="#提取gff文件和基因序列" class="headerlink" title="提取gff文件和基因序列"></a>提取gff文件和基因序列</h2><p>提取gff文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">grep <span class="hljs-string">"OsR498G1119642600.01"</span> R498_IGDBv3_coreset/R498_IGDBv3_coreset.gff &gt; pia.gff<br>grep <span class="hljs-string">"OsR498G1120737800.01"</span> R498_IGDBv3_coreset/R498_IGDBv3_coreset.gff &gt; pik.gff<br></code></pre></td></tr></tbody></table></figure><p>提取基因序列：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">type</span>=<span class="hljs-string">"gene"</span><br>sed <span class="hljs-string">'s/"/\t/g'</span> piapik.gff | awk -v <span class="hljs-built_in">type</span>=<span class="hljs-string">"<span class="hljs-variable">${type}</span>"</span> <span class="hljs-string">'BEGIN{OFS=FS="\t"}{if($3==type) {print $1,$4-1,$5,$14,".",$7}}'</span> &gt; piapik.bed <br></code></pre></td></tr></tbody></table></figure><p>提取蛋白序列和CDS序列用于后续的SnpEff：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">seqkit grep -f piapik.cds.id.txt genome.cds.fa &gt; piapik.cds.fa<br>seqkit grep -f piapik.cds.id.txt genome.pro.fa &gt; piapik.pro.fa<br></code></pre></td></tr></tbody></table></figure><p>将这些文件拷贝到SnpEff文件夹：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> ../../../01.data/genome/piapik.fa sequences.fa<br><span class="hljs-built_in">cp</span> ../../../01.data/genome/piapik.gff genes.gff<br><span class="hljs-built_in">cp</span> ../../../01.data/genome/R498_IGDBv3_coreset/piapik.cds.fa cds.fa<br><span class="hljs-built_in">cp</span> ../../../01.data/genome/R498_IGDBv3_coreset/piapik.pro.fa ./protein.fa<br><span class="hljs-built_in">cp</span> PiaPik/sequences.fa ./genomes/PiaPik.fa <br></code></pre></td></tr></tbody></table></figure><h2 id="构建索引"><a href="#构建索引" class="headerlink" title="构建索引"></a>构建索引</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">bwa index 01.data/genome/piapik.fa<br>samtools  faidx 01.data/genome/piapik.fa<br>gatk CreateSequenceDictionary -R 01.data/genome/piapik.fa <br></code></pre></td></tr></tbody></table></figure><h2 id="SnpEff索引"><a href="#SnpEff索引" class="headerlink" title="SnpEff索引"></a>SnpEff索引</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">java -jar /home/lixiang/mambaforge/envs/gatk4/share/snpeff-5.1-2/snpEff.jar build -c snpEff.config -gff3 -v PiaPik -noCheckCds -noCheckProtein<br></code></pre></td></tr></tbody></table></figure><h2 id="批量运行"><a href="#批量运行" class="headerlink" title="批量运行"></a>批量运行</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span>(list = <span class="hljs-built_in">ls</span>())<br><br>library(tidyverse)<br><br><span class="hljs-built_in">dir</span>(<span class="hljs-string">"./01.data/clean.data/"</span>) %&gt;% <br>  as_data_frame() %&gt;% <br>  magrittr::set_names(<span class="hljs-string">"file"</span>) %&gt;% <br>  dplyr::mutate(sample = stringr::str_split(file, <span class="hljs-string">"\\."</span>) %&gt;% <br>                  sapply(<span class="hljs-string">"["</span>, 1) %&gt;% <br>                  stringr::str_sub(1, stringr::str_length(.)-2)) -&gt; samples<br><br><span class="hljs-comment"># 构建批量代码</span><br><br>genome = <span class="hljs-string">"01.data/genome/piapik.fa "</span><br><br>all.run = NULL<br><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> unique(samples<span class="hljs-variable">$sample</span>)) {<br>  <span class="hljs-comment"># exit then skip </span><br>  <span class="hljs-keyword">if</span> (file.exists(sprintf(<span class="hljs-string">"./03.mapping/%s.sorted.mapped.bam"</span>,i))) {<br>    next<br>  }<span class="hljs-keyword">else</span>{<br>    f.read = sprintf(<span class="hljs-string">"./01.data/clean.data/%s_1.clean.fq.gz"</span>,i)<br>    r.read = sprintf(<span class="hljs-string">"./01.data/clean.data/%s_2.clean.fq.gz"</span>,i)<br>    title = sprintf(<span class="hljs-string">"\"@RG\\tID:%s\\tSM:%s\\tPL:illumina\""</span>,i,i)<br>    bam = sprintf(<span class="hljs-string">"./03.mapping/%s.sorted.bam"</span>,i)<br>    <br>    <span class="hljs-comment"># bwa mem</span><br>    sprintf(<span class="hljs-string">"bwa mem -M -t 75 -R %s %s %s %s | samtools sort -@ 50 -m 8G -o %s"</span>,title, genome, f.read, r.read, bam) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment"># extract mapped</span><br>    sprintf(<span class="hljs-string">"samtools view -bF 12 -@ 75 03.mapping/%s.sorted.bam -o 04.sorted.bam/%s.sorted.mapped.bam"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment"># index</span><br>    sprintf(<span class="hljs-string">"samtools index -@ 75 -bc 04.sorted.bam/%s.sorted.mapped.bam"</span>,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment"># # Pia</span><br>    <span class="hljs-comment"># sprintf("samtools view 03.mapping/%s.sorted.mapped.bam Pia -o 03.mapping/%s.sorted.mapped.Pia.bam",i,i) %&gt;% </span><br>    <span class="hljs-comment">#   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">#   rbind(all.run) -&gt; all.run</span><br>    <span class="hljs-comment"># </span><br>    <span class="hljs-comment"># # Pik</span><br>    <span class="hljs-comment"># sprintf("samtools view 03.mapping/%s.sorted.mapped.bam Pik -o 03.mapping/%s.sorted.mapped.Pik.bam",i,i) %&gt;% </span><br>    <span class="hljs-comment">#   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">#   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment"># # bam2fastq</span><br>    <span class="hljs-comment"># sprintf("bedtools bamtofastq -i 03.mapping/%s.sorted.mapped.Pia.bam -fq 03.mapped.fastq/%s_1.Pia.fsatq -fq2 03.mapped.fastq/%s_2.Pia.fsatq",i,i,i) %&gt;% </span><br>    <span class="hljs-comment">#   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">#   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment"># sprintf("bedtools bamtofastq -i 03.mapping/%s.sorted.mapped.Pik.bam -fq 03.mapped.fastq/%s_1.Pik.fsatq -fq2 03.mapped.fastq/%s_2.Pik.fsatq",i,i,i) %&gt;% </span><br>    <span class="hljs-comment">#   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">#   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment"># # rm bam</span><br>    <span class="hljs-comment"># sprintf("rm 03.mapping/%s.sorted.bam",i) %&gt;% </span><br>    <span class="hljs-comment">#   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">#   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment"># coverage</span><br>    sprintf(<span class="hljs-string">"samtools coverage ./04.sorted.bam/%s.sorted.mapped.bam &gt; 05.converage/%s.coverage.txt"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment"># picard</span><br>    sprintf(<span class="hljs-string">"picard -Xmx400g MarkDuplicates I=04.sorted.bam/%s.sorted.mapped.bam O=06.picard/%s.picard.bam CREATE_INDEX=true  REMOVE_DUPLICATES=trueu M=06.picard/%s.txt"</span>,i, i, i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment"># gatk</span><br>    sprintf(<span class="hljs-string">"gatk --java-options \"-Xmx20G -XX:ParallelGCThreads=8\" HaplotypeCaller -R 01.data/genome/piapik.fa  -I 06.picard/%s.picard.bam -O 07.gatk/%s.gvcf -ERC GVCF"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt;all.run<br>    <br>    <span class="hljs-comment"># gvcf 2 vcf</span><br>    sprintf(<span class="hljs-string">"gatk GenotypeGVCFs -R 01.data/genome/piapik.fa  -V 07.gatk/%s.gvcf -O 07.gatk/%s.vcf"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt;all.run<br>    <br>    <span class="hljs-comment"># SneEff</span><br>    sprintf(<span class="hljs-string">"java -Xmx10G -jar ~/mambaforge/envs/gatk4/share/snpeff-5.1-2/snpEff.jar ann -c  08.snpeff/snpEff.config PiaPik 07.gatk/%s.vcf &gt; 08.snpeff/%s.ann.vcf -csvStats 08.snpeff/%s.positive.csv -stats 08.snpeff/%s.positive.html"</span>,i,i,i,i)  %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt;all.run<br>  }<br>}<br><br>all.run %&gt;% <br>  dplyr::slice(nrow(all.run):1) %&gt;% <br>  write.table(<span class="hljs-string">"./run.all.sh"</span>, col.names = FALSE, row.names = FALSE, quote = FALSE)<br></code></pre></td></tr></tbody></table></figure><h2 id="合并覆盖度"><a href="#合并覆盖度" class="headerlink" title="合并覆盖度"></a>合并覆盖度</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">dir</span>(<span class="hljs-string">"./05.converage/"</span>) %&gt;% <br>  as_data_frame() %&gt;% <br>  magrittr::set_names(<span class="hljs-string">"file"</span>) -&gt; coverage<br><br>all.converage.final = NULL<br><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> coverage<span class="hljs-variable">$file</span>) {<br>  sprintf(<span class="hljs-string">"./05.converage/%s"</span>,i) %&gt;% <br>    readr::read_delim() %&gt;% <br>    dplyr::mutate(sample = stringr::str_replace(i,<span class="hljs-string">".coverage.txt"</span>,<span class="hljs-string">""</span>)) %&gt;% <br>    dplyr::select(ncol(.), 1:(ncol(.)-1)) %&gt;% <br>    rbind(all.converage.final) -&gt; all.converage.final<br>}<br><br>all.converage.final %&gt;% <br>  write.table(<span class="hljs-string">"./all.coverage.txt"</span>, sep = <span class="hljs-string">"\t"</span>, quote = FALSE, row.names = FALSE)<br></code></pre></td></tr></tbody></table></figure><h2 id="判断突变类型"><a href="#判断突变类型" class="headerlink" title="判断突变类型"></a>判断突变类型</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span>(list = <span class="hljs-built_in">ls</span>())<br><br>readr::read_delim(<span class="hljs-string">"./01.data/genome/piapik.gff"</span>, col_names = FALSE) %&gt;% <br>  dplyr::select(1,3:5) %&gt;% <br>  magrittr::set_names(c(<span class="hljs-string">"HROM"</span>,<span class="hljs-string">"gene.region"</span>,<span class="hljs-string">"start"</span>,<span class="hljs-string">"end"</span>)) %&gt;% <br>  dplyr::filter(gene.region == <span class="hljs-string">"exon"</span>) %&gt;% <br>  dplyr::mutate(HROM = stringr::str_replace(HROM,<span class="hljs-string">"\\."</span>,<span class="hljs-string">"_"</span>))-&gt; df.gff<br><br><span class="hljs-built_in">dir</span>(<span class="hljs-string">"./08.snpeff/"</span>) %&gt;% <br>  as_data_frame() %&gt;% <br>  magrittr::set_names(<span class="hljs-string">"vcf"</span>) %&gt;% <br>  dplyr::filter(stringr::str_ends(vcf, <span class="hljs-string">"ann.vcf"</span>))-&gt; vcf<br><br>all.vcf = NULL<br><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> vcf<span class="hljs-variable">$vcf</span>) {<br>  sprintf(<span class="hljs-string">"./08.snpeff/%s"</span>,i) %&gt;% <br>    data.table::fread() %&gt;% <br>    magrittr::set_names(c(<span class="hljs-string">"HROM"</span>, <span class="hljs-string">"POS"</span>, <span class="hljs-string">"ID"</span>, <span class="hljs-string">"REF"</span>, <span class="hljs-string">"ALT"</span>, <span class="hljs-string">"QUAL"</span>, <span class="hljs-string">"FILTER"</span>, <span class="hljs-string">"INFO"</span>, <span class="hljs-string">"FORMAT"</span>, <span class="hljs-string">"sample"</span>)) %&gt;% <br>    dplyr::select(1:8) %&gt;% <br>    dplyr::mutate(mutation.type = stringr::str_split(INFO,<span class="hljs-string">";"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,12) %&gt;% <br>                    stringr::str_split(<span class="hljs-string">"\\|"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,2),<br>                  mutation.region = stringr::str_split(INFO,<span class="hljs-string">";"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,12) %&gt;% <br>                    stringr::str_split(<span class="hljs-string">"\\|"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,6),<br>                  mutation.protein = stringr::str_split(INFO,<span class="hljs-string">";"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,12) %&gt;% <br>                    stringr::str_split(<span class="hljs-string">"\\|"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,11)) %&gt;% <br>    dplyr::select(-INFO) %&gt;% <br>    dplyr::left_join(df.gff) %&gt;% <br>    dplyr::mutate(group = case_when(POS &gt;= start &amp; POS &lt;= end ~ <span class="hljs-string">"Exon"</span>, TRUE ~ <span class="hljs-string">"Non-exon"</span>)) %&gt;% <br>    dplyr::filter(group == <span class="hljs-string">"Exon"</span>) %&gt;% <br>    dplyr::select(1:5,8:10) %&gt;% <br>    magrittr::set_names(c(<span class="hljs-string">"chrom"</span>, <span class="hljs-string">"position"</span>, <span class="hljs-string">"id"</span>, <span class="hljs-string">"ref"</span>, <span class="hljs-string">"alt"</span>, <span class="hljs-string">"mutation.type"</span>, <span class="hljs-string">"mutation.region"</span>, <span class="hljs-string">"mutation.protein"</span>)) %&gt;% <br>    dplyr::mutate(sample = stringr::str_replace(i,<span class="hljs-string">".ann.vcf"</span>,<span class="hljs-string">""</span>)) %&gt;% <br>    dplyr::mutate(rgene = case_when(chrom == <span class="hljs-string">"OsR498G1119642600_01"</span> ~ <span class="hljs-string">"Pia"</span>, TRUE ~ <span class="hljs-string">"Pik"</span>)) %&gt;% <br>    dplyr::select(9:10,2:8) %&gt;% <br>    rbind(all.vcf) -&gt; all.vcf<br>}<br><br>all.vcf %&gt;% <br>  write.table(<span class="hljs-string">"./all.vcf.txt"</span>, sep = <span class="hljs-string">"\t"</span>, quote = FALSE, row.names = FALSE)<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构变异检测软件SVDSS使用</title>
      <link href="/article/svdss/"/>
      <url>/article/svdss/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.nature.com/articles/s41592-022-01674-1">Denti L, Khorsand P, Bonizzoni P, et al. SVDSS: structural variation discovery in hard-to-call genomic regions using sample-specific strings from accurate long reads[J]. Nature Methods, 2023, 20(4): 550-558.</a></p></blockquote><p><a href="https://www.youtube.com/watch?v=oE8uvMklWVE">点击观看官方视屏</a>.</p><h2 id="计算原理"><a href="#计算原理" class="headerlink" title="计算原理"></a>计算原理</h2><p>SVDSS融合了基于比对、无比对和基于组装这三种方法的优势。整个流程可以分为如下几步：</p><ol><li><code>read-smoothing</code>：基于比对到参考基因组上的方法将测序错误碱基、SNP和小片段插入（&lt;20bp）的序列去除。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310031559511.png" alt="image-20231003155907569"></li><li><code>构建SFS superstring</code>：在完成上一步的基础上对样品特异性片段（sample-specific string，SFS）进行提取，然后再将SFS组装成superstrings.<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310031600513.png" alt="image-20231003160041288"><br>什么是specific strings？官方视屏中的介绍是这样的：也就是在A中有在B中没有的片段。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310031608727.png" alt="image-20231003160823249"></li><li><code>SV预测</code>：基于这些SFS在参考基因组上的位置对其进行聚类，然后鉴定SV.<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310031614558.png" alt="image-20231003161405487"></li></ol><h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="## 软件安装"></a>## 软件安装</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create --name svdss<br>mamba activate svdss<br>mamba install -c bioconda svdss<br></code></pre></td></tr></tbody></table></figure><h3 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h3><p>官方使用的是人类基因组数据，我选择水稻的数据。</p><p>从<a href="http://www.ricesuperpir.com/web/download"></a><a href="http://www.ricesuperpir.com/">RiceSuperPIRdb</a>下载日本晴的T2T基因组和注释信息。从<a href="https://www.sciencedirect.com/science/article/pii/S009286742100581X">Qin P, Lu H, Du H, et al. Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations[J]. Cell, 2021, 184(13): 3542-3558. e16.</a>提供的数据中下载2个样品全基因组测序数据。下载地址：</p><p><a href="https://ngdc.cncb.ac.cn/search/?dbId=gsa&amp;q=PRJCA002103.&amp;page=1">https://ngdc.cncb.ac.cn/search/?dbId=gsa&amp;q=PRJCA002103.&amp;page=1</a></p><hr><p>剩下的步骤大概可以分为如下几步：</p><ol><li>Build FMD index of reference genome (<code>SVDSS index</code>)</li><li>Smooth the input BAM file (<code>SVDSS smooth</code>)</li><li>Extract SFS from smoothed BAM file (<code>SVDSS search</code>)</li><li>Assemble SFS into superstrings (<code>SVDSS assemble</code>)</li><li>Genotype SVs from the assembled superstrings (<code>SVDSS call</code>)</li></ol><p>但是软件输出的帮助文档的顺序和GitHub上的不一样：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sh">SVDSS, Structural Variant Discovery from Sample-specific Strings.<br><br>Usage: <br>        * Index reference/sample:<br>                SVDSS index --fastq/--fasta /path/to/genome/file --index /path/to/output/index/file<br><br>                Optional arguments: <br>                        -b, --binary                            output index <span class="hljs-keyword">in</span> binary format. Allows <span class="hljs-keyword">for</span> another index to be appended to this index later.<br>                        -a, --append /path/to/binary/index      append to existing binary index.<br><br>        * Extract SFS from BAM/FASTQ/FASTA files:<br>                SVDSS search --index /path/to/index --fastq/--bam /path/to/input --workdir /output/directory<br><br>                Optional arguments: <br>                        --assemble                              automatically runs SVDSS assemble on output<br><br>        * Assemble SFS into superstrings:<br>                SVDSS assemble --workdir /path/to/.sfs/files --batches /number/of/SFS/batches<br><br>        * Reconstruct sample:<br>                SVDSS smooth --workdir /output/file/direcotry --bam /path/to/input/bam/file --reference /path/to/reference/genome/fasta<br><br>        * Call SVs:<br>                SVDSS call --workdir /path/to/assembled/.sfs/files --bam /path/to/input/bam/file --reference /path/to/reference/genome/fasta<br><br>                Optional arguments: <br>                        --clipped                               calls SVs from clipped SFS.<br>                        --min-cluster-weight                    minimum number of supporting superstrings <span class="hljs-keyword">for</span> a call to be reported.<br>                        --min-sv-length                         minimum length of reported SVs. Default is 25. Values &lt; 25 are ignored.<br><br>General options: <br>        --threads                                               sets number of threads, default 4.<br>        --version                                               <span class="hljs-built_in">print</span> version information.<br>        --<span class="hljs-built_in">help</span>                                                  <span class="hljs-built_in">print</span> this <span class="hljs-built_in">help</span> message.<br></code></pre></td></tr></tbody></table></figure><p>先跟着GitHub上的步骤操作一波试试。</p><hr><blockquote><p>All of SVDSS steps must be run in the same directory so we always pass <code>--workdir $PWD</code> for every command.</p></blockquote><h3 id="构建参考基因组索引"><a href="#构建参考基因组索引" class="headerlink" title="构建参考基因组索引"></a>构建参考基因组索引</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> 1.refer.index<br>SVDSS index --fasta 00.data/genome/nip.t2t.fa --index 01.refer.index/refer.genome.fmds<br></code></pre></td></tr></tbody></table></figure><p>373M的基因组运行结果如下：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">SVDSS, Structural Variant Discovery from Sample-specific Strings.<br>Mode: index<br>[I] . <br>[M::mr_insert_multi] Turn off parallelization <span class="hljs-keyword">for</span> this batch as too few strings are left.<br>[I] Complete. Runtime: 876 seconds. <br></code></pre></td></tr></tbody></table></figure><h3 id="Mapping"><a href="#Mapping" class="headerlink" title="Mapping"></a>Mapping</h3><p>使用<code>Minimap2</code>将序列比对到参考基因组上获得<code>BAM</code>文件。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">minimap2 -ax map-pb  ref.fa pacbio-reads.fq &gt; aln.sam   <span class="hljs-comment"># for PacBio CLR reads</span><br>minimap2 -ax map-ont ref.fa ont-reads.fq &gt; aln.sam      <span class="hljs-comment"># for Oxford Nanopore reads</span><br>minimap2 -ax map-iclr ref.fa iclr-reads.fq &gt; aln.sam    <span class="hljs-comment"># for Illumina Complete Long Reads</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">minimap2 -t 70 -ax map-pb 00.data/genome/nip.t2t.fa 00.data/sample/zh11.fastq &gt; zh11.sam<br></code></pre></td></tr></tbody></table></figure><p>57G数据运行了25分钟左右。</p><p>将<code>SAM</code>转为<code>BAM</code>排序后构建索引：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">samtools view -@ 70 -b zh11.sam &gt; zh11.bam<br>samtools <span class="hljs-built_in">sort</span> --write-index -@ 70 zh11.bam -o zh11.sorted.bam <br></code></pre></td></tr></tbody></table></figure><h3 id="Smooth样品"><a href="#Smooth样品" class="headerlink" title="Smooth样品"></a>Smooth样品</h3><p>剔除样品中的测序错误碱基、SNP和小片段插入（&lt;20bp）。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">SVDSS smooth --threads 70 --reference nip.t2t.fa --bam zh11.sorted.bam<br></code></pre></td></tr></tbody></table></figure><p>构建索引。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">samtools index -@ 70 -b smoothed.selective.bam<br></code></pre></td></tr></tbody></table></figure><h3 id="提取样品的SFS并组装"><a href="#提取样品的SFS并组装" class="headerlink" title="提取样品的SFS并组装"></a>提取样品的SFS并组装</h3><p>看了下一步的代码里面有一个参数是batches，猜测不同的样本的batches不同，批量处理就不好处理，那就直接一步完成了。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">SVDSS search --threads 70 --index refer.genome.fmd --bam smoothed.selective.bam<br></code></pre></td></tr></tbody></table></figure><h3 id="预测SVs"><a href="#预测SVs" class="headerlink" title="预测SVs"></a>预测SVs</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">SVDSS call --threads 70 --reference nip.t2t.fa --bam smoothed.selective.bam  &gt; zh11.sv.vcf <br></code></pre></td></tr></tbody></table></figure><h3 id="汇总结果"><a href="#汇总结果" class="headerlink" title="汇总结果"></a>汇总结果</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> 02.each/zh11<br><span class="hljs-built_in">mv</span> zh11* 02.each/zh11 <br><span class="hljs-built_in">mv</span> s* 02.each/zh11 <br><span class="hljs-built_in">mv</span> ignored_reads.txt 02.each/zh11 <br><span class="hljs-built_in">mv</span> poa.sam 02.each/zh11 <br></code></pre></td></tr></tbody></table></figure><h2 id="另一种方法"><a href="#另一种方法" class="headerlink" title="另一种方法"></a>另一种方法</h2><p>我尝试了上面的方法，不行，最终得不到结构变异。选择直接从fastq文件开始，不用比对了。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> 1.refer.index<br>SVDSS index --fasta 00.data/genome/nip.t2t.fa --index 01.refer.index/refer.genome.fmds<br>minimap2 -t 70 -ax map-pb 00.data/genome/nip.t2t.fa 00.data/sample/zh11.fastq &gt; zh11.sam<br>samtools view -@ 70 -b zh11.sam &gt; zh11.bam<br>samtools <span class="hljs-built_in">sort</span> --write-index -@ 70 zh11.bam -o zh11.sorted.bam <br>SVDSS search --threads 70 --assemble --index refer.genome.fmd --fastq 00.data/sample/zh11.fastq<br>SVDSS call --min-sv-length 50 --threads 70 --reference nip.t2t.fa --bam zh11.sorted.bam  &gt; zh11.sv.vcf<br><br><span class="hljs-built_in">mkdir</span> 02.each/zh11<br><span class="hljs-built_in">mv</span> zh11* 02.each/zh11 <br><span class="hljs-built_in">mv</span> s* 02.each/zh11 <br><span class="hljs-built_in">mv</span> ignored_reads.txt 02.each/zh11 <br><span class="hljs-built_in">mv</span> poa.sam 02.each/zh11 <br></code></pre></td></tr></tbody></table></figure><p>只得到200个SV，不知道对不对。得到这样一个图：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310042031756.png" alt="image-20231004203123690"></p><h2 id="结构变异可视化"><a href="#结构变异可视化" class="headerlink" title="结构变异可视化"></a>结构变异可视化</h2><p>在<a href="https://www.nature.com/articles/s41592-023-01932-w">Ahsan M U, Liu Q, Perdomo J E, et al. A survey of algorithms for the detection of genomic structural variants from long-read sequencing data[J]. Nature Methods, 2023, 20(8): 1143-1158.</a>这个文章里面看到这个图：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310041547002.png" alt="image-20231004154750643"></p><p>找到这个文章：</p><blockquote><p><a href="https://academic.oup.com/bioinformatics/article/37/3/413/5885081">Maria Nattestad, Robert Aboukhalil, Chen-Shan Chin, Michael C Schatz, Ribbon: intuitive visualization for complex genomic variation, <em>Bioinformatics</em>, Volume 37, Issue 3, February 2021, Pages 413–415</a></p></blockquote><p><a href="https://github.com/marianattestad/ribbon">点击查看GitHub代码</a>。</p><p>直接部署一个到自己的服务器上，接个域名方便自己使用。</p><p><a href="https://www.xxx.com/ribbon/">https://www.xxx.com/ribbon/</a></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调控植物-植物互作的地下部分信号</title>
      <link href="/article/ppiunderground/"/>
      <url>/article/ppiunderground/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://www.sciencedirect.com/science/article/abs/pii/S1369526623001218">Yoneyama K, Bennett T. Whispers in the dark: Signals regulating underground plant–plant interactions[J]. Current Opinion in Plant Biology, 2023: 102456.</a></p></blockquote><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>植物能够感知周围是否存在其他植物并做出响应，以此来优化自我的生理响应从而保护自我、成功繁殖。感知近邻的一个关键点是根系分泌物，但是我们对其认识还很有限。这篇综述着重讲解根系分泌物在植物-植物互作中的功能，在关注常规互作案例的同时也关注根部寄生物-寄主植物之间的互作。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310011006465.png" alt="image-20231001100640065"></p><h2 id="概述：植物-植物互作信号"><a href="#概述：植物-植物互作信号" class="headerlink" title="概述：植物-植物互作信号"></a>概述：植物-植物互作信号</h2><p>在植物-植物互作领域中研究较多的几类信号物质有：</p><ul><li>光：光信号是植物-植物互作信号研究中被关注得最多的，大量研究表明光量能够调节植物的生长和发育。</li><li>接触（Touch）：接触被认为是植物-植物互作中的一种信号，但其功能更多的是激发其他的植物-植物互作信号。</li><li>挥发性有机化合物（VOCs）：VOCs能够激发临近植株防御相关基因的表达。</li><li>根系分泌物：根系分泌物是植物-植物互作中关键的化学信号，而且很可能是植物-植物地下部分互作的主要信号物质。然而，<strong>方法学方面的滞后阻碍了根系分泌物诱导的植物-植物互作信号的具体机制。</strong>尽管如此，过去几年中还是有一些研究确定了几个信号物质在植物-植物互作中发挥重要功能。</li></ul><h2 id="介导植物-植物互作的信号"><a href="#介导植物-植物互作的信号" class="headerlink" title="介导植物-植物互作的信号"></a>介导植物-植物互作的信号</h2><p>独脚金内酯是根际寄生植物-寄主植物之间互作的信号物质，它也很可能是常规的植物-植物互作的信号物质。植物在缺磷状态下分泌更多的独脚金内酯来促进丛枝菌根真菌的共生，从而从丛枝菌根真菌中吸取更多的磷。为什么说独脚金内酯很可能是植物-植物互作的信号物质呢？<strong>因为实际上植物会一直处于缺磷状态，因此会持续地分泌出独脚金内酯，既然能够持续地分泌物，那么就很有可能是植物-植物互作中的一种 信号物质。</strong>在水稻和花生中已经有研究证明了独脚金内酯很可能是植物-植物互作的信号物质。</p><p>植物-植物互作中的其他主要信号物质有：</p><ul><li>(-)-loliolide：黑麦草内酯是稗草分泌的一种化感物质，能够刺激小麦和水稻分别分泌更多的DIMBOA和稻壳酮。植物受到生物胁迫和非生物胁迫条件下均能分泌出黑麦草内酯，进而激发临近植株的防御响应，包括防御相关的次级代谢产物的合成和释放。</li><li>茉莉酸和乙烯：茉莉酸和乙烯在化学性质上是挥发物，但是在土壤中也会有。毫无疑问的是，一个植物释放的茉莉酸和乙烯势必会被临近的植株感受到，从而作物植物-植物互作中的信号物质。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310011028940.png" alt="image-20231001102835598"></p><hr><p>在讨论中作者提到<strong>肽信号</strong>很可能是植物亲缘/非亲缘识别的信号物质，这个值得关注！</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word交叉引用设置颜色为蓝色</title>
      <link href="/article/wordjcyy/"/>
      <url>/article/wordjcyy/</url>
      
        <content type="html"><![CDATA[<p>参考<a href="https://zhuanlan.zhihu.com/p/533318295">知乎文章</a>。</p><p>编辑一个新的宏：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">Sub CitingColor()<br>    For i = 1 To ActiveDocument.Fields.Count <span class="hljs-string">'遍历文档所有域</span><br><span class="hljs-string">        If Left(ActiveDocument.Fields(i).Code, 4) = " REF" Or Left(ActiveDocument.Fields(i).Code, 14) = " ADDIN EN.CITE" Or Left(ActiveDocument.Fields(i).Code, 31) = " ADDIN ZOTERO_ITEM CSL_CITATION" Then '</span>Word自带的交叉引用的域代码起始4位是<span class="hljs-string">" REF"</span>（注意空格），EndNote插入的引用域代码的起始14位是<span class="hljs-string">" ADDIN EN.CITE"</span>，Zotero插入的引用域代码的起始31位是<span class="hljs-string">" ADDIN ZOTERO_ITEM CSL_CITATION"</span>。根据需求可添加其他类型。<br>        ActiveDocument.Fields(i).Select <span class="hljs-string">'选中上述几类域</span><br><span class="hljs-string">        Selection.Font.Color = wdColorBlue '</span>设置字体颜色为蓝色,也可以使用以下代码设置为任意颜色Selection.Font.Color = 12673797<br>        End If<br>    Next<br>End Sub<br></code></pre></td></tr></tbody></table></figure><p>然后运行就行。</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光果龙葵基因组助力马铃薯晚疫病抗性基因的挖掘</title>
      <link href="/article/gglk/"/>
      <url>/article/gglk/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.nature.com/articles/s41588-023-01486-9">Lin X, Jia Y, Heal R, et al. Solanum americanum genome-assisted discovery of immune receptors that detect potato late blight pathogen effectors[J]. Nature Genetics, 2023: 1-10.</a></p></blockquote><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2><p>马铃薯晚疫病是由<em>Phytophthora infestans</em>引起的，曾经造成了爱尔兰大饥荒。有意思的是，同属于茄科的光果龙葵<em>Solanum americanum</em>对致病疫霉基本上都有很好的抗性。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311253885.PNG" alt="幻灯片2"></p><h2 id="4个光果龙葵基因组组装"><a href="#4个光果龙葵基因组组装" class="headerlink" title="4个光果龙葵基因组组装"></a>4个光果龙葵基因组组装</h2><p>要有效且准确地挖掘抗性基因，那么高质量的基因组是必不可少的。作者选了四个具有代表性的光果龙葵进行基因组组装，三个挂载到染色体水平。获得了高质量的参考基因组。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311256096.PNG" alt=""></p><h2 id="光果龙葵的基因组进化分析"><a href="#光果龙葵的基因组进化分析" class="headerlink" title="光果龙葵的基因组进化分析"></a>光果龙葵的基因组进化分析</h2><p>将组装的4个光果龙葵和马铃薯、番茄及其他几个茄科植物进行系统发育分析，同时以拟南芥作为外群。从系统发育树上可以明显看出光果龙葵与其他的茄科植物有着明显的差异。进一步对染色体重排进行分析发现除了2号染色体外，其他的染色体之间都存在着明显的染色体重排现象。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311310372.PNG" alt=""></p><h2 id="光果龙葵的NLR图谱"><a href="#光果龙葵的NLR图谱" class="headerlink" title="光果龙葵的NLR图谱"></a>光果龙葵的NLR图谱</h2><p>为了充分挖掘光果龙葵中的抗性基因，作者先对基因组中的NLR基因进行全面检索。在这些发现的NLR基因中，有71%是成簇存在的，这也就导致现存的许多自动鉴定流程准确信的欠缺。于是，作者们进行了手动校正。总之，通过一些列分析，得到了光果龙葵的NLR图谱。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311313447.PNG" alt=""></p><h2 id="光果龙葵的ETI图谱"><a href="#光果龙葵的ETI图谱" class="headerlink" title="光果龙葵的ETI图谱"></a>光果龙葵的ETI图谱</h2><p>在致病疫霉中有563个效应子基因，在光果龙葵中大约有550个NLR基因，为了充分挖掘光果龙葵中能够识别致病疫霉效应子的抗性基因，作者选用52个光果龙葵进行试验，分别对315个效应子基因进行抗性分析。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311318877.PNG" alt=""></p><h2 id="抗性基因Rpi-amr4鉴定"><a href="#抗性基因Rpi-amr4鉴定" class="headerlink" title="抗性基因Rpi-amr4鉴定"></a>抗性基因<em>Rpi-amr4</em>鉴定</h2><p>在上一步的ETI分析中，发现效应子PITG_22825能够引起28个光果龙葵的HR反应。为了找到识别这个效应子的受体基因，作者使用了 GWAS。这个地方就非常有意思了，将重测序中NLR基因上游3kb和下游1kb的区域作为候选区域，这些区域内的SNP作为遗传数据，将上一步中的HR反应数值作为表型进行关联分析。在1号染色体上发现了显著的位点，发现该位点属于一个抗性基因，而且该基因与位于11号染色体上的<em>Rpi-amr3</em>在系统发育上属于同一支，这也就能解释为什么11号染色体在GWAS中的信号也比较明显。进一步探究发现这个基因是能够和效应子PITG_22825进行结合的（HR反应更加明显）。通过系统发育分析发现这个基因在光果龙葵中的高度保守的。进一步利用GWAS进行敲除验证，发现敲除后功能确实是丧失了。同时还与<em>Rpi-amr3</em>进行了比较，发现<em>Rpi-amr4</em>的功能稍弱一些。由此确认了<em>Rpi-amr4</em>是效应子PITG_22825的识别受体。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311322555.PNG" alt=""></p><h2 id="另外两个受体的挖掘"><a href="#另外两个受体的挖掘" class="headerlink" title="另外两个受体的挖掘"></a>另外两个受体的挖掘</h2><p>上一步通过GWAS发现成功挖掘到一个抗性基因，但是很多R基因在GWAS中是没有明显信号的，也就不能从GWAS中直接找到基因。作者就利用杂交/自交的方法进行分离验证。提供这种方法也成功找到了两个效应子的识别受体。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308311336654.PNG" alt=""></p><h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2><blockquote><p><strong>生物信息学作为工具打开局面，湿试验进行深入验证！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地构建UniProt数据库进行blast比对</title>
      <link href="/article/uniprot/"/>
      <url>/article/uniprot/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库下载"><a href="#数据库下载" class="headerlink" title="数据库下载"></a>数据库下载</h2><p>下载地址：</p><blockquote><p><a href="https://www.uniprot.org/help/downloads">https://www.uniprot.org/help/downloads</a></p></blockquote><p>镜像下载地址：</p><blockquote><p><a href="https://ftp.expasy.org/databases/uniprot/current_release/knowledgebase/complete/">https://ftp.expasy.org/databases/uniprot/current_release/knowledgebase/complete/</a></p></blockquote><p>下载速度可以说是非常慢了。买个阿里云的海外服务器中转一下。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言绘制地图</title>
      <link href="/article/rmap/"/>
      <url>/article/rmap/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>geoviz<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>sf<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>terra<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rasterVis<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggspatial<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rgdal<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rnaturalearth<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>rnaturalearthdata<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>raster<span class="hljs-punctuation">)</span><br><br>download.file<span class="hljs-punctuation">(</span><span class="hljs-string">"https://geo.datav.aliyun.com/areas_v3/bound/530000_full.json"</span><span class="hljs-punctuation">,</span>destfile<span class="hljs-operator">=</span><span class="hljs-string">"yunnan.json"</span><span class="hljs-punctuation">)</span><br>yunnan_shp<span class="hljs-operator">=</span>sf<span class="hljs-operator">::</span>read_sf<span class="hljs-punctuation">(</span><span class="hljs-string">"yunnan.json"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">## </span><br>ggplot<span class="hljs-punctuation">(</span>yunnan_shp<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_sf<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> p<br><br>export<span class="hljs-operator">::</span>graph2ppt<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> file <span class="hljs-operator">=</span> <span class="hljs-string">"云南省地图.pptx"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># ggsave("yunnan.pdf",height = 9,width = 9)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs R">sf<span class="hljs-operator">::</span>read_sf<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/sanqimetagenome/data/530000_云南省_full.json"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>name <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_sf<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>geometry <span class="hljs-operator">=</span> geometry<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          show.legend <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_sf_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df.sample.num<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> longitude<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> latitude<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"#1380A1"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"Longitude"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Latitude"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-&gt;</span> p.map<br><br>ggsave<span class="hljs-punctuation">(</span>p.map<span class="hljs-punctuation">,</span><br>       file <span class="hljs-operator">=</span> <span class="hljs-string">"./data/sanqimetagenome/results/Figure 1/samples.map.png"</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> dpi <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTOL辅助R包itol.toolkit学习笔记</title>
      <link href="/article/itoltoolkit/"/>
      <url>/article/itoltoolkit/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>还是学学这个点点鼠标就能搞定的神器<code>iTOL</code>。。。PS：其实暑假是闲着没事干了，数据在服务器跑着要一个月。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接从<code>GitHub</code>安装最新版：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">devtools::install_github(<span class="hljs-string">"TongZhou2017/itol.toolkit"</span>)<br></code></pre></td></tr></tbody></table></figure><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh">library(itol.toolkit)<br><br><span class="hljs-comment"># read data</span><br>tree &lt;- system.file(<span class="hljs-string">"extdata"</span>,<br>                    <span class="hljs-string">"tree_of_itol_templates.tree"</span>,<br>                    package = <span class="hljs-string">"itol.toolkit"</span>)<br>data(<span class="hljs-string">"template_groups"</span>)<br>df_group &lt;- data.frame(<span class="hljs-built_in">id</span> = unique(template_groups<span class="hljs-variable">$group</span>), <br>                       data = unique(template_groups<span class="hljs-variable">$group</span>))<br><br><span class="hljs-comment"># create hub</span><br>hub &lt;- create_hub(tree = tree)<br><br><span class="hljs-comment">## create unit</span><br>unit &lt;- create_unit(data = df_group, <br>                    key = <span class="hljs-string">"Quickstart"</span>, <br>                    <span class="hljs-built_in">type</span> = <span class="hljs-string">"DATASET_COLORSTRIP"</span>, <br>                    tree = tree)<br><br><span class="hljs-comment">## add unit into hub</span><br>hub &lt;- hub + unit<br><br><span class="hljs-comment">## write template file</span><br>write_hub(hub,getwd())<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307171110814.png" alt="image-20230717111006928"></p><h2 id="折叠分支"><a href="#折叠分支" class="headerlink" title="折叠分支"></a>折叠分支</h2><p>有两种方法可以选择：</p><ul><li>根据分支名称进行折叠；</li><li>根据<code>Node ID</code>进行折叠。</li></ul><p>个人更倾向于第二种方法：</p><p>使用<code>iTOL</code>就可以显示<code>Node ID</code>:</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307171127875.png" alt="image-20230717112704408"></p><p>现在我准备折叠<code>I15</code>和<code>text</code>这两个分支：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 折叠分支</span><br>library<span class="hljs-punctuation">(</span>itol.toolkit<span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-string">"tree_of_itol_templates.tree"</span><span class="hljs-punctuation">,</span><br>                    package <span class="hljs-operator">=</span> <span class="hljs-string">"itol.toolkit"</span><span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span><span class="hljs-string">"template_groups"</span><span class="hljs-punctuation">)</span><br>group_names <span class="hljs-operator">&lt;-</span> unique<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"I15"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"text"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>unit_2 <span class="hljs-operator">&lt;-</span> create_unit<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> group_names<span class="hljs-punctuation">,</span> <br>                      key <span class="hljs-operator">=</span> <span class="hljs-string">"E002_collapse_2"</span><span class="hljs-punctuation">,</span> <br>                      type <span class="hljs-operator">=</span> <span class="hljs-string">"COLLAPSE"</span><span class="hljs-punctuation">,</span> <br>                      tree <span class="hljs-operator">=</span> tree<span class="hljs-punctuation">)</span><br>write_unit<span class="hljs-punctuation">(</span>unit_2<span class="hljs-punctuation">,</span><br>           paste0<span class="hljs-punctuation">(</span>getwd<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">"/E002_collapse_2.txt"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307171133087.png" alt="image-20230717113310926"></p><h2 id="标签的背景色"><a href="#标签的背景色" class="headerlink" title="标签的背景色"></a>标签的背景色</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 标签的背景色</span><br>library<span class="hljs-punctuation">(</span>itol.toolkit<span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-string">"tree_of_itol_templates.tree"</span><span class="hljs-punctuation">,</span><br>                    package <span class="hljs-operator">=</span> <span class="hljs-string">"itol.toolkit"</span><span class="hljs-punctuation">)</span><br>hub <span class="hljs-operator">&lt;-</span> create_hub<span class="hljs-punctuation">(</span>tree <span class="hljs-operator">=</span> tree<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span><span class="hljs-string">"template_groups"</span><span class="hljs-punctuation">)</span><br><br>unit_7 <span class="hljs-operator">&lt;-</span> create_unit<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> template_groups<span class="hljs-punctuation">,</span> <br>                      key <span class="hljs-operator">=</span> <span class="hljs-string">"E007_tree_colors_1"</span><span class="hljs-punctuation">,</span> <br>                      type <span class="hljs-operator">=</span> <span class="hljs-string">"TREE_COLORS"</span><span class="hljs-punctuation">,</span> <br>                      subtype <span class="hljs-operator">=</span> <span class="hljs-string">"range"</span><span class="hljs-punctuation">,</span> <br>                      tree <span class="hljs-operator">=</span> tree<span class="hljs-punctuation">)</span><br>write_unit<span class="hljs-punctuation">(</span>unit_7<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>可以自行调节：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307171142853.png" alt="image-20230717114208310"></p><h2 id="简单柱状图"><a href="#简单柱状图" class="headerlink" title="简单柱状图"></a>简单柱状图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 添加柱状图</span><br>library<span class="hljs-punctuation">(</span>itol.toolkit<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>data.table<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>stringr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ape<span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-string">"tree_of_itol_templates.tree"</span><span class="hljs-punctuation">,</span><br>                    package <span class="hljs-operator">=</span> <span class="hljs-string">"itol.toolkit"</span><span class="hljs-punctuation">)</span><br>df_frequence <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-string">"templates_frequence.txt"</span><span class="hljs-punctuation">,</span><br>                            package <span class="hljs-operator">=</span> <span class="hljs-string">"itol.toolkit"</span><span class="hljs-punctuation">)</span><br>df_frequence <span class="hljs-operator">&lt;-</span> fread<span class="hljs-punctuation">(</span>df_frequence<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df_frequence<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><br>  <span class="hljs-string">"id"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Li,S. et al. (2022) J. Hazard. Mater."</span><span class="hljs-punctuation">,</span><span class="hljs-string">"Zheng,L. et al. (2022) Environ. Pollut."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Welter,D.K. et al. (2021) mSystems"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Zhang,L et al. (2022) Nat. Commun."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Rubbens,P. et al. (2019) mSystems"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Laidoudi,Y. et al. (2022) Pathogens"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Wang,Y. et al. (2022) Nat. Commun."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Ceres,K.M. et al. (2022) Microb. Genomics"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Youngblut,N.D. et al. (2019) Nat. Commun."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Balvín,O. et al. (2018) Sci. Rep."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Prostak,S.M. et al. (2021) Curr. Biol."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Dijkhuizen,L.W. et al. (2021) Front. Plant Sci."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Zhang,X. et al. (2022) Microbiol. Spectr."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Peris,D. et al. (2022) PLOS Genet."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Denamur,E. et al. (2022) PLOS Genet."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Dezordi,F.Z. et al. (2022) bioRxiv"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Lin,Y. et al. (2021) Microbiome"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Wang,Y. et al. (2022) bioRxiv"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Qi,Z. et al. (2022) Food Control"</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Zhou,X. et al. (2022) Food Res. Int."</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-string">"Zhou,X. et al. (2022) Nat. Commun."</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df_frequence<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> stringr<span class="hljs-operator">::</span>str_remove_all<span class="hljs-punctuation">(</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df_frequence<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">"[()]"</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df_frequence<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> stringr<span class="hljs-operator">::</span>str_replace_all<span class="hljs-punctuation">(</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df_frequence<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">","</span><span class="hljs-punctuation">,</span><span class="hljs-string">"-"</span><span class="hljs-punctuation">)</span><br><br>unit_29 <span class="hljs-operator">&lt;-</span> create_unit<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df_frequence<span class="hljs-punctuation">,</span><br>                       key <span class="hljs-operator">=</span> <span class="hljs-string">"E029_simplebar_1"</span><span class="hljs-punctuation">,</span><br>                       type <span class="hljs-operator">=</span> <span class="hljs-string">"DATASET_SIMPLEBAR"</span><span class="hljs-punctuation">,</span><br>                       tree <span class="hljs-operator">=</span> tree<span class="hljs-punctuation">)</span><br>write_unit<span class="hljs-punctuation">(</span>unit_29<span class="hljs-punctuation">)</span><br><br>unit_30 <span class="hljs-operator">&lt;-</span> create_unit<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df_frequence<span class="hljs-punctuation">,</span><br>                       key <span class="hljs-operator">=</span> <span class="hljs-string">"E030_simplebar_2"</span><span class="hljs-punctuation">,</span><br>                       type <span class="hljs-operator">=</span> <span class="hljs-string">"DATASET_SIMPLEBAR"</span><span class="hljs-punctuation">,</span><br>                       method <span class="hljs-operator">=</span> <span class="hljs-string">"mean"</span><span class="hljs-punctuation">,</span><br>                       tree <span class="hljs-operator">=</span> tree<span class="hljs-punctuation">)</span><br>write_unit<span class="hljs-punctuation">(</span>unit_30<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307171154280.png" alt="image-20230717115427115"></p><h2 id="添加热图"><a href="#添加热图" class="headerlink" title="添加热图"></a>添加热图</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 添加热图</span><br>library(itol.toolkit)<br>library(data.table)<br>library(ape)<br>tree &lt;- system.file(<span class="hljs-string">"extdata"</span>,<br>                    <span class="hljs-string">"tree_of_itol_templates.tree"</span>,<br>                    package = <span class="hljs-string">"itol.toolkit"</span>)<br>df_frequence &lt;- system.file(<span class="hljs-string">"extdata"</span>,<br>                            <span class="hljs-string">"templates_frequence.txt"</span>,<br>                            package = <span class="hljs-string">"itol.toolkit"</span>)<br>df_frequence &lt;- fread(df_frequence)<br><br>unit_25 &lt;- create_unit(data = df_frequence,<br>                       key = <span class="hljs-string">"E025_heatmap_1"</span>,<br>                       <span class="hljs-built_in">type</span> = <span class="hljs-string">"DATASET_HEATMAP"</span>,<br>                       tree = tree)<br>unit_25@specific_themes$heatmap$color<span class="hljs-variable">$min</span> &lt;- <span class="hljs-string">"#ffd966"</span><br>unit_25@specific_themes$heatmap$color<span class="hljs-variable">$max</span> &lt;- <span class="hljs-string">"#cc0000"</span><br>unit_25@specific_themes$heatmap<span class="hljs-variable">$use_mid</span> &lt;- 0<br>write_unit(unit_25)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307171200150.png" alt="image-20230717120009942"></p><hr><p>基本的思路搞定了，先实战一下再说。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些R语言资源</title>
      <link href="/article/rziyuan/"/>
      <url>/article/rziyuan/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://r4pde.netlify.app/">R语言处理植物病害数据</a></li><li><a href="https://pyoflife.com/an-introduction-to-spatial-regression-analysis-in-r-pdf/">R语言处理空间地图数据</a></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GTDB-Tk数据库配置</title>
      <link href="/article/gtdbtk/"/>
      <url>/article/gtdbtk/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装使用<code>mamba</code>即可。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载地址：<a href="https://data.gtdb.ecogenomic.org/releases/release214/214.1/auxillary_files/">https://data.gtdb.ecogenomic.org/releases/release214/214.1/auxillary_files/</a></p><p>下载最大的这个文件：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307141207803.png" alt="image-20230714120758194"></p><p>下载完成后解压即可。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>初次运行显示：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307141208306.png" alt="image-20230714120849897"></p><p>将数据库软连接过去即可：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">ln</span> -s ~/database/gtdb.v207/* ~/mambaforge/envs/metagenome.NatComm/share/gtdbtk-1.0.2/db/<br></code></pre></td></tr></tbody></table></figure><p>再运行就OK了：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307141210712.png" alt="image-20230714121035200"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>假设注释宏基因组的<code>MAG</code>：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">gtdbtk classify_wf \<br>--cpus 16 \<br>-x fa \<br>--genome_dir bins_drep_comp70/dereplicated_genomes/ \<br>--out_dir anno_drep_comp70/<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的starship配置文件</title>
      <link href="/article/starship/"/>
      <url>/article/starship/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># # Get editor completions based on the config schema</span><br><span class="hljs-comment"># # "$schema" = 'https://starship.rs/config-schema.json'</span><br><span class="hljs-string">"<span class="hljs-variable">$schema</span>"</span> = <span class="hljs-string">'https://www.web4xiang.com/blog/article/starship/config-schema.json'</span><br><br><br><br>add_newline = <span class="hljs-literal">true</span><br><br>format = <span class="hljs-string">""</span><span class="hljs-string">"<span class="hljs-variable">$time</span> <span class="hljs-variable">$all</span>"</span><span class="hljs-string">""</span><br><br>[character]<br>success_symbol = <span class="hljs-string">"[👉👉👉➡️ ➡️ ➡️ ](white)"</span><br>error_symbol = <span class="hljs-string">"[👉👉👉➡️ ➡️ ➡️ ](red)"</span><br><br>[git_branch]<br>symbol = <span class="hljs-string">"🌱 "</span><br>truncation_length = 4<br>truncation_symbol = <span class="hljs-string">""</span><br><span class="hljs-comment"># ignore_branches = ["master", "main"]</span><br>format = <span class="hljs-string">"[](fg:#ffffff bg:none)[ 🌱 ](fg:#282c34 bg:#ffffff)[](fg:#ffffff bg:#24c90a)[ <span class="hljs-variable">$branch</span>](<span class="hljs-variable">$style</span>)[](fg:#24c90a bg:none) "</span><br>style = <span class="hljs-string">"fg:#ffffff bg:#24c90a"</span><br><br>[git_commit]<br>commit_hash_length = 4<br>tag_symbol = <span class="hljs-string">"🔖 "</span><br>format = <span class="hljs-string">"[\\(<span class="hljs-variable">$hash</span>\\)](<span class="hljs-variable">$style</span>) [\\(<span class="hljs-variable">$tag</span>\\)](<span class="hljs-variable">$style</span>)"</span><br>style = <span class="hljs-string">"green"</span><br><br>[git_status]<br>format=<span class="hljs-string">"[](fg:#ffffff bg:none)[ 🥶 ](fg:#282c34 bg:#ffffff)[ ](fg:#ffffff bg:#4da0ff)[<span class="hljs-variable">$modified</span>](fg:#282c34 bg:#4da0ff)[<span class="hljs-variable">$untracked</span>](fg:#282c34 bg:#4da0ff)[<span class="hljs-variable">$staged</span>](fg:#282c34 bg:#4da0ff)[<span class="hljs-variable">$renamed</span>](fg:#282c34 bg:#4da0ff)[](fg:#4da0ff bg:none)"</span><br>conflicted = <span class="hljs-string">""</span><br>ahead = <span class="hljs-string">"🏎💨"</span><br>behind = <span class="hljs-string">"😰"</span><br>diverged = <span class="hljs-string">"😵"</span><br>up_to_date = <span class="hljs-string">"🥰"</span><br>untracked = <span class="hljs-string">"🤷"</span><br>stashed = <span class="hljs-string">"📦"</span><br>modified = <span class="hljs-string">"📝"</span><br>renamed = <span class="hljs-string">"👅"</span><br>deleted = <span class="hljs-string">"🗑️"</span><br>style = <span class="hljs-string">"red"</span><br>disabled = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># [git_state]</span><br><span class="hljs-comment"># rebase = "REBASING"</span><br><span class="hljs-comment"># merge ="MERGING"</span><br><span class="hljs-comment"># revert = "REVERTING"</span><br><span class="hljs-comment"># cherry_pick = "CHERRY-PICKING"</span><br><span class="hljs-comment"># bisect = "BISECTING"</span><br><span class="hljs-comment"># am = "AM"</span><br><span class="hljs-comment"># am_or_rebase = "AM/REBASE"</span><br><span class="hljs-comment"># style ="yellow"</span><br><span class="hljs-comment"># format = '\([$state( $progress_current/$progress_total)]($style)\) '</span><br><span class="hljs-comment"># disabled = true</span><br><br><br>[directory]<br>format = <span class="hljs-string">"[](fg:#ffffff bg:none)[ 📚 ](fg:#282c34 bg:#ffffff)[](fg:#ffffff bg:#00b76d)[ <span class="hljs-variable">$path</span>](<span class="hljs-variable">$style</span>)[](fg:#00b76d bg:none) "</span><br>style = <span class="hljs-string">"fg:#ffffff bg:#00b76d"</span><br>truncation_length = 3<br>truncate_to_repo=<span class="hljs-literal">false</span><br>home_symbol = <span class="hljs-string">""</span><br><br>[nodejs]<br>symbol = <span class="hljs-string">"🤖 "</span><br>disabled = <span class="hljs-literal">true</span><br><br>[package] <br>symbol = <span class="hljs-string">"📦 "</span><br>disabled = <span class="hljs-literal">true</span><br><br>[python]<br>symbol = <span class="hljs-string">"🐍 "</span><br><br>[rust]<br>symbol = <span class="hljs-string">"🦀 "</span><br><br>[conda]<br>symbol = <span class="hljs-string">"🐳 "</span><br><br>[time]<br>disabled = <span class="hljs-literal">false</span><br>format=<span class="hljs-string">"[](fg:#ffffff bg:none)[ 🐼 一二布布🐻 ](fg:#282c34 bg:#ffffff)[](fg:#ffffff bg:#772953)[ <span class="hljs-variable">$time</span>](<span class="hljs-variable">$style</span>)[](fg:#772953 bg:none)"</span><br>time_format = <span class="hljs-string">"%T"</span> <span class="hljs-comment">#change to %R to only have HH:MM</span><br>style=<span class="hljs-string">"fg:#ffffff bg:#772953"</span><br><br><span class="hljs-comment"># [custom.emoji]</span><br><span class="hljs-comment"># description = "Displays a (pseudo) random emoji for each prompt"</span><br><span class="hljs-comment"># command = "EMOJIS=(⛵️ 🛰 🪐 🚀 🧡 🔭 🌍 💫 ☄️ ✨ 🌠 🌌 ⭐️); EMOJI_INDEX=$(( $RANDOM % 12 + 0 )); echo ${EMOJIS[$EMOJI_INDEX]}"</span><br><span class="hljs-comment"># when = "1"</span><br><span class="hljs-comment"># shell = ["cmd /C"]</span><br><span class="hljs-comment"># format = "$output"</span><br></code></pre></td></tr></tbody></table></figure><p><a href="config-schema.json">config-schema.json</a></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>细菌泛基因组分析工具panX</title>
      <link href="/article/panx/"/>
      <url>/article/panx/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307082143458.png" alt=""></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><blockquote><p><a href="https://academic.oup.com/nar/article-abstract/46/1/e5/4564799?login=false">Ding W, Baumdicker F, Neher R A. panX: pan-genome analysis and exploration[J]. Nucleic acids research, 2018, 46(1): e5-e5.</a></p></blockquote><p>我是用<code>mamba</code>安装的：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create --name panX<br>mamba activate panX<br>mamba install -c conda-forge python=2.7.12<br></code></pre></td></tr></tbody></table></figure><p>然后依次安装这些软件就好：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">- python==2.7.*<br>- python-dateutil&gt;=2.5.0<br>- biopython<br>- numpy<br>- scipy<br>- pandas<br>- diamond<br>- fasttree<br>- mafft<br>- mcl<br>- raxml<br>- treetime==0.6.*【mm install -c bioconda treetime==0.6.\*】<br>- pip<br>- pip: ete2<br></code></pre></td></tr></tbody></table></figure><p>然后从<a href="https://github.com/neherlab/pan-genome-analysis">官方地址</a>把项目克隆或者下载下来就好。</p><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><p>官方的示例数据是NCBI的<code>gbk</code>格式，可是通常都是没有这种格式的，就在我要放弃的时候发现一个参数：<code>`-ngbk</code>，当没有<code>gbk</code>文件的时候加上这个参数即可。</p><p>需要的数据有基因核酸序列和蛋白序列，<strong>而且两个文件的文件名称以及序列的ID必须完全一致，不然会报错！</strong>核酸序列后缀是<code>fna</code>，蛋白序列的后缀是<code>faa</code>.</p><p>由于是使用<code>DIAMOND</code>进行序列比对，因此在蛋白序列中不能出现<code>.</code>，ChatGPT帮忙写了个脚本去除蛋白序列中的<code>.</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Bio <span class="hljs-keyword">import</span> SeqIO<br><span class="hljs-keyword">import</span> sys<br><br>input_file = sys.argv[<span class="hljs-number">1</span>] <span class="hljs-comment"># 第一个参数为输入fasta文件名</span><br>output_file = sys.argv[<span class="hljs-number">2</span>] <span class="hljs-comment"># 第二个参数为输出fasta文件名</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_file, <span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> output_handle:<br>    input_sequences = SeqIO.parse(input_file, <span class="hljs-string">"fasta"</span>)<br>    <span class="hljs-keyword">for</span> seq <span class="hljs-keyword">in</span> input_sequences:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">"."</span> <span class="hljs-keyword">in</span> seq.seq:<br>            <span class="hljs-keyword">if</span> seq.seq.index(<span class="hljs-string">"."</span>) == <span class="hljs-built_in">len</span>(seq.seq)-<span class="hljs-number">1</span>:<br>                seq.seq = seq.seq[:-<span class="hljs-number">1</span>]<br>                SeqIO.write(seq, output_handle, <span class="hljs-string">"fasta"</span>)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-string">"."</span> <span class="hljs-keyword">in</span> seq.seq[<span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]:<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">else</span>:<br>                SeqIO.write(seq, output_handle, <span class="hljs-string">"fasta"</span>)<br>        <span class="hljs-keyword">else</span>:<br>            SeqIO.write(seq, output_handle, <span class="hljs-string">"fasta"</span>)<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">python3 上述脚本 输入文件 输出文件<br></code></pre></td></tr></tbody></table></figure><h2 id="开始运行"><a href="#开始运行" class="headerlink" title="开始运行"></a>开始运行</h2><p>将核酸序列和蛋白序列放在一个文件夹下，加入我的文件名叫<code>project</code>，那就将核酸序列和蛋白序列全部放在这个文件夹下，然后进入这个文件夹，然后运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">/path/to/panX/panX.py  -fn ./ -sl bin.2 -ngbk -t 65<br></code></pre></td></tr></tbody></table></figure><ul><li><code>fn</code>表示文件夹路径，如果和核酸蛋白文件在一个目录就用<code>./</code>；</li><li><code>sl</code>参数表示临时文件的名称；</li><li><code>-ngbk</code>表示输入文件不是<code>gbk</code>格式；</li><li><code>-t</code>：线程，越多越快。</li></ul><p>运行后就会有这些文件和文件夹：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307082158552.png" alt="image-20230708215842946"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>部分运行日志：</p><figure class="highlight gradle"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs gradle">Running panX in main folder: <span class="hljs-regexp">/home/u</span>ser<span class="hljs-regexp">/project/</span>sanqi.metagenomics<span class="hljs-regexp">/14.bins.pangenome/</span>bin.<span class="hljs-number">2</span>/<br>mv: 对 <span class="hljs-string">'/home/user/project/sanqi.metagenomics/14.bins.pangenome/bin.2/*.faa'</span> 调用 stat 失败: 没有那个文件或目录<br>======  step01: strain list successfully loaded<br>======  starting step03: extract sequences <span class="hljs-keyword">from</span> GenBank <span class="hljs-keyword">file</span><br>======  time <span class="hljs-keyword">for</span> step03:<br> <span class="hljs-number">0.36</span> minutes (<span class="hljs-number">21.55</span> seconds) <br><br>======  starting step04: extract metadata <span class="hljs-keyword">from</span> GenBank <span class="hljs-keyword">file</span><br>======  time <span class="hljs-keyword">for</span> step04:<br> <span class="hljs-number">0.00</span> minutes (<span class="hljs-number">0.00</span> seconds) <br><br>======  starting step05: cluster proteins<br>diamond inputfile: reference.faa<br>diamond build index (makedb):  <span class="hljs-number">0.03</span> minutes (<span class="hljs-number">1.67</span> seconds)<br>command line record: <span class="hljs-regexp">/home/u</span>ser<span class="hljs-regexp">/mambaforge/</span>envs<span class="hljs-regexp">/panX/</span>bin<span class="hljs-regexp">/diamond makedb -p 65 --in /</span>home<span class="hljs-regexp">/user/</span><span class="hljs-keyword">project</span><span class="hljs-regexp">/sanqi.metagenomics/</span><span class="hljs-number">14</span>.bins.pangenome<span class="hljs-regexp">/bin.2/</span>protein_faa<span class="hljs-regexp">/diamond_matches/</span>reference.faa -d <span class="hljs-regexp">/home/u</span>ser<span class="hljs-regexp">/project/</span>sanqi.metagenomics<span class="hljs-regexp">/14.bins.pangenome/</span>bin.<span class="hljs-number">2</span><span class="hljs-regexp">/protein_faa/</span>diamond_matches<span class="hljs-regexp">/nr_reference&gt; /</span>home<span class="hljs-regexp">/user/</span><span class="hljs-keyword">project</span><span class="hljs-regexp">/sanqi.metagenomics/</span><span class="hljs-number">14</span>.bins.pangenome<span class="hljs-regexp">/bin.2/</span>protein_faa<span class="hljs-regexp">/diamond_matches/</span>diamond_makedb_reference.log <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>diamond alignment (blastp):  <span class="hljs-number">20.64</span> minutes (<span class="hljs-number">1238.37</span> seconds)<br>diamond_max_target_seqs used: <span class="hljs-number">600</span><br>command line record: <span class="hljs-regexp">/home/u</span>ser<span class="hljs-regexp">/mambaforge/</span>envs<span class="hljs-regexp">/panX/</span>bin<span class="hljs-regexp">/diamond blastp --sensitive -p 65 -e 0.001 --id 0 --query-cover 0 --subject-cover 0 -k 600 -d /</span>home<span class="hljs-regexp">/user/</span><span class="hljs-keyword">project</span><span class="hljs-regexp">/sanqi.metagenomics/</span><span class="hljs-number">14</span>.bins.pangenome<span class="hljs-regexp">/bin.2/</span>protein_faa<span class="hljs-regexp">/diamond_matches/</span>nr_reference -f <span class="hljs-number">6</span> qseqid sseqid bitscore -q <span class="hljs-regexp">/home/u</span>ser<span class="hljs-regexp">/project/</span>sanqi.metagenomics<span class="hljs-regexp">/14.bins.pangenome/</span>bin.<span class="hljs-number">2</span><span class="hljs-regexp">/protein_faa/</span>diamond_matches<span class="hljs-regexp">/reference.faa -o /</span>home<span class="hljs-regexp">/user/</span><span class="hljs-keyword">project</span><span class="hljs-regexp">/sanqi.metagenomics/</span><span class="hljs-number">14</span>.bins.pangenome<span class="hljs-regexp">/bin.2/</span>protein_faa<span class="hljs-regexp">/diamond_matches/</span>query_matches.m8 -t .<span class="hljs-regexp">/  &gt; /</span>home<span class="hljs-regexp">/user/</span><span class="hljs-keyword">project</span><span class="hljs-regexp">/sanqi.metagenomics/</span><span class="hljs-number">14</span>.bins.pangenome<span class="hljs-regexp">/bin.2/</span>protein_faa<span class="hljs-regexp">/diamond_matches/</span>diamond_blastp_reference.log  <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何批量从NCBI下载基因组数据</title>
      <link href="/article/sheng-wu-xin-xi-xue/"/>
      <url>/article/sheng-wu-xin-xi-xue/</url>
      
        <content type="html"><![CDATA[<p>想下载几千个细菌的基因组做泛基因组分析，结果啊总是网络错误下载失败。于是我就搜了搜，发现这个：</p><p><a href="https://www.ncbi.nlm.nih.gov/genome/doc/ftpfaq/">Genomes Download (FTP) FAQ</a></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307061112610.png" alt="image-20230706111203059"></p><p>发现这个链接的命名非常有规律可循。</p><p>那就R语言伺候：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R">df.bins.pan.info <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>`Assembly Accession`<span class="hljs-punctuation">,</span>  `Assembly Name`<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"acc"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"name"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp0 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>acc<span class="hljs-punctuation">,</span> <span class="hljs-string">"_"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                temp1 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>acc<span class="hljs-punctuation">,</span> <span class="hljs-string">"_"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                temp2 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>acc<span class="hljs-punctuation">,</span> <span class="hljs-string">"_"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                temp3 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>acc<span class="hljs-punctuation">,</span> <span class="hljs-string">"_"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span><span class="hljs-number">7</span><span class="hljs-punctuation">,</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>link <span class="hljs-operator">=</span> sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"https://ftp.ncbi.nlm.nih.gov/genomes/all/%s/%s/%s/%s/%s_%s"</span><span class="hljs-punctuation">,</span>temp0<span class="hljs-punctuation">,</span> temp1<span class="hljs-punctuation">,</span> temp2<span class="hljs-punctuation">,</span> temp3<span class="hljs-punctuation">,</span> acc<span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                comm <span class="hljs-operator">=</span> sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">'wget -np --recursive -e robots=off --reject "index.html" --no-host-directories --cut-dirs=6 %s -P ./'</span><span class="hljs-punctuation">,</span>link<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> down.comm<br><br>down.comm <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  write.table<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"./data/sanqimetagenome/results/分箱/13.泛基因组/基因组下载链接.txt"</span><span class="hljs-punctuation">,</span> <br>            col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/016/728/825/GCA_016728825.1_ASM1672882v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/728/825/GCF_016728825.1_ASM1672882v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/008/245/125/GCA_008245125.1_ASM824512v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/008/245/125/GCF_008245125.1_ASM824512v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/013/267/375/GCA_013267375.1_ASM1326737v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/013/267/375/GCF_013267375.1_ASM1326737v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/900/636/675/GCA_900636675.1_43781_F01 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/900/636/675/GCF_900636675.1_43781_F01 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/019/968/625/GCA_019968625.1_ASM1996862v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/019/968/625/GCF_019968625.1_ASM1996862v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/082/135/GCA_002082135.1_ASM208213v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/082/135/GCF_002082135.1_ASM208213v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/022/870/085/GCA_022870085.1_ASM2287008v1 -P ./<br>wget -np --recursive -e robots=off --reject <span class="hljs-string">"index.html"</span> --no-host-directories --cut-dirs=6 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/022/870/085/GCF_022870085.1_ASM2287008v1 -P ./<br></code></pre></td></tr></tbody></table></figure><p>放服务器后台让它慢慢跑着去。</p><blockquote><p>需要加上<code>-np</code>这个参数，不然会向上搜索子目录，比较麻烦，也没啥用。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAGpurify2配置</title>
      <link href="/article/magpurify2/"/>
      <url>/article/magpurify2/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create -n magpurify2    <br>mamba activate magpurify2     <br>pip install magpurify2       <br></code></pre></td></tr></tbody></table></figure><h2 id="数据库下载"><a href="#数据库下载" class="headerlink" title="数据库下载"></a>数据库下载</h2><p>数据库存放在谷歌云盘上，有15G，我选择临时租个阿里云新加坡的服务器下载了再传回来。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">fileId=<span class="hljs-string">"1ooWiR3LplBy5GsY5wZ7o6dwswiCWVvmi"</span><br>fileName=<span class="hljs-string">"magpurify2DB.v1.0.tar.gz"</span><br>curl -sc /tmp/cookie <span class="hljs-string">"https://drive.google.com/uc?export=download&amp;id=<span class="hljs-variable">${fileId}</span>"</span> &gt; /dev/null<br>code=<span class="hljs-string">"<span class="hljs-subst">$(awk '/_warning_/ {print $NF}' /tmp/cookie)</span>"</span><br>curl -Lb /tmp/cookie <span class="hljs-string">"https://drive.google.com/uc?export=download&amp;confirm=<span class="hljs-variable">${code}</span>&amp;id=<span class="hljs-variable">${fileId}</span>"</span> -o <span class="hljs-variable">${fileName}</span><br></code></pre></td></tr></tbody></table></figure><p>传输完成后解压即可。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">magpurify2 taxonomy -t 60 final_assembly.fasta mapurify2.taxonomy ~/database/magpurify2<br></code></pre></td></tr></tbody></table></figure><p>结果：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">genome  contig  genome_taxonomy contig_taxonomy<br>final_assembly  k141_419989     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae<br>final_assembly  k141_296469     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Gammaproteobacteria;Xanthomonadales;Xanthomonadaceae<br>final_assembly  k141_160589     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Alphaproteobacteria;Rhizobiales;Rhizobiaceae;Allorhizobium<br>final_assembly  k141_432342     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Alphaproteobacteria;Sphingomonadales;Sphingomonadaceae;Sphingopyxis<br>final_assembly  k141_716437     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae;Acidovorax_E<br>final_assembly  k141_580566     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacterales;Enterobacteriaceae;Enterobacter<br>final_assembly  k141_24707      root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Gammaproteobacteria;Burkholderiales;Burkholderiaceae<br>final_assembly  k141_12355      root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Bacteroidota;Bacteroidia;Flavobacteriales;Flavobacteriaceae;Flavobacterium<br>final_assembly  k141_370583     root;Bacteria;Proteobacteria;Gammaproteobacteria        root;Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宏基因组学习笔记</title>
      <link href="/article/metagenomelearning/"/>
      <url>/article/metagenomelearning/</url>
      
        <content type="html"><![CDATA[<h2 id="分析策略"><a href="#分析策略" class="headerlink" title="分析策略"></a>分析策略</h2><p>以下三个图来自微信公众号[<a href="https://mp.weixin.qq.com/s/0xRDjO5cD-dwMraAQbWouw">希研未来</a>]。</p><ul><li>基于<code>reads</code></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161344092.png" alt="图片"></p><ul><li>基于组装</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161344467.png" alt="图片"></p><ul><li>基于<code>Bin</code></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161345873.png" alt="图片"></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>常用的这些软件用<code>Conda</code>或者是<code>mamba</code>都很好处理，但是<code>metaWRAP</code>这个软件是真的难安装啊。踩坑多次终于安装上了：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create -y --name metawrap-env --channel ursky metawrap-mg=1.3.2     <br></code></pre></td></tr></tbody></table></figure><h2 id="数据配置"><a href="#数据配置" class="headerlink" title="数据配置"></a>数据配置</h2><h3 id="CheckM"><a href="#CheckM" class="headerlink" title="CheckM"></a>CheckM</h3><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkcd ~<span class="hljs-regexp">/database/</span>checkm<br>axel -n <span class="hljs-number">50</span> ftp:<span class="hljs-regexp">//</span>download.nmdc.cn<span class="hljs-regexp">/tools/m</span>eta<span class="hljs-regexp">/checkm/</span>checkm_data_2015_01_16.tar.gz      <br>tar -xvf checkm_data_2015_01_16.tar.gz   <br></code></pre></td></tr></tbody></table></figure><p>可以通过运行<code>checkm data setRoot</code>设置数据库路径。</p><h3 id="kraken2"><a href="#kraken2" class="headerlink" title="kraken2"></a>kraken2</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/kraken2<br>axel -n 50 ftp://download.nmdc.cn/tools/meta/kraken2/k2_pluspf_20230314.tar.gz<br>tar -xvf k2_pluspf_20230314.tar.gz<br></code></pre></td></tr></tbody></table></figure><h3 id="NCAI-nt"><a href="#NCAI-nt" class="headerlink" title="NCAI-nt"></a>NCAI-nt</h3><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkcd ~<span class="hljs-regexp">/database/</span>ncbi.nt<br>~<span class="hljs-regexp">/.aspera/</span>connect<span class="hljs-regexp">/bin/</span>ascp -i ~<span class="hljs-regexp">/mambaforge/</span>envs<span class="hljs-regexp">/tools4bioinf/</span>etc/asperaweb_id_dsa.openssh --overwrite=diff -QTr -l6000m \ <br>    anonftp@ftp.ncbi.nlm.nih.gov:blast<span class="hljs-regexp">/db/</span>v4<span class="hljs-regexp">/nt_v4.{00..85}.tar.gz ./</span><br></code></pre></td></tr></tbody></table></figure><h3 id="NCBI-taxonomy"><a href="#NCBI-taxonomy" class="headerlink" title="NCBI-taxonomy"></a>NCBI-taxonomy</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/ncbi.taxonomy<br>axel -n 50 ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz<br>tar -xvf taxdump.tar.gz<br></code></pre></td></tr></tbody></table></figure><h3 id="宿主基因组"><a href="#宿主基因组" class="headerlink" title="宿主基因组"></a>宿主基因组</h3><p>通常第一步是去除宿主基因组，需要构建索引，（其他宿主类似），如下：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/human.genome<br>axel -n 50 http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz   <br>gunzip hg38.fa.gz<br><span class="hljs-built_in">cat</span> *fa &gt; hg38.fa<br><span class="hljs-built_in">rm</span> chr*.fa<br>bmtool -d hg38.fa -o hg38.bitmask<br>srprism mkindex -i hg38.fa -o hg38.srprism -M 100000<br></code></pre></td></tr></tbody></table></figure><p>为了识别不同的宿主，该软件参数<code>-x</code>可以指定宿主，如<code>-x rice</code>，默认的宿主是<code>human</code>，文件前缀是<code>hg38</code>.</p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi ~/mambaforge/envs/metawrap-env/bin/config-metawrap<br><span class="hljs-comment"># Paths to metaWRAP scripts (dont have to modify)</span><br>mw_path=$(<span class="hljs-built_in">which</span> metawrap)<br>bin_path=<span class="hljs-variable">${mw_path%/*}</span><br>SOFT=<span class="hljs-variable">${bin_path}</span>/metawrap-scripts<br>PIPES=<span class="hljs-variable">${bin_path}</span>/metawrap-modules<br><br><span class="hljs-comment"># CONFIGURABLE PATHS FOR DATABASES (see 'Databases' section of metaWRAP README for details)</span><br><span class="hljs-comment"># path to kraken standard database</span><br><span class="hljs-comment"># KRAKEN_DB=~/KRAKEN_DB</span><br>KRAKEN2_DB=~/database/kraken2.plus.plantandfungi <br><br><span class="hljs-comment"># path to indexed human (or other host) genome (see metaWRAP website for guide). This includes .bitmask and .srprism files</span><br>BMTAGGER_DB=~/database/human.genome<br><span class="hljs-comment">#</span><br><span class="hljs-comment"># paths to BLAST databases</span><br>BLASTDB=~/database/ncbi.nt<br>TAXDUMP=~/database/ncbi.taxonomy<br></code></pre></td></tr></tbody></table></figure><h2 id="数据质控"><a href="#数据质控" class="headerlink" title="数据质控"></a>数据质控</h2><p>如果宿主不是人类，可以使用参数<code>--skip-bmtagger</code>跳过：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap read_qc --skip-bmtagger -1 data/C3_1.R1.raw.fastq -2 data/C3_1.R2.raw.fastq -t 60 -o readqc/C3_1<br></code></pre></td></tr></tbody></table></figure><p>有多个文件时，批量运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> F <span class="hljs-keyword">in</span> RAW_READS/*_1.fastq; <span class="hljs-keyword">do</span><br>R=<span class="hljs-variable">${F%_*}</span>_2.fastq<br>BASE=<span class="hljs-variable">${F##*/}</span><br>SAMPLE=<span class="hljs-variable">${BASE%_*}</span><br>metawrap read_qc -1 <span class="hljs-variable">$F</span> -2 <span class="hljs-variable">$R</span> -t 1 -o<br>READ_QC/<span class="hljs-variable">$SAMPLE</span> &amp;<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>测试两个文件差不多35G，60线程跑了45分钟左右。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306151418952.png" alt="download"></p><h2 id="宏基因组组装"><a href="#宏基因组组装" class="headerlink" title="宏基因组组装"></a>宏基因组组装</h2><p>可以单个样品分别组装，也可以将群落所有文件一起组装。如果要全部一起组装，就先把文件合并：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> CLEAN_READS/ERR*_1.fastq &gt; CLEAN_READS/ALL_READS_1.fastq<br><span class="hljs-built_in">cat</span> CLEAN_READS/ERR*_2.fastq &gt; CLEAN_READS/ALL_READS_2.fastq<br></code></pre></td></tr></tbody></table></figure><p>开始组装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap assembly -1 readqc/C3_1/C3_1.R1.raw_val_1.fq -2 readqc/C3_1/C3_1.R2.raw_val_2.fq -m 100 -t 60 --megahit -o assembly  <br></code></pre></td></tr></tbody></table></figure><p>有两种组装方式可以选择：</p><ul><li><code>megahit</code>：默认的算法，速度更快。</li><li><code>metaspades</code>：速度更慢且需要更多的内存，但是结果更准确。</li></ul><p>组装完成的结果文件是<code>final_assembly.fasta</code>，对应的报告文件是<code>assembly_report.html</code>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306151727946.png" alt="image-20230615172713903"></p><p>测试两个文件差不多35G，60线程+100G内存跑了3小时20分钟左右。组装大小是108M，一共有67463个contigs.</p><h2 id="分类和丰度"><a href="#分类和丰度" class="headerlink" title="分类和丰度"></a>分类和丰度</h2><p>使用<code>kraken2</code>的，同时对原始的<code>reads</code>和组装后的<code>contigs</code>进行分析，但是目的不一样：</p><ul><li>基于<code>reads</code>：是看样品中哪些群落被检测到了；</li><li>基于<code>contigs</code>：目的是看那些物种比其他的组装得更好，通常不适用<code>contigs</code>来推断整个群落组成结构。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap kraken2  --no-preload -t 60 -s 1000000 -o kraken readqc/C3_1/C3_1.R* assembly/final_assembly.fasta<br></code></pre></td></tr></tbody></table></figure><p>结果文件：</p><ul><li><code>.kraken</code>是估计的分类特征表；</li><li><code>.krona</code>是<code>KronaTools</code>输出的描述统计信息；</li><li><code>kronagram.html</code>包含了所有的分类信息。</li></ul><h2 id="分箱Bin"><a href="#分箱Bin" class="headerlink" title="分箱Bin"></a>分箱Bin</h2><p>使用三种算法对组装的结果进行分箱。这一步对文件的后缀貌似非常严格，好像必须是<code>fastq</code>. 耗时1小时10分钟。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap binning -o init.binning -t 60 -a assembly/final_assembly.fasta --metabat2 --maxbin2 --concoct readqc/C3_1/C3_1.R1.raw_val_*fastq<br></code></pre></td></tr></tbody></table></figure><h2 id="合并分箱结果"><a href="#合并分箱结果" class="headerlink" title="合并分箱结果"></a>合并分箱结果</h2><p>这一步需要使用<code>CheckM</code>这个数据库，见<code>数据配置</code>环节。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap bin_refinement -o bin.refinement -t 60 -A init.binning/metabat2_bins -B init.binning/maxbin2_bins -C init.binning/concoct_bins -c 50 -x 10  <br></code></pre></td></tr></tbody></table></figure><p>运行时间差不多3小时。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306152059641.png" alt="image-20230615205927716"></p><h2 id="分箱可视化"><a href="#分箱可视化" class="headerlink" title="分箱可视化"></a>分箱可视化</h2><p>运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap blobology -a assembly/final_assembly.fasta -t 60 -o blobology --bins bin.refinement/metawrap_50_10_bins readqc/C3_1/C3_1.R1.raw_val_*fastq  <br></code></pre></td></tr></tbody></table></figure><p>遇到报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">BLAST Database error: Error: Not a valid version 4 database.<br></code></pre></td></tr></tbody></table></figure><p>解决方法：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">ln</span> -s /home/xxx/mambaforge/envs/blast+/bin/blastn /home/xxx/mambaforge/envs/metawrap-env/bin/blastn    <br></code></pre></td></tr></tbody></table></figure><p>运行时间差不多10小时。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306160832367.png" alt="image-20230616083215326"></p><h2 id="基因组草图丰度"><a href="#基因组草图丰度" class="headerlink" title="基因组草图丰度"></a>基因组草图丰度</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap quant_bins -b bin.refinement/metawrap_50_10_bins -o quant.bins -a assembly/final_assembly.fasta readqc/C3_1/C3_1.R1.raw_val_*fastq    <br></code></pre></td></tr></tbody></table></figure><p>耗时1小时。</p><p>结果文件存放在<code>bin_abundance_table.tab</code>这个文件中。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161100975.png" alt="image-20230616110048572"></p><h2 id="重新组装bins"><a href="#重新组装bins" class="headerlink" title="重新组装bins"></a>重新组装bins</h2><p>相当于对最佳的<code>bin</code>再次进行重新组装，只有让<code>bins</code>质量变得更好的<code>reads</code>才会被添加到<code>bins</code>中。这一步是用所有的<code>reads</code>进行分析的。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap reassemble_bins -o bin.reassembly -1 readqc/C3_1/C3_1.R1.raw_val_1.fastq -2 readqc/C3_1/C3_1.R1.raw_val_2.fastq -t 60 -m 100 -c 50 -x 10 -b bin.refinement/metawrap_50_10_bins<br></code></pre></td></tr></tbody></table></figure><p>耗时30分钟。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161143519.png" alt="reassembly_results"></p><h2 id="分箱物种丰度"><a href="#分箱物种丰度" class="headerlink" title="分箱物种丰度"></a>分箱物种丰度</h2><p>耗时1小时13分钟。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap classify_bins -b bin.reassembly/reassembled_bins -o bins.classification -t 60    <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161348822.png" alt="image-20230616134819875"></p><h2 id="分箱功能注释"><a href="#分箱功能注释" class="headerlink" title="分箱功能注释"></a>分箱功能注释</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap annotate_bins -o bins.anno -t 60 -b bin.reassembly/reassembled_bins  <br></code></pre></td></tr></tbody></table></figure><p>遇到报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Please rename your contigs or use --centre XXX to generate clean contig names.<br></code></pre></td></tr></tbody></table></figure><p>原因是<code>bin</code>中的序列名称超过20个字符了，因此需要修改序列名称。解决方法（<a href="https://www.metagenomics.wiki/tools/annotation/prokka">见Prokka官网</a>）：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161354767.png" alt="image-20230616135359463"></p><p>写了个<code>python</code>代码解决这个问题：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br>fasta_file = sys.argv[<span class="hljs-number">1</span>]<br>out_file = sys.argv[<span class="hljs-number">2</span>]<br>index_file = sys.argv[<span class="hljs-number">3</span>]<br><br>i = <span class="hljs-number">0</span>  <span class="hljs-comment"># 从数字0开始</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(fasta_file, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> f, <span class="hljs-built_in">open</span>(out_file, <span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> out, <span class="hljs-built_in">open</span>(index_file, <span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> index:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>        <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">"&gt;"</span>):<br>            i += <span class="hljs-number">1</span><br>            <span class="hljs-comment"># 修改序列名称</span><br>            out.write(<span class="hljs-string">"&gt;seq{0}\n"</span>.<span class="hljs-built_in">format</span>(i))<br>            <span class="hljs-comment"># 输出新旧ID对应关系</span><br>            old_id = line.replace(<span class="hljs-string">"&gt;"</span>,<span class="hljs-string">""</span>)<br>            new_id = <span class="hljs-string">"&gt;seq"</span> + <span class="hljs-built_in">str</span>(i)<br>            index.write(<span class="hljs-built_in">str</span>(new_id) + <span class="hljs-string">"\t"</span> + old_id)<br>        <span class="hljs-keyword">else</span>:<br>            out.write(line)<br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Done."</span>)<br></code></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 ~/scripts/rename.fasta.id.py reassembled_bins/bin.1.orig.fa renamed.bins/bin1.fa bin1.id.txt<br></code></pre></td></tr></tbody></table></figure><p>重新运行注释代码：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap annotate_bins -o bins.anno -t 60 -b bin.reassembly/renamed.bins<br></code></pre></td></tr></tbody></table></figure><p>运行很快，基本上就是一分钟左右。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161435929.png" alt="image-20230616143508827"></p><ul><li>功能注释：</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161436707.png" alt="image-20230616143634334"></p><p>既然拿到了<code>gff</code>文件，那么就可以计算不同基因在不同样品的中丰度了。</p><ul><li>翻译的蛋白：</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161438324.png" alt="image-20230616143807921"></p><p>既然拿到了蛋白序列，那就可以用<code>eggNOG-mapper</code>进行功能注释了（<a href="https://www.web4xiang.com/blog/article/eggnotmapper/">参考博客</a>）：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python3 ~/software/eggNOgmapper/emapper.py -i bin_translated_genes/bin1.faa --output eggnog -m diamond --cpu <span class="hljs-number">60</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161505209.png" alt="image-20230616150504533"></p><p>基本上需要的信息都有了。</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="数据质控-1"><a href="#数据质控-1" class="headerlink" title="数据质控"></a>数据质控</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306161528500.png" alt="image-20230616152806322"></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> F <span class="hljs-keyword">in</span> 0.data/*_1.fastq; <span class="hljs-keyword">do</span> R=<span class="hljs-variable">${F%_*}</span>_2.fastq; BASE=<span class="hljs-variable">${F##*/}</span>; SAMPLE=<span class="hljs-variable">${BASE%_*}</span>; metawrap read_qc --skip-bmtagger -1 <span class="hljs-variable">$F</span> -2 <span class="hljs-variable">$R</span> -t 70 -o 1.read.qc/<span class="hljs-variable">$SAMPLE</span> &amp; <span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p>将质控后的数据移动到新的文件中：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> -p 2.clean.reads/all<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 1.read.qc/*; <span class="hljs-keyword">do</span><br>b=<span class="hljs-variable">${i#*/}</span><br><span class="hljs-built_in">mv</span> <span class="hljs-variable">${i}</span>/final_pure_reads_1.fastq 2.clean.reads/<span class="hljs-variable">${b}</span>_1.fastq<br><span class="hljs-built_in">mv</span> <span class="hljs-variable">${i}</span>/final_pure_reads_2.fastq 2.clean.reads/<span class="hljs-variable">${b}</span>_2.fastq<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h3 id="宏基因组组装-1"><a href="#宏基因组组装-1" class="headerlink" title="宏基因组组装"></a>宏基因组组装</h3><p>将<code>F</code>和<code>R</code>分别合并后再进行组装。</p><ul><li>先合并</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> 2.clean.reads/*_1.fastq &gt; 2.clean.reads/all/all_reads_1.fastq<br><span class="hljs-built_in">cat</span> 2.clean.reads/*_2.fastq &gt; 2.clean.reads/all/all_reads_2.fastq<br></code></pre></td></tr></tbody></table></figure><ul><li>开始组装</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> metawrap assembly -1 2.clean.reads/all/all_reads_1.fastq -2 2.clean.reads/all/all_reads_2.fastq -m 100 -t 60 --megahit -o 3.assembly &amp;  <br></code></pre></td></tr></tbody></table></figure><h3 id="kraken2注释"><a href="#kraken2注释" class="headerlink" title="kraken2注释"></a>kraken2注释</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> metawrap kraken2 -o 4.kraken2 -s 1000000 2.clean.reads/*.fastq 3.assembly/final_assembly.fasta &amp;<br></code></pre></td></tr></tbody></table></figure><h3 id="分箱"><a href="#分箱" class="headerlink" title="分箱"></a>分箱</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap binning -o 5.init.binning -t 60 -a 3.assembly/final_assembly.fasta --metabat2 --maxbin2 --concoct 2.clean.reads/*.fastq  <br></code></pre></td></tr></tbody></table></figure><h3 id="合并分箱结果-1"><a href="#合并分箱结果-1" class="headerlink" title="合并分箱结果"></a>合并分箱结果</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> metawrap bin_refinement -o 6.bin.refinement -t 60 -A 5.init.binning/metabat2_bins -B 5.init.binning/maxbin2_bins -C 5.init.binning/concoct_bins -c 50 -x 10  &amp;<br></code></pre></td></tr></tbody></table></figure><h3 id="分箱结果可视化"><a href="#分箱结果可视化" class="headerlink" title="分箱结果可视化"></a>分箱结果可视化</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> metawrap blobology -a 3.assembly/final_assembly.fasta -t 60 -o 7.blobology --bins 6.bin.refinement/metawrap_50_10_bins 2.clean.reads/*fastq  &amp; <br></code></pre></td></tr></tbody></table></figure><h3 id="分箱丰度"><a href="#分箱丰度" class="headerlink" title="分箱丰度"></a>分箱丰度</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> metawrap quant_bins -b 6.bin.refinement/metawrap_50_10_bins -o 8.quant.bins -a 3.assembly/final_assembly.fasta 2.clean.reads/*fastq &amp; <br></code></pre></td></tr></tbody></table></figure><h3 id="再次分箱"><a href="#再次分箱" class="headerlink" title="再次分箱"></a>再次分箱</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> metawrap reassemble_bins -o 9.bin.reassembly -1 2.clean.reads/all/all_reads_1.fastq -2 2.clean.reads/all/all_reads_2.fastq -t 60 -m 100 -c 50 -x 10 -b 6.bin.refinement/metawrap_50_10_bins &amp;<br></code></pre></td></tr></tbody></table></figure><h3 id="分箱物种丰度-1"><a href="#分箱物种丰度-1" class="headerlink" title="分箱物种丰度"></a>分箱物种丰度</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap classify_bins -b  9.bin.reassembly/reassembled_bins -o 10.bins.classification -t 60<br></code></pre></td></tr></tbody></table></figure><h3 id="分箱功能注释-1"><a href="#分箱功能注释-1" class="headerlink" title="分箱功能注释"></a>分箱功能注释</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> 9.bin.reassembly/renamed.bins<br><span class="hljs-built_in">mkdir</span> 9.bin.reassembly/renamed.bins.id<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 9.bin.reassembly/reassembled_bins/*; <span class="hljs-keyword">do</span> python3 ~/scripts/rename.fasta.id.py <span class="hljs-variable">${i}</span> 9.bin.reassembly/renamed.bins/<span class="hljs-variable">${i##*/}</span> 9.bin.reassembly/renamed.bins.id/<span class="hljs-variable">${i##*/}</span>.id.txt; <span class="hljs-keyword">done</span><br><br> <span class="hljs-built_in">nohup</span> metawrap annotate_bins -o 11.bins.anno -t 60 -b 9.bin.reassembly/renamed.bins &amp;   <br></code></pre></td></tr></tbody></table></figure><h3 id="eggNOG-mapper注释"><a href="#eggNOG-mapper注释" class="headerlink" title="eggNOG-mapper注释"></a>eggNOG-mapper注释</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> 12.eggNOG-mapper<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 11.bins.anno/bin_translated_genes/*; <span class="hljs-keyword">do</span> python3 ~/software/eggNOgmapper/emapper.py -m diamond --cpu 60 -i  11.bins.anno/bin_translated_genes/<span class="hljs-variable">${i##*/}</span> --output 12.eggNOG-mapper/<span class="hljs-variable">${i##*/}</span>.eggnogmapper.txt; <span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><h3 id="所有脚本"><a href="#所有脚本" class="headerlink" title="所有脚本"></a>所有脚本</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> F <span class="hljs-keyword">in</span> 0.data/*_1.fastq; <span class="hljs-keyword">do</span> R=<span class="hljs-variable">${F%_*}</span>_2.fastq; BASE=<span class="hljs-variable">${F##*/}</span>; SAMPLE=<span class="hljs-variable">${BASE%_*}</span>; metawrap read_qc --skip-bmtagger -1 <span class="hljs-variable">$F</span> -2 <span class="hljs-variable">$R</span> -t 70 -o 1.read.qc/<span class="hljs-variable">$SAMPLE</span> &amp; <span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">mkdir</span> -p 2.clean.reads/all<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 1.read.qc/*; <span class="hljs-keyword">do</span><br>b=<span class="hljs-variable">${i#*/}</span><br><span class="hljs-built_in">mv</span> <span class="hljs-variable">${i}</span>/final_pure_reads_1.fastq 2.clean.reads/<span class="hljs-variable">${b}</span>_1.fastq<br><span class="hljs-built_in">mv</span> <span class="hljs-variable">${i}</span>/final_pure_reads_2.fastq 2.clean.reads/<span class="hljs-variable">${b}</span>_2.fastq<br><span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">cat</span> 2.clean.reads/*_1.fastq &gt; 2.clean.reads/all/all_reads_1.fastq<br><span class="hljs-built_in">cat</span> 2.clean.reads/*_2.fastq &gt; 2.clean.reads/all/all_reads_2.fastq<br><br>metawrap assembly -1 2.clean.reads/all/all_reads_1.fastq -2 2.clean.reads/all/all_reads_2.fastq -m 100 -t 60 --megahit -o 3.assembly<br><br>metawrap kraken2 -o 4.kraken2 -s 1000000 2.clean.reads/*.fastq 3.assembly/final_assembly.fasta &amp;      <br><br>metawrap binning -o 5.init.binning -t 60 -a 3.assembly/final_assembly.fasta --metabat2 --maxbin2 --concoct 2.clean.reads/*.fastq <br><br>metawrap bin_refinement -o 6.bin.refinement -t 60 -A 5.init.binning/metabat2_bins -B 5.init.binning/maxbin2_bins -C 5.init.binning/concoct_bins -c 50 -x 10<br><br>metawrap blobology -a 3.assembly/final_assembly.fasta -t 60 -o 7.blobology --bins 6.bin.refinement/metawrap_50_10_bins 2.clean.reads/*fastq<br><br>metawrap quant_bins -b 6.bin.refinement/metawrap_50_10_bins -o 8.quant.bins -a 3.assembly/final_assembly.fasta 2.clean.reads/*fastq<br><br>metawrap reassemble_bins -o 9.bin.reassembly -1 2.clean.reads/all/all_reads_1.fastq -2 2.clean.reads/all/all_reads_2.fastq -t 60 -m 100 -c 50 -x 10 -b 6.bin.refinement/metawrap_50_10_bins<br><br>metawrap classify_bins -b  9.bin.reassembly/reassembled_bins -o 10.bins.classification -t 60 <br><br><span class="hljs-built_in">mkdir</span> 9.bin.reassembly/renamed.bins<br><span class="hljs-built_in">mkdir</span> 9.bin.reassembly/renamed.bins.id<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 9.bin.reassembly/reassembled_bins/*; <span class="hljs-keyword">do</span> python3 ~/scripts/rename.fasta.id.py <span class="hljs-variable">${i}</span> 9.bin.reassembly/renamed.bins/<span class="hljs-variable">${i##*/}</span> 9.bin.reassembly/renamed.bins.id/<span class="hljs-variable">${i##*/}</span>.id.txt; <span class="hljs-keyword">done</span><br><br>metawrap annotate_bins -o 11.bins.anno -t 60 -b 9.bin.reassembly/renamed.bins<br><br><span class="hljs-built_in">mkdir</span> 12.eggNOG-mapper<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 11.bins.anno/bin_translated_genes/*; <span class="hljs-keyword">do</span> python3 ~/software/eggNOgmapper/emapper.py -m diamond --cpu 60 -i  11.bins.anno/bin_translated_genes/<span class="hljs-variable">${i##*/}</span> --output 12.eggNOG-mapper/<span class="hljs-variable">${i##*/}</span>.eggnogmapper.txt; <span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MetaPhlAn4宏基因组数据分析流程学习笔记</title>
      <link href="/article/metaphlan4/"/>
      <url>/article/metaphlan4/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.nature.com/articles/s41587-023-01688-w#citeas">Blanco-Míguez, A., Beghini, F., Cumbo, F. <em>et al.</em> Extending and improving metagenomic taxonomic profiling with uncharacterized species using MetaPhlAn 4. <em>Nat Biotechnol</em> (2023).</a></p></blockquote><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><p><a href="https://huttenhower.sph.harvard.edu/metaphlan/"><strong>MetaPhlAn 4.0</strong></a></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>推荐使用<code>mamba</code>安装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create --name metaphlan4<br>mamba activate metaphlan4<br>mamba install -c bioconda metaphlan<br></code></pre></td></tr></tbody></table></figure><h2 id="数据库下载"><a href="#数据库下载" class="headerlink" title="数据库下载"></a>数据库下载</h2><p>默认第一次运行软件会自动下载数据库，也可以手动下载：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> axel -n 60 http://cmprod1.cibio.unitn.it/biobakery4/metaphlan_databases/bowtie2_indexes/mpa_vOct22_CHOCOPhlAnSGB_202212_bt2.tar &amp;<br><br>wget http://cmprod1.cibio.unitn.it/biobakery4/metaphlan_databases/mpa_vOct22_CHOCOPhlAnSGB_202212.tar<br></code></pre></td></tr></tbody></table></figure><p>下载完成解压后放到默认的目录下即可，默认目录是：<code>~/mambaforge/envs/metaphlan4/lib/python3.10/site-packages/metaphlan/metaphlan_databases</code>.</p><p>下载完成后运行下面的代码会自动解压并创建数据库：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metaphlan --install<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306120841938.png" alt="overview"></p><h2 id="开始分析"><a href="#开始分析" class="headerlink" title="开始分析"></a>开始分析</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><p>支持<code>fasta</code>、<code>fastq</code>、<code>sam</code>和<code>bowtie2out</code>这四种格式文件作为输入文件。</p><h3 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h3><ul><li><a href="https://github.com/biobakery/MetaPhlAn/releases/download/4.0.2/SRS014476-Supragingival_plaque.fasta.gz">SRS014476-Supragingival_plaque.fasta.gz</a></li><li><a href="https://github.com/biobakery/MetaPhlAn/releases/download/4.0.2/SRS014494-Posterior_fornix.fasta.gz">SRS014494-Posterior_fornix.fasta.gz</a></li><li><a href="https://github.com/biobakery/MetaPhlAn/releases/download/4.0.2/SRS014459-Stool.fasta.gz">SRS014459-Stool.fasta.gz</a></li><li><a href="https://github.com/biobakery/MetaPhlAn/releases/download/4.0.2/SRS014464-Anterior_nares.fasta.gz">SRS014464-Anterior_nares.fasta.gz</a></li><li><a href="https://github.com/biobakery/MetaPhlAn/releases/download/4.0.2/SRS014470-Tongue_dorsum.fasta.gz">SRS014470-Tongue_dorsum.fasta.gz</a></li><li><a href="https://github.com/biobakery/MetaPhlAn/releases/download/4.0.2/SRS014472-Buccal_mucosa.fasta.gz">SRS014472-Buccal_mucosa.fasta.gz</a></li></ul><h3 id="运行单个fastq文件"><a href="#运行单个fastq文件" class="headerlink" title="运行单个fastq文件"></a>运行单个fastq文件</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">metaphlan --offline --nproc 60 data/SRS014476-Supragingival_plaque.fasta.gz --input_type fasta &gt; output/SRS014476-Supragingival_plaque_profile.txt  <br></code></pre></td></tr></tbody></table></figure><h3 id="输出文件"><a href="#输出文件" class="headerlink" title="输出文件"></a>输出文件</h3><ul><li><code>Bowtie2</code>的中间文件：比对结果。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">❯ <span class="hljs-built_in">head</span> data/SRS014476-Supragingival_plaque.fasta.gz.bowtie2out.txt                                                                                       ─╯<br>HWUSI-EAS1568_102539179:1:100:10007:7282/1__1.50        UniRef90_P44049|1__7|SGB9649<br>HWUSI-EAS1568_102539179:1:100:10008:17064/1__1.53       UniRef90_E0DI50|1__4|SGB17007<br>HWUSI-EAS1568_102539179:1:100:10012:9508/1__1.85        UniRef90_A0A3S4XT37|1__5|SGB17007<br>HWUSI-EAS1568_102539179:1:100:10013:7741/1__1.92        UniRef90_UNK19880-CIDAPOPB_00170|1__8|SGB19880<br>HWUSI-EAS1568_102539179:1:100:10015:15592/1__1.105      SGB6007__DMIBLHOP_01812<br>HWUSI-EAS1568_102539179:1:100:10025:5272/1__1.159       UniRef90_A0A3S5F533|1__7|SGB17007<br>HWUSI-EAS1568_102539179:1:100:10035:9129/1__1.208       UniRef90_UNK69135-EJPKGDGA_01179|7__12|SGB69135<br>HWUSI-EAS1568_102539179:1:100:10036:1783/1__1.212       UniRef90_A0A2A8D7T0|1__5|SGB49305<br>HWUSI-EAS1568_102539179:1:100:10039:18013/1__1.234      UniRef90_UNK98242-PKBBBOLB_00132|3__13|SGB98242<br>HWUSI-EAS1568_102539179:1:100:10047:18261/1__1.293      UniRef90_I0UTJ6|1__5|SGB16987<br></code></pre></td></tr></tbody></table></figure><ul><li><code>MetaPhlAn</code>的分类文件:起始也就是每个物种在每个样品中的丰度。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">head</span> output/SRS014476-Supragingival_plaque_profile.txt  <br><span class="hljs-comment">#mpa_vOct22_CHOCOPhlAnSGB_202212</span><br><span class="hljs-comment">#/home/lixiang/mambaforge/envs/metaphlan4/bin/metaphlan --offline --nproc 60 data/SRS014476-Supragingival_plaque.fasta.gz --input_type fasta</span><br><span class="hljs-comment">#19048 reads processed</span><br><span class="hljs-comment">#SampleID       Metaphlan_Analysis</span><br><span class="hljs-comment">#clade_name     NCBI_tax_id     relative_abundance      additional_species</span><br>k__Bacteria     2       100.0<br>k__Bacteria|p__Actinobacteria   2|201174        55.36506<br>k__Bacteria|p__Firmicutes       2|1239  44.63494<br>k__Bacteria|p__Actinobacteria|c__Actinomycetia  2|201174|1760   55.36506<br>k__Bacteria|p__Firmicutes|c__Bacilli    2|1239|91061    44.63494<br></code></pre></td></tr></tbody></table></figure><h3 id="重新分析样本"><a href="#重新分析样本" class="headerlink" title="重新分析样本"></a>重新分析样本</h3><p>如果要重新分析样本的话，直接使用上一步输出的<code>bowtie2</code>结果就好。省去比对步骤，速度更快。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">metaphlan --offline --nproc 60 data/SRS014476-Supragingival_plaque.fasta.gz.bowtie2out.txt --input_type bowtie2out &gt; output/SRS014476-Supragingival_plaque_profile.txt<br></code></pre></td></tr></tbody></table></figure><h3 id="多个样本运行"><a href="#多个样本运行" class="headerlink" title="多个样本运行"></a>多个样本运行</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> SRS*.fasta.gz; <span class="hljs-keyword">do</span> metaphlan <span class="hljs-variable">$i</span> --input_type fasta --<span class="hljs-built_in">nproc</span> 60 --offline &gt; <span class="hljs-variable">${i%.fasta.gz}</span>_profile.txt; <span class="hljs-keyword">done</span><br><br>merge_metaphlan_tables.py output/* &gt; merged.abundance.table.txt<br></code></pre></td></tr></tbody></table></figure><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="分类单元热图"><a href="#分类单元热图" class="headerlink" title="分类单元热图"></a>分类单元热图</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br>grep -E <span class="hljs-string">"s__|SRS"</span> merged_abundance_table.txt \<br>| grep -v <span class="hljs-string">"t__"</span> \<br>| sed <span class="hljs-string">"s/^.*|//g"</span> \<br>| sed <span class="hljs-string">"s/SRS[0-9]*-//g"</span> \<br>&gt; merged_abundance_table_species.txt<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一种核心微生物的鉴定方法</title>
      <link href="/article/coremicrobiome/"/>
      <url>/article/coremicrobiome/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 核心微生物鉴定方法</span><br><br>rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>reshape2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggthemes<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">##############################################################################</span><br><span class="hljs-comment">############################## 定义关键函数 ##################################</span><br><span class="hljs-comment">##############################################################################</span><br><br><span class="hljs-comment"># Fits the neutral model from Sloan et al. 2006 to an OTU table and returns several fitting statistics. Alternatively, will return predicted occurrence frequencies for each OTU based on their abundance in the metacommunity when stats=FALSE.</span><br><span class="hljs-comment"># spp: 丰度表，行是样本，列是微生物信息，如OTU或者是ASV，而且必须是抽平以后的数据。</span><br><span class="hljs-comment"># pool: A community table for defining source community (optional; Default=NULL).</span><br><span class="hljs-comment"># taxon: OTU或者是ASV的信息，行是OTU或者ASV，列是分类信息。</span><br><span class="hljs-comment"># If stats=TRUE the function will return fitting statistics.</span><br><span class="hljs-comment"># If stats=FALSE the function will return a table of observed and predicted values for each otu.</span><br><br>sncm.fit <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">,</span> pool <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> stats <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> taxon <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  require<span class="hljs-punctuation">(</span>minpack.lm<span class="hljs-punctuation">)</span><br>  require<span class="hljs-punctuation">(</span>Hmisc<span class="hljs-punctuation">)</span><br>  require<span class="hljs-punctuation">(</span>stats4<span class="hljs-punctuation">)</span><br><br>  options<span class="hljs-punctuation">(</span>warn <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment"># Calculate the number of individuals per community</span><br>  N <span class="hljs-operator">&lt;-</span> mean<span class="hljs-punctuation">(</span>apply<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment"># Calculate the average relative abundance of each taxa across communities</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>pool<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    p.m <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">)</span><br>    p.m <span class="hljs-operator">&lt;-</span> p.m<span class="hljs-punctuation">[</span>p.m <span class="hljs-operator">!=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">]</span><br>    p <span class="hljs-operator">&lt;-</span> p.m <span class="hljs-operator">/</span> N<br>  <span class="hljs-punctuation">}</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">{</span><br>    p.m <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>pool<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">)</span><br>    p.m <span class="hljs-operator">&lt;-</span> p.m<span class="hljs-punctuation">[</span>p.m <span class="hljs-operator">!=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">]</span><br>    p <span class="hljs-operator">&lt;-</span> p.m <span class="hljs-operator">/</span> N<br>  <span class="hljs-punctuation">}</span><br><br>  <span class="hljs-comment"># Calculate the occurrence frequency of each taxa across communities</span><br>  spp.bi <span class="hljs-operator">&lt;-</span> 1 <span class="hljs-operator">*</span> <span class="hljs-punctuation">(</span>spp <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>  freq <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>spp.bi<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">)</span><br>  freq <span class="hljs-operator">&lt;-</span> freq<span class="hljs-punctuation">[</span>freq <span class="hljs-operator">!=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">]</span><br><br>  <span class="hljs-comment"># Combine</span><br>  C <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> freq<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>  C <span class="hljs-operator">&lt;-</span> C<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>C<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br>  C <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>C<span class="hljs-punctuation">)</span><br>  C.0 <span class="hljs-operator">&lt;-</span> C<span class="hljs-punctuation">[</span><span class="hljs-operator">!</span><span class="hljs-punctuation">(</span>apply<span class="hljs-punctuation">(</span>C<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>y<span class="hljs-punctuation">)</span> <span class="hljs-built_in">any</span><span class="hljs-punctuation">(</span>y <span class="hljs-operator">==</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span> <span class="hljs-comment"># Removes rows with any zero (absent in either source pool or local communities)</span><br>  p <span class="hljs-operator">&lt;-</span> C.0<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span><br>  freq <span class="hljs-operator">&lt;-</span> C.0<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> C.0<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> C.0<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br><br>  <span class="hljs-comment"># Calculate the limit of detection</span><br>  d <span class="hljs-operator">&lt;-</span> 1 <span class="hljs-operator">/</span> N<br><br>  <span class="hljs-comment">## Fit model parameter m (or Nm) using Non-linear least squares (NLS)</span><br>  m.fit <span class="hljs-operator">&lt;-</span> nlsLM<span class="hljs-punctuation">(</span>freq <span class="hljs-operator">~</span> pbeta<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> m <span class="hljs-operator">*</span> p<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> m <span class="hljs-operator">*</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">-</span> p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> start <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>m <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  m.ci <span class="hljs-operator">&lt;-</span> confint<span class="hljs-punctuation">(</span>m.fit<span class="hljs-punctuation">,</span> <span class="hljs-string">"m"</span><span class="hljs-punctuation">,</span> level <span class="hljs-operator">=</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Fit neutral model parameter m (or Nm) using Maximum likelihood estimation (MLE)</span><br>  sncm.LL <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>m<span class="hljs-punctuation">,</span> sigma<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    R <span class="hljs-operator">&lt;-</span> freq <span class="hljs-operator">-</span> pbeta<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> m <span class="hljs-operator">*</span> p<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> m <span class="hljs-operator">*</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">-</span> p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>    R <span class="hljs-operator">&lt;-</span> dnorm<span class="hljs-punctuation">(</span>R<span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> sigma<span class="hljs-punctuation">)</span><br>    <span class="hljs-operator">-</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>R<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br>  m.mle <span class="hljs-operator">&lt;-</span> mle<span class="hljs-punctuation">(</span>sncm.LL<span class="hljs-punctuation">,</span> start <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>m <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> sigma <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nobs <span class="hljs-operator">=</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Calculate Akaike's Information Criterion (AIC)</span><br>  aic.fit <span class="hljs-operator">&lt;-</span> AIC<span class="hljs-punctuation">(</span>m.mle<span class="hljs-punctuation">,</span> k <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>  bic.fit <span class="hljs-operator">&lt;-</span> BIC<span class="hljs-punctuation">(</span>m.mle<span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Calculate goodness-of-fit (R-squared and Root Mean Squared Error)</span><br>  freq.pred <span class="hljs-operator">&lt;-</span> pbeta<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> coef<span class="hljs-punctuation">(</span>m.fit<span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> p<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> coef<span class="hljs-punctuation">(</span>m.fit<span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">-</span> p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  Rsqr <span class="hljs-operator">&lt;-</span> 1 <span class="hljs-operator">-</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> freq.pred<span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> mean<span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  RMSE <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> freq.pred<span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  pred.ci <span class="hljs-operator">&lt;-</span> binconf<span class="hljs-punctuation">(</span>freq.pred <span class="hljs-operator">*</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">"wilson"</span><span class="hljs-punctuation">,</span> return.df <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Calculate AIC for binomial model</span><br>  bino.LL <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>mu<span class="hljs-punctuation">,</span> sigma<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    R <span class="hljs-operator">&lt;-</span> freq <span class="hljs-operator">-</span> pbinom<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N<span class="hljs-punctuation">,</span> p<span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>    R <span class="hljs-operator">&lt;-</span> dnorm<span class="hljs-punctuation">(</span>R<span class="hljs-punctuation">,</span> mu<span class="hljs-punctuation">,</span> sigma<span class="hljs-punctuation">)</span><br>    <span class="hljs-operator">-</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>R<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br>  bino.mle <span class="hljs-operator">&lt;-</span> mle<span class="hljs-punctuation">(</span>bino.LL<span class="hljs-punctuation">,</span> start <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>mu <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> sigma <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nobs <span class="hljs-operator">=</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  aic.bino <span class="hljs-operator">&lt;-</span> AIC<span class="hljs-punctuation">(</span>bino.mle<span class="hljs-punctuation">,</span> k <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>  bic.bino <span class="hljs-operator">&lt;-</span> BIC<span class="hljs-punctuation">(</span>bino.mle<span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Goodness of fit for binomial model</span><br>  bino.pred <span class="hljs-operator">&lt;-</span> pbinom<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N<span class="hljs-punctuation">,</span> p<span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  Rsqr.bino <span class="hljs-operator">&lt;-</span> 1 <span class="hljs-operator">-</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> bino.pred<span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> mean<span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  RMSE.bino <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> bino.pred<span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  bino.pred.ci <span class="hljs-operator">&lt;-</span> binconf<span class="hljs-punctuation">(</span>bino.pred <span class="hljs-operator">*</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">"wilson"</span><span class="hljs-punctuation">,</span> return.df <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Calculate AIC for Poisson model</span><br>  pois.LL <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>mu<span class="hljs-punctuation">,</span> sigma<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    R <span class="hljs-operator">&lt;-</span> freq <span class="hljs-operator">-</span> ppois<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> p<span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>    R <span class="hljs-operator">&lt;-</span> dnorm<span class="hljs-punctuation">(</span>R<span class="hljs-punctuation">,</span> mu<span class="hljs-punctuation">,</span> sigma<span class="hljs-punctuation">)</span><br>    <span class="hljs-operator">-</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>R<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br>  pois.mle <span class="hljs-operator">&lt;-</span> mle<span class="hljs-punctuation">(</span>pois.LL<span class="hljs-punctuation">,</span> start <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>mu <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> sigma <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nobs <span class="hljs-operator">=</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  aic.pois <span class="hljs-operator">&lt;-</span> AIC<span class="hljs-punctuation">(</span>pois.mle<span class="hljs-punctuation">,</span> k <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>  bic.pois <span class="hljs-operator">&lt;-</span> BIC<span class="hljs-punctuation">(</span>pois.mle<span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Goodness of fit for Poisson model</span><br>  pois.pred <span class="hljs-operator">&lt;-</span> ppois<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">,</span> N <span class="hljs-operator">*</span> p<span class="hljs-punctuation">,</span> lower.tail <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  Rsqr.pois <span class="hljs-operator">&lt;-</span> 1 <span class="hljs-operator">-</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> pois.pred<span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> mean<span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  RMSE.pois <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>freq <span class="hljs-operator">-</span> pois.pred<span class="hljs-punctuation">)</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>freq<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  pois.pred.ci <span class="hljs-operator">&lt;-</span> binconf<span class="hljs-punctuation">(</span>pois.pred <span class="hljs-operator">*</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">"wilson"</span><span class="hljs-punctuation">,</span> return.df <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment">## Results</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>stats <span class="hljs-operator">==</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    fitstats <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>m <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> m.ci <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> m.mle <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> maxLL <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> binoLL <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> poisLL <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Rsqr <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Rsqr.bino <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Rsqr.pois <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> RMSE <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> RMSE.bino <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> RMSE.pois <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> AIC <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> BIC <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> AIC.bino <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> BIC.bino <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> AIC.pois <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> BIC.pois <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> N <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Samples <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Richness <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Detect <span class="hljs-operator">=</span> numeric<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    fitstats<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>coef<span class="hljs-punctuation">(</span>m.fit<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> coef<span class="hljs-punctuation">(</span>m.fit<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> m.ci<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> m.mle<span class="hljs-operator">@</span>coef<span class="hljs-punctuation">[</span><span class="hljs-string">"m"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> m.mle<span class="hljs-operator">@</span>details<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> bino.mle<span class="hljs-operator">@</span>details<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> pois.mle<span class="hljs-operator">@</span>details<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> Rsqr<span class="hljs-punctuation">,</span> Rsqr.bino<span class="hljs-punctuation">,</span> Rsqr.pois<span class="hljs-punctuation">,</span> RMSE<span class="hljs-punctuation">,</span> RMSE.bino<span class="hljs-punctuation">,</span> RMSE.pois<span class="hljs-punctuation">,</span> aic.fit<span class="hljs-punctuation">,</span> bic.fit<span class="hljs-punctuation">,</span> aic.bino<span class="hljs-punctuation">,</span> bic.bino<span class="hljs-punctuation">,</span> aic.pois<span class="hljs-punctuation">,</span> bic.pois<span class="hljs-punctuation">,</span> N<span class="hljs-punctuation">,</span> nrow<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> d<span class="hljs-punctuation">)</span><br>    <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>fitstats<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">{</span><br>    A <span class="hljs-operator">&lt;-</span> cbind<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> freq<span class="hljs-punctuation">,</span> freq.pred<span class="hljs-punctuation">,</span> pred.ci<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> bino.pred<span class="hljs-punctuation">,</span> bino.pred.ci<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>    A <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>A<span class="hljs-punctuation">)</span><br>    colnames<span class="hljs-punctuation">(</span>A<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"p"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"freq"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"freq.pred"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"pred.lwr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"pred.upr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"bino.pred"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"bino.lwr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"bino.upr"</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>taxon<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      B <span class="hljs-operator">&lt;-</span> A<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>A<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">}</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">{</span><br>      B <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>A<span class="hljs-punctuation">,</span> taxon<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">all</span> <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>      row.names<span class="hljs-punctuation">(</span>B<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> B<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>      B <span class="hljs-operator">&lt;-</span> B<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>      B <span class="hljs-operator">&lt;-</span> B<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>B<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">}</span><br>    <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>B<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br><br><span class="hljs-comment">##############################################################################</span><br><span class="hljs-comment">########################### 时间序列核心微生物 ###############################</span><br><span class="hljs-comment">##############################################################################</span><br><br>df.otu <span class="hljs-operator">&lt;-</span> readr<span class="hljs-operator">::</span>read_rds<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/switchgrassOTUtable.rds"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>df.meta <span class="hljs-operator">&lt;-</span> readr<span class="hljs-operator">::</span>read_rds<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/switchgrassMAPtable.rds"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 使用tidyverse重写原来的代码</span><br>df.otu <span class="hljs-operator">%&gt;%</span><br>  vegan<span class="hljs-operator">::</span>decostand<span class="hljs-punctuation">(</span>method <span class="hljs-operator">=</span> <span class="hljs-string">"total"</span><span class="hljs-punctuation">,</span> MARGIN <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  apply<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-string">"otu.occ"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> lx<br><br>otu.rel <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>decostand<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">"total"</span><span class="hljs-punctuation">,</span> MARGIN <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">)</span><br><br><br>df.otu <span class="hljs-operator">%&gt;%</span><br>  tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"otu"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tidyr<span class="hljs-operator">::</span>pivot_longer<span class="hljs-punctuation">(</span>cols <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  <span class="hljs-comment"># 存在-不存在鉴定，将丰度大于0的标记为1，丰度为0的标记为0</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    otu.pa <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>      value <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span> <span class="hljs-operator">~</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-number">0</span><br>    <span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>otu.sum <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>otu.pa<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  <span class="hljs-comment"># 计算OTU存在的频率，也就是在多少样本里面出现过</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    n.sample <span class="hljs-operator">=</span> ncol<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    sum.sample <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>    otu.occ <span class="hljs-operator">=</span> otu.sum <span class="hljs-operator">/</span> n.sample<span class="hljs-punctuation">,</span><br>    decostand <span class="hljs-operator">=</span> value <span class="hljs-operator">/</span> sum.sample<br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  <span class="hljs-comment"># 计算每个OTU的平均相对丰度</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>otu.rel <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>decostand<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.otu.new<br><br><span class="hljs-comment"># 绘图</span><br>df.otu.new <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>otu.rel<span class="hljs-punctuation">,</span> otu.occ<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>otu.rel<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> otu.occ<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"log10(mean relative abundance)"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Occupancy"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 基于出现频率对OTU进行排序</span><br>df.otu <span class="hljs-operator">%&gt;%</span><br>  tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"otu"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>otu <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tidyr<span class="hljs-operator">::</span>pivot_longer<span class="hljs-punctuation">(</span><br>    cols <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    names_to <span class="hljs-operator">=</span> <span class="hljs-string">"sequence_name"</span><span class="hljs-punctuation">,</span> values_to <span class="hljs-operator">=</span> <span class="hljs-string">"abun"</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df.meta<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"sequence_name"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">,</span> sampling_date<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  summarise<span class="hljs-punctuation">(</span><br>    time_freq <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>abun <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>abun<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># frequency of detection between time points</span><br>    coreTime <span class="hljs-operator">=</span> ifelse<span class="hljs-punctuation">(</span>time_freq <span class="hljs-operator">==</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  group_by<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  summarise<span class="hljs-punctuation">(</span><br>    sumF <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>time_freq<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    sumG <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>coreTime<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    nS <span class="hljs-operator">=</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>sampling_date<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    Index <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span>sumF <span class="hljs-operator">+</span> sumG<span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> nS<br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> PresenceSum<br><br>df.otu.new <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">,</span> otu.rel<span class="hljs-punctuation">,</span> otu.occ<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>PresenceSum<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"otu"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>transmute<span class="hljs-punctuation">(</span><br>    otu <span class="hljs-operator">=</span> otu<span class="hljs-punctuation">,</span><br>    rank <span class="hljs-operator">=</span> Index<br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>arrange<span class="hljs-punctuation">(</span>desc<span class="hljs-punctuation">(</span>rank<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> otu.ranked<br><br><br><span class="hljs-comment"># 计算OTU的贡献度</span><br>BCaddition <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br>otu.start <span class="hljs-operator">&lt;-</span> otu.ranked<span class="hljs-operator">$</span>otu<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>start.matrix <span class="hljs-operator">&lt;-</span> df.otu<span class="hljs-punctuation">[</span>otu.start<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> as.matrix<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>combn<span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span> start.matrix<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> colSums<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>x.names <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>combn<span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> paste<span class="hljs-punctuation">(</span>colnames<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span>x<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">" - "</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>data.frame<span class="hljs-punctuation">(</span>x.names<span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.s<br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df.s<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">1</span><br>BCaddition <span class="hljs-operator">&lt;-</span> rbind<span class="hljs-punctuation">(</span>BCaddition<span class="hljs-punctuation">,</span> df.s<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># length(otu.ranked$otu)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">500</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  otu.add <span class="hljs-operator">&lt;-</span> otu.ranked<span class="hljs-operator">$</span>otu<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><br>  add.matrix <span class="hljs-operator">&lt;-</span> df.otu<span class="hljs-punctuation">[</span>otu.add<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> as.matrix<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>  start.matrix <span class="hljs-operator">&lt;-</span> rbind<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">,</span> add.matrix<span class="hljs-punctuation">)</span><br>  x <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>combn<span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span> start.matrix<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> colSums<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  x.names <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>combn<span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> paste<span class="hljs-punctuation">(</span>colnames<span class="hljs-punctuation">(</span>start.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span>x<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">" - "</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  df.a <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>x.names<span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">)</span><br>  <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df.a<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> i<br>  BCaddition <span class="hljs-operator">&lt;-</span> dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>BCaddition<span class="hljs-punctuation">,</span> df.a<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"x.names"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br><span class="hljs-comment"># 计算整个群落的贡献度</span><br>x <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>combn<span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span> df.otu<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">2</span> <span class="hljs-operator">*</span> colSums<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>x.names <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>combn<span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> paste<span class="hljs-punctuation">(</span>colnames<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span>x<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> collapse <span class="hljs-operator">=</span> <span class="hljs-string">" - "</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>df.full <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>x.names<span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>df.full<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>rownames<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>BCfull <span class="hljs-operator">&lt;-</span> dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>BCaddition<span class="hljs-punctuation">,</span> df.full<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"x.names"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"x.names"</span><span class="hljs-punctuation">)</span><br><br>temp_BC <span class="hljs-operator">&lt;-</span> BCfull<br>temp_BC<span class="hljs-operator">$</span>x_names <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>temp_BC_matrix <span class="hljs-operator">&lt;-</span> as.matrix<span class="hljs-punctuation">(</span>temp_BC<span class="hljs-punctuation">)</span><br><br>BC_ranked <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>rank <span class="hljs-operator">=</span> as.factor<span class="hljs-punctuation">(</span>row.names<span class="hljs-punctuation">(</span>t<span class="hljs-punctuation">(</span>temp_BC_matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> t<span class="hljs-punctuation">(</span>temp_BC_matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  gather<span class="hljs-punctuation">(</span>comparison<span class="hljs-punctuation">,</span> BC<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>rank<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  group_by<span class="hljs-punctuation">(</span>rank<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  summarise<span class="hljs-punctuation">(</span>MeanBC <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>BC<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-comment"># mean Bray-Curtis dissimilarity</span><br>  arrange<span class="hljs-punctuation">(</span>desc<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>MeanBC<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  mutate<span class="hljs-punctuation">(</span>proportionBC <span class="hljs-operator">=</span> MeanBC <span class="hljs-operator">/</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>MeanBC<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># proportion of the dissimilarity explained by the n number of ranked OTUs</span><br>Increase <span class="hljs-operator">&lt;-</span> BC_ranked<span class="hljs-operator">$</span>MeanBC<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> BC_ranked<span class="hljs-operator">$</span>MeanBC<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-operator">$</span>MeanBC<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>increaseDF <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>IncreaseBC <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">(</span>Increase<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> rank <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>Increase<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>BC_ranked <span class="hljs-operator">&lt;-</span> dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">,</span> increaseDF<span class="hljs-punctuation">)</span><br>BC_ranked <span class="hljs-operator">&lt;-</span> BC_ranked<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span>nrow<span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># 设置阈值进行筛选</span><br><br><span class="hljs-comment"># 方法一：Elbow method (first order difference)</span><br><br>fo_difference <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>pos<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  left <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">[</span>pos<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span> BC_ranked<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> pos<br>  right <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">[</span>nrow<span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span> BC_ranked<span class="hljs-punctuation">[</span>pos<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span>nrow<span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> pos<span class="hljs-punctuation">)</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>left <span class="hljs-operator">-</span> right<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br>BC_ranked<span class="hljs-operator">$</span>fo_diffs <span class="hljs-operator">&lt;-</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> fo_difference<span class="hljs-punctuation">)</span><br><br>elbow <span class="hljs-operator">&lt;-</span> which.max<span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-operator">$</span>fo_diffs<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 方法二：Final increase in BC similarity of equal or greater then 2%</span><br>lastCall <span class="hljs-operator">&lt;-</span> last<span class="hljs-punctuation">(</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-operator">$</span>rank<span class="hljs-punctuation">[</span><span class="hljs-punctuation">(</span>BC_ranked<span class="hljs-operator">$</span>IncreaseBC <span class="hljs-operator">&gt;=</span> <span class="hljs-number">1.02</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘图</span><br>thread <span class="hljs-operator">&lt;-</span> BC_ranked<span class="hljs-punctuation">[</span>BC_ranked<span class="hljs-operator">$</span>rank <span class="hljs-operator">==</span> lastCall<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>proportionBC<br><br>BC_ranked <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>slice<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>rank <span class="hljs-operator">=</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>rank<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>col <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>    proportionBC <span class="hljs-operator">&lt;</span> thread <span class="hljs-operator">~</span> <span class="hljs-string">"Core"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"Non-core"</span><br>  <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>rank <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>rank<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> rank<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>rank<span class="hljs-punctuation">,</span> proportionBC<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> col<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> elbow<span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> cex <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> lastCall<span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">"blue"</span><span class="hljs-punctuation">,</span> cex <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><br>    geom <span class="hljs-operator">=</span> <span class="hljs-string">"text"</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> elbow <span class="hljs-operator">+</span> <span class="hljs-number">14</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">.1</span><span class="hljs-punctuation">,</span><br>    label <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">"Elbow method"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">" ("</span><span class="hljs-punctuation">,</span> elbow<span class="hljs-punctuation">,</span> <span class="hljs-string">")"</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><br>    geom <span class="hljs-operator">=</span> <span class="hljs-string">"text"</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> lastCall <span class="hljs-operator">+</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span><br>    label <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">"Last 2% increase ("</span><span class="hljs-punctuation">,</span> lastCall<span class="hljs-punctuation">,</span> <span class="hljs-string">")"</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"blue"</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span><br>    limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"ranked OTUs"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Bray-Curtis similarity"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span><br>    panel.grid.major <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.minor <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    strip.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.text.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.ticks.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br>ggsave<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"rankedOTUs.png"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> dpi <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># 另外一种展示方式</span><br><span class="hljs-comment"># 基于中性模型</span><br><span class="hljs-comment"># Use Sloan neutral model to prioritize OTUs</span><br><span class="hljs-comment"># Fitting neutral model (Burns et al., 2016 (ISME J) - functions are in the sncm.fit.R)</span><br>spp <span class="hljs-operator">&lt;-</span> t<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><br>taxon <span class="hljs-operator">&lt;-</span> as.vector<span class="hljs-punctuation">(</span>rownames<span class="hljs-punctuation">(</span>df.otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Models for the whole community</span><br>obs.np <span class="hljs-operator">&lt;-</span> sncm.fit<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">,</span> taxon<span class="hljs-punctuation">,</span> stats <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> pool <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br>sta.np <span class="hljs-operator">&lt;-</span> sncm.fit<span class="hljs-punctuation">(</span>spp<span class="hljs-punctuation">,</span> taxon<span class="hljs-punctuation">,</span> stats <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> pool <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br><br>above.pred <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>freq <span class="hljs-operator">&gt;</span> <span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>pred.upr<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> sta.np<span class="hljs-operator">$</span>Richness <span class="hljs-comment"># fraction of OTUs above prediction</span><br>below.pred <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>freq <span class="hljs-operator">&lt;</span> <span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>pred.lwr<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> sta.np<span class="hljs-operator">$</span>Richness <span class="hljs-comment"># fraction of OTUs below prediction</span><br><br><span class="hljs-comment"># Create a column defining "core" OTUs</span><br>df.otu.new <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>    otu <span class="hljs-operator">%in%</span> otu.ranked<span class="hljs-operator">$</span>otu<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>lastCall<span class="hljs-punctuation">]</span> <span class="hljs-operator">~</span> <span class="hljs-string">"Core"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> <span class="hljs-string">"Non-core"</span><br>  <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>otu.rel<span class="hljs-punctuation">,</span> otu.occ<span class="hljs-punctuation">,</span> fill<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>log10<span class="hljs-punctuation">(</span>otu.rel<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> otu.occ<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> fill<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span><br>    color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> obs.np<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> obs.np<span class="hljs-operator">$</span>freq.pred<span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span><br>    color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-string">"twodash"</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> obs.np<span class="hljs-punctuation">,</span><br>    aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> obs.np<span class="hljs-operator">$</span>pred.upr<span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span><br>    color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-string">"twodash"</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> obs.np<span class="hljs-punctuation">,</span><br>    aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> obs.np<span class="hljs-operator">$</span>pred.lwr<span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"log10(mean relative abundance)"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Occupancy"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span><br>    limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span><br>    panel.grid.major <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.minor <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    strip.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"results.png"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> dpi <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306081140194.png" alt="rankedOTUs"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202306081140602.png" alt="results"></p><p>写了个函数：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs R">source<span class="hljs-punctuation">(</span><span class="hljs-string">"D:/MyData/Program/pac4xiang/R/getCoreMicrobiome.R"</span><span class="hljs-punctuation">)</span><br>source<span class="hljs-punctuation">(</span><span class="hljs-string">"D:/MyData/Program/pac4xiang/R/mytheme.R"</span><span class="hljs-punctuation">)</span><br><br>df.otu <span class="hljs-operator">&lt;-</span> readr<span class="hljs-operator">::</span>read_rds<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/switchgrassOTUtable.rds"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>df.meta <span class="hljs-operator">&lt;-</span> readr<span class="hljs-operator">::</span>read_rds<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/switchgrassMAPtable.rds"</span><span class="hljs-punctuation">)</span><br><br>lx <span class="hljs-operator">=</span> getCoreMicrobiome<span class="hljs-punctuation">(</span>otu <span class="hljs-operator">=</span> df.otu<span class="hljs-punctuation">,</span><br>                       meta <span class="hljs-operator">=</span> df.meta<span class="hljs-punctuation">,</span><br>                       sample.name <span class="hljs-operator">=</span> <span class="hljs-string">"sequence_name"</span><span class="hljs-punctuation">,</span><br>                       group <span class="hljs-operator">=</span> <span class="hljs-string">"sampling_date"</span><span class="hljs-punctuation">,</span><br>                       top <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 排序图</span><br>lx<span class="hljs-operator">$</span>df.rankedOTUs <span class="hljs-operator">%&gt;%</span> <br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>rank<span class="hljs-punctuation">,</span> proportionBC<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> col<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> lx<span class="hljs-operator">$</span>elbow<span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> cex <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> lx<span class="hljs-operator">$</span>lastCall<span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">"blue"</span><span class="hljs-punctuation">,</span> cex <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><br>    geom <span class="hljs-operator">=</span> <span class="hljs-string">"text"</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> lx<span class="hljs-operator">$</span>elbow <span class="hljs-operator">+</span> <span class="hljs-number">14</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">.1</span><span class="hljs-punctuation">,</span><br>    label <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">"Elbow method"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">" ("</span><span class="hljs-punctuation">,</span> lx<span class="hljs-operator">$</span>elbow<span class="hljs-punctuation">,</span> <span class="hljs-string">")"</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><br>    geom <span class="hljs-operator">=</span> <span class="hljs-string">"text"</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> lx<span class="hljs-operator">$</span>lastCall <span class="hljs-operator">+</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span><br>    label <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">"Last 2% increase ("</span><span class="hljs-punctuation">,</span> lx<span class="hljs-operator">$</span>lastCall<span class="hljs-punctuation">,</span> <span class="hljs-string">")"</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"blue"</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span><br>    limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"ranked OTUs"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Bray-Curtis similarity"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span><br>    panel.grid.major <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.minor <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    strip.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.text.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.ticks.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># 拟合图</span><br>obs.np <span class="hljs-operator">=</span> lx<span class="hljs-operator">$</span>obs.np<br><br>lx<span class="hljs-operator">$</span>df.fitting.results <span class="hljs-operator">%&gt;%</span> <br>ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>log10<span class="hljs-punctuation">(</span>otu.rel<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> otu.occ<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> fill<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span><br>    color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> obs.np<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> obs.np<span class="hljs-operator">$</span>freq.pred<span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span><br>    color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-string">"twodash"</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> obs.np<span class="hljs-punctuation">,</span><br>    aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> obs.np<span class="hljs-operator">$</span>pred.upr<span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span><br>    color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> lty <span class="hljs-operator">=</span> <span class="hljs-string">"twodash"</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> obs.np<span class="hljs-punctuation">,</span><br>    aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> obs.np<span class="hljs-operator">$</span>pred.lwr<span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>obs.np<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"log10(mean relative abundance)"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Occupancy"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span><br>    limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span><br>    panel.grid.major <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.minor <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    strip.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rstudio-server绘图报错</title>
      <link href="/article/rstudoserverploterror/"/>
      <url>/article/rstudoserverploterror/</url>
      
        <content type="html"><![CDATA[<p>Rstudio-Server绘图报错：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">Error <span class="hljs-keyword">in</span> RStudioGD<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">:</span> <br>  Shadow graphics device error<span class="hljs-operator">:</span> r error <span class="hljs-number">4</span> <span class="hljs-punctuation">(</span>Error <span class="hljs-operator">:</span> C stack usage  <span class="hljs-number">7969364</span> is too close to the limit<br><span class="hljs-punctuation">)</span><br>此外<span class="hljs-operator">:</span> There were <span class="hljs-number">50</span> or more warnings <span class="hljs-punctuation">(</span>use warnings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> to see the first <span class="hljs-number">50</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>改了这里：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305301123770.png" alt="image-20230530112316308"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速获取GO注释信息</title>
      <link href="/article/getgo/"/>
      <url>/article/getgo/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">AnnotationDbi<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><br>  GO.db<span class="hljs-punctuation">,</span><br>  keys <span class="hljs-operator">=</span> keys<span class="hljs-punctuation">(</span>GO.db<span class="hljs-punctuation">,</span> keytype <span class="hljs-operator">=</span> <span class="hljs-string">"GOID"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  columns <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"TERM"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"ONTOLOGY"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  keytype<span class="hljs-operator">=</span><span class="hljs-string">"GOID"</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"go.id"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"go.term"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"go.ontology"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.go<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础学习</title>
      <link href="/article/csslearning/"/>
      <url>/article/csslearning/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"X-UA-Compatible"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"IE=edge"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, initial-scale=1.0"</span> /&gt;</span><br>    +<br>    <span class="hljs-comment">&lt;!-- 导入外部css文件 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"./style.css"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;link rel="stylesheet" href="./base.css"&gt; --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 内部样式表 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="language-css"></span><br><span class="language-css">      <span class="hljs-comment">/* 所有二级标题的样式 */</span></span><br><span class="language-css">      <span class="hljs-selector-tag">h2</span> {</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: aquamarine;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: brown;</span><br><span class="language-css">      }</span><br><span class="language-css">      <span class="hljs-comment">/* 所有的p元素对应的形式 */</span></span><br><span class="language-css">      <span class="hljs-selector-tag">p</span> {</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: brown;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: white;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">      }</span><br><span class="language-css">      <span class="hljs-comment">/* 定义表格的形式 */</span></span><br><span class="language-css">      <span class="hljs-comment">/* 表的线条颜色 */</span></span><br><span class="language-css">      <span class="hljs-selector-tag">table</span> {</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: tomato;</span><br><span class="language-css">        <span class="hljs-attribute">border-width</span>: <span class="hljs-number">3px</span>;</span><br><span class="language-css">      }</span><br><span class="language-css">      <span class="hljs-comment">/* 表头颜色 */</span></span><br><span class="language-css">      <span class="hljs-selector-tag">th</span> {</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: cadetblue;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">25px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: brown;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">      }</span><br><span class="language-css">      <span class="hljs-comment">/* 每一行的颜色 */</span></span><br><span class="language-css">      <span class="hljs-selector-tag">td</span> {</span><br><span class="language-css">        <span class="hljs-comment">/* background-color: black; */</span></span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">        <span class="hljs-comment">/* color: white; */</span></span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">      }</span><br><span class="language-css">      <span class="hljs-comment">/* 根据id选择渲染器 */</span></span><br><span class="language-css">      <span class="hljs-selector-id">#tiantian</span> {</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">66px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: blueviolet;</span><br><span class="language-css">      }</span><br><span class="language-css">      <span class="hljs-comment">/* 根据类选择渲染器 */</span></span><br><span class="language-css">      <span class="hljs-selector-class">.testclass</span> {</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: crimson;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">50px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: aquamarine;</span><br><span class="language-css">      }</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>div测试文字！<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>p测试文字<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>这是一个测试表格<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">frame</span>=<span class="hljs-string">"box"</span> <span class="hljs-attr">rules</span>=<span class="hljs-string">"all"</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- 表头 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Boy<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Girl<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Village<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- 表内容 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>布布<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>一二<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>熊熊村<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>灰灰<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>蜜桃<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>熊熊村<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"tiantian"</span>&gt;</span>田田<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>甜甜<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>熊熊村<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: blueviolet"</span>&gt;</span>详详<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: brown"</span>&gt;</span>敏敏<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: cadetblue"</span>&gt;</span>熊熊村<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>CSS的id选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>html中每个元素都可以设置唯一的id，因此可以根据id选择渲染器<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>CSS的类选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>      html中每个元素都可以设置class，因此可以根据class选择渲染器。不同的类名用空格隔开。<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"testclass"</span>&gt;</span>这是类的测试！<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"testclass2"</span>&gt;</span>这是引用外部css文件的示例。<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>伪类选择器<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>鼠标移动到超链接后变成蓝色！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">      &gt;</span>点击访问布布的博客！&lt;/a<br>    &gt;<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>添加背景图片<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span></span><br><span class="hljs-tag">      <span class="hljs-attr">style</span>=<span class="hljs-string">"</span></span><br><span class="hljs-string"><span class="hljs-tag">        background-image: url('https://new.ynau.edu.cn/__local/3/41/E7/B7F28F8B4EB33529B2E292A07ED_A7892B5A_7BFC2.jpg');</span></span><br><span class="hljs-string"><span class="hljs-tag">        background-repeat: no-repeat;</span></span><br><span class="hljs-string"><span class="hljs-tag">        height: 150px;</span></span><br><span class="hljs-string"><span class="hljs-tag">      "</span></span><br><span class="hljs-tag">    &gt;</span><br>      Home Browse Blast Downlaod Contact Help<br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"搜索框"</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>开始检索<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>列表属性<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"list-style-type: circle"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>列表5<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>下拉列表属性<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>请选择输入数据类型<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>DNA<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>RNA<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- 默认选项设置 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">"selected"</span>&gt;</span>Protein<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>边框属性<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"div1"</span>&gt;</span>div边框测试<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>内边距padding<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>将外边框理解成一个盒子，那么内边距就是纸盒盖子的厚度，只有在厚度之下的空间才可以存放东西。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"div1"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: blueviolet"</span>&gt;</span>测试文字<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"div1"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"box"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: brown;"</span>&gt;</span>测试文字2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>CSS属性的优先级问题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>行内样式表 &gt; 内部样式表 &gt; 外部样式表<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>谁的选择范围小谁的优先级越高！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>鼠标样式属性<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>鼠标移动到这里显示一个小手。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"cursor: pointer;"</span>&gt;</span>确认提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></tbody></table></figure><p>外部样式表：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 元素属性 */</span><br><span class="hljs-selector-tag">div</span> {<br>    <span class="hljs-attribute">background-color</span>: cadetblue;<br>    <span class="hljs-attribute">color</span>: white;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">25px</span>;<br>}<br><br><span class="hljs-comment">/* id属性 */</span><br><span class="hljs-selector-id">#tiantian</span> {<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">66px</span>;<br>    <span class="hljs-attribute">color</span>: blueviolet;<br>}<br><br><span class="hljs-comment">/* 类属性 */</span><br><span class="hljs-selector-class">.testclass2</span> {<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-attribute">color</span>: darkgreen;<br>    <span class="hljs-attribute">background-color</span>: brown;<br>}<br><br><span class="hljs-comment">/* 伪类选择器 */</span><br><span class="hljs-comment">/* 超链接变色 */</span><br><span class="hljs-selector-tag">a</span> {<br>    <span class="hljs-attribute">color</span>: blue;<br>}<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> {<br>    <span class="hljs-attribute">color</span>: red;<br>}<br><br><span class="hljs-comment">/* 表格奇数行背景色灰色 */</span><br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>n+<span class="hljs-number">1</span>) {<br>    <span class="hljs-attribute">background-color</span>: grey;<br>    <span class="hljs-attribute">color</span>: white;<br>}<br><br><span class="hljs-comment">/* 表格偶数行字体黑色 */</span><br><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">tr</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>n) {<br>    <span class="hljs-attribute">color</span>: black;<br>}<br><br><span class="hljs-selector-class">.div1</span> {<br>    <span class="hljs-attribute">border-width</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">border-style</span>: solid;<br>    <span class="hljs-attribute">border-color</span>: blueviolet;<br>    <span class="hljs-attribute">border-bottom-color</span>: red;<br>    <span class="hljs-attribute">background-color</span>: aquamarine;<br>    <span class="hljs-attribute">color</span>: black;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">500px</span>;<br>}<br><br><span class="hljs-selector-id">#box</span> {<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-comment">/* 行内块元素 */</span><br>    <span class="hljs-attribute">display</span>: inline-block;<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html学习笔记</title>
      <link href="/article/learninghtml/"/>
      <url>/article/learninghtml/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"zh"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: cadetblue;"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!--这是网页的标题--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>一二布布在熊村<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 这是网页的一级标题 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>布布的不二呆大军，作者是一二和布布<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>      只要是双标签就可以嵌入子元素！<br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>      不二呆是布布的好兄弟！<br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>      <span class="hljs-comment">&lt;!-- 加粗 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>一二是不二呆的大哥！<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>      <span class="hljs-comment">&lt;!-- 斜体 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>一二是不二呆的大哥！<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>不二呆<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>是<span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>一二的<span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>小弟！<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 不同的标题之间是默认换行输出的 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是网页的一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>这是网页的二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>这是网页的三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>这是网页的四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>这是网页的五级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>这是网页的六级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 超链接和元素属性 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>超链接和元素属性<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>href="xxx"表示指向xxx这个地址，如下面这个：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">      &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>    &gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>      target表示新页面打开还是本页直接打开！_blank表示新页面打开，其他的都是当前页面打开！默认是_self表示当前页面打开。<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 块元素和行元素 --&gt;</span><br>    常见的块元素是div，行内元素类是span.<br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>块元素div<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">      &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>    &gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">      &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>    &gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">      &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>    &gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>使用div以后可以换行<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>!哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">        &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>      &gt;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">        &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>      &gt;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.web4xiang.top/blog/"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span></span><br><span class="hljs-tag">        &gt;</span>点击访问小蓝哥的知识荒原！&lt;/a<br>      &gt;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>图像元素<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>需要注意图片文件的相对路径！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>width和height表示图像的宽度和高度，单位是像素。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>alt属性表示图像没有显示的时候所展示的信息。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>title表示图片的标题，鼠标移动到图片上时或展示这个title。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span></span><br><span class="hljs-tag">      <span class="hljs-attr">src</span>=<span class="hljs-string">"./images/10.png"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">alt</span>=<span class="hljs-string">"图片不存在"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">width</span>=<span class="hljs-string">"400"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">title</span>=<span class="hljs-string">"我是个图片"</span></span><br><span class="hljs-tag">    /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span></span><br><span class="hljs-tag">      <span class="hljs-attr">src</span>=<span class="hljs-string">"./images/1.png"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">alt</span>=<span class="hljs-string">"图片不存在"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">width</span>=<span class="hljs-string">"400"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">height</span>=<span class="hljs-string">"300"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">title</span>=<span class="hljs-string">"我是个测试图片"</span></span><br><span class="hljs-tag">    /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span></span><br><span class="hljs-tag">      <span class="hljs-attr">src</span>=<span class="hljs-string">"https://s3.51cto.com/oss/202301/11/25c72c690dc5dd90782891b12f1c8656913787.jpg"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">alt</span>=<span class="hljs-string">""</span></span><br><span class="hljs-tag">    /&gt;</span><br>    为什么这个网络上的图无法显示呢！<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    其中ol表示的是有序列表，ul表示的是无序列表。<br>    <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>无序列表<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>这是2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>表格<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">frame</span>=<span class="hljs-string">"box"</span> <span class="hljs-attr">rules</span>=<span class="hljs-string">"all"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>功能<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>分类<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>table<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>最外层标签<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>闭合标签<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>tre<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>创建行<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>闭合标签<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>th<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>创建表头<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>闭合标签<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>td<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>创建表内容<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>闭合标签<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>文本输入框input<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>登录网站的用户和密码就是通过这个功能实现的。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>请输入用户名称：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"username"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>请输入用户密码：&lt;/span<br>    &gt;<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"userpassword"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"点击提交"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1000"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"点击提交"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>请上传文件：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"file"</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>标签元素label<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>单击文字都可以勾选<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"password"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"password"</span>&gt;</span>请记住密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ensure"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"ensure"</span>&gt;</span>我已经阅读并同意上述条款<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>下拉列表select<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: brown;"</span>&gt;</span>默认显示第一个选项<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"用户选项"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"select_id"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">"selected"</span>&gt;</span>下拉选择<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>DNA<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>Protein<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>mRNA<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>lncRNA<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"确认提交"</span> /&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;label for="select_id"&gt;用户选项&lt;/label&gt; --&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>多行文本输入框textarea<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>请在下方输入框输入你的序列：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"哈哈"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">"50"</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">"10"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"确认提交序列"</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"file"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"选择序列文件"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>按钮元素<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    可以代替input。<br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>确认提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>取消提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 100px;height: 100px;background-color: brown;font-size: 20px;"</span>&gt;</span><br>      确认提交<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"./images/1.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">""</span>, <span class="hljs-attr">width</span>=<span class="hljs-string">"20"</span>, <span class="hljs-attr">height</span>=<span class="hljs-string">"20"</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计建模学习笔记</title>
      <link href="/article/statmodel/"/>
      <url>/article/statmodel/</url>
      
        <content type="html"><![CDATA[<h2 id="统计建模"><a href="#统计建模" class="headerlink" title="统计建模"></a>统计建模</h2><h3 id="什么是统计模型"><a href="#什么是统计模型" class="headerlink" title="什么是统计模型"></a>什么是统计模型</h3><p>所有的假设统计检验和参数的统计估计都来源于统计模型。那么，什么是统计模型呢？可以将统计模型简单理解为一个数学等式。</p><h3 id="概率的类型"><a href="#概率的类型" class="headerlink" title="概率的类型"></a>概率的类型</h3><p>基本上可以分为两类：</p><ul><li>aleatory probability：可以理解为客观的概率，不受人为影响，如骰子出现的数字；</li><li>epistemic probability：主观概率，比如提前知道骰子被动了手脚，那么每个数字出现的概率就不相等了。</li></ul><h3 id="概率和统计"><a href="#概率和统计" class="headerlink" title="概率和统计"></a>概率和统计</h3>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下Git-bash配置zsh主题</title>
      <link href="/article/gitbash.jpg/"/>
      <url>/article/gitbash.jpg/</url>
      
        <content type="html"><![CDATA[<h2 id="下载zsh安装包"><a href="#下载zsh安装包" class="headerlink" title="下载zsh安装包"></a>下载zsh安装包</h2><p><a href="https://packages.msys2.org/package/zsh?repo=msys&amp;variant=x86_64">https://packages.msys2.org/package/zsh?repo=msys&amp;variant=x86_64</a></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305110931852.png" alt="image-20230511093059626"></p><p>将下载的文件解压后放到Git-bash的安装目录下，如<code>C:\Program Files\Git\git-bash.exe</code>。</p><p>在<code>.bashrc</code>文件中加入代码：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">if</span> [ -t 1 ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">exec</span> zsh<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></tbody></table></figure><p>然后再终端输入<code>zsh</code>即可进入<code>zsh</code>。</p><h2 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h2><p>国内下载慢的话就用这个链接下载：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh<br></code></pre></td></tr></tbody></table></figure><p>然后直接将install.sh文件中的这两行代码进行修改：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">REPO=<span class="hljs-variable">${REPO:-ohmyzsh/ohmyzsh}</span><br>REMOTE=<span class="hljs-variable">${REMOTE:-https://github.com/<span class="hljs-variable">${REPO}</span>.git}</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">REPO=<span class="hljs-variable">${REPO:-mirrors/oh-my-zsh}</span><br>REMOTE=<span class="hljs-variable">${REMOTE:-https://gitee.com/<span class="hljs-variable">${REPO}</span>.git}</span><br></code></pre></td></tr></tbody></table></figure><h2 id="安装powerlevel10k"><a href="#安装powerlevel10k" class="headerlink" title="安装powerlevel10k"></a>安装powerlevel10k</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git <span class="hljs-variable">${ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom}</span>/themes/powerlevel10k<br></code></pre></td></tr></tbody></table></figure><p>将<code>.zshrc</code>中主题修改：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ZSH_THEME=<span class="hljs-string">"powerlevel10k/powerlevel10k"</span><br></code></pre></td></tr></tbody></table></figure><p>然后source这个文件就可以开始进行配置。</p><h2 id="字体安装"><a href="#字体安装" class="headerlink" title="字体安装"></a>字体安装</h2><ul><li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS NF Regular.ttf">MesloLGS NF Regular.ttf</a></li><li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS NF Bold.ttf">MesloLGS NF Bold.ttf</a></li><li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS NF Italic.ttf">MesloLGS NF Italic.ttf</a></li><li><a href="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS NF Bold Italic.ttf">MesloLGS NF Bold Italic.ttf</a></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305110939615.png" alt="image-20230511093935441"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合遗传变异增强植物生产力</title>
      <link href="/article/combinegenetic/"/>
      <url>/article/combinegenetic/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.3001842#sec015">Wuest S E, Pires N D, Luo S, et al. Increasing plant group productivity through latent genetic variation for cooperation[J]. <strong><em>Plos Biology</em></strong>, 2022, 20(11): e3001842.</a></p></blockquote><h2 id="摘要信息"><a href="#摘要信息" class="headerlink" title="摘要信息"></a>摘要信息</h2><blockquote><p>Historic yield advances in the major crops have, to a large extent, been achieved by selection for improved productivity of groups of plant individuals such as high-density stands. Research suggests that such improved group productivity depends on “cooperative” traits (e.g., erect leaves, short stems) that—while beneficial to the group—decrease individual fitness under competition. This poses a problem for some traditional breeding approaches, especially when selection occurs at the level of individuals, because “selfish” traits will be selected for and reduce yield in high-density monocultures. One approach, therefore, has been to select individuals based on ideotypes with traits expected to promote group productivity. However, this approach is limited to architectural and physiological traits whose effects on growth and competition are relatively easy to anticipate. Here, we developed a general and simple method for the discovery of alleles promoting cooperation in plant stands. Our method is based on the game-theoretical premise that alleles increasing cooperation benefit the monoculture group but are disadvantageous to the individual when facing noncooperative neighbors. Testing the approach using the model plant <em>Arabidopsis thaliana</em>, we found a major effect locus where the rarer allele was associated with increased cooperation and productivity in high-density stands. The allele likely affects a pleiotropic gene, since we find that it is also associated with reduced root competition but higher resistance against disease. Thus, even though cooperation is considered evolutionarily unstable except under special circumstances, conflicting selective forces acting on a pleiotropic gene might maintain latent genetic variation for cooperation in nature. Such variation, once identified in a crop, could rapidly be leveraged in modern breeding programs and provide efficient routes to increase yields.</p></blockquote><p>摘要总结：</p><ul><li><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2></li></ul><p>传统观点认为个体最强的时候群体也会表现更好，换句话说就是单株产量更高的时候群体的产量也更高。但是有研究发现在一定程度后，群体的产量并不会一直线性增加（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101102341.png" alt="image-20230510110258090"></p><h2 id="研究材料"><a href="#研究材料" class="headerlink" title="研究材料"></a>研究材料</h2><p>所用的拟南芥来自<code>RegMap</code>这个群体，前期已经有这个群体的很多表型数据（方便后续验证）。</p><h2 id="试验方案"><a href="#试验方案" class="headerlink" title="试验方案"></a>试验方案</h2><p>98个材料作为Focal plant，另外的10个品种作为neighbor，同时98个品种分别单作作为对照，最后调查地上部分生物量和地下部分生物量。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101105975.png" alt="image-20230510110556475"></p><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><h3 id="个体适应度与群体产量"><a href="#个体适应度与群体产量" class="headerlink" title="个体适应度与群体产量"></a>个体适应度与群体产量</h3><p>先前的研究发现个体适应度与群体产量基本是二次关系，于是呢作者也使用类似的方法对该实验中的个体适应度和群体产量进行建模分析（下图）。基本上可以看出个体适应度与群体产量呈现出显著的正相关关系。有一部分个体在互作条件下产量较低，但是呢在单作条件下产量较高。进一步计算了群体-个体均衡（Group-verse-individual trade-off，G-I trade-off），发现有一部分品种都有显著的G-I trade-off. </p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101108838.png" alt="image-20230510110834234"></p><h3 id="GWAS挖掘遗传位点"><a href="#GWAS挖掘遗传位点" class="headerlink" title="GWAS挖掘遗传位点"></a>GWAS挖掘遗传位点</h3><p>在G-I trade-off的基础上，进一步利用GWAS挖掘控制G-I trade-off的遗传位点。在三号染色体上成功发现显著的SNP位点1529455.有意思的是用院原始值做GWAS时并没有鉴定到任何显著的位点。对这个SP位点的等位基因进行分析发现具有正向G-I trade-off的品种基本上都是携带C这个等位基因的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101113063.png" alt="image-20230510111357476"></p><h3 id="携带C等位基因的品种产量更高"><a href="#携带C等位基因的品种产量更高" class="headerlink" title="携带C等位基因的品种产量更高"></a>携带C等位基因的品种产量更高</h3><p>既然等位基因C是对群体有益的，那么在高密度种植时，是否会提高群体的产量呢？于是就将携带不同的等位基因的品种以不同的密度进行种植，发现携带等位基因C的材料在高密度种植时具有更高的群体产量。虽然C等位基因群体的个体适应度差一点点，但是群体的产量显著增加15%.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101124337.png" alt="image-20230510112424674"></p><h3 id="“互助”的机制"><a href="#“互助”的机制" class="headerlink" title="“互助”的机制"></a>“互助”的机制</h3><p>既然这种效应确实存在而且受遗传调控，那背后的机制是什么呢？进一步的研究发现“互助”提高群体产量的机制在于调控根系分布，改变根冠比。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101127708.png" alt="image-20230510112747070"></p><h3 id="“互助”位点与抗病性相关"><a href="#“互助”位点与抗病性相关" class="headerlink" title="“互助”位点与抗病性相关"></a>“互助”位点与抗病性相关</h3><p>植物在进化过程总倾向于选择能够互助的个体，那这个遗传位点在群体中的分布如何呢？分析结果发现该位点在地理分布上较为广泛，而且基因组数据表明该等位基因的MAF在18%左右，也就是接近20%的个体都含有这个关键位点。另外一个很有意思的点在于在该SNP的连锁区域中，发现一个和拟南芥抗性显著相关的基因<em>AtMIN7</em>，这个基因是拟南芥抗灰霉菌的关键基因。既然这样，那么携带不同等位基因的拟南芥是否抗性存在差异呢？结果发现确实是存在显著差异的，抗病的品种具有更高的G-I trade-off.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101130398.png" alt="image-20230510113019036"></p><h3 id="“互助”基因型的“囚徒困境”"><a href="#“互助”基因型的“囚徒困境”" class="headerlink" title="“互助”基因型的“囚徒困境”"></a>“互助”基因型的“囚徒困境”</h3><p>本研究一个很有意思的点在于将纳什均衡中的“囚徒困境”应用到生物学中。作者猜想具有“互助‘等位基因的品种在面对更具有竞争性的品种时，会”吃亏“，也就相当于”囚徒困境“中的一个人抗住了拷问，但是另外一个人直接坦白从宽了，那这个抗住拷问的人其实是吃亏的。这个实验中作者使用了4组近等基因系来探究这种关系，Sha品种更具有竞争性，Bay品种更具有合作精神。从图中可以看出当病害发生严重时，Bay品种在面对Sha这个品种的时候生物量降低更少，也就是说当面的高度的病害胁迫压力时，携带“互助”型等位基因的品种具有更好的竞争优势。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305101135547.png" alt="image-20230510113520038"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不同栽培地点柳枝稷根际微生物群落的遗传决定因素</title>
      <link href="/article/liuzhiji/"/>
      <url>/article/liuzhiji/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://www.cell.com/current-biology/fulltext/S0960-9822(23">Edwards J A, Saran U B, Bonnette J, et al. Genetic determinants of switchgrass-root-associated microbiota in field sites spanning its natural range[J]. Current Biology, 2023.</a>00398-6?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS0960982223003986%3Fshowall%3Dtrue)</p></blockquote><h2 id="研究材料"><a href="#研究材料" class="headerlink" title="研究材料"></a>研究材料</h2><p>这个研究中使用的材料来自于<a href="https://www.nature.com/articles/s41586-020-03127-1">Genomic mechanisms of climate adaptation in polyploid bioenergy switchgrass</a>这个研究所用的柳枝稷群体。研究所用的群体可以分为3种亚群，分别用蓝色、黄色和红色进行标注。白色的圆圈表示代表性的采样地点，圆圈里面有×的表示10个用于试验的园区（基地？）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305060920319.png" alt="image-20230506092039310"></p><h2 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h2><h3 id="核心微生物鉴定"><a href="#核心微生物鉴定" class="headerlink" title="核心微生物鉴定"></a>核心微生物鉴定</h3><p>这个研究一共有三个地点，作者将每个地点中在80%样品中都出现的微生物定义为核心微生物，三个地点核心微生物的交集部分定义为<code>study-wide</code>核心微生物。使用80%作为阈值的理由有两个：</p><ul><li>已经有相关研究使用这个阈值；</li><li>本研究中的分析对数据分布和统计功效非常敏感。</li></ul><p>作者也对不同的阈值进行了比较分析。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305060959047.png" alt="image-20230506095952815"></p><h3 id="哪个分类水平用于计算细菌遗传力最佳？"><a href="#哪个分类水平用于计算细菌遗传力最佳？" class="headerlink" title="哪个分类水平用于计算细菌遗传力最佳？"></a>哪个分类水平用于计算细菌遗传力最佳？</h3><p>什么是<code>遗传力</code>呢？简单来说就是某个性状在群体中的变化多大程度上是由遗传因素决定的。比如身高，可以遗传因素可以占到80%. </p><p>在这个研究中，作者就探究了不同分类水平下柳枝稷根际微生物的遗传力，发现ASV水平下根际微生物的变异和寄主遗传变异相关性程度最高；当使用<code>Order</code>或者是<code>Family</code>水平进行计算时，也能得到较高的遗传力。这也就说明说明植物并不是募集特定的微生物，而是更倾向于募集具有特定功能的微生物群落。但是作者说他们在计算遗传力的时候起始是根据采样部位来决定的，也就是不同部位的微生物的遗传力用不同分类水平进行计算。我的观点：<strong>管他什么水平，全部计算了再说！</strong></p><p>复合对称模型（Composite Symmetry Model）是用于估计遗传和环境的方差成分的模型之一。它假定基因和环境都对个体产生相同的影响，而且这些影响是相互独立的。具体来说，这个模型假设基因对遗传效应的贡献是相同的，环境对环境效应的贡献也是相同的。因此，复合对称模型可以很好地解释许多与遗传和环境相关的现象，比如兄弟姐妹之间的相似性、亲属之间的遗传相关性等。在使用该模型时，需要先确定遗传和环境的方差，然后通过复合对称模型分别估计基因对遗传效应和环境对环境效应的贡献。</p><h3 id="mGWAS"><a href="#mGWAS" class="headerlink" title="mGWAS"></a>mGWAS</h3><p>先对每个采样田做个PCoA分析，前三个主坐标值用于GWAS分析。每个采样点筛选80% 以上样品中出现的微生物。使用柳枝稷专用的GWAS分析R包SwitchgrassGWAS完成分析。</p><h3 id="多功能位点挖掘"><a href="#多功能位点挖掘" class="headerlink" title="多功能位点挖掘"></a>多功能位点挖掘</h3><p>为了找到柳枝稷基因组上调控多个微生物的关键区域，作者根据其他研究中的连锁不平衡衰减距离将柳枝稷基因组切割为25 kb长的bins，然后计算每个bins中的SNP和微生物的相关性阈值，最终留下0.5%具有最低阈值的bins，这些bins被定义为QTL bins. 然后对这些QTL bins进行存在/缺失分析，构建存在/缺失矩阵。某个地点选择5个与最多的微生物相关的QTL bins进行后续分析。</p><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><h3 id="寄主和环境对柳枝稷根际微生物的影响"><a href="#寄主和环境对柳枝稷根际微生物的影响" class="headerlink" title="寄主和环境对柳枝稷根际微生物的影响"></a>寄主和环境对柳枝稷根际微生物的影响</h3><p>这个研究采样的方式还是比较独特的，下图中的×表示采样点，采集所有样品后，统一运送到ATX这个地方培养，然后再运输去其他两个地方，一共三个培养地点进行培养。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305061914902.png" alt="image-20230506191452768"></p><p>拿到这些根际微生物后，上来就是很常见的PCoA分析，可以看出三个地点栽培的柳枝稷的根际微生物显著不同（下图A），进一步对门水平的微生物进行发现Actinobacteria（放线菌门）和 Proteobacteria（变形菌门）在三个地点都是优势菌门（下图B）。再往下，作者想看看寄主的遗传差异和环境以及这两个因素对微生物的影响情况，发现地点对微生物的影响更大（下图C），对门水平进行类似的分析也是一样的结果（下图D）。这几个结果就说明影响柳枝稷根际微生物的主要因素是地点，但是寄主的基因型也有很明显的影响。进一步研究发现平均相对风度更高的微生物同时也是存在率最高的（下图E），这个比较好理解，只有出现次数多了，才会越来越多。这个研究中，研究者定义了地点核心微生物和研究核心微生物，简单理解的话就是每个地点的核心微生物中同时出现的微生物定义为研究核心微生物。从下图F可以看出研究核心微生物有92个。进一步比较地点核心微生物和研究核心发现，地点核心微生物占总微生物的60~70%，总核心微生物占总微生物的25%左右。这些结果整体上说明虽然地点对柳枝稷微生物影响很大，但是还是有很大一部分微生物是不同地点共有的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305061913728.png" alt="image-20230506191314164"></p><h3 id="寄主基因型和当地微生物的亲和性"><a href="#寄主基因型和当地微生物的亲和性" class="headerlink" title="寄主基因型和当地微生物的亲和性"></a>寄主基因型和当地微生物的亲和性</h3><p>前面的研究发现柳枝稷的基因型以及基因型对根际微生物的影响也比较大，作者就猜想不同基因型的柳枝稷是否会和当地的微生物产生亲和效应，从而募集到特异性的微生物？从下图A可以看出采样的这些柳枝稷来自不同亚群，而且不同的亚群分布在不同的地点，比如Gulf这个亚群主要分布ATX附近，CMO和KMI这两个地点分布的主要是Midwest这个亚群。为了验证这个猜想，作者就对微生物进行富集分析，发现在ATX这个地点终止的柳枝稷主要是Gulf这个亚群募集到更多的特异性微生物，其他两个地点富集到特异性微生物的主要是Midwest这个亚群（下图B）。进一步分析发现有意思的是只有当地适合的那个亚群富集到的微生物进行统计分析才具有显著性（下图C）。这些结果充分说明柳枝稷基因型和局部微生物间有明显的亲和性。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305061931117.png" alt="image-20230506193108712"></p><h3 id="基因型变异影响微生物丰度"><a href="#基因型变异影响微生物丰度" class="headerlink" title="基因型变异影响微生物丰度"></a>基因型变异影响微生物丰度</h3><p>在上述结果的基础上，作者想进一步探究柳枝稷基因型以及基因型和环境互作对根际微生物的影响。分别考虑两个变量：</p><ul><li>$V_A$: 加性遗传影响，也就是基因型的影响；</li><li>$V_{GxE}$：基因型和环境的互作效应</li></ul><p>从门水平到ASV水平都进行了统计分析，发现这两个因素都会影响微生物的丰度（下图A）。将每个分类水平下受到这连个因素影响排名前十的微生物挑出来进一步分析发现，随着分类水平的细化，遗传因素对微生物的影响越大，反之基因型和环境互作效应的影响在逐渐减小，但是在ASV水平上依旧是比较高的（下图B）。在此基础上再进行细化分析，发现有三个Order下的ASV都显著受到这两个因素的影响（下图C，这个每台看懂。。。）。从整体上看，基因x环境互作效应对微生物的影响比基因型单独的影响明显（下图D）。利用非结构模型发进一步分析遗传因素对总核心微生物的影响，发现不亚群的遗传背景对总核心微生物的影响差异明显（下图E）。总之，这些结果说明寄主的遗传差异在很大程度上影响着柳枝稷根际微生物的多样性。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305061942123.png" alt="image-20230506194223106"></p><h3 id="微生物组组装具有多小遗传效应"><a href="#微生物组组装具有多小遗传效应" class="headerlink" title="微生物组组装具有多小遗传效应"></a>微生物组组装具有多小遗传效应</h3><p>有那么多样本，基因组也有，微生物组也有，那就肯定是要上mGWAS的。首先，作者没有直接利用微生物作为表型，而是将微生物组PCoA的前三个主成分作为表型进行GWAS分析。毫不意外，找到一大堆关联位点（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305062009926.png" alt="image-20230506200952523"></p><p>既然上面的结果都说明了基因型和环境互作效应对微生物的影响更大，那肯定是要从这个方向分析做GWAS的。作者使用的组合是ASVx地点这种形式，一共是有1019个单独的分析。发现1153个SNP和459个ASVx地点显著关联，其中ATX这个地点有253个、CMO有101个、KMI有105个。这些ASV非常丰富，但是没有重叠的（不知道我有没有理解对这句话）（下图A）。其中有50个ASV出现在两个及以上地点，有9个ASV在三个地点都是显著的。在这个基础上，作者想继续探究柳枝稷根际微生物的变化是否会受到寄主多位点的调控，于是就将柳枝稷的基因组切割成25 kb长度的片段，再分析一个片段内是否有两个及以上的显著位点。具体的方法是筛选每个地点中与最多的ASV关联的基因组片段 ，选择前5%作为每个地点中最常见的基因组片段。既然这些篇段都找到了，那就看看这些片段中的基因的表达情况（下图B），结果发现这些基因在根部的表达量更高，这是符合实际的，只有在根部表达量高才会直接富集根际微生物。而且比较有意思的点在于这些基因大多和钙信号、免疫和次级细胞壁生物合成相关。下图C我就完全没看懂了，图例也没写清楚，大概表示每个基因组片段显著富集到的微生物群。下一个分析操作我觉得是比较有意思的，作者猜想不同基因组片段和它特异性富集的微生物之间的序列有没有显著的相关性呢？一波分析发现确实是有显著相关性的（下图D）。加上一系列的分析后作者认为寄主的相关代谢通路的变化会影响富集到的微生物群落特征。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305062042792.png" alt="image-20230506204214791"></p><p>为了更好地探究不同地点对微生物群落的影响，作者使用了一种类似于Meta分析的方法将三个地点GWAS结果中的P值进行整合，一共有239个SNP在阈值之上，92个总核心微生物中有44个显著被关联到（下图A）。下一步比较有意思的操作是对ASV进行GO富集分析（下图B），一共富集到76个唯一的GO条目，苹果酸运输和细胞壁生物合成是最显著的两个通路，而苹果酸是植物根系分泌物中塑造根际微生物群落过程中的重要物质。这些结果说明虽然环境是决定柳枝稷根际微生物群落的最主要因素，但是还是有一些微生物及其相关的寄主遗传位点是不同环境地点所共有的。简单来说就是有些遗传位点非常重要！</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305062041467.png" alt="image-20230506204151304"></p><h3 id="PTI响应与根际微生物组成相关"><a href="#PTI响应与根际微生物组成相关" class="headerlink" title="PTI响应与根际微生物组成相关"></a>PTI响应与根际微生物组成相关</h3><p>作者之所以会这样想的原因在于他们认为控制植物PTI响应的某些位点（片段）和控制根际微生物组的位点是一样的，那么就猜想调控PTI的位点是否会调控根际微生物群落特征。为了验证这个猜想，作者就对ATX这个地点的样品进行采样，然后利用flg22处理叶片，利用酶标仪读取ROS荧光信号，发现flg22处理后柳枝稷ROS爆发明显（与CK相比）（下图A和B）。在这个基础上，作者将测量得到的数据利用PCA降维，不看测量值，看主成分（下图C，貌似没啥意义）。<strong>我觉得这个文章数据分析中最有意思的点在于这里将PCA值取前5%和最后的5%进行比较</strong>，再去比较这两种情况下的荧光信号值。下图D可以看出PC1可以作为区分植物有没有响应flg22的指标，红色的响应明显，黑色的几乎没有荧光；PC2可以看出有些植物是快速响应的，有的是逐渐响应的；PC3则可以看出不同植株响应的时间是不一样的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305062052156.png" alt="image-20230506205247838"></p><p>起始还没有解释他们的猜想，于是就用PC值和ATX中的核心微生物进行关联分析（下图），发现739个ASV中有126个和主成分显著相关。PC2和PC3关联到的微生物很少，而且基本都是负相关的；反之PC1关联到更多的ASV，而且呢正相关和负相关的数量基本持平。这个结果说明根际微生物组和植物免疫响应之间的相关性是收到遗传因素影响的，而且这种相关性不仅仅局限于某些特定的微生物。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305062100811.png" alt="image-20230506210000693"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多组学解析荞麦抗立枯丝核菌的分子机制</title>
      <link href="/article/qiaomai/"/>
      <url>/article/qiaomai/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://academic.oup.com/plcell/advance-article-abstract/doi/10.1093/plcell/koad118/7146951?redirectedFrom=fulltext&amp;login=false"><strong>Multi-omics analysis reveals the molecular mechanisms underlying virulence in</strong> <em>Rhizoctonia</em> <strong>and jasmonic acid–mediated resistance in Tartary buckwheat (Fagopyrum tataricum)</strong></a></p></blockquote><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2><ul><li>立枯丝核菌（<strong><em>Rhizoctonia solani</em></strong>）是一种全球性的病害，能够侵染危害多种作物，如水稻、小麦、玉米、马铃薯、大豆、番茄及白菜等。</li><li>防治主要依靠化学杀菌剂，农事操作和生防控制的效果一般般。</li><li>立枯丝核菌4个代表性的融合群都有基因组草图。比较基因组和转录组发现不同融合群之间的遗传结构和基因表达具有差异。水稻受立枯丝核菌侵染后糖酵解和氧化戊糖磷酸途径发生显著变化。最近的一些研究利用GWAS找到与水稻/玉米纹枯病相关的基因。</li><li>多核的立枯丝核菌可以分为14个“亚群”，报错AG-1到AG-13和AGB1. 其中AG4-HGI 3是从荞麦中分离得到的，能够导致荞麦茎秆溃烂、湿病和幼苗死亡，造成严重的产量损失。<strong>但是荞麦抗该菌的遗传机制还不清楚。</strong></li></ul><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><h3 id="组装AG4-HGI-3基因组发现大量致病相关基因"><a href="#组装AG4-HGI-3基因组发现大量致病相关基因" class="headerlink" title="组装AG4-HGI 3基因组发现大量致病相关基因"></a>组装<code>AG4-HGI 3</code>基因组发现大量致病相关基因</h3><p>首先接种试验发现这个菌不仅能够侵染单子叶植物，还能侵染双子叶植物。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305010949934.png" alt="image-20230501094945272"></p><p>通过比较基因组发现这个菌在分类上属于AG4这个“亚群”，而且发现了大量基因存在扩张和丢失现象。在这些扩张的基因中，大量基因和植物细胞壁相关，如果胶、纤维素、半纤维素、木质素等。病原菌致病基因通常会编码碳水化合物活性酶（CAZymes），研究者就想关注这些基因的变化情况。发现大约有5.45%的编码基因，也就是1026个基因参与这些关键的过程。【AA，辅助活性；CE，碳水化合物酯酶；GT，糖基转移酶；GH，糖苷水解酶水解酶；CBM，碳水化合物碳水化合物结合模块；PL，多糖裂解酶。】</p><p>此外，研究者还预测了 2,355 个毒力基因、3,099 个病原-宿主相互作用基因、2,124 个转运体基因、2,071 个跨膜蛋白基因和 19 个次级代谢产物生物合成基因。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011000576.png" alt="image-20230501100013143"></p><h3 id="AG4-HGI-3侵染过程中大量病原西瓜基因表达上调"><a href="#AG4-HGI-3侵染过程中大量病原西瓜基因表达上调" class="headerlink" title="AG4-HGI 3侵染过程中大量病原西瓜基因表达上调"></a><code>AG4-HGI 3</code>侵染过程中大量病原西瓜基因表达上调</h3><p>下一步，就是利用转录组技术探究<code>AG4-HGI 3</code>侵染荞麦过程中基因表达变化情况。设置了3个时间点：6小时、14小时和22小时。发现在这三个不同的时期，这个菌均有大量的基因表达上调，侵染后6小时只有503个基因表达上调，但是14小时就就有2102个基因表达上调，14小时到22小时变化不大。这说明这个菌在侵染荞麦后的14小时左右有大量基因表达上调。进一步分析这些表达上调的基因发现大量基因与致病相关。KEGG注释发现这些差异基因大多和核糖体相关，表明这个菌在侵染荞麦过程中发生的转录翻译具有代谢活性。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011021940.png" alt="image-20230501102155863"></p><p>进一步的，还是和基因组分析类似，将CAZymes相关的基因挑选出来查看其表达情况。和基因组结果类似，这个菌在侵染荞麦的过程中与CAZymes相关的大量基因表达上调。这个结果也为进一步探究这个菌的侵染机制奠定了基础。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011030606.png" alt="image-20230501103045508"></p><p>除了CAZymes相关的基因外，研究者还选择已经报道过的4个致病基因的同源基因进行异源表达。结果发现和对照相比，这4个毒性基因菌能够显著提高寄主的感病性。也就意味着这些毒性基因在这个菌侵染苦荞的过程中发挥中重要功能。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011046901.png" alt="image-20230501104620835"></p><h3 id="JA途径参与苦荞对AG4-HGI-3的响应"><a href="#JA途径参与苦荞对AG4-HGI-3的响应" class="headerlink" title="JA途径参与苦荞对AG4-HGI 3的响应"></a>JA途径参与苦荞对<code>AG4-HGI 3</code>的响应</h3><p>在探究了<code>AG4-HGI 3</code>在侵染过程中的基因变化情况，研究者进一步的想探究寄主—苦荞在响应这个病原菌侵染过程中的转录表达变化。和病原菌的差异基因数量变化情况一致，随着侵染时间的变化，越来越多的基因参与到这个过程中。KEGG富集分析发现这些差异基因主要和植物次级代谢和植物激素信号转到相关。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011053716.png" alt="image-20230501105342653"></p><p>既然是植物激素在其中发挥功能，那么到底是哪个激素在发挥功能呢？研究者使用共培养（侵染）的方法发现是JA在发挥作用。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011059691.png" alt="image-20230501105934928"></p><p>在确定是JA在发挥功能后，研究者从转录组数据中将JA相关的基因筛选出来观察其表达量，发现这些基因的确实是发生了变化。进一步的，为了进一步确认这个结果，研究者直接用MeJA处理荞麦，然后进行转录组测序，将两次转录组的数据进行整合分析发现大量共有基因发生了差异表达变化。在此基础上，利用KEGG发现这些共有的基因大多与本丙烷和类黄酮合成相关。前期有研究发现JA能够调控类黄酮的是生物合成，而类黄酮则参与植物对生物胁迫的响应。研究者就假设这个病原菌侵染过程中，荞麦植株体内JA发生变化，从而调控类黄酮的生物合成，进而影响植株对这个病原菌的抗性。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011107433.png" alt="image-20230501110734975"></p><p>证明了是JA在发挥作用，也把JA相关的同源基因都找出来了，那有没有新的基因呢？还真发现一个！而且通过qPCR和异源表达都发现了这个基因确实能够提高荞麦植株对立枯丝核菌的抗性。而且，过表达这个基因后，类黄酮的含量都显著的升高了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011118826.png" alt="image-20230501111830758"></p><h3 id="利用基于转录组的GWAS挖掘荞麦更多的抗性基因"><a href="#利用基于转录组的GWAS挖掘荞麦更多的抗性基因" class="headerlink" title="利用基于转录组的GWAS挖掘荞麦更多的抗性基因"></a>利用基于转录组的GWAS挖掘荞麦更多的抗性基因</h3><p>上面这一些列的操作确实是找到了关键的基因。但是，荞麦抵抗立枯丝核菌过程中发挥功能的基因肯定不止这一个，那怎么样才能把这些基因都挖掘出来呢？GWAS！</p><p>研究者从全世界收集了320个荞麦种质资源并接种立枯丝核菌，病情指数变异系数大概是65.6%，这表明这个群体对立枯丝核菌的抗性差异很大。用病情指数作为表型，一共鉴定到122个显著相关的SNP位点，这些SNP分布在7条染色体上。在这些SNP上下游200kb的范围内寻找潜在的关键基因，一共发现790个候选基因。对这些候选基因进行KEGG注释分析发现有14个基因与植物-病原互作相关，这说明GWAS结果是比较准确的。</p><p>在这个基础上，考虑到次级代谢在植物抗病过程中是非常重要的，研究者便将GWAS的结果与之前的mGWAS进行比较，发现有5个区域是重叠是，这5个区域与抗病代谢物和病情指数相关。</p><p>在这个基础上，研究者将转录组和GWAS的结果进行整合分析。发现转录组中发生显著变化的基因中有106个位于GWAS结果中的15个基因组区域。这106个基因中有49个基因在立枯丝核菌侵染后或MeJA处理后表达上调。这些基因的同源基因在先前的研究中被发现与植物抗性相关。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011245530.png" alt="image-20230501112901127"></p><h3 id="FtASP受JA诱导后能够通过抑制菌丝的生长阻止AG4-HGI-3的侵染"><a href="#FtASP受JA诱导后能够通过抑制菌丝的生长阻止AG4-HGI-3的侵染" class="headerlink" title="FtASP受JA诱导后能够通过抑制菌丝的生长阻止AG4-HGI 3的侵染"></a><em>FtASP</em>受JA诱导后能够通过抑制菌丝的生长阻止<code>AG4-HGI 3</code>的侵染</h3><p>为了进一步探究荞麦对<code>AG4-HGI 3</code>的抗性并验证GWAS结果的准确信，研究者从GWAS结果中筛选6个基因进行验证。异源表达发现这些基因都可以提高荞麦对立枯丝核菌的抗性。在这6个基因中，<em>FtPinG0302743900</em>编码天冬氨酸蛋白酶（<strong><em>FtASP</em></strong>），而且能够和毒性蛋白<strong><em>RsYTHDC</em></strong>互作。这个基因在320个材料中具有三种单倍型，而且<code>C</code>单倍型的抗性更高。qPCR检测基因表达发现这个基因表达量越高的品种对立枯丝核菌的抗性越强。过表达这个基因后，荞麦对立枯丝核菌的抗性显著提高。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202305011211154.png" alt="image-20230501120949347"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MCScanX遇到的一个坑</title>
      <link href="/article/mcscanx/"/>
      <url>/article/mcscanx/</url>
      
        <content type="html"><![CDATA[<p>输入一个巨大的基因组都没有得到结果，最后发现<code>gff</code>文件需要整理成这样的才行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">1_352   Zm00001eb015320_T001    52489256        52490901<br>1_352   Zm00001eb015320_T002    52489256        52490901<br>1_352   Zm00001eb015320_T003    52489489        52490901<br>1_352   Zm00001eb020400_T001    75800802        75801504<br>1_352   Zm00001eb025220_T001    107564069       107566034<br>1_352   Zm00001eb030990_T001    171853294       171855490<br>1_352   Zm00001eb030990_T002    171853349       171855490<br>1_352   Zm00001eb042020_T001    221467932       221469468<br>1_352   Zm00001eb051120_T002    259960362       259963720<br>1_352   Zm00001eb051120_T001    259960362       259963720<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notung推断基因的丢失和复制事件</title>
      <link href="/article/notung/"/>
      <url>/article/notung/</url>
      
        <content type="html"><![CDATA[<h2 id="Java安装"><a href="#Java安装" class="headerlink" title="Java安装"></a>Java安装</h2><p>从<a href="https://www.java.com/en/download/下载安装Java，一路默认即可，免得环境变量里面没有。">https://www.java.com/en/download/下载安装Java，一路默认即可，免得环境变量里面没有。</a></p><h2 id="下载Nutong"><a href="#下载Nutong" class="headerlink" title="下载Nutong"></a>下载Nutong</h2><p>从<a href="http://goby.compbio.cs.cmu.edu/Notung/download29.html下载Nutong。解压后找个位置存放。">http://goby.compbio.cs.cmu.edu/Notung/download29.html下载Nutong。解压后找个位置存放。</a></p><h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><p>需要两个数据：</p><ul><li>基因系统发育树：前缀需要有物种名称或者是代码。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304151822743.png" alt="image-20230415182247437"></p><ul><li>物种系统发育树。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304151823052.png" alt="image-20230415182308863"></p><h2 id="运行软件"><a href="#运行软件" class="headerlink" title="运行软件"></a>运行软件</h2><p>Win+R代开cmd，然后输入：</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">java -jar D:\MyData\Desktop\Notung-<span class="hljs-number">2</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span>.<span class="hljs-number">5</span>\Notung-<span class="hljs-number">2</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span>.<span class="hljs-number">5</span>.jar<br></code></pre></td></tr></tbody></table></figure><p>回车后就有界面了：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304151824629.png" alt="image-20230415182450923"></p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304151825902.png" alt="image-20230415182522252"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304151825944.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言学习资料推荐</title>
      <link href="/article/rlearning/"/>
      <url>/article/rlearning/</url>
      
        <content type="html"><![CDATA[<h2 id="如何快速学习"><a href="#如何快速学习" class="headerlink" title="如何快速学习"></a>如何快速学习</h2><p>我个人觉得最好的学习方法是这样的：</p><ul><li>夯实基础：先把基础打牢（<code>建议学习路径</code>部分）；</li><li>项目实战：从项目出发，比如我想做微生物组分析，那就去找一篇经典的文献，学习其中的代码，把每行代码的意思搞懂，弄清楚需要的数据类型和结构，自己做项目分析的时候直接套用即可。</li><li>先让代码无报错的跑起来，再完善代码的可读性。切记：<strong>我们的目的是完成数据分析和可视化，而不是写很好看的代码！！！</strong></li></ul><h2 id="建议学习路径"><a href="#建议学习路径" class="headerlink" title="建议学习路径"></a>建议学习路径</h2><ol><li>R、RStudio安装</li><li>R包安装</li><li>数据读入</li><li>数据导出</li><li>数据重塑<ol><li>长变宽</li><li>宽变长</li></ol></li><li>基础绘图<ol><li>ggplot2即可，不用学base绘图</li><li>图片导出为PPT格式</li></ol></li><li>批量化处理<ol><li>for循环</li></ol></li><li>可重复分析</li></ol><p>学完这些基本就能应对80%以上的分析任务了。</p><h2 id="视频推荐"><a href="#视频推荐" class="headerlink" title="视频推荐"></a>视频推荐</h2><p>2018年我学的就是这个视屏，我也只推荐这个视屏作为R语言的快速入门视频：<a href="https://www.bilibili.com/video/BV19x411X7C6/?spm_id_from=333.337.search-card.all.click">B站视频-R 语言入门与数据分析</a></p><h2 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h2><p>只推荐这么两本书：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/198185888">《R 语言编程 — 基于 tidyverse》</a>：R数据分析的最新书籍，也是我最推荐的书籍，尽量不要碰《R语言实战》这本书。</li><li><a href="https://yun.weicheng.men/Book/R语言数据可视化之美：专业图表绘制指南（增强版）.pdf">R 语言数据可视化之美：专业图表绘制指南</a>：几乎所有的数据可视化类型都有，有代码。</li></ul><h2 id="博客推荐"><a href="#博客推荐" class="headerlink" title="博客推荐"></a>博客推荐</h2><p>只推荐两个博客：</p><ul><li>北京大学统计科学中心李东风老师R语言教程：<a href="https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html">https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html</a></li><li>四川师范大学王敏杰老师R语言教程：<a href="https://bookdown.org/wangminjie/R4DS/author.html#author">https://bookdown.org/wangminjie/R4DS/author.html#author</a></li></ul><h2 id="公众号推荐"><a href="#公众号推荐" class="headerlink" title="公众号推荐"></a>公众号推荐</h2><ul><li>YuLabSMU：顶级R语言开发大神Y叔公众号。</li><li>生信技能树：我愿称之为国内生信最佳推广小组。</li><li>生信媛：秀恩爱之余还不忘写代码的榜样。</li><li>果子学生信：export包就是果子老师拯救的。</li><li>红皇后学术：大量微生物相关的优秀内容。</li><li>宏基因组：刘永鑫老师的公众号，强推。</li><li>老俊俊的生信笔记：总是刷新认知的绘图大佬。</li><li>R语言数据分析指南</li><li>生信菜鸟团</li><li>生信宝典</li><li>统计之都</li><li>VisualHub：很少更新，一更新就是惊喜。</li><li>微生信生物：南京农大文涛老师公众号，微生物组宏基因组。</li><li>小白鱼的生统笔记：从原理到代码的标杆公众号。</li><li>庄闪闪的R语言手册</li></ul><h2 id="文献阅读"><a href="#文献阅读" class="headerlink" title="文献阅读"></a>文献阅读</h2><p>优秀的文献是会释放代码和数据的，比如水稻微生物组经典文献：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304141030092.png" alt="image-20230414103007962"></p><p>在材料与方法里面有这样一段话：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304141030924.png" alt="image-20230414103057965"></p><p>也就是说他们的分析代码和数据都是公开的，如果想实现类似的分析，那么参考他们的代码就可以：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304141032359.png" alt="image-20230414103201161"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装Docker</title>
      <link href="/article/ubuntudocker/"/>
      <url>/article/ubuntudocker/</url>
      
        <content type="html"><![CDATA[<p>在 Ubuntu 中安装 Docker 的步骤如下：</p><ol><li>更新和升级现有软件包以确保您拥有更新的软件源列表。</li></ol><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> update<br>sudo apt-<span class="hljs-built_in">get</span> upgrade<br></code></pre></td></tr></tbody></table></figure><ol><li>安装 Docker 所需的软件包，可以使用以下命令完成：</li></ol><figure class="highlight armasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">sudo</span> apt-<span class="hljs-meta">get</span> install apt-transport-https ca-certificates curl gnupg-agent software-properties-<span class="hljs-meta">common</span><br></code></pre></td></tr></tbody></table></figure><ol><li>添加 Docker GPG 密钥以保证软件包的真实性。</li></ol><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -fsSL https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/u</span>buntu/gpg | sudo apt-key add -<br></code></pre></td></tr></tbody></table></figure><ol><li>向您的 APT 软件源添加 Docker 软件源。</li></ol><figure class="highlight smali"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">sudo<span class="hljs-built_in"> add-apt-repository </span><span class="hljs-string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</span><br></code></pre></td></tr></tbody></table></figure><ol><li>重新运行更新操作以更新新加入的 Docker 软件源。</li></ol><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo apt-<span class="hljs-keyword">get</span> <span class="hljs-keyword">update</span><br></code></pre></td></tr></tbody></table></figure><ol><li>现在，您可以安装 Docker CE 包。</li></ol><figure class="highlight vim"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt-<span class="hljs-built_in">get</span> install docker-<span class="hljs-keyword">ce</span> docker-<span class="hljs-keyword">ce</span>-cli containerd.io<br></code></pre></td></tr></tbody></table></figure><p>以上是在 Ubuntu 中安装 Docker 的基本步骤。为了验证是否正确安装了 Docker，请运行以下命令：</p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo docker <span class="hljs-built_in">run</span> hello-world<br></code></pre></td></tr></tbody></table></figure><p>如果输出 <code>Hello from Docker!</code>，则代表已成功安装 Docker。</p><p>希望这对您有所帮助！</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>参与式育种在基因挖掘中的应用</title>
      <link href="/article/pvsgenome/"/>
      <url>/article/pvsgenome/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.pnas.org/doi/abs/10.1073/pnas.2205774119">Gesesse C A, Nigir B, de Sousa K, et al. Genomics-driven breeding for local adaptation of durum wheat is enhanced by farmers’ traditional knowledge[J]. Proceedings of the National Academy of Sciences, 2023, 120(14): e2205774119.</a></p></blockquote><h2 id="试验设计"><a href="#试验设计" class="headerlink" title="试验设计"></a>试验设计</h2><h3 id="试验材料"><a href="#试验材料" class="headerlink" title="试验材料"></a>试验材料</h3><p>一共是有两个试验群体：</p><ul><li>埃塞俄比亚本地的小麦群体，一共是400个（其中372个本地品种，28个是育种过程中改良的品种），标记为<code>DP</code>（Diversity Pool）；</li><li>埃塞俄比亚NAM（Nested association mapping）群体（<code>EtNAM</code>）：利用上述400个本地品种中的50个加上一个意大利改良品种<strong><em>Bidi</em></strong>与改良的温带小麦品种<strong><em>Asassa</em></strong>构建NAM群体。也就是利用选择的51个品种与<strong><em>Asassa</em></strong>进行杂交，然后不断进行自交。这个研究利用单粒传法构建了自交8代后得到一个重组自交系（RIL）。这个重组近交系含有1200个Lines，属于12个families。</li></ul><h3 id="试验地点"><a href="#试验地点" class="headerlink" title="试验地点"></a>试验地点</h3><p>一共是选择3个地点开展本研究的的试验。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304061101519.png" alt="image-20230406110150663"></p><h3 id="测量指标"><a href="#测量指标" class="headerlink" title="测量指标"></a>测量指标</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304061135544.png" alt="image-20230406113542897"></p><h3 id="当地农民的参与式选择"><a href="#当地农民的参与式选择" class="headerlink" title="当地农民的参与式选择"></a>当地农民的参与式选择</h3><p>当一半的小区都开花的时候，请试验地周围的对小麦种植很有经验的农民参与其中。将农民按照性别进行分组，每组5人。随机选择一个小区开始评估。评估时农民只需要回到对这个小区的整体感觉（overall appreciation， OA）。分值从1到5，分别代表最差和最好。这个过程中不关注具体的性状，比如株高，只需要问对整个小区的评价即可。每个农民的评价都单独记录。</p><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><p>农艺性状和农民的评估值都转换为BLUP值（最佳无偏线性估计）。</p><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><h3 id="农民对品种的评价"><a href="#农民对品种的评价" class="headerlink" title="农民对品种的评价"></a>农民对品种的评价</h3><p>首先是对EtNAM这些材料的OA值先转换为BLUP后再进行评估。三个地点中男性和女性农民的评分的分布基本是一致的，但是在Adet和Kulumsa这两个地点，男性农民的评分稍微高于女性农民的评分（下图A和B）。虽然在Kulumsa这个地点这个群体有这更高的产量（下图C），但是这些受邀参与评估的农民对Adet这个地点的评分更高。在这个基础上，研究人员筛选出OA排名前5%的品种，发现有26个材料不管是男性农民还是女性农民都很“喜欢”（下图D和E）。这26个材料主要来自于EtNAM的N51、N1和N8这三个family. </p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304061437119.png" alt="image-20230406143704779"></p><p>进一步的，研究者探究了农民的评价和其他所有测量指标之间的相关性。发现农民的OA评分始终与产量和产量相关的性状正相关。这表明农民们更喜欢早熟、高产、高大且粗壮的品种。而且在三个地点中，</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304061514320.png" alt="image-20230406151406210"></p><h3 id="农民评价在育种上的应用"><a href="#农民评价在育种上的应用" class="headerlink" title="农民评价在育种上的应用"></a>农民评价在育种上的应用</h3><p>在此基础上，研究者利用Plackett-Luce模型对农民的评分及选择模式进行分析和排名进一步确定那些因素是最重要的，将这些因素用于后续的EtNAM育种。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304071022747.png" alt="image-20230407102226415"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于广义遗传力</title>
      <link href="/article/heritability/"/>
      <url>/article/heritability/</url>
      
        <content type="html"><![CDATA[<p>广义遗传力（broad-sense heritability）是一个用于描述性状在总体中遗传成分所占比例的统计量。它是指由所有基因效应和环境因素共同决定的某个性状的遗传变异部分与总变异部分之间的比例。</p><p>广义遗传力包括了所有遗传因素的影响，包括加性、显性、上位和互作效应等。它通常用 H^2 表示，其取值范围为 0 到 1 之间。当 H^2=0 时，表明该性状完全由环境因素决定；当 H^2=1 时，表明该性状完全由遗传因素决定。</p><p>广义遗传力是遗传学研究中一个重要的概念，可以帮助我们了解不同性状的遗传特征，并为育种和遗传改良提供理论依据。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 是生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OrthoFinder报错</title>
      <link href="/article/orthofindererror/"/>
      <url>/article/orthofindererror/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304051616073.png" alt="image-20230405161610685"></p><p>ChatGPT是这样回答的：</p><blockquote><p>这个错误通常是由于 Python 版本的更新导致的，Python 3.x 不再支持 ‘rU’ 模式。您可以尝试将代码中的 ‘rU’ 替换为 ‘r’，这应该可以解决问题。</p><p>如果您使用的是 OrthoFinder 的旧版本，可能需要升级到最新版本以解决此问题。您可以访问 OrthoFinder 的官方网站（<a href="https://github.com/davidemms/OrthoFinder）下载最新版本，并按照说明进行安装和使用。">https://github.com/davidemms/OrthoFinder）下载最新版本，并按照说明进行安装和使用。</a></p><p>另外，如果您使用的是 Python 2.x 版本，那么 ‘rU’ 模式仍然是有效的。但是，由于 Python 2.x 已经停止维护，建议您尽快升级到 Python 3.x 版本以获得更好的性能和安全性。</p></blockquote><p>亲测有效！！！</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件相关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode取消波浪线</title>
      <link href="/article/vscodeline/"/>
      <url>/article/vscodeline/</url>
      
        <content type="html"><![CDATA[<p>取消前是这样的（强迫症患者表示受不了啊。。。。。。）：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202304051137396.png" alt="image-20230405113747579"></p><p>取消方法：</p><p>在设置文件<code>settings.json</code>文件中加入下面的内容即可：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">"workbench.colorCustomizations"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"editorError.foreground"</span><span class="hljs-punctuation">:</span>   <span class="hljs-string">"#00000000"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"editorWarning.foreground"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"#00000000"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"editorInfo.foreground"</span><span class="hljs-punctuation">:</span>    <span class="hljs-string">"#00000000"</span><br>    <span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单细胞数据分析学习笔记</title>
      <link href="/article/singlecell/"/>
      <url>/article/singlecell/</url>
      
        <content type="html"><![CDATA[<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="R包"><a href="#R包" class="headerlink" title="R包"></a>R包</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"Seurat"</span><span class="hljs-punctuation">)</span><br>BiocManager<span class="hljs-operator">::</span>install<span class="hljs-punctuation">(</span><span class="hljs-string">"scater"</span><span class="hljs-punctuation">)</span><br>BiocManager<span class="hljs-operator">::</span>install<span class="hljs-punctuation">(</span><span class="hljs-string">"monocle"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>选择最近发表者<strong><em>Science</em></strong>上的这篇文章的数据进行分析联系。</p><blockquote><p><a href="https://www.science.org/doi/10.1126/science.adf4721">Nolan T M, Vukašinović N, Hsu C W, et al. Brassinosteroid gene regulatory networks at cellular resolution in the Arabidopsis root[J]. Science, 2023, 379(6639): eadf4721.</a></p></blockquote><p>&gt;<br>&gt;</p><blockquote><p><a href="https://www.nature.com/articles/s41576-023-00586-w#citeas">Heumos, L., Schaar, A.C., Lance, C. <em>et al.</em> Best practices for single-cell analysis across modalities. <em>Nat Rev Genet</em> (2023). https://doi.org/10.1038/s41576-023-00586-w</a></p></blockquote><h2 id="流程资料"><a href="#流程资料" class="headerlink" title="流程资料"></a>流程资料</h2><p><a href="https://www.sc-best-practices.org/preamble.html">上述第二篇文献对应的学习网站</a></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统发育树构建中的模型选择-ChatGPT版本</title>
      <link href="/article/phylotree/"/>
      <url>/article/phylotree/</url>
      
        <content type="html"><![CDATA[<p>系统发育树构建中的不同模型指的是在建立系统发育树（phylogenetic tree）时所使用的不同计算模型，这些模型用于描述不同的进化历程。它们通常基于分子序列数据或形态特征数据，并用来估计进化距离、基因替换率、分支长度和概率等参数。</p><p>一些常见的系统发育树构建模型包括：</p><ul><li>JC69 模型：最简单的核苷酸取代模型，假设所有碱基变异的概率相等。</li><li>K80 模型：假设两种碱基之间的取代率可能不同。</li><li>F81 模型：假设在整个进化过程中，各种碱基的频率保持不变。</li><li>HKY85 模型：结合了 K80 和 F81 两个模型。</li><li>GTR 模型：广义时间反转模型，假设在不同的 DNA 序列位置上具有不同的碱基频率和取代率。</li><li>JTT 模型：氨基酸序列变异模型，假定氨基酸之间的取代率是不同的。</li><li>WAG 模型：结合了 Jones-Taylor-Thornton 模型和 Whelan-And Goldman 模型。</li><li>LG 模型：Le and Gascuel 模型，基于大量的蛋白质序列信息，用于研究复杂的分子进化过程。</li></ul><p>这些模型在系统发育树的构建中发挥着关键作用，可以帮助研究人员更好地理解物种之间的进化关系和演化历史。</p><hr><p>当涉及到用于构建系统发育树的氨基酸替代模型时，以下是一些常用的模型：</p><ol><li>Dayhoff 模型：由 Margaret Dayhoff 等人于 1978 年首次介绍，在蛋白质序列相似性研究中广泛使用。Dayhoff 模型将氨基酸分成五个分类，从最多不同到最相似的等级，使用一个氨基酸替代矩阵，用于描述每个分类之间的氨基酸替代概率。Dayhoff 模型被视为是 PAM 和 JTT 模型的前身，且与这些模型相比较已经过时。</li><li>PAM 模型：由 Margaret Dayhoff 和 Robert V. Eck 等人于 1965 年提出，是最早广泛使用的氨基酸替代模型之一。PAM 模型使用一组大小为 1 的基础对数几率，然后使用在百万年（PAM:point accepted mutation）内氨基酸替代情况的比率，计算不同的氨基酸之间的一个置换矩阵。由此，PAM 模型基于相当长时间内的进化历史，用于描述氨基酸之间的替代率，因此在某些场景下已过时。</li><li>JTT 模型：由 Jones 和 Taylor 在 1990 年提出，是基于最小二乘法的统计方法，也称之为 Jones–Taylor–Thornton 模型。它基于已知氨基酸序列采集数据，对不同氨基酸对之间的替代率进行建模。</li><li>WAG 模型：由 Whelan 和 Goldman 于 2001 年提出，是一个更复杂的模型，在相似的氨基酸对之间，它使用一个独立的校正因子作为修正系数。该模型较适用于从一个群体里不同种的近亲中选出的窄群体的簇间区间树的建立。</li><li>LG 模型：由 Le 和 Gascuel 在 2008 年提出，计算干扰之间氨基酸之间距离的信息进行系统发育树构建。它是 JTT 模型的扩展版本，使用更大的数据来精确地定义氨基酸之间的相似性。</li><li>CAT 模型：复合自适应型细分替换模型（CAT），是由 Lartillot 和 Philippe 在 2004 年提出。它是一种广义和强大的氨基酸替代模型，能够通过独立地处理每个氨基酸站点，区分平滑和分段的现象。CAT 模型使用了一种混合模型，调整了氨基酸替换概率。它是一种先进的进化分析方法，较适用于复杂的氨基酸过程，尤其是在比较不相关的序列时。</li></ol><p>这些模型是用于系统发育树构建中最常用的氨基酸替代模型之一。需要注意的是，不同模型的适用场景因数据类型、数据大小等因素的不同而有所不同。因此，在使用模型时，需要选择适合目标数据的模型，并比较模型的效果和准确性。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学软件笔记</title>
      <link href="/article/undefined/"/>
      <url>/article/undefined/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NCBI-CDD本地搭建</title>
      <link href="/article/ncbicdd/"/>
      <url>/article/ncbicdd/</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>需要大量使用CDD-Search检索结构域，但是网页版有限制，单次序列不能超过1000条（我单次就近条啊），索性直接在服务器上搭建CDD本地版。</p><h2 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ascp -v -k 1 -T -l 1000m -i ~/mambaforge/envs/tools4bioinf/etc/asperaweb_id_dsa.openssh  anonftp@ftp.ncbi.nih.gov:/pub/mmdb/cdd/cdd.tar.gz ./<br></code></pre></td></tr></tbody></table></figure><p>然后直接解压即可。</p><h2 id="数据库构建"><a href="#数据库构建" class="headerlink" title="数据库构建"></a>数据库构建</h2><p>新建了一个<code>blast+</code>的环境才运行成功。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">makeprofiledb -<span class="hljs-keyword">in</span> Cdd.pn -out ../db/ncbi.cdd -dbtype rps<br></code></pre></td></tr></tbody></table></figure><h2 id="比对"><a href="#比对" class="headerlink" title="比对"></a>比对</h2><p>同样需要进入新的环境进行操作。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpsblast -query results/oryza.1/6.all.wrky.pep.fa -outfmt 6 -evalue 0.01 -db ~/database/ncbi.cdd/db/ncbi.cdd -out results/oryza.1/7.ncbi.cdd.res.txt -num_threads 60<br></code></pre></td></tr></tbody></table></figure><h2 id="结构域匹配"><a href="#结构域匹配" class="headerlink" title="结构域匹配"></a>结构域匹配</h2><h3 id="下载分类信息"><a href="#下载分类信息" class="headerlink" title="下载分类信息"></a>下载分类信息</h3><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ascp -v -k <span class="hljs-number">1</span> -T -l <span class="hljs-number">1000</span>m -i ~<span class="hljs-regexp">/mambaforge/</span>envs<span class="hljs-regexp">/tools4bioinf/</span>etc<span class="hljs-regexp">/asperaweb_id_dsa.openssh  anonftp@ftp.ncbi.nih.gov:/</span>pub<span class="hljs-regexp">/mmdb/</span>cdd<span class="hljs-regexp">/cddid.tbl.gz ./</span>     <br></code></pre></td></tr></tbody></table></figure><p>解压后如下：</p><figure class="highlight basic"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">427140 </span> pfam03106       WRKY    WRKY DNA -binding domain.       <span class="hljs-number">57</span><br></code></pre></td></tr></tbody></table></figure><p>剩下的就是将比对的结果和这个表进行关联即可。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu上设置frp内网穿透自动启动</title>
      <link href="/article/ubuntufrpc/"/>
      <url>/article/ubuntufrpc/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 这里需要cd到加压缩frp压缩包的文件位置，解压后会看到文件里有frpc的启动程序</span><br>sudo <span class="hljs-built_in">cp</span> frpc /usr/local/bin/frpc<br>sudo <span class="hljs-built_in">mkdir</span> /etc/frpc<br>sudo <span class="hljs-built_in">cp</span> frpc.ini /etc/frpc/frpc.ini<br><br><span class="hljs-comment"># 按照上面这个配置我一直无法启动，下面的两行代码让我成功运行</span><br>sudo <span class="hljs-built_in">mkdir</span> /etc/frps<br>sudo <span class="hljs-built_in">cp</span> frpc.ini /etc/frps/frpc.ini<br></code></pre></td></tr></tbody></table></figure><h2 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 为 frpc 创建 systemd 的 service 文件</span><br>sudo vim /usr/lib/systemd/system/frpc.service<br></code></pre></td></tr></tbody></table></figure><h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 输入内容</span><br>[unit]<br>Description=frpc<br>After=multi-user.targe<br><br>[Service]<br>TimeoutStartSec=30<br>ExecStart=/usr/local/bin/frpc -c /etc/frpc/frpc.ini<br>ExecStop=/bin/kill <span class="hljs-variable">$MAINPID</span><br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></tbody></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl <span class="hljs-built_in">enable</span> frpc<br>sudo systemctl start frpc<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode远程连接服务器并使用R</title>
      <link href="/article/vscoderemoteserver/"/>
      <url>/article/vscoderemoteserver/</url>
      
        <content type="html"><![CDATA[<p>实验室服务器重装系统后<code>RStudio</code>无法登录，没法解决，索性使用<code>VScode</code>解决。</p><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p>使用<code>mamba</code>管理R包。只需要安装如下几个包即可：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create --name r <span class="hljs-comment"># 新建环境</span><br>mamba install -c conda-forge r-base <span class="hljs-comment"># 安装R</span><br>mamba install -c conda-forge r-languageserver <span class="hljs-comment"># 安装languageserver包</span><br>mamba install -c conda-forge r-httpgd <span class="hljs-comment"># 展示图片</span><br></code></pre></td></tr></tbody></table></figure><h2 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h2><h3 id="安装VScode"><a href="#安装VScode" class="headerlink" title="安装VScode"></a>安装VScode</h3><p>根据电脑系统下载安装<code>VScode</code>（<a href="https://code.visualstudio.com/download">点击下载</a>），一路默认安装即可。</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>第一个需要安装的插件是<code>R</code>：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131921225.png" alt="image-20230313192143592"></p><p>第二个需要安装的插件是<code>Remote-SSH</code>:</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131922752.png" alt="image-20230313192225615"></p><h3 id="配置远程访问"><a href="#配置远程访问" class="headerlink" title="配置远程访问"></a>配置远程访问</h3><p>首次使用需要先配置<code>ssh</code>访问：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131924048.png" alt="image-20230313192422314"></p><p>具体配置信息如下：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131925803.png" alt="image-20230313192553415"></p><p>点击连接：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131926856.png" alt="image-20230313192653264"></p><p>首次登录会询问服务器操作系统类型，选择操作系统后输入密码即可。</p><h3 id="关键设置"><a href="#关键设置" class="headerlink" title="关键设置"></a>关键设置</h3><p>需要指定服务器上<code>R</code>的路径：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131939899.png" alt="image-20230313193953973"></p><h2 id="使用R"><a href="#使用R" class="headerlink" title="使用R"></a>使用R</h2><h3 id="创建R脚本"><a href="#创建R脚本" class="headerlink" title="创建R脚本"></a>创建R脚本</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202303131929729.png" alt="image-20230313192911142"></p><h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><p>直接点击打开脚本即可。</p><h2 id="报错问题"><a href="#报错问题" class="headerlink" title="报错问题"></a>报错问题</h2><h3 id="库的问题"><a href="#库的问题" class="headerlink" title="库的问题"></a>库的问题</h3><p>遇到这个报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">libicui18n.so.58: 无法打开共享对象文件: 没有那个文件或目录<br></code></pre></td></tr></tbody></table></figure><p>一开始始终无法解决这个问题，后来是这样解决的（<a href="https://github.com/igraph/rigraph/issues/274#issuecomment-726552461">参考连接</a>）：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/unicode-org/i</span>cu<span class="hljs-regexp">/archive/</span>release-<span class="hljs-number">58</span>-<span class="hljs-number">3</span>.tar.gz<br>tar xvzf release-<span class="hljs-number">58</span>-<span class="hljs-number">3</span>.tar.gz<br>cd icu-release-<span class="hljs-number">58</span>-<span class="hljs-number">3</span><span class="hljs-regexp">/icu4c/</span>source<br>./configure<br>make<br>make install<br></code></pre></td></tr></tbody></table></figure><p>然后再重新创建环境，再安装<code>R</code>和相关的包材解决这个问题。</p><h3 id="闪退的问题"><a href="#闪退的问题" class="headerlink" title="闪退的问题"></a>闪退的问题</h3><p>报错如下：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">R Language Server <span class="hljs-punctuation">(</span><span class="hljs-number">3829732</span><span class="hljs-punctuation">)</span> exited with exit code <span class="hljs-number">10</span><br></code></pre></td></tr></tbody></table></figure><p>忘记是怎么解决的了，好像是重新创建环境和安装R包解决的的。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu配置zsh和主题</title>
      <link href="/article/ubuntuzsh/"/>
      <url>/article/ubuntuzsh/</url>
      
        <content type="html"><![CDATA[<h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get update<br>sudo apt install zsh<br>chsh -s /bin/zsh<br>sh -c <span class="hljs-string">"<span class="hljs-subst">$(curl -fsSL https://gitee.com/Devkings/oh_my_zsh_install/raw/master/install.sh)</span>"</span><br></code></pre></td></tr></tbody></table></figure><h2 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install zsh<br>chsh -s /bin/zsh<br></code></pre></td></tr></tbody></table></figure><h2 id="安装Oh-My-Zsh"><a href="#安装Oh-My-Zsh" class="headerlink" title="安装Oh My Zsh"></a>安装<a href="https://zhuanlan.zhihu.com/p/265525597">Oh My Zsh</a></h2><p>新方法：</p><p>直接将install.sh文件中的这两行代码进行修改：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">REPO</span>=<span class="hljs-variable">${</span><span class="hljs-variable constant_">REPO</span><span class="hljs-symbol">:-ohmyzsh/ohmyzsh</span>}<br><span class="hljs-variable constant_">REMOTE</span>=<span class="hljs-variable">${</span><span class="hljs-variable constant_">REMOTE</span><span class="hljs-symbol">:-https</span><span class="hljs-symbol">://github</span>.com/<span class="hljs-variable">${</span><span class="hljs-variable constant_">REPO</span>}.git}<br></code></pre></td></tr></tbody></table></figure><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable constant_">REPO</span>=<span class="hljs-variable">${</span><span class="hljs-variable constant_">REPO</span><span class="hljs-symbol">:-mirrors/oh-my-zsh</span>}<br><span class="hljs-variable constant_">REMOTE</span>=<span class="hljs-variable">${</span><span class="hljs-variable constant_">REMOTE</span><span class="hljs-symbol">:-https</span><span class="hljs-symbol">://gitee</span>.com/<span class="hljs-variable">${</span><span class="hljs-variable constant_">REPO</span>}.git}<br></code></pre></td></tr></tbody></table></figure><hr><p>项目地址：<a href="https://github.com/ohmyzsh/ohmyzsh">https://github.com/ohmyzsh/ohmyzsh</a></p><p>直接下载安装即可，如果服务器无法访问GitHub，则需要使用这个补丁：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs sh">diff --git a/tools/install.sh b/tools/install.sh<br>index a6538f9d..04fa80c8 100755<br>--- a/tools/install.sh<br>+++ b/tools/install.sh<br>@@ -264,40 +264,8 @@ <span class="hljs-function"><span class="hljs-title">setup_ohmyzsh</span></span>() {<br>   <span class="hljs-comment"># that this will be ignored under Cygwin by default, as Windows ACLs take</span><br>   <span class="hljs-comment"># precedence over umasks except for filesystems mounted with option "noacl".</span><br>   <span class="hljs-built_in">umask</span> g-w,o-w<br>-<br>-  <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">${FMT_BLUE}</span>Cloning Oh My Zsh...<span class="hljs-variable">${FMT_RESET}</span>"</span><br>-<br>-  command_exists git || {<br>-    fmt_error <span class="hljs-string">"git is not installed"</span><br>-    <span class="hljs-built_in">exit</span> 1<br>-  }<br>-<br>-  ostype=$(<span class="hljs-built_in">uname</span>)<br>-  <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">"<span class="hljs-variable">${ostype%CYGWIN*}</span>"</span> ] &amp;&amp; git --version | grep -Eq <span class="hljs-string">'msysgit|windows'</span>; <span class="hljs-keyword">then</span><br>-    fmt_error <span class="hljs-string">"Windows/MSYS Git is not supported on Cygwin"</span><br>-    fmt_error <span class="hljs-string">"Make sure the Cygwin git package is installed and is first on the \$PATH"</span><br>-    <span class="hljs-built_in">exit</span> 1<br>-  <span class="hljs-keyword">fi</span><br>-<br>-  <span class="hljs-comment"># Manual clone with git config options to support git &lt; v1.7.2</span><br>-  git init --quiet <span class="hljs-string">"<span class="hljs-variable">$ZSH</span>"</span> &amp;&amp; <span class="hljs-built_in">cd</span> <span class="hljs-string">"<span class="hljs-variable">$ZSH</span>"</span> \<br>-  &amp;&amp; git config core.eol lf \<br>-  &amp;&amp; git config core.autocrlf <span class="hljs-literal">false</span> \<br>-  &amp;&amp; git config fsck.zeroPaddedFilemode ignore \<br>-  &amp;&amp; git config fetch.fsck.zeroPaddedFilemode ignore \<br>-  &amp;&amp; git config receive.fsck.zeroPaddedFilemode ignore \<br>-  &amp;&amp; git config oh-my-zsh.remote origin \<br>-  &amp;&amp; git config oh-my-zsh.branch <span class="hljs-string">"<span class="hljs-variable">$BRANCH</span>"</span> \<br>-  &amp;&amp; git remote add origin <span class="hljs-string">"<span class="hljs-variable">$REMOTE</span>"</span> \<br>-  &amp;&amp; git fetch --depth=1 origin \<br>-  &amp;&amp; git checkout -b <span class="hljs-string">"<span class="hljs-variable">$BRANCH</span>"</span> <span class="hljs-string">"origin/<span class="hljs-variable">$BRANCH</span>"</span> || {<br>-    [ ! -d <span class="hljs-string">"<span class="hljs-variable">$ZSH</span>"</span> ] || {<br>-      <span class="hljs-built_in">cd</span> -<br>-      <span class="hljs-built_in">rm</span> -rf <span class="hljs-string">"<span class="hljs-variable">$ZSH</span>"</span> 2&gt;/dev/null<br>-    }<br>-    fmt_error <span class="hljs-string">"git clone of oh-my-zsh repo failed"</span><br>-    <span class="hljs-built_in">exit</span> 1<br>-  }<br>+  <span class="hljs-built_in">cp</span> -ra <span class="hljs-string">"<span class="hljs-subst">$(dirname <span class="hljs-string">"<span class="hljs-variable">$0</span>"</span>)</span>"</span>/.. <span class="hljs-variable">$ZSH</span><br>+  <span class="hljs-built_in">rm</span> -rf <span class="hljs-variable">$ZSH</span>/.git<br>   <span class="hljs-comment"># Exit installation directory</span><br>   <span class="hljs-built_in">cd</span> -<br></code></pre></td></tr></tbody></table></figure><p>将这个文件放到ohmyzsh文件夹下，命名为：offline_install.diff，然后运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git apply offline_install.diff<br></code></pre></td></tr></tbody></table></figure><p>运行 OH My ZSH 中 tool/install.sh即可安装。</p><p>也可以直接用这行代码安装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sh -c <span class="hljs-string">"<span class="hljs-subst">$(curl -fsSL https://gitee.com/Devkings/oh_my_zsh_install/raw/master/install.sh)</span>"</span><br></code></pre></td></tr></tbody></table></figure><h2 id="配置powerlevel10k主题"><a href="#配置powerlevel10k主题" class="headerlink" title="配置powerlevel10k主题"></a>配置powerlevel10k主题</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git <span class="hljs-variable">${ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom}</span>/themes/powerlevel10k<br></code></pre></td></tr></tbody></table></figure><p>或者运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="hljs-variable">${ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom}</span>/themes/powerlevel10k<br></code></pre></td></tr></tbody></table></figure><p>然后重启终端，即可进入配置步骤，按步骤选择即可。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言自动跳过Error实现循环</title>
      <link href="/article/rtrycatch/"/>
      <url>/article/rtrycatch/</url>
      
        <content type="html"><![CDATA[<p>经常要批量读取网页文件，有时候URL会报错，循环的程序就断开了，很麻烦。学习到一种<code>tryCatch</code>的方法。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>kegg.id<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  tryCatch<span class="hljs-punctuation">(</span><span class="hljs-punctuation">{</span><br>    Sys.sleep<span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><br>    <br>    KEGGREST<span class="hljs-operator">::</span>keggGet<span class="hljs-punctuation">(</span>kegg.id<span class="hljs-operator">$</span>id<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> temp<br>  <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span> error <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>    print<span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span> finally <span class="hljs-operator">=</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>temp<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"PATHWAY"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      <span class="hljs-keyword">next</span><br>    <span class="hljs-punctuation">}</span><span class="hljs-keyword">else</span><span class="hljs-punctuation">{</span><br>      temp<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"PATHWAY"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> <br>        as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"kegg.pathway"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"kegg.map.id"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>kegg.id <span class="hljs-operator">=</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        rbind<span class="hljs-punctuation">(</span>all.des<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> all.des<br>      <br>      print<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span><span class="hljs-string">"已经成功运行："</span><span class="hljs-punctuation">,</span>i<span class="hljs-punctuation">,</span> <span class="hljs-string">"/"</span><span class="hljs-punctuation">,</span> nrow<span class="hljs-punctuation">(</span>kegg.id<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">}</span><br>  <span class="hljs-punctuation">}</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>植物免疫的转录调控网络</title>
      <link href="/article/transnetplantimmunity/"/>
      <url>/article/transnetplantimmunity/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://nph.onlinelibrary.wiley.com/doi/full/10.1111/nph.13286">Tsuda K, Somssich I E. Transcriptional networks in plant immunity[J]. New Phytologist, 2015, 206(3): 932-947.</a></p></blockquote><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>除了大量的非生物胁迫外，植物还时刻都需要面对大量来自其周围环境中的病原菌。因此，在进化过程中的生存和繁殖能力在很大程度上依赖于对这些潜在威胁的有效感知、响应及适应。因此，不足为奇的是现代植物具有高度复杂的免疫库，包括多样化的信号感知通路和保内信号通路。这个信号网络不但错综复杂而且相互关联，这也说明不同的病原菌侵染植物时有着不同的寄生方式和侵染策略。此外，这个复杂的网络还能完成生长发育和防御之间的信号交流，从而保证植物的生长和健康不会受到明显的影响。当前主要的研究领域有两方面，一是植物是如何整合和优先考虑外界输入的信号的？另一方面是这些信号是如何被转导从而激活适当的免疫响应的？一个重要的发现是病原菌入侵会激发寄主植物胞内大量的转录重编程的发生。一些类似的研究发现转录因子通常是这些信号的收敛位点，而且具有信号调控功能的转录因子能够和其他的转录因子以及转录共调控因子共同作用来建立植物免疫所需的转录调控网络。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>植物拥有两层先天的免疫系统来抵抗病院微生物的侵染。位于质膜上的模式识别受体（<strong>PRRs</strong>）能够感知到具有保守分子结构的微生物、病原相关分子模式（<strong>MAMPs/PAMPs</strong>），从而激活植物的第一层免疫系统。通过这种方式出发的免疫叫做<strong>PTI</strong>。研究得比较透彻的模式识别受体是拟南芥的<strong><em>AtFLS2</em></strong> (FLAGELLINSENSING2)和<strong><em>AtEFR</em></strong> (EF-TU RECEPTOR). 这两个模式识别受体能够分别识别细菌的鞭毛蛋白和延伸因子-Tu。具有适应性的病原菌获得了多种毒力机制来抑制植物的PTI等免疫响应。如常见的使用效应子蛋白。为了应对病原菌的效应子泛白，植物进化出第二层免疫系统。植物的第二层免疫系统可以直接或间接地识别病原菌的效应子，从而激发效应子出发的免疫（<strong>ETI</strong>）。典型的ETI受体是核苷酸结合位点/亮氨酸重复（NLR）蛋白，这些NLR蛋白可以根据N端结构的不同大体分为两个亚类：有一个Toll-Interleukin1受体结构域的叫做<strong>TNLs</strong>，有coiled-coil结构域的叫做<strong>CNLs</strong>。</p><p>在<strong>PTI</strong>和<strong>ETI</strong>过程中，植物会激发多种免疫响应，如活性氧（<strong>ROS</strong>）产生、胞内<strong>Ca$^{2+}$</strong>峰、<strong>MAP</strong>激酶激活、植物激素合成及转录重编程等。植物会将这些免疫侠响应进行整合，进一步地作用在被侵染位点或者是系统性作用于距侵染点较远的其他部位。<strong>PTI</strong>和<strong>ETI</strong>共享一些具有不同激活活性的信号组分。</p><p>信号免疫受体被激活后会触发一些列的免疫响应。如果面对自然界中的生物胁迫和非生物胁迫一样，植物在面对这些免疫响应时同样需要很“小心”。植物需要协调其免疫响应和生长之间的均衡，最大化实现其自身的适应性。最近的研究发现信号整合过程受转录因子调控网络调控。转录重编程是植物免疫的一个主要特征，这个过程受转录因子和与离散的转录复合物相关的共调控蛋白的共同调控。在受体激活和信号启动时，特定的转录因子和相关的共因子会与信号通路进行整合，通过多个途径共同完成信号解析，从而实现多样化的转录变化。</p><p>这篇综述主要讨论了参与植物免疫、转录复合物的调控及不同植物激素通路的主要的转录因子家族，另外一方面，本文还指出了与分析这类网络相关的困难以及为分析它们所采取的方法。</p><h2 id="参与植物免疫的主要转录因子家族"><a href="#参与植物免疫的主要转录因子家族" class="headerlink" title="参与植物免疫的主要转录因子家族"></a>参与植物免疫的主要转录因子家族</h2><p>转录因子是调控控制植物生长和响应相关转录过程的主要因素。植物体内的转录因子库与动物的明显不同。大多数的动物转录因子属于<strong>bHLH</strong>、<strong>同源盒结构域</strong>及<strong>C2H2类锌指蛋白</strong>；植物中除开这三类转录因子外，主要的转录因子还有<strong>AP2/ERF</strong>、<strong>bZIP</strong>、<strong>MADS box</strong>、<strong>MYB</strong>、<strong>NAC</strong>及<strong>WRKY</strong>等家族。</p><p>在过去二十年中，分子和遗传相关的研究已经鉴定出了大量的转录因子家族成员，这些转录因子成员在调控植物对病原菌的转录响应中有着关键的作用。当前对转录因子在植物中的功能研究主要集中在模式植物上，如拟南芥呢水稻。尽管如此，其他植物上的大量研究也为转录因子的提供了新的思路和见解。</p><p>某些转录因子家族似乎特别热衷于参与植物的免疫调节，如<strong>AP2/ERF</strong>、<strong>bHLH</strong>、<strong>bZIP</strong>、<strong>MYB</strong>、<strong>NAC</strong>及<strong>WRKY</strong>等家族。下面将对这些转录因子家族在植物免疫中的功能进行一一阐释。</p><h3 id="AP2-ERF家族"><a href="#AP2-ERF家族" class="headerlink" title="AP2/ERF家族"></a><strong>AP2/ERF</strong>家族</h3><p><strong>AP2/ERF</strong>（APETALA2/ETHYLENE-RESPONSE ELEMENT BINDING FACTOR）转录因子家族是一个很大的基因家族，在拟南芥中有140多个家族成员，在水稻中有160多个家族成员。所有的家族成员都有一个长为60个氨基酸的DNA结合结构域。在<strong>ERF</strong>家族中，<strong>DREB</strong>蛋白亚家族能够和脱水响应元件 （Dehydration-Response-Element，DRE）这个DNA motif（A/GCCGAC）进行结合，进而调控植株在受到冷害胁迫、干旱胁迫及高盐胁迫等非生物胁迫时靶基因的表达。于此相反的是，<strong>ERF</strong>亚家族成员对<strong>GCC</strong>序列（AGCCGCC）有着最高的亲和性，参与基因的调控表达对事物胁迫作出相应，尤其是与茉莉酸和乙烯激素信号通路相关的基因。这个亚家族成员包括<strong><em>AtERF1</em></strong>、<strong><em>AtERF6</em></strong>、<strong><em>AtERF104</em></strong>及<strong><em>AtORA59</em></strong>.</p><h3 id="bHLH家族"><a href="#bHLH家族" class="headerlink" title="bHLH家族"></a><strong>bHLH</strong>家族</h3><p><strong>bHLH</strong>（basic-helix-loop-helix）家族在拟南芥中有162个家族成员，在水稻中有167个家族成员。但是很多非典型的<strong>bHLH</strong>蛋白逐渐被发现。<strong>bHLH</strong>家族的DNA结合结构域有50~60个氨基酸。该结构域允许同源或异源二聚化到它们的DNA一致六聚体序列<strong>CANNTG</strong>. 在这个家族中只有很少的家族成员被发现与植物免疫相关。然而，转录因子<strong><em>AtMYC2/JAi1/JIN1</em></strong>与其密切相关的蛋白<strong><em>AtMYC3</em></strong>和<strong><em>AtMYC4</em></strong>是茉莉酸介导的防御响应中关键的调控基因，而且这个转录因子还能介导茉莉酸和水杨酸、脱落酸、赤霉素及生长素等其他植物激素的串扰。</p><h3 id="TGA-bZIP家族"><a href="#TGA-bZIP家族" class="headerlink" title="TGA-bZIP家族"></a><strong>TGA-bZIP</strong>家族</h3><p><strong>bZIP</strong>（basic domain leucine zipper）家族在拟南芥中有74个成员，水稻中有89个成员。在拟南芥中，<strong>zBIP</strong>家族被划分为10个亚家族，其中<strong>C</strong>和<strong>D</strong>两个亚家族中的成员与植物免疫相关。通常来说，<strong>bZIP</strong>家族可以作为同源或者是异源二聚体与含有<strong>ACGT</strong>核心序列的DNA序列进行结合。亚家族<strong>D</strong>中的<strong>TGA</strong>因子可以进一步分为3级，<strong><em>AtTGA1</em></strong>和<strong><em>AtTGA4</em></strong>属于Clade I；<strong><em>AtTGA2</em></strong>、<strong><em>AtTGA5</em></strong>及<strong><em>AtTGA6</em></strong>属于Clade II；<strong><em>AtTGA3</em></strong>和<strong><em>AtTGA7</em></strong>属于Clade III. 这些转录因子是水杨酸信号通路相关的防御系统中的核心成员，能够激发植物对活体营养型病原菌的抗性。<strong><em>AtTGA2</em></strong>、<strong><em>AtTGA5</em></strong>及<strong><em>AtTGA6</em></strong>在系统获得性抗性中也有重要作用。此外，这三个基因还可以调控寄主的解毒相关通路并且是乙烯诱导的防御响应中的关键因子。</p><h3 id="MYB家族"><a href="#MYB家族" class="headerlink" title="MYB家族"></a><strong>MYB</strong>家族</h3><p><strong>MYB</strong>家族在拟南芥和水稻中都有160个以上的家族成员。与动物不同的是，植物植物中有一个<strong>MYB</strong>亚家族，该家族含有<strong>R2R3 MYB</strong>结构域。<strong>R2R3 MYB</strong>蛋白可以分为两种类型，可以分别和<strong>(T/C)AAC(T/G)G</strong>、<strong>G(G/T)T(A/T)G(G/T)T</strong>两种DNA序列进行结合。已经报道的和植物免疫相关的该家族成员有拟南芥中的<strong>AtMYB30</strong>、<strong>AtMYB44</strong>及<strong>AtMYB108/BOSI1</strong>和大麦中的<strong>HvMYB6</strong>.</p><h3 id="NAC家族"><a href="#NAC家族" class="headerlink" title="NAC家族"></a>NAC家族</h3><p><strong>NAC</strong>家族在拟南芥汇中有100个成员，在水稻中有150个成员。<strong>NAC</strong>基因家族转录因子与特定的DNA序列<strong>CATGTG</strong>结合。该家族中大多数的成员与非干旱和高盐等生物胁迫相关，但是也有部分家族成员与植物免疫相关，如大麦中的<strong><em>HvATAF1</em></strong>，拟南芥中的<strong><em>AtANAC019</em></strong>、 <strong><em>AtANAC055</em></strong> 及 <strong><em>AtANAC072</em></strong>.</p><h3 id="WRKY家族"><a href="#WRKY家族" class="headerlink" title="WRKY家族"></a><strong>WRKY</strong>家族</h3><p><strong>WRKY</strong>转录因子家族在拟南芥中有70多位家族成员，在水稻中家族成员数量超过100个。这个转录因子家族主要出现在植物中，但是在粘菌盘基网柄菌和单细胞原生生物 <strong>Gardia lamblia</strong>基因组中也发现该家族的存在。通常成员都有60个氨基酸长度的<strong>WRKY</strong>结构域，与DNA序列<strong>C/TTGAC/T</strong>（<strong>W-box</strong>）进行特异性结合。大量的研究表明<strong>WRKY</strong>转录因子家族成员广泛地参与了植物的免疫响应。</p><h2 id="转录复合物的调控"><a href="#转录复合物的调控" class="headerlink" title="转录复合物的调控"></a>转录复合物的调控</h2><p>转录因子的表达会受到转录调控和转录后的调控，而且转录因子的激活也受到多重调控，如磷酸化、去磷酸化、改变亚细胞定位和靶向降解。成功的转录重编程和免疫离不开转录因子的调控。一些来自病原菌的因子能够暗中破坏寄主的转录复合物，从而增强其毒性。这表明寄主防御转录调控的重要性。</p><h3 id="免疫受体对转录因子的直接调控"><a href="#免疫受体对转录因子的直接调控" class="headerlink" title="免疫受体对转录因子的直接调控"></a>免疫受体对转录因子的直接调控</h3><p>NLRs激活会触发转录重编程在内的免疫响应。对于核质NLRs的几种情况，核积累是其在ETI中充分发挥功能所必需的，这表明这写NLRs能够直接调控转录过程。也有研究证明了一些NLRs通过与转录因子结合来实现其功能。</p><p>大麦中的核质 CNL MLA10通过其<strong>CC</strong>结构域与<strong>WRKY</strong>转录抑制因子<strong><em>HvWRKY1</em></strong>和<strong><em>HvWRKY2</em></strong>进行互作，负向调控植株对<strong><em>Blumeria graminis</em></strong>的免疫。这个基因也可以和<strong>MYB</strong>转录因子家族基因<strong><em>HvMYB6</em></strong>互作正向调控植株的免疫。<strong><em>HvWRKY1</em></strong>与<strong><em>HvMYB6</em></strong>互作时其功能被抑制。MLA10可以通过增强<strong><em>HvMYB6</em></strong>的DNA结合活性和将<strong><em>HvMYB6</em></strong>从<strong><em>HvWRKY1</em></strong>的抑制中释放出来这两种方式改变转录复合物。因此，MLA10通过细胞核中转录复合物的状态来直接调控植株的转录，从而激活植株的免疫（下图左）。</p><p>水稻中的PRR XA21能够增强植株对<strong><em>Xanthomonas oryzae</em></strong>的抗性。XA21虽然定位在质膜上，但是其会释放跨膜激酶结构域。这个结构域会进入到细胞核，并且与<strong><em>OsWRKY62</em></strong>进行互作。这个例子说明位于膜上的免疫受体能够转移到细胞核内，并且与转录因子互作从而直接调控转录过程（下图右）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230225151340036.png" alt="image-20230225151340036" style="zoom: 67%;"></p><h3 id="MAPK级联反应对转录复合物的调控"><a href="#MAPK级联反应对转录复合物的调控" class="headerlink" title="MAPK级联反应对转录复合物的调控"></a>MAPK级联反应对转录复合物的调控</h3><p>MAPK级联反应是重要的信号通路，其能够通过对转录因子等的磷酸化来连外界接刺激和下游响应。大量的研究已经证明了这个信号通路在植物免疫中的功能。如，拟南芥中的<strong><em>AtMPK3</em></strong> 和 <strong><em>AtMPK6</em></strong>能够被上游的MAPK 激酶<strong><em>AtMKK4</em></strong> 和 <strong><em>AtMKK5</em></strong>激活，与此同时<strong><em>AtMKK4</em></strong>和<strong><em>AtMPK11</em></strong>会被<strong><em>AtMKK1</em></strong>和<strong><em>AtMKK2</em></strong>调控。被激活的MAPKs能够通过磷酸化来调控多个转录因子（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230225153434424.png" alt="image-20230225153434424" style="zoom:67%;"></p><h2 id="植物激素信号中的转录因子网络"><a href="#植物激素信号中的转录因子网络" class="headerlink" title="植物激素信号中的转录因子网络"></a>植物激素信号中的转录因子网络</h2><h3 id="水杨酸"><a href="#水杨酸" class="headerlink" title="水杨酸"></a>水杨酸</h3><p>水杨酸主要在叶绿体中被合成然后通过叶绿体膜上的<strong><em>AtEDS5</em></strong>转运到细胞质中。受诱导的水杨酸的积累能够被中心调控因子<strong><em>AtNPR1</em></strong>感受到，这个<strong><em>AtNPR1</em></strong>是水杨酸类似物BTH介导的转录过程所必须的。</p><h3 id="茉莉酸"><a href="#茉莉酸" class="headerlink" title="茉莉酸"></a>茉莉酸</h3><p>茉莉酸在叶绿体中被合成然后在细胞质中被转换成具有生物活性的茉莉酸-异亮氨酸。虽然病原菌的侵染会导致茉莉酸积累，但是任然不清楚的是在植物免疫过程中茉莉酸的生物合成是否在转录水平上被调控 。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230225154457446.png" alt="image-20230225154457446" style="zoom:67%;"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230225154609400.png" alt="image-20230225154609400"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCBI-NT库本地化构建流程</title>
      <link href="/article/ncbint/"/>
      <url>/article/ncbint/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库下载"><a href="#数据库下载" class="headerlink" title="数据库下载"></a>数据库下载</h2><p><a href="https://ftp.ncbi.nih.gov/blast/db/">https://ftp.ncbi.nih.gov/blast/db/</a></p><p>ascp（conda安装即可）高速下载链接：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ascp -v -k 1 -T -l 1000m -i /home/xxxxx/miniconda3/envs/bioinfTools/etc/asperaweb_id_dsa.openssh anonftp@ftp.ncbi.nih.gov:/blast/db/nt.00.tar.gz ./<br></code></pre></td></tr></tbody></table></figure><p><strong>需要将所有的文nt库文件全部下载！</strong>下载完成后解压即可。下载好的数据是已经完成建库的，可以直接运行<code>blastn</code>进行比对。</p><h2 id="提取分类信息"><a href="#提取分类信息" class="headerlink" title="提取分类信息"></a>提取分类信息</h2><h3 id="处理blast结果"><a href="#处理blast结果" class="headerlink" title="处理blast结果"></a>处理blast结果</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br>vroom<span class="hljs-operator">::</span>vroom<span class="hljs-punctuation">(</span><span class="hljs-string">"./ncbi.nt.blast.result.ljy.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.ncbi.res<br><br>df.ncbi.res <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>X3 <span class="hljs-operator">==</span> <span class="hljs-number">100</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.ncbi.res.100 <span class="hljs-comment"># 一共是258个</span><br><br>df.ncbi.res <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>X3 <span class="hljs-operator">!=</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span> X3 <span class="hljs-operator">&gt;</span> <span class="hljs-number">98</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>X1 <span class="hljs-operator">%in%</span> df.ncbi.res.100<span class="hljs-operator">$</span>X1<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.ncbi.res.over.98 <span class="hljs-comment"># 一共是232个</span><br><br>df.ncbi.res.100 <span class="hljs-operator">%&gt;%</span> <br>  rbind<span class="hljs-punctuation">(</span>df.ncbi.res.over.98<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.ncbi.res.filtered<br><br>writexl<span class="hljs-operator">::</span>write_xlsx<span class="hljs-punctuation">(</span>df.ncbi.res.filtered<span class="hljs-punctuation">,</span> path <span class="hljs-operator">=</span> <span class="hljs-string">"./ncbi.nt.筛选后的结果.xlsx"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取单独的NCBI accession</span><br>df.ncbi.res.filtered <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>   <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"accession.version"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  data.table<span class="hljs-operator">::</span>as.data.table<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> id<br><br>id <span class="hljs-operator">%&gt;%</span> <br>  data.table<span class="hljs-operator">::</span>fwrite<span class="hljs-punctuation">(</span><span class="hljs-string">"./accession.id.txt"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="准备accession2taxoid表格"><a href="#准备accession2taxoid表格" class="headerlink" title="准备accession2taxoid表格"></a>准备accession2taxoid表格</h3><p>从<a href="https://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/下载核酸或者是蛋白的`accession2taxi`表格，如果是`gene">https://ftp.ncbi.nih.gov/pub/taxonomy/accession2taxid/下载核酸或者是蛋白的`accession2taxi`表格，如果是`gene</a> bank<code>的话需要下载</code>nucl_gb.accession2taxid.gz`才行，整理成这个表格。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">accession.version taxid<br>A00001.1 10641<br>A00002.1 9913<br>A00003.1 9913<br>A00004.1 32630<br>A00005.1 32630<br>A00006.1 32630<br>A00008.1 32630<br>A00009.1 32630<br>A00010.1 32630<br></code></pre></td></tr></tbody></table></figure><h3 id="将ncbi得到的结果与上述表格进行比较筛选"><a href="#将ncbi得到的结果与上述表格进行比较筛选" class="headerlink" title="将ncbi得到的结果与上述表格进行比较筛选"></a>将ncbi得到的结果与上述表格进行比较筛选</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -f id.txt /home/xxx/database/nt/taxnonmy/nucl.gb.acc2taxid.txt &gt; accession2taxoid.txt<br></code></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">head accession2taxoid.txt<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R">AB001448.1 <span class="hljs-number">319</span><br>AB008001.1 <span class="hljs-number">303</span><br>AB013253.1 <span class="hljs-number">114707</span><br>AB015575.1 <span class="hljs-number">86473</span><br>AB019037.1 <span class="hljs-number">83814</span><br>AB022911.1 <span class="hljs-number">795097</span><br>AB023784.1 <span class="hljs-number">74315</span><br>AB024305.1 <span class="hljs-number">89568</span><br>AB038136.1 <span class="hljs-number">303</span><br>AB051692.1 <span class="hljs-number">143811</span><br></code></pre></td></tr></tbody></table></figure><h3 id="提取唯一的taxonomy编号"><a href="#提取唯一的taxonomy编号" class="headerlink" title="提取唯一的taxonomy编号"></a>提取唯一的taxonomy编号</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">awk '{print $2}' accession2taxoid.txt | uniq -&gt; taxo.id.txt<br></code></pre></td></tr></tbody></table></figure><h3 id="提取分类信息-1"><a href="#提取分类信息-1" class="headerlink" title="提取分类信息"></a>提取分类信息</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">taxonkit lineage taxo.id.txt |taxonkit reformat &gt; taxo.id.2.taxonomy.txt<br></code></pre></td></tr></tbody></table></figure><h3 id="处理分类结果"><a href="#处理分类结果" class="headerlink" title="处理分类结果"></a>处理分类结果</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs R"><br><span class="hljs-comment"># 提取单独的NCBI accession</span><br>df.ncbi.res.filtered <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>   <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"accession.version"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  data.table<span class="hljs-operator">::</span>as.data.table<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> id<br><br>id <span class="hljs-operator">%&gt;%</span> <br>  data.table<span class="hljs-operator">::</span>fwrite<span class="hljs-punctuation">(</span><span class="hljs-string">"./accession.id.txt"</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># 读取taxonomy结果</span><br>vroom<span class="hljs-operator">::</span>vroom<span class="hljs-punctuation">(</span><span class="hljs-string">"./taxo.id.2.taxonomy.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>rename<span class="hljs-punctuation">(</span>taxoid <span class="hljs-operator">=</span> X1<span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>界 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                门 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                纲 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                目 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                科 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                属 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                种 <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>X3<span class="hljs-punctuation">,</span> <span class="hljs-string">";"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.taxo.res<br><br><span class="hljs-comment"># 读取accession id和taxo id表</span><br>vroom<span class="hljs-operator">::</span>vroom<span class="hljs-punctuation">(</span><span class="hljs-string">"./accession2taxoid.txt"</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"accession.id"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"taxoid"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df.taxo.res<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"taxoid"</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.acc.taxo.res<br><br><span class="hljs-comment"># 合并blast结果和taxonomy结果</span><br>df.ncbi.res.filtered <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"sample"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"accession.id"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"相似度"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df.acc.taxo.res<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"accession.id"</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>sample<span class="hljs-punctuation">,</span> 属<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>duplicated<span class="hljs-punctuation">(</span>temp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>temp<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.res.final<br><br>df.res.final <span class="hljs-operator">%&gt;%</span> <br>  writexl<span class="hljs-operator">::</span>write_xlsx<span class="hljs-punctuation">(</span><span class="hljs-string">"./最终结果.xlsx"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>植物邻居可以促使或者是阻断根部真菌的病害传播</title>
      <link href="/article/neighborfungi/"/>
      <url>/article/neighborfungi/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://nph.onlinelibrary.wiley.com/doi/full/10.1111/nph.17866">Ampt E A, van Ruijven J, Zwart M P, et al. Plant neighbours can make or break the disease transmission chain of a fungal root pathogen[J]. New Phytologist, 2022, 233(3): 1303-1316.</a></p></blockquote><h2 id="数据信息"><a href="#数据信息" class="headerlink" title="数据信息"></a>数据信息</h2><blockquote><p><a href="https://github.com/ElineAmpt/Neighbour_transmission_modelling">代码和数据链接</a></p></blockquote><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul><li>生物多样性可以减缓或者是加剧病害传播。这种不同的效应说明决定病害传播的因素是群落组成，而不是多样性。在自然的植物群落中，关于邻居植物品种在地下病害传播中的功能还知之甚少。</li><li>该研究探究了两种focal植株和4中neighbor植株的两个生长阶段中根部病原菌立枯丝核菌<strong><em>Rhizoctonia solani</em></strong>的病害传播情况。该研究建立了一个随机模型来评估两种传播-修正机制的相对重要性：<ul><li>受侵染的寄主作为营养源促进菌丝生长，此时成功的病害传播是自我增强的；</li><li>植物抗性随着植物生长发育逐渐增强。</li></ul></li><li>邻居植物要么减少要么增加focal植株的病害传播。这种效应取决于neighbor植株的生长阶段，但是不能用简单的二分法来进行解释，也就是不能简单的解释为neighbor植株是否是立枯丝核菌病的寄主来进行解释。</li><li>模型选择发现上述的两种传播-修正机制是相关的，而且focal植株-neighbor植株的互作发生了改变，正是这种机制控制了病害的传播速率。</li><li>该研究表明neighbor诱导的这些机制在根际网络中的变化能够增强或者是破坏病害传播链。在理解多样性是如何影响病害传播时需要考虑到focal植株是如何与neighbor植株或者是病原菌进行互作的。</li></ul><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2><ul><li>植物多样性和产量的正相关关系的一个解释是<strong>地下资源互补理论</strong>。</li><li>多样性系统更高产的一个原因在于引发根部病害的病原菌在多样性系统中被稀释了。</li><li>尽管多样性系统中病原菌稀释是常态，但是也有研究发现在多样性系统中病原菌不但没有被稀释，反而扩增了。</li><li>部分植株在受到病原菌侵染后可能不会有病斑出现，但是它们的根系却可以作为桥梁让病原菌传播到另外一株对病原菌敏感的植株上。在这种情况下，这些植株就将增加病原菌在群落中的传播。</li><li>在植株病害研究中常常被认为是中性的无害的非寄主植株也能影响病害传播，比如通过根系释放抗菌物质、吸引病原菌的拮抗物质（如有益微生物等）。</li><li>立枯丝核菌病等许多根部真菌主要依靠菌丝的生长从受侵染的植株传播到另外的植株上，这种情况在大规模单一生产的农业生态系统中最常见，总是可以看到具有代表性的病斑。</li><li>侵染导致的菌丝在植物间的生长通常被称为<strong>再侵染</strong>，初侵染就是某个植株被土壤中的病原菌侵染的过程。被侵染的植株可以作为营养源供菌丝生长，从而进一步促进菌丝的生长和侵染。因此，每次成功的再侵染都可能增加病原菌更快发现并侵染下一个植株的可能性。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230218120023864.png" alt="image-20230218120023864" style="zoom:50%;"></p><ul><li>影响病原菌传播的另外一个机制是寄主植物的敏感性，这种敏感性通常和植物的生长阶段相关。如果植物对病原菌的抗性随着其生长发育阶段而逐渐增加，那么这种情况下抗性的增强可能会超过病原菌的生长，从而限制病原菌的传播。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230218120526698.png" alt="image-20230218120526698" style="zoom:50%;"></p><ul><li>在该研究中，作者主要探究了以下几个方面：<ul><li>不同的neighbor植株能否分别影响病原菌在两种寄主中的传播？</li><li>neighbor植株是否会影响传播-校正机制的作用？</li></ul></li></ul><h2 id="材料与方法"><a href="#材料与方法" class="headerlink" title="材料与方法"></a>材料与方法</h2><h3 id="研究材料"><a href="#研究材料" class="headerlink" title="研究材料"></a>研究材料</h3><ul><li><p>立枯丝核菌病AG4-HGI</p></li><li><p>四种多年生草本植物，这些寄主在之前的研究中被发现具有寄主特异性且根际对病原菌具有稀释效应。</p><ul><li><p><em>Leucanthemum vulgare</em>：法国菊</p></li><li><p><em>Plantago lanceolata</em>：长叶车前</p></li><li><em>Anthoxanthum odoratum</em>：黄花茅</li><li><em>Festuca rubra</em>：紫羊茅</li></ul><p>其中法国菊和长叶车前作为focal plant；与此同时，四种植物都作为neighbor plant. </p></li><li><p>neighbor plant的两个生长阶段分别是：</p><ul><li>和focal plant一样大的幼苗；</li><li>比focal plant先生长10天的苗。</li></ul></li></ul><h3 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h3><ul><li>对照组：两个focal plant单作，接种/不接种，不接种的作为Mock对照，接种的作为阳性对照。</li><li>试验组：两个focal plant和4个neighbor plant（有两个是其本身）。一个重要的处理就是同一天播种的幼苗或者是提前10天播种的幼苗。接种后第十七天开始，每2天调查一次病害发生情况。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230218134026012.png" alt="image-20230218134026012"></p><h2 id="结果与讨论"><a href="#结果与讨论" class="headerlink" title="结果与讨论"></a>结果与讨论</h2><h3 id="neighbor-plant的种类和生长阶段影响病害传播"><a href="#neighbor-plant的种类和生长阶段影响病害传播" class="headerlink" title="neighbor plant的种类和生长阶段影响病害传播"></a>neighbor plant的种类和生长阶段影响病害传播</h3><p>首先观察发现在没有neighbor植株时，立枯丝核菌病引发的病害在长叶车前中的传播比在法国菊中具有更高的传播速率。长叶车前作为neighbor植株时，两种focal植株中病害的传播都增加了，但是这种增加只发生在长叶车前是Young阶段时。提前播种长叶车前的话，病害的发生情况和对照没有显著差异。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230218141947436.png" alt="image-20230218141947436" style="zoom: 67%;"></p><p>neighbor植株能够显著影响病害的传播。这种效应受到多方面的影响，包括寄主类型、neighbor植株类型及生长阶段等。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230218142351303.png" alt="image-20230218142351303"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230218142833736.png" alt="image-20230218142833736"></p><p>总的来说，这部分结果说明立枯丝核菌病在这两种寄主中的传播是有差异的，而且neighbor植株不同时，对病害传播的影响是不同的。focal植株在整体上会影响neighbor植株产生的影响，但是这些影响在很大程度上由neighbor植株的种类和生长阶段决定。</p><h3 id="传播-修正机制取决于focal-neighbor的互作"><a href="#传播-修正机制取决于focal-neighbor的互作" class="headerlink" title="传播-修正机制取决于focal-neighbor的互作"></a>传播-修正机制取决于focal-neighbor的互作</h3><p>该研究构建了随机模型来评估病害传播的不同机制。</p><p>在零模型中，两个focal植株间病害传播的概率是一致的（模型1）。在更复杂的模型中，这个传播概率是可变的，原因如下：</p><ul><li>病原菌成功侵染会得到更多的营养（模型2）；</li><li>随着生长发育时间的推移，寄主植物对病原菌的抗性会增强（模型3）；</li><li>上述两种情况同时发生（模型4）。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言机器学习框架mlr3学习笔记</title>
      <link href="/article/learningmlr3/"/>
      <url>/article/learningmlr3/</url>
      
        <content type="html"><![CDATA[<h2 id="mlr3verse基础"><a href="#mlr3verse基础" class="headerlink" title="mlr3verse基础"></a>mlr3verse基础</h2><p><code>mlr3verse</code>其实是个框架，整合了各种机器学习算法。其底层的使用<code>R6</code>语法和<code>data.table</code>数据流；支持并行，可以搭建”图”流学习器。</p><p>几点技术说明：</p><ul><li>使用帮助：?+对象名字，或者对象$help，如learner$help().</li><li>某些对象不是数据框，as.data.table()转化成数据框再进行查看。</li><li>超参数调参需要找到原始函数对应的包的函数帮助。</li></ul><h3 id="任务类型"><a href="#任务类型" class="headerlink" title="任务类型"></a>任务类型</h3><ul><li>连续的目标变量：回归</li><li>离散的目标变量：分类</li><li>没有目标：聚类和降维等</li></ul><p>查看自带的任务：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">tsks<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">Show <span class="hljs-keyword">in</span> New Window<br><span class="hljs-operator">&lt;</span>DictionaryTask<span class="hljs-operator">&gt;</span> with <span class="hljs-number">28</span> stored values<br>Keys<span class="hljs-operator">:</span> actg<span class="hljs-punctuation">,</span> bike_sharing<span class="hljs-punctuation">,</span> boston_housing<span class="hljs-punctuation">,</span> breast_cancer<span class="hljs-punctuation">,</span> faithful<span class="hljs-punctuation">,</span> gbcs<span class="hljs-punctuation">,</span> german_credit<span class="hljs-punctuation">,</span> grace<span class="hljs-punctuation">,</span> ilpd<span class="hljs-punctuation">,</span> iris<span class="hljs-punctuation">,</span> kc_housing<span class="hljs-punctuation">,</span> lung<span class="hljs-punctuation">,</span><br>  moneyball<span class="hljs-punctuation">,</span> mtcars<span class="hljs-punctuation">,</span> optdigits<span class="hljs-punctuation">,</span> penguins<span class="hljs-punctuation">,</span> penguins_simple<span class="hljs-punctuation">,</span> pima<span class="hljs-punctuation">,</span> precip<span class="hljs-punctuation">,</span> rats<span class="hljs-punctuation">,</span> sonar<span class="hljs-punctuation">,</span> spam<span class="hljs-punctuation">,</span> titanic<span class="hljs-punctuation">,</span> unemployment<span class="hljs-punctuation">,</span> usarrests<span class="hljs-punctuation">,</span> whas<span class="hljs-punctuation">,</span><br>  wine<span class="hljs-punctuation">,</span> zoo<br></code></pre></td></tr></tbody></table></figure><h3 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h3><p>使用包仔带的数据并创建任务。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 提取包中的数据</span><br>dat <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"german_credit"</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>dat<br><br><span class="hljs-comment"># 创建任务</span><br>task <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>as_task_classif<span class="hljs-punctuation">(</span>dat<span class="hljs-punctuation">,</span> target <span class="hljs-operator">=</span> <span class="hljs-string">"credit_risk"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看任务</span><br>task<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&lt;</span>TaskClassif<span class="hljs-operator">:</span>dat<span class="hljs-operator">&gt;</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1000</span> x <span class="hljs-number">21</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">*</span> Target<span class="hljs-operator">:</span> credit_risk<br><span class="hljs-operator">*</span> Properties<span class="hljs-operator">:</span> twoclass<br><span class="hljs-operator">*</span> Features <span class="hljs-punctuation">(</span><span class="hljs-number">20</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br>  <span class="hljs-operator">-</span> fct <span class="hljs-punctuation">(</span><span class="hljs-number">14</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span> credit_history<span class="hljs-punctuation">,</span> employment_duration<span class="hljs-punctuation">,</span> foreign_worker<span class="hljs-punctuation">,</span> housing<span class="hljs-punctuation">,</span> job<span class="hljs-punctuation">,</span> other_debtors<span class="hljs-punctuation">,</span> other_installment_plans<span class="hljs-punctuation">,</span><br>    people_liable<span class="hljs-punctuation">,</span> personal_status_sex<span class="hljs-punctuation">,</span> property<span class="hljs-punctuation">,</span> purpose<span class="hljs-punctuation">,</span> savings<span class="hljs-punctuation">,</span> status<span class="hljs-punctuation">,</span> telephone<br>  <span class="hljs-operator">-</span> int <span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span> age<span class="hljs-punctuation">,</span> amount<span class="hljs-punctuation">,</span> duration<br>  <span class="hljs-operator">-</span> ord <span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span> installment_rate<span class="hljs-punctuation">,</span> number_credits<span class="hljs-punctuation">,</span> present_residence<br></code></pre></td></tr></tbody></table></figure><h3 id="剔除某列"><a href="#剔除某列" class="headerlink" title="剔除某列"></a>剔除某列</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 剔除某列</span><br><br>task<span class="hljs-operator">$</span>select<span class="hljs-punctuation">(</span><br>  cols <span class="hljs-operator">=</span> dplyr<span class="hljs-operator">::</span>setdiff<span class="hljs-punctuation">(</span>task<span class="hljs-operator">$</span>feature_names<span class="hljs-punctuation">,</span> <span class="hljs-string">"telephone"</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br>task<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&lt;</span>TaskClassif<span class="hljs-operator">:</span>dat<span class="hljs-operator">&gt;</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1000</span> x <span class="hljs-number">20</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">*</span> Target<span class="hljs-operator">:</span> credit_risk<br><span class="hljs-operator">*</span> Properties<span class="hljs-operator">:</span> twoclass<br><span class="hljs-operator">*</span> Features <span class="hljs-punctuation">(</span><span class="hljs-number">19</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><br>  <span class="hljs-operator">-</span> fct <span class="hljs-punctuation">(</span><span class="hljs-number">13</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span> credit_history<span class="hljs-punctuation">,</span> employment_duration<span class="hljs-punctuation">,</span> foreign_worker<span class="hljs-punctuation">,</span> housing<span class="hljs-punctuation">,</span> job<span class="hljs-punctuation">,</span> other_debtors<span class="hljs-punctuation">,</span> other_installment_plans<span class="hljs-punctuation">,</span><br>    people_liable<span class="hljs-punctuation">,</span> personal_status_sex<span class="hljs-punctuation">,</span> property<span class="hljs-punctuation">,</span> purpose<span class="hljs-punctuation">,</span> savings<span class="hljs-punctuation">,</span> status<br>  <span class="hljs-operator">-</span> int <span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span> age<span class="hljs-punctuation">,</span> amount<span class="hljs-punctuation">,</span> duration<br>  <span class="hljs-operator">-</span> ord <span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span> installment_rate<span class="hljs-punctuation">,</span> number_credits<span class="hljs-punctuation">,</span> present_residence<br></code></pre></td></tr></tbody></table></figure><h3 id="划分数据"><a href="#划分数据" class="headerlink" title="划分数据"></a>划分数据</h3><p>划分数据得到的是行号，并不是直接将数据分成两份。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><br>split <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>partition<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> ratio <span class="hljs-operator">=</span> <span class="hljs-number">0.7</span><span class="hljs-punctuation">,</span> stratify <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 70%作为训练集，默认分层抽样</span><br><br>split<span class="hljs-operator">$</span>train<br><br>split<span class="hljs-operator">$</span>test<br></code></pre></td></tr></tbody></table></figure><h1 id="学习器"><a href="#学习器" class="headerlink" title="学习器"></a>学习器</h1><p>学习器就是来自不同包里面的算法。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">mlr3<span class="hljs-operator">::</span>lrns<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&lt;</span>DictionaryLearner<span class="hljs-operator">&gt;</span> with <span class="hljs-number">53</span> stored values<br>Keys<span class="hljs-operator">:</span> classif.cv_glmnet<span class="hljs-punctuation">,</span> classif.debug<span class="hljs-punctuation">,</span> classif.featureless<span class="hljs-punctuation">,</span> classif.glmnet<span class="hljs-punctuation">,</span> classif.kknn<span class="hljs-punctuation">,</span> classif.lda<span class="hljs-punctuation">,</span> classif.log_reg<span class="hljs-punctuation">,</span><br>  classif.multinom<span class="hljs-punctuation">,</span> classif.naive_bayes<span class="hljs-punctuation">,</span> classif.nnet<span class="hljs-punctuation">,</span> classif.qda<span class="hljs-punctuation">,</span> classif.ranger<span class="hljs-punctuation">,</span> classif.rpart<span class="hljs-punctuation">,</span> classif.svm<span class="hljs-punctuation">,</span> classif.xgboost<span class="hljs-punctuation">,</span><br>  clust.agnes<span class="hljs-punctuation">,</span> clust.ap<span class="hljs-punctuation">,</span> clust.cmeans<span class="hljs-punctuation">,</span> clust.cobweb<span class="hljs-punctuation">,</span> clust.dbscan<span class="hljs-punctuation">,</span> clust.diana<span class="hljs-punctuation">,</span> clust.em<span class="hljs-punctuation">,</span> clust.fanny<span class="hljs-punctuation">,</span> clust.featureless<span class="hljs-punctuation">,</span> clust.ff<span class="hljs-punctuation">,</span><br>  clust.hclust<span class="hljs-punctuation">,</span> clust.kkmeans<span class="hljs-punctuation">,</span> clust.kmeans<span class="hljs-punctuation">,</span> clust.MBatchKMeans<span class="hljs-punctuation">,</span> clust.meanshift<span class="hljs-punctuation">,</span> clust.pam<span class="hljs-punctuation">,</span> clust.SimpleKMeans<span class="hljs-punctuation">,</span> clust.xmeans<span class="hljs-punctuation">,</span><br>  dens.hist<span class="hljs-punctuation">,</span> dens.kde<span class="hljs-punctuation">,</span> regr.cv_glmnet<span class="hljs-punctuation">,</span> regr.debug<span class="hljs-punctuation">,</span> regr.featureless<span class="hljs-punctuation">,</span> regr.glmnet<span class="hljs-punctuation">,</span> regr.kknn<span class="hljs-punctuation">,</span> regr.km<span class="hljs-punctuation">,</span> regr.lm<span class="hljs-punctuation">,</span> regr.ranger<span class="hljs-punctuation">,</span><br>  regr.rpart<span class="hljs-punctuation">,</span> regr.svm<span class="hljs-punctuation">,</span> regr.xgboost<span class="hljs-punctuation">,</span> surv.coxph<span class="hljs-punctuation">,</span> surv.cv_glmnet<span class="hljs-punctuation">,</span> surv.glmnet<span class="hljs-punctuation">,</span> surv.kaplan<span class="hljs-punctuation">,</span> surv.ranger<span class="hljs-punctuation">,</span> surv.rpart<span class="hljs-punctuation">,</span> surv.xgboost<br></code></pre></td></tr></tbody></table></figure><p>设定学习器的方法如下：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">learner <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.ranger"</span><span class="hljs-punctuation">,</span> num.trees <span class="hljs-operator">=</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span> predict_type <span class="hljs-operator">=</span> <span class="hljs-string">"prob"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 参数应该要超参数调参才可以的，通常。</span><br>learner<br></code></pre></td></tr></tbody></table></figure><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&lt;LearnerClassifRanger:classif.ranger&gt;<br>* Model: -<br>* Parameters: num.threads=<span class="hljs-number">1</span>, num.trees=<span class="hljs-number">100</span><br>* Packages: mlr3, mlr3learners, ranger<br>* Predict <span class="hljs-keyword">Type</span>: prob<br>* Feature <span class="hljs-keyword">types</span>: logical, <span class="hljs-type">integer</span>, <span class="hljs-type">numeric</span>, <span class="hljs-type">character</span>, factor, ordered<br>* Properties: hotstart_backward, importance, multiclass, oob_error, twoclass, weights<br></code></pre></td></tr></tbody></table></figure><h3 id="开始训练模型"><a href="#开始训练模型" class="headerlink" title="开始训练模型"></a>开始训练模型</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">learner<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br>learner<span class="hljs-operator">$</span>model <span class="hljs-comment"># 这个模型就和普通的R包训练得到的结果是一样的</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight lasso"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs lasso">Ranger result<br><br>Call:<br> ranger<span class="hljs-type">::ranger</span>(dependent.<span class="hljs-built_in">variable</span>.name = task$target_names, <span class="hljs-built_in">data</span> = task$data(),      probability = <span class="hljs-built_in">self</span>$predict_type == <span class="hljs-string">"prob"</span>, <span class="hljs-keyword">case</span>.weights = task$weights$weight,      num.threads = <span class="hljs-number">1</span>L, num.trees = <span class="hljs-number">100</span>L) <br><br><span class="hljs-keyword">Type</span>:                             Probability estimation <br>Number of trees:                  <span class="hljs-number">100</span> <br>Sample size:                      <span class="hljs-number">700</span> <br>Number of independent variables:  <span class="hljs-number">19</span> <br>Mtry:                             <span class="hljs-number">4</span> <br>Target node size:                 <span class="hljs-number">10</span> <br><span class="hljs-built_in">Variable</span> importance mode:         <span class="hljs-literal">none</span> <br>Splitrule:                        gini <br>OOB prediction error (Brier s.):  <span class="hljs-number">0.1615879</span> <br></code></pre></td></tr></tbody></table></figure><h3 id="进行预测"><a href="#进行预测" class="headerlink" title="进行预测"></a>进行预测</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">prediction <span class="hljs-operator">=</span> learner<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span><br>prediction<br></code></pre></td></tr></tbody></table></figure><h3 id="模型性能评估"><a href="#模型性能评估" class="headerlink" title="模型性能评估"></a>模型性能评估</h3><p>查看性能度量指标：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">mlr3<span class="hljs-operator">::</span>msrs<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&lt;DictionaryMeasure&gt; with <span class="hljs-number">87</span> stored values<br>Keys: aic, bic, classif<span class="hljs-selector-class">.acc</span>, classif<span class="hljs-selector-class">.auc</span>, classif<span class="hljs-selector-class">.bacc</span>, classif<span class="hljs-selector-class">.bbrier</span>, classif<span class="hljs-selector-class">.ce</span>, classif<span class="hljs-selector-class">.costs</span>, classif<span class="hljs-selector-class">.dor</span>,<br>  classif<span class="hljs-selector-class">.fbeta</span>, classif<span class="hljs-selector-class">.fdr</span>, classif<span class="hljs-selector-class">.fn</span>, classif<span class="hljs-selector-class">.fnr</span>, classif<span class="hljs-selector-class">.fomr</span>, classif<span class="hljs-selector-class">.fp</span>, classif<span class="hljs-selector-class">.fpr</span>, classif<span class="hljs-selector-class">.logloss</span>,<br>  classif<span class="hljs-selector-class">.mbrier</span>, classif<span class="hljs-selector-class">.mcc</span>, classif<span class="hljs-selector-class">.npv</span>, classif<span class="hljs-selector-class">.ppv</span>, classif<span class="hljs-selector-class">.prauc</span>, classif<span class="hljs-selector-class">.precision</span>, classif<span class="hljs-selector-class">.recall</span>,<br>  classif<span class="hljs-selector-class">.sensitivity</span>, classif<span class="hljs-selector-class">.specificity</span>, classif<span class="hljs-selector-class">.tn</span>, classif<span class="hljs-selector-class">.tnr</span>, classif<span class="hljs-selector-class">.tp</span>, classif<span class="hljs-selector-class">.tpr</span>, clust<span class="hljs-selector-class">.ch</span>, clust<span class="hljs-selector-class">.db</span>,<br>  clust<span class="hljs-selector-class">.dunn</span>, clust<span class="hljs-selector-class">.silhouette</span>, clust<span class="hljs-selector-class">.wss</span>, debug, dens<span class="hljs-selector-class">.logloss</span>, oob_error, regr<span class="hljs-selector-class">.bias</span>, regr<span class="hljs-selector-class">.ktau</span>, regr<span class="hljs-selector-class">.mae</span>, regr<span class="hljs-selector-class">.mape</span>,<br>  regr<span class="hljs-selector-class">.maxae</span>, regr<span class="hljs-selector-class">.medae</span>, regr<span class="hljs-selector-class">.medse</span>, regr<span class="hljs-selector-class">.mse</span>, regr<span class="hljs-selector-class">.msle</span>, regr<span class="hljs-selector-class">.pbias</span>, regr<span class="hljs-selector-class">.rae</span>, regr<span class="hljs-selector-class">.rmse</span>, regr<span class="hljs-selector-class">.rmsle</span>, regr<span class="hljs-selector-class">.rrse</span>,<br>  regr<span class="hljs-selector-class">.rse</span>, regr<span class="hljs-selector-class">.rsq</span>, regr<span class="hljs-selector-class">.sae</span>, regr<span class="hljs-selector-class">.smape</span>, regr<span class="hljs-selector-class">.srho</span>, regr<span class="hljs-selector-class">.sse</span>, selected_features, sim<span class="hljs-selector-class">.jaccard</span>, sim<span class="hljs-selector-class">.phi</span>, surv<span class="hljs-selector-class">.brier</span>,<br>  surv<span class="hljs-selector-class">.calib_alpha</span>, surv<span class="hljs-selector-class">.calib_beta</span>, surv<span class="hljs-selector-class">.chambless_auc</span>, surv<span class="hljs-selector-class">.cindex</span>, surv<span class="hljs-selector-class">.dcalib</span>, surv<span class="hljs-selector-class">.graf</span>, surv<span class="hljs-selector-class">.hung_auc</span>,<br>  surv<span class="hljs-selector-class">.intlogloss</span>, surv<span class="hljs-selector-class">.logloss</span>, surv<span class="hljs-selector-class">.mae</span>, surv<span class="hljs-selector-class">.mse</span>, surv<span class="hljs-selector-class">.nagelk_r2</span>, surv<span class="hljs-selector-class">.oquigley_r2</span>, surv<span class="hljs-selector-class">.rmse</span>, surv<span class="hljs-selector-class">.schmid</span>,<br>  surv<span class="hljs-selector-class">.song_auc</span>, surv<span class="hljs-selector-class">.song_tnr</span>, surv<span class="hljs-selector-class">.song_tpr</span>, surv<span class="hljs-selector-class">.uno_auc</span>, surv<span class="hljs-selector-class">.uno_tnr</span>, surv<span class="hljs-selector-class">.uno_tpr</span>, surv<span class="hljs-selector-class">.xu_r2</span>, time_both,<br>  time_predict, time_train<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 查看准确率</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 混淆矩阵</span><br><br>prediction<span class="hljs-operator">$</span>confusion<br><br><span class="hljs-comment"># 查准率</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.precision"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 召回率</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.recall"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘制ROC曲线</span><br>mlr3verse<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>prediction<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"roc"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># AUC曲线</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.auc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/000012.png" alt="000012"></p><h3 id="重抽样"><a href="#重抽样" class="headerlink" title="重抽样"></a>重抽样</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 支持的重抽样方法</span><br>mlr3<span class="hljs-operator">::</span>rsmps<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 10倍交叉验证</span><br>cv10 <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 抽样策略</span><br><br><span class="hljs-comment"># 实例化</span><br>cv10<span class="hljs-operator">$</span>instantiate<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 使用重抽样</span><br><span class="hljs-comment"># 需要提供任务、学习器和重抽样方法</span><br>rr <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>resample<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> learner<span class="hljs-punctuation">,</span> cv10<span class="hljs-punctuation">,</span> store_models <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 保存每次的模型</span><br><br><span class="hljs-comment"># 查看平均准确率</span><br>rr<span class="hljs-operator">$</span>aggregate<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看每次的准确率</span><br>rr<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>rr<span class="hljs-operator">$</span>prediction<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="基准测试"><a href="#基准测试" class="headerlink" title="基准测试"></a>基准测试</h3><p>基准测试指的是比较不同的算法、在多个任务或者是不同抽样策略上的平均表现。<br>测试时要保证测试的公平性，也就是喂给每个算法的数据必须是一样的，也就是重抽样得到的数据应该同时喂给每个算法。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 构建任务</span><br>tasks <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"sonar"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 选择学习器</span><br>learners <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrns<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"classif.rpart"</span><span class="hljs-punctuation">,</span>   <span class="hljs-comment"># 决策树</span><br>                        <span class="hljs-string">"classif.kknn"</span><span class="hljs-punctuation">,</span>    <span class="hljs-comment"># KNN</span><br>                        <span class="hljs-string">"classif.ranger"</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment"># 随机森林</span><br>                        <span class="hljs-string">"classif.svm"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>    <span class="hljs-comment"># 支持向量机</span><br>                      predict_type <span class="hljs-operator">=</span> <span class="hljs-string">"prob"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 构建基准测试</span><br>design <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>benchmark_grid<span class="hljs-punctuation">(</span>tasks<span class="hljs-punctuation">,</span> learners<span class="hljs-punctuation">,</span> mlr3<span class="hljs-operator">::</span>rsmps<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>design<br><br><span class="hljs-comment"># 执行基准测试</span><br>bmr <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>benchmark<span class="hljs-punctuation">(</span>design <span class="hljs-operator">=</span> design<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看平均的结果</span><br>bmr<span class="hljs-operator">$</span>aggregate<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                   msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.auc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># ROC曲线</span><br>mlr3verse<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>bmr<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"roc"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># AUC图</span><br>mlr3verse<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>bmr<span class="hljs-punctuation">,</span> measure <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.auc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="图学习器"><a href="#图学习器" class="headerlink" title="图学习器"></a>图学习器</h3><p>图学习器的主要用途：</p><ul><li>特征工程：缺失值插补、特征提取、特征选择、不均衡数据处理……</li><li>集成学习：装袋法、堆叠法</li><li>分支训练和分块训练</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 简单的线性图</span><br>graph <span class="hljs-operator">=</span> mlr3verse<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"scale"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;&gt;%</span>  <span class="hljs-comment"># 数据归一化</span><br>  mlr3verse<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"encode"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;&gt;%</span>       <span class="hljs-comment"># 数据重编码</span><br>  mlr3verse<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputemedian"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;&gt;%</span> <span class="hljs-comment"># 中位数插补</span><br>  mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.rpart"</span><span class="hljs-punctuation">)</span>         <span class="hljs-comment"># 接上学习器</span><br><br><span class="hljs-comment"># 图可视化</span><br>graph<span class="hljs-operator">$</span>plot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 转换为学习器</span><br>gl <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>as_learner<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 训练任务</span><br>task <span class="hljs-operator">=</span> tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><br><br>gl<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 调试图</span><br><br><span class="hljs-comment"># 设置学习器超参数</span><br>graph<span class="hljs-operator">$</span>pipeops<span class="hljs-operator">$</span>scale<span class="hljs-operator">$</span>param_set<span class="hljs-operator">$</span>values<span class="hljs-operator">$</span>center <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><br><br><span class="hljs-comment"># 取单独的PipeOp的$state</span><br>graph<span class="hljs-operator">$</span>keep_results <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><br>graph<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><br>graph<span class="hljs-operator">$</span>pipeops<span class="hljs-operator">$</span>scale<span class="hljs-operator">$</span>state<span class="hljs-operator">$</span>scale<br><br><span class="hljs-comment"># 查看中间结果</span><br>graph<span class="hljs-operator">$</span>pipeops<span class="hljs-operator">$</span>scale<span class="hljs-operator">$</span>.result<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>head<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h2><h3 id="加载需要的包"><a href="#加载需要的包" class="headerlink" title="加载需要的包"></a>加载需要的包</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>mlr3verse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>mlr3pipelines<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggthemes<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="什么是特征工程"><a href="#什么是特征工程" class="headerlink" title="什么是特征工程"></a>什么是特征工程</h3><p>简单来说就是将自变量转换成能够更好的表达问题本质的新变量的过程，也就是对自变量进行处理。<br>数据清洗和特征工程属于机器学习中的数据预处理过程，使用<code>mlr3pipelines</code>这个包来实现。</p><h3 id="选择器函数"><a href="#选择器函数" class="headerlink" title="选择器函数"></a>选择器函数</h3><ul><li>selector_all(): 选择所有特征</li><li>selector_none():不选择任何特征</li><li>selector_type():根据类型选择特征</li><li>selector_name():根据特征名字选择特征</li><li>selector_grep():利用正则表达式选择特征</li><li>selector_invert():反选某个选择器的特征</li><li>selector_intersect/union/setdiff():两个选择器特征的交集、并集和差集</li><li>selector_missing():选择含有缺失值的特征</li><li>selector_cardinality_greater_than():根据分类特征个数阈值进行筛选</li></ul><h3 id="affcet-columns参数"><a href="#affcet-columns参数" class="headerlink" title="affcet_columns参数"></a>affcet_columns参数</h3><p>这个参数组要用于说明作用于哪些列。</p><h3 id="查看所有的PipeOp"><a href="#查看所有的PipeOp" class="headerlink" title="查看所有的PipeOp"></a>查看所有的PipeOp</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight pf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs pf">Show <span class="hljs-keyword">in</span> New Window<br><span class="hljs-variable">&lt;DictionaryPipeOp&gt;</span> with <span class="hljs-number">74</span> stored values<br>Keys: boxcox, branch, chunk, classbalancing, classifavg, classweights, colapply, collapsefactors, colroles, compose_crank, compose_distr,<br>  compose_probregr, copy, crankcompose, datefeatures, distrcompose, encode, encodeimpact, encodelmer, featureunion, filter, fixfactors,<br>  histbin, ica, imputeconstant, imputehist, imputelearner, imputemean, imputemedian, imputemode, imputeoor, imputesample, kernelpca, learner,<br>  learner_cv, missind, modelmatrix, multiplicityexply, multiplicityimply, mutate, nmf, nop, ovrsplit, ovrunite, pca, proxy, quantilebin,<br>  randomprojection, randomresponse, regravg, removeconstants, renamecolumns, replicate, scale, scalemaxabs, scalerange, select, smote,<br>  spatialsign, subsample, survavg, targetinvert, targetmutate, targettrafoscalerange, textvectorizer, threshold, trafopred_regrsurv,<br>  trafopred_survregr, trafotask_regrsurv, trafotask_survregr, tunethreshold, unbranch, vtreat, yeojohnson<br>Show <span class="hljs-keyword">in</span> New Window<br><span class="hljs-variable">&lt;ParamSetCollection&gt;</span><br>R Console<br>Description:data.<span class="hljs-built_in">table</span> [<span class="hljs-number">18</span> × <span class="hljs-number">7</span>]<br>id<br><span class="hljs-variable">&lt;chr&gt;</span><br>class<br><span class="hljs-variable">&lt;chr&gt;</span><br>scale.centerParamLgl<br>scale.scaleParamLgl<br>scale.robustParamLgl<br>scale.affect_columnsParamUty<br>pca.centerParamLgl<br>pca.scale.ParamLgl<br>pca.rank.ParamInt<br>pca.affect_columnsParamUty<br>classif.rpart.cpParamDbl<br>classif.rpart.keep_modelParamLgl<br><span class="hljs-number">1</span>-<span class="hljs-number">10</span> of <span class="hljs-number">18</span> rows | <span class="hljs-number">1</span>-<span class="hljs-number">2</span> of <span class="hljs-number">7</span> columns<br>data.<span class="hljs-built_in">table</span><br><span class="hljs-number">18</span> x <span class="hljs-number">7</span><br>Description:data.<span class="hljs-built_in">table</span> [<span class="hljs-number">18</span> × <span class="hljs-number">7</span>]<br>id<br><span class="hljs-variable">&lt;chr&gt;</span><br>class<br><span class="hljs-variable">&lt;chr&gt;</span><br>lower<br><span class="hljs-variable">&lt;dbl&gt;</span><br>upper<br><span class="hljs-variable">&lt;dbl&gt;</span><br>nlevels<br><span class="hljs-variable">&lt;dbl&gt;</span><br><span class="hljs-keyword">default</span><br><span class="hljs-variable">&lt;list&gt;</span><br>value<br><span class="hljs-variable">&lt;list&gt;</span><br>scale.centerParamLglNANA<span class="hljs-number">2</span><span class="hljs-variable">&lt;lgl [1]&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>scale.scaleParamLglNANA<span class="hljs-number">2</span><span class="hljs-variable">&lt;lgl [1]&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>scale.robustParamLglNANA<span class="hljs-number">2</span><span class="hljs-variable">&lt;S3: NoDefault&gt;</span><span class="hljs-variable">&lt;lgl [1]&gt;</span><br>scale.affect_columnsParamUtyNANAInf<span class="hljs-variable">&lt;S3: Selector&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>pca.centerParamLglNANA<span class="hljs-number">2</span><span class="hljs-variable">&lt;lgl [1]&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>pca.scale.ParamLglNANA<span class="hljs-number">2</span><span class="hljs-variable">&lt;lgl [1]&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>pca.rank.ParamInt<span class="hljs-number">1</span>InfInf<span class="hljs-variable">&lt;NULL&gt;</span><span class="hljs-variable">&lt;int [1]&gt;</span><br>pca.affect_columnsParamUtyNANAInf<span class="hljs-variable">&lt;S3: Selector&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>classif.rpart.cpParamDbl<span class="hljs-number">0</span><span class="hljs-number">1</span>Inf<span class="hljs-variable">&lt;dbl [1]&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br>classif.rpart.keep_modelParamLglNANA<span class="hljs-number">2</span><span class="hljs-variable">&lt;lgl [1]&gt;</span><span class="hljs-variable">&lt;NULL&gt;</span><br><span class="hljs-number">1</span>-<span class="hljs-number">10</span> of <span class="hljs-number">18</span> rows<br>Show <span class="hljs-keyword">in</span> New Window<br>Description:data.<span class="hljs-built_in">table</span> [<span class="hljs-number">8</span> × <span class="hljs-number">1</span>]<br>key<br><span class="hljs-variable">&lt;chr&gt;</span><br>imputeconstant<br>imputehist<br>imputelearner<br>imputemean<br>imputemedian<br>imputemode<br>imputeoor<br>imputesample<br><span class="hljs-number">8</span> rows<br>Show <span class="hljs-keyword">in</span> New Window<br>diabetes      age pedigree pregnant  glucose  insulin     mass pressure  triceps <br>       <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span>        <span class="hljs-number">0</span> <br></code></pre></td></tr></tbody></table></figure><h3 id="如何理解"><a href="#如何理解" class="headerlink" title="如何理解"></a>如何理解</h3><p>以“标准化”这个管道为例，其中$train()接收训练数据，对输入数据进行标准化处理，在这个过程中训练好的参数（平均值和标准差）将作为state保存下来。在predict()的时候是直接调用state中保存好的参数，而不是重新计算标准差和平均值。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs R">gr <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"scale"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;&gt;%</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"pca"</span><span class="hljs-punctuation">,</span> rank. <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 保留的主成分数量</span><br>gr<span class="hljs-operator">$</span>plot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 调试</span><br>task <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><br><br>gr<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 训练</span><br>gr<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task<span class="hljs-operator">$</span>filter<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 原始任务经过特征工程后再用于机器学习流程</span><br>new.task <span class="hljs-operator">=</span> gr<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.task<br><br><span class="hljs-comment"># 后面可以再接一个机器学习算法</span><br>gr <span class="hljs-operator">=</span> gr <span class="hljs-operator">%&gt;&gt;%</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.rpart"</span><span class="hljs-punctuation">)</span><br>gr<span class="hljs-operator">$</span>plot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 转换为学习器</span><br>gr_learner<span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>as_learner<span class="hljs-punctuation">(</span>gr<span class="hljs-punctuation">)</span><br>gr_learner<br><br><span class="hljs-comment"># 查看所有调参参数</span><br>gr_learner<span class="hljs-operator">$</span>param_set<br></code></pre></td></tr></tbody></table></figure><h3 id="缺失值插补"><a href="#缺失值插补" class="headerlink" title="缺失值插补"></a>缺失值插补</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 查看目前支持的方法</span><br><span class="hljs-comment">#as.data.table(mlr_pipeops)[tags %in% "missings", "key"]</span><br>mlr3pipelines<span class="hljs-operator">::</span>mlr_pipeops <span class="hljs-operator">%&gt;%</span> <br>  mlr3verse<span class="hljs-operator">::</span>as.data.table<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>tags <span class="hljs-operator">%in%</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"missings"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"key"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-string">"key"</span><span class="hljs-punctuation">)</span><span class="hljs-comment"># tidyverse语法</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">imputeconstant</span><br><span class="hljs-attribute">imputehist</span><br><span class="hljs-attribute">imputelearner</span><br><span class="hljs-attribute">imputemean</span><br><span class="hljs-attribute">imputemedian</span><br><span class="hljs-attribute">imputemode</span><br><span class="hljs-attribute">imputeoor</span><br><span class="hljs-attribute">imputesample</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 简单插补</span><br>task <span class="hljs-operator">=</span> tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"pima"</span><span class="hljs-punctuation">)</span><br><br>task<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 查看缺失值</span><br><br><span class="hljs-comment"># 特定列进行插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputeconstant"</span><span class="hljs-punctuation">,</span><br>                       param_vals <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>                         constant <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">999</span><span class="hljs-punctuation">,</span><br>                         affect_columns <span class="hljs-operator">=</span> selector_name<span class="hljs-punctuation">(</span><span class="hljs-string">"glucose"</span><span class="hljs-punctuation">)</span><br>                       <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>new.task <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-comment"># 这个地方的训练相当于对原始数据进行缺失值的常数插补</span><br>new.task<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 均值插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputemean"</span><span class="hljs-punctuation">)</span><br>new.tak <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 中位数插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputemedian"</span><span class="hljs-punctuation">)</span><br>new.tak <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 众数插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputemode"</span><span class="hljs-punctuation">)</span><br>new.tak <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 随机抽样插补</span><br><span class="hljs-comment"># 从非缺失的训练数据中随机抽样进行插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputesample"</span><span class="hljs-punctuation">)</span><br>new.tak <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 直方图法插补</span><br><span class="hljs-comment"># 相当于把数据进行划分，然后进行插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputehist"</span><span class="hljs-punctuation">)</span><br>new.tak <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="学习器插补"><a href="#学习器插补" class="headerlink" title="学习器插补"></a>学习器插补</h3><p>为每个特征变量拟合一个学习器来插补特征。<br>学习器支持的特征才可以被插补，也就是说回归类型的学习器只能插补整数和数值特征，分类类型的学习器可以插补因子、有序因子和逻辑特征值等。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 决策树插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputelearner"</span><span class="hljs-punctuation">,</span> lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.rpart"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>new.task <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># KNN插补</span><br><span class="hljs-comment"># 先用直方图法插补再用KNN学习器插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputelearner"</span><span class="hljs-punctuation">,</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputehist"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;&gt;%</span> lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.kknn"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>new.task <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.tak<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 超出范围插补</span><br><span class="hljs-comment"># 适用于基于树的模型</span><br><span class="hljs-comment"># 增加一个新的水平".MISSING"来插补因子特征。</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputeoor"</span><span class="hljs-punctuation">)</span><br>new.task <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>new.task<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="特征缩放"><a href="#特征缩放" class="headerlink" title="特征缩放"></a>特征缩放</h3><p>不同特征之间的差异可能会很大，对模型的影响可能会很大，因此需要做归一化处理，也就是对特征进行缩放。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 标准化</span><br><span class="hljs-comment"># 均值为0，标准差为1,如果是正态分布的数据则最佳</span><br><br>pos <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"scale"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># scale = FALSE表示只做中心化</span><br>pos<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 归一化</span><br><span class="hljs-comment"># 将数据放缩到[0,1]区间 </span><br><br>pop <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"scalerange"</span><span class="hljs-punctuation">,</span> param_vals <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>pop<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 行规范化</span><br><span class="hljs-comment"># 简单理解就是对行进行处理</span><br>pop <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"spatialsign"</span><span class="hljs-punctuation">)</span><br>pop<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="特征变换"><a href="#特征变换" class="headerlink" title="特征变换"></a>特征变换</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 计算新特征</span><br><span class="hljs-comment"># 比如可以根据病害等级计算病情指数</span><br>task <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"mutate"</span><span class="hljs-punctuation">,</span>mutation <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>  x1_p <span class="hljs-operator">=</span> <span class="hljs-operator">~</span>Sepal.Length <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>  area1 <span class="hljs-operator">=</span> <span class="hljs-operator">~</span>Sepal.Length <span class="hljs-operator">*</span> Sepal.Width<span class="hljs-punctuation">,</span><br>  area2 <span class="hljs-operator">=</span> <span class="hljs-operator">~</span>Petal.Length <span class="hljs-operator">*</span> Petal.Width<span class="hljs-punctuation">,</span><br>  area <span class="hljs-operator">=</span> <span class="hljs-operator">~</span>area1 <span class="hljs-operator">+</span> area2<br><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 正态性变换</span><br><span class="hljs-comment"># Box-Cox变换可以将非负的非正态数据转换成正态分布数据,算法会自动计算参数</span><br><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"boxcox"</span><span class="hljs-punctuation">)</span><br>pop<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 如果数据中包含了0和负数，则需要用Yeo-Johnson变换</span><br><span class="hljs-comment"># 使用bestNormalize可以将变换后的数据转为原始数据</span><br>pop <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"yeojohnson"</span><span class="hljs-punctuation">)</span><br>pop<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="特征降维"><a href="#特征降维" class="headerlink" title="特征降维"></a>特征降维</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># PCA</span><br><span class="hljs-comment"># 不用选择所有主成分，一般85%以上就可以</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"pca"</span><span class="hljs-punctuation">,</span> rank. <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 核PCA</span><br><span class="hljs-comment"># PCA用于线性降维，KPCA用于非线性降维，处理线性不可分的数据集</span><br><span class="hljs-comment"># 原理是将线性不可分的映射到高维空间，再进行PCA</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"kernelpca"</span><span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># iris数据集是线性可分的，此处只是举例</span><br><br><span class="hljs-comment"># ICA独立成分分析</span><br><span class="hljs-comment"># 提取统计意义上的独立成分</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"ica"</span><span class="hljs-punctuation">,</span> n.comp <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment"># NMF：非负矩阵分解</span><br><span class="hljs-comment"># 保证矩阵非负的同时能够减少数据量，相当于把n维的数据降到r维</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"nmf"</span><span class="hljs-punctuation">,</span> rank <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment"># 剔除常量特征</span><br><span class="hljs-comment"># </span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"removeconstants"</span><span class="hljs-punctuation">)</span><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment"># 因子合并</span><br><span class="hljs-comment"># 将数量少的因子合并到数量较多的因子中去</span><br><span class="hljs-comment"># 训练集中没有的因子水平在测试集中出现了也不会被使用</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"collapsefactors"</span><span class="hljs-punctuation">,</span> target_level_count <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment"># 因子编码</span><br><span class="hljs-comment"># 独热编码：分类型的转换成二值型，如一列有三种颜色，则需要转化成三列，如是否红色，是标为1，否标为0</span><br><span class="hljs-comment"># 虚拟编码相当于独热编码删除一列</span><br>task <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"penguins"</span><span class="hljs-punctuation">)</span><br>poe <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"encode"</span><span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">"one-hot"</span><span class="hljs-punctuation">)</span><br>poe<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><h3 id="不均衡数据处理"><a href="#不均衡数据处理" class="headerlink" title="不均衡数据处理"></a>不均衡数据处理</h3><ul><li>欠采样：多数类只保留了一部分</li><li>过采样：少数类超量采样</li></ul><h2 id="超参数调参"><a href="#超参数调参" class="headerlink" title="超参数调参"></a>超参数调参</h2><h3 id="什么是超参数调参"><a href="#什么是超参数调参" class="headerlink" title="什么是超参数调参"></a>什么是超参数调参</h3><p>简单来说揪是让模型自动找到最佳参数。<br>使用mlr3tuning实现。</p><h3 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h3><p>搜索空间、学习器、任务、重新抽样策略、模型性能度量指标及终止条件。</p><h3 id="查看学习器超参数"><a href="#查看学习器超参数" class="headerlink" title="查看学习器超参数"></a>查看学习器超参数</h3><p>需要先知道学习器包含哪些参数。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs {r}">learner = mlr3::lrn("classif.svm")<br>learner$param_set$ids()<br>learner$param_set<br></code></pre></td></tr></tbody></table></figure><h3 id="独立参数"><a href="#独立参数" class="headerlink" title="独立参数"></a>独立参数</h3><p>tune()进行超参数调参，需要设定以下参数：</p><ul><li>method：调参方法，支持以下这些<ul><li>grid_search：网络搜索</li><li>random_search：随机搜索</li><li>gensa：广义模拟退火</li><li>nloptr：非线性优化</li></ul></li><li>task：任务</li><li>learner：带调参的学习器或普通学习器</li><li>resampling：重抽样策略</li><li>measures：模型性能评估指标，可以是多个</li><li>search_space：如果是普通的学习器则需要指定搜索空间</li><li>term_evals/term_time/terminator：终止条件，允许评估次数/允许调参时间多少秒/终止器对象</li><li>store_models：是否保存每次的模型</li><li>allow_hotstart：是否允许热启动预拟合模型</li><li>resolution：网格分辨率，网格搜索的配套参数</li><li>batch_size：批量大小，每批次放几组参数配置，以加快运算速度</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs {r}"># 将测试集索引设置为留出<br>task = mlr3::tsk("iris")<br>split = mlr3::partition(task, ratio = 0.8)<br>task$set_row_roles(split$test, "holdout")<br><br># 选择学习器，需要调参的用to_tune()设定搜索空间<br>learner = mlr3::lrn("classif.svm",<br>                    type = "C-classification",<br>                    kernel = "radial",<br>                    cost = to_tune(0.1, 10),<br>                    gamma = to_tune(0,5))<br><br># 5折交叉验证<br>instance = mlr3tuning::tune(method = "grid_search",<br>                            task = task,<br>                            learner = learner,<br>                            resampling = rsmp("cv", folds = 5),<br>                            measures = msr("classif.acc"),<br>                            resolution = 5)<br><br># 提取调参结果<br>instance$result<br><br># 调参档案<br>instance$archive<br><br># 调参结果可视化<br>mlr3viz::autoplot(instance, <br>                  type = "surface",<br>                  cols_x = c("cost", "gamma"))<br># 最优参数更新学习器参数，在训练集上训练模型，然后在测试集上做预测<br>learner$param_set$values = instance$result_learner_param_vals<br>learner$train(task) # 之所以这样直接写是因为前面写了holdout<br><br>prediction = learner$predict(task, row_ids = split$test)<br>prediction<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/000002.png" alt="000002"></p><h3 id="自动调参器"><a href="#自动调参器" class="headerlink" title="自动调参器"></a>自动调参器</h3><h3 id="自动调参器-1"><a href="#自动调参器-1" class="headerlink" title="自动调参器"></a>自动调参器</h3><p>独立调参的缺点：</p><ul><li>最优参数需要手动更新</li><li>不方便实现嵌套重抽样</li></ul><p>自动调参将超参数和学习器封装到一起，实现自动调参过程，并可以像其他的学习器一样使用。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 创建任务并选择学习器</span><br>task <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><br>learner <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><br>  <span class="hljs-string">"classif.svm"</span><span class="hljs-punctuation">,</span><br>  type <span class="hljs-operator">=</span> <span class="hljs-string">"C-classification"</span><span class="hljs-punctuation">,</span><br>  kernel <span class="hljs-operator">=</span> <span class="hljs-string">"radial"</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># ps()生成自动搜索空间</span><br>search.space <span class="hljs-operator">=</span> mlr3verse<span class="hljs-operator">::</span>ps<span class="hljs-punctuation">(</span>cost <span class="hljs-operator">=</span> p_dbl<span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-built_in">gamma</span> <span class="hljs-operator">=</span> p_int<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># auto_tuner创建自动调参器</span><br><span class="hljs-comment"># 不用提供任务</span><br><br>at <span class="hljs-operator">=</span> mlr3tuning<span class="hljs-operator">::</span>auto_tuner<span class="hljs-punctuation">(</span><br>  method <span class="hljs-operator">=</span> <span class="hljs-string">"grid_search"</span><span class="hljs-punctuation">,</span><br>  learner <span class="hljs-operator">=</span> learner<span class="hljs-punctuation">,</span><br>  search_space <span class="hljs-operator">=</span> search.space<span class="hljs-punctuation">,</span><br>  resampling <span class="hljs-operator">=</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  measure <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  resolution <span class="hljs-operator">=</span> <span class="hljs-number">5</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 在全部数据上自动调参，预测新数据</span><br>at<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><br><br>dat <span class="hljs-operator">=</span> task<span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>at<span class="hljs-operator">$</span>predict_newdata<span class="hljs-punctuation">(</span>dat<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 外层采样4折交叉验证重抽样并保存模型</span><br><span class="hljs-comment"># 执行嵌套重抽样，外层循环5次，内层的超参数调参循环5次</span><br>rr <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>resample<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> at<span class="hljs-punctuation">,</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># 查看模型的平均性能</span><br>rr<span class="hljs-operator">$</span>aggregate<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 默认classif.ce</span><br>rr<span class="hljs-operator">$</span>aggregate<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 将上述步骤改为嵌套调参</span><br>rr <span class="hljs-operator">=</span> mlr3tuning<span class="hljs-operator">::</span>tune_nested<span class="hljs-punctuation">(</span><br>  method <span class="hljs-operator">=</span> <span class="hljs-string">"grid_search"</span><span class="hljs-punctuation">,</span><br>  task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">,</span><br>  learner <span class="hljs-operator">=</span> learner<span class="hljs-punctuation">,</span><br>  search_space <span class="hljs-operator">=</span> search.space<span class="hljs-punctuation">,</span><br>  inner_resampling <span class="hljs-operator">=</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span>  <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  outer_resampling <span class="hljs-operator">=</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  measure <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  resolution <span class="hljs-operator">=</span> <span class="hljs-number">5</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看模型的平均性能</span><br>rr<span class="hljs-operator">$</span>aggregate<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 默认classif.ce</span><br>rr<span class="hljs-operator">$</span>aggregate<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment"># 查看每次的</span><br>rr<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 部分参数间具有依赖关系，需要进行声明</span><br>search.space <span class="hljs-operator">=</span> mlr3verse<span class="hljs-operator">::</span>ps<span class="hljs-punctuation">(</span><br>  cost <span class="hljs-operator">=</span> p_dbl<span class="hljs-punctuation">(</span><span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> trafo <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">exp</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  kernel <span class="hljs-operator">=</span> p_fct<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"polynomial"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"radial"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  degree <span class="hljs-operator">=</span> p_int<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> depends <span class="hljs-operator">=</span> kernel <span class="hljs-operator">==</span> <span class="hljs-string">"polynomial"</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="正则化回归"><a href="#正则化回归" class="headerlink" title="正则化回归"></a>正则化回归</h2><h3 id="加载需要的包-1"><a href="#加载需要的包-1" class="headerlink" title="加载需要的包"></a>加载需要的包</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs {r}">library(tidyverse)<br>library(mlr3verse)<br>library(mlr3pipelines)<br>library(ggthemes)<br>library(ggplot2)<br></code></pre></td></tr></tbody></table></figure><h3 id="为什么使用正则化回归"><a href="#为什么使用正则化回归" class="headerlink" title="为什么使用正则化回归"></a>为什么使用正则化回归</h3><p>多元线性回归时，部分变量之间存在多重共线性，剔除某个变量后回归系数会变化很大，得到的回归模型是“伪回归”，这时候就需要岭回归、Lasso回归或者是弹性网回归，这些方法都是基于一种正则化技术，可以减少过拟合。</p><h3 id="岭回归"><a href="#岭回归" class="headerlink" title="岭回归"></a>岭回归</h3><p>岭回归是一种改良后的最小二乘法，通过放弃最小二乘法的无偏性，损失部分信息、降低部分精度为代价，得到更符合实际、更可靠的回归方法。</p><p><strong>需要注意的是岭回归中自变量的量纲对模型的影响非常大，因此需要对自变量进行标准化，保证所有自变量都是一个量纲上。</strong></p><p>岭回归的最佳系数是通过梯度下降法优化得到的。</p><h3 id="Lasso回归"><a href="#Lasso回归" class="headerlink" title="Lasso回归"></a>Lasso回归</h3><p>Lasso回归和岭回归的差异在于惩罚项不同。</p><h3 id="弹性网回归"><a href="#弹性网回归" class="headerlink" title="弹性网回归"></a>弹性网回归</h3><p>弹性网回归是岭回归和Lasso回归的整合。</p><h3 id="mlr3案例"><a href="#mlr3案例" class="headerlink" title="mlr3案例"></a>mlr3案例</h3><p>mlr3调用glmnet包实现正则化回归。有两个学习器：</p><ul><li>regr.glmnet：调用glmnet::glmnet()</li><li>regr.cv_glmnet：调用glmnet::cv.glmnet</li></ul><p>两个函数的基本用法为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs {r}">glmnet::glmnet(x,y,family,alpha,lambda = NULL)<br>glmnet::cv.glmnet(x,y,family,alpha,lambda = NULL)<br></code></pre></td></tr></tbody></table></figure><p>其中：</p><ul><li>x：自变量</li><li>y：因变量</li><li>family：因变量的类型，默认是gaussian，还可以是binomial、poisson、multinomial、cox、mgaussian</li><li>alpha：弹性网混合系数，0为岭回归，1为Lasso回归，介于0和1之间的是弹性网回归</li><li>lambda：惩罚度的超参数</li></ul><p>二者的区别在于cv.glmnet已经的带有交叉验证对lambda调参，自动选择最优的lambda.</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 使用自带的任务</span><br>boston <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"boston_housing"</span><span class="hljs-punctuation">)</span><br><br>glimpse<span class="hljs-punctuation">(</span>boston<span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># glmnet不能直接处理因子型变量</span><br><span class="hljs-comment"># town水平过于分散，采用效应编码</span><br><span class="hljs-comment"># chas是两因子水平，处理成虚拟变量</span><br><br>prep <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"encode"</span><span class="hljs-punctuation">,</span> <br>                         method <span class="hljs-operator">=</span> <span class="hljs-string">"treatment"</span><span class="hljs-punctuation">,</span><br>                         affect_columns <span class="hljs-operator">=</span> selector_name<span class="hljs-punctuation">(</span><span class="hljs-string">"chas"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;&gt;%</span><br>  mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"encodeimpact"</span><span class="hljs-punctuation">,</span><br>                    affect_columns <span class="hljs-operator">=</span> selector_name<span class="hljs-punctuation">(</span><span class="hljs-string">"town"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>boston <span class="hljs-operator">=</span> prep<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>boston<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-comment"># 这一步的训练相当于对数据进行处理</span><br><br><span class="hljs-comment"># 分层抽样划分训练集和测试集</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>split <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>partition<span class="hljs-punctuation">(</span>boston<span class="hljs-punctuation">,</span> ratio <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 选择学习器</span><br>learner <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.glmnet"</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>learner<br><br><span class="hljs-comment"># 查看学习器的所有超参数及其默认值</span><br>learner<span class="hljs-operator">$</span>param_set<br><br><span class="hljs-comment"># 对lambda进行自动调参</span><br><br><span class="hljs-comment"># 设置搜索空间</span><br>search.space <span class="hljs-operator">=</span> mlr3verse<span class="hljs-operator">::</span>ps<span class="hljs-punctuation">(</span>s <span class="hljs-operator">=</span> p_dbl<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">0.001</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 自动调参器设置</span><br>at <span class="hljs-operator">=</span> mlr3tuning<span class="hljs-operator">::</span>auto_tuner<span class="hljs-punctuation">(</span><br>  method <span class="hljs-operator">=</span> <span class="hljs-string">"random_search"</span><span class="hljs-punctuation">,</span><br>  learner <span class="hljs-operator">=</span> learner<span class="hljs-punctuation">,</span><br>  resampling <span class="hljs-operator">=</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  measure <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.rmse"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  search_space <span class="hljs-operator">=</span> search.space<span class="hljs-punctuation">,</span><br>  term_evals <span class="hljs-operator">=</span> <span class="hljs-number">10</span> <span class="hljs-comment"># 计算十次后终止计算</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 启动自动调参过程</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>at<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>boston<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看最优参数</span><br>at<span class="hljs-operator">$</span>tuning_result<br><br><span class="hljs-comment"># 查看超参数变化对模型性能的影响</span><br><br>at<span class="hljs-operator">$</span>archive <span class="hljs-operator">%&gt;%</span> <br>  as.data.table<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>s<span class="hljs-punctuation">,</span> regr.rmse<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_continuous<span class="hljs-punctuation">(</span>breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 最优参数训练模型</span><br>learner<span class="hljs-operator">$</span>param_set<span class="hljs-operator">$</span>values <span class="hljs-operator">=</span> at<span class="hljs-operator">$</span>tuning_result<span class="hljs-operator">$</span>learner_param_vals<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># 或者用最优参数重新构建学习器</span><br>learner <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.glmnet"</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> s <span class="hljs-operator">=</span> at<span class="hljs-operator">$</span>tuning_result<span class="hljs-operator">$</span>s<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 在训练集上训练模型</span><br>learner<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>boston<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘图</span><br>mlr3viz<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>learner<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取岭回归系数</span><br><br>model <span class="hljs-operator">=</span> learner<span class="hljs-operator">$</span>model<br>coef<span class="hljs-punctuation">(</span>model<span class="hljs-punctuation">,</span> s <span class="hljs-operator">=</span> at<span class="hljs-operator">$</span>tuning_result<span class="hljs-operator">$</span>s<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 模型绘图</span><br><span class="hljs-comment"># 可以看出随着lambda增大，越来越多的指标系数逼近于0</span><br>plot<span class="hljs-punctuation">(</span>model<span class="hljs-punctuation">,</span> xvar <span class="hljs-operator">=</span> <span class="hljs-string">"lambda"</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 模型预测</span><br>predict <span class="hljs-operator">=</span> learner<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>boston<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span><br><br>predict<br><br><span class="hljs-comment"># 模型评估</span><br>predict<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.rmse"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 均方根误差</span><br>predict<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"regr.rsq"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># R2</span><br><br><span class="hljs-comment"># 预测新数据</span><br>new.data <span class="hljs-operator">=</span> boston<span class="hljs-operator">$</span>data<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>learner<span class="hljs-operator">$</span>predict_newdata<span class="hljs-punctuation">(</span>new.data<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>其余两种正则化回归的调参过程类似。</p><p>弹性网回归时，超参数调参需要加一个参数：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">search.space <span class="hljs-operator">=</span> mlr3verse<span class="hljs-operator">::</span>ps<span class="hljs-punctuation">(</span>s <span class="hljs-operator">=</span> p_dbl<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">0.001</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                             alpha <span class="hljs-operator">=</span> p_dbl<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="Logistic回归"><a href="#Logistic回归" class="headerlink" title="Logistic回归"></a>Logistic回归</h2><h3 id="加载需要的包-2"><a href="#加载需要的包-2" class="headerlink" title="加载需要的包"></a>加载需要的包</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs {r}">library(tidyverse)<br>library(mlr3verse)<br>library(mlr3pipelines)<br>library(ggthemes)<br>library(ggplot2)<br></code></pre></td></tr></tbody></table></figure><h3 id="广义线性模型"><a href="#广义线性模型" class="headerlink" title="广义线性模型"></a>广义线性模型</h3><p>线性回归要求因变量服从正态分布，但是实际情况下因变量可能是类别型、计数型等，因此需要将线性回归推广到广义线性模型。</p><p>广义线性模型相当于一个复合函数，先做线性回归，再接一个变换，变换后得到的就是非正态的因变量数据。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230211195950010.png" alt="image-20230211195950010" style="zoom:50%;"></p><p>这个过程应该是反过来理解，完成这个变换的函数叫做链接函数。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230211200548869.png" alt="image-20230211200548869" style="zoom:50%;"></p><h3 id="mlr3案例-1"><a href="#mlr3案例-1" class="headerlink" title="mlr3案例"></a>mlr3案例</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 创建损失矩阵</span><br>costs <span class="hljs-operator">=</span> matrix<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">0.35</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nrow <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">dimnames</span><span class="hljs-punctuation">(</span>costs<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>response <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"good"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"bad"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                       truth <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"good"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"bad"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>costs<br><br><span class="hljs-comment"># 选择自带任务</span><br>task <span class="hljs-operator">=</span>  mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"german_credit"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 选择学习器</span><br>learner <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.log_reg"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看学习器参数</span><br><span class="hljs-comment"># 该处没有参数需要超参数调参</span><br>learner<span class="hljs-operator">$</span>param_set<span class="hljs-operator">$</span>ids<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 划分数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>split <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>partition<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> ratio <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 训练模型</span><br>learner<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取回归系数</span><br>coef<span class="hljs-punctuation">(</span>learner<span class="hljs-operator">$</span>model<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 预测</span><br>prediction <span class="hljs-operator">=</span> learner<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span><br>prediction<br><br><span class="hljs-comment"># 提取混淆矩阵</span><br>prediction<span class="hljs-operator">$</span>confusion<br><br><span class="hljs-comment"># 查看准确率</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 召回率</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.recall"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算银行的代价</span><br><span class="hljs-comment"># 负值表示银行会赚钱</span><br><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>prediction<span class="hljs-operator">$</span>confusion <span class="hljs-operator">*</span> costs<span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> ave.cost<br>ave.cost<br><span class="hljs-comment"># 假设每人贷款20000，贷给10000个人，银行的收益为：</span><br>ave.cost <span class="hljs-operator">*</span> <span class="hljs-number">20000</span> <span class="hljs-operator">*</span> <span class="hljs-number">10000</span> <span class="hljs-operator">*</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span> <span class="hljs-comment"># -1将收益表示为银行赚的钱</span><br><br><span class="hljs-comment"># 上述方式是使用0.5作为阈值，但是不一定是最佳值</span><br><span class="hljs-comment"># 使用“代价-敏感”方式对模型进行评估</span><br>cost.msr <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.costs"</span><span class="hljs-punctuation">,</span> costs <span class="hljs-operator">=</span> costs<span class="hljs-punctuation">)</span><br>prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>cost.msr<span class="hljs-punctuation">,</span> task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 将学习器的预测方式变为概率</span><br>learner<span class="hljs-operator">$</span>predict_type <span class="hljs-operator">=</span> <span class="hljs-string">"prob"</span><br>learner<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br>prediction <span class="hljs-operator">=</span> learner<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span><br><br>prediction<br><br><span class="hljs-comment"># 绘图</span><br>mlr3viz<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>prediction<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"roc"</span><span class="hljs-punctuation">)</span><br><br>mlr3viz<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>prediction<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"prc"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘制二分类校准曲线</span><br>prediction <span class="hljs-operator">%&gt;%</span> <br>  as.data.table<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>bins <span class="hljs-operator">=</span> cut<span class="hljs-punctuation">(</span>prob.good<span class="hljs-punctuation">,</span> breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>bins<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>summarise<span class="hljs-punctuation">(</span>p.pred <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>prob.good<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                   p.true <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>truth <span class="hljs-operator">==</span> <span class="hljs-string">"good"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>p.pred<span class="hljs-punctuation">,</span> p.true<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_segment<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> xend <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">"dashed"</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_line<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>  <br><span class="hljs-comment"># 手动调节阈值参数</span><br><span class="hljs-comment"># 自定义函数</span><br>with.threshod <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>th<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>  prediction<span class="hljs-operator">$</span>set_threshold<span class="hljs-punctuation">(</span>th<span class="hljs-punctuation">)</span><br>  prediction<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>measures <span class="hljs-operator">=</span> cost.msr<span class="hljs-punctuation">,</span> task <span class="hljs-operator">=</span> task<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br><span class="hljs-comment"># 测试</span><br>with.threshod<span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><br>with.threshod<span class="hljs-punctuation">(</span><span class="hljs-number">0.75</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 将不同阈值的代价函数传递给optimize()函数，在[0.5,1]之间找到最小值</span><br>best <span class="hljs-operator">=</span> optimize<span class="hljs-punctuation">(</span>with.threshod<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>best<br></code></pre></td></tr></tbody></table></figure><h2 id="KNN"><a href="#KNN" class="headerlink" title="KNN"></a>KNN</h2><h3 id="加载需要的包-3"><a href="#加载需要的包-3" class="headerlink" title="加载需要的包"></a>加载需要的包</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs {r}">library(tidyverse)<br>library(mlr3verse)<br>library(mlr3pipelines)<br>library(ggthemes)<br>library(ggplot2)<br></code></pre></td></tr></tbody></table></figure><h3 id="如何理解KNN"><a href="#如何理解KNN" class="headerlink" title="如何理解KNN"></a>如何理解KNN</h3><p>简单理解为<strong>近朱者赤近墨者黑</strong>。</p><p>KNN和聚类分析的区别在于KNN是有因变量的，聚类分析没有因变量，属于无监督学习。</p><p>KNN最重要的参数是K. 距离方法也可以进行超参数调参选择最优的距离计算方法。</p><p>常用的距离算法有：</p><ul><li>欧氏距离：两点之间直线距离的推广，相当于直角三角形的斜边长度。</li><li>曼哈顿距离：相当于两个直角边的和。</li><li>余弦相似度：两个向量的余弦夹角。</li><li>杰卡德相似系数：两个集合交集与并集的元素个数之比。</li></ul><p>后面两种方法常用于文本挖掘和推荐算法。</p><p><strong>philentropy</strong>这个包可以实现46种距离的计算。</p><h3 id="如何确定最佳K值"><a href="#如何确定最佳K值" class="headerlink" title="如何确定最佳K值"></a>如何确定最佳K值</h3><ul><li>交叉验证法：不同的K值进行m折交叉验证。</li><li>近邻样本加权：如果已知样本距离未知样本距离较远，则需要进行加权处理。</li></ul><h3 id="mlr3实例"><a href="#mlr3实例" class="headerlink" title="mlr3实例"></a>mlr3实例</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs {r}"># 读取数据<br>dat = readxl::read_excel("../data/Knowledge.xlsx") %&gt;% <br>  dplyr::mutate(UNS = as.factor(UNS))<br><br>table(dat$UNS)<br><br># 创建任务<br>task = mlr3::as_task_classif(dat, target = "UNS")<br>task<br><br># 绘图<br>mlr3viz::autoplot(task,  type = "pairs")<br><br># 划分数据<br>set.seed(123)<br>split = mlr3::partition(task, ratio = 0.7)<br><br># 选择学习器<br>learner = mlr3::lrn("classif.kknn",<br>                    predict_type = "prob",<br>                    kernel = "rectangular",<br>                    scale = FALSE)<br><br>learner<br># 查看学习器超参数<br>learner$param_set<br><br># 正对K和距离进行调参<br>search.space = mlr3verse::ps(<br>  k = p_int(lower = 2, upper = 15),<br>  distance = p_int(lower = 1, upper = 2) # 1是欧式距离，2是曼哈顿距离<br>)<br><br>at = mlr3verse::auto_tuner(<br>  method = "grid_search", # 随机搜索<br>  learner = learner,<br>  resampling = rsmp("cv", folds = 10),<br>  measure = msr("classif.acc"),<br>  search_space = search.space,<br>  term_evals = 10<br>)<br><br># 开始训练<br>at$train(task, row_ids = split$train)<br><br># 查看最优参数<br>at$tuning_result<br><br># 自动绘图<br>mlr3viz::autoplot(at$tuning_instance, type = "performance") +<br>  pac4xiang::mytheme()<br><br>mlr3viz::autoplot(at$tuning_instance, type = "points") +<br>  pac4xiang::mytheme()<br><br># 手动展示调参结果<br>at$archive %&gt;% <br>  as.data.table() %&gt;% <br>  dplyr::select(k, distance, classif.acc) %&gt;% <br>  dplyr::arrange(-classif.acc) %&gt;% <br>  dplyr::slice(1:5)<br><br># 对k进行不均匀调参，加入对数-指数变换，同时再对kernel进行调参<br>search.space = mlr3verse::ps(<br>  # 必须保证k是整数<br>  k = p_dbl(lower = log(3), upper = log(30), trafo = function(x)round(exp(x))),<br>  distance = p_int(lower = 1, upper = 2), # 1是欧式距离，2是曼哈顿距离<br>  kernel = p_fct(c("rectangular", "triangular", "epanechnikov", <br>                    "biweight", "triweight", "cos", "inv", "gaussian",<br>                    "rank", "optimal")) # 全选所有的kernel<br>)<br><br>at = mlr3verse::auto_tuner(<br>  method = "grid_search", # 随机搜索<br>  learner = learner,<br>  resampling = rsmp("cv", folds = 10),<br>  measure = msr("classif.acc"),<br>  search_space = search.space,<br>  term_evals = 20<br>)<br><br># 开始训练<br>at$train(task, row_ids = split$train)<br><br># 查看最优参数<br>at$tuning_result<br><br># 手动展示调参结果<br># 注意该处的K值<br>at$archive %&gt;% <br>  as.data.table() %&gt;% <br>  dplyr::select(k = x_domain_k, distance, kernel, classif.acc) %&gt;% <br>  dplyr::arrange(-classif.acc) %&gt;% <br>  dplyr::slice(1:10)<br><br># 选择最优参数更新学习器参数然后进行训练<br>learner$param_set$values = at$tuning_result$learner_param_vals[[1]]<br>learner$train(task, row_ids = split$train)<br><br># 进行预测<br>learner$predict(task, row_ids = split$test) -&gt; predi<br><br># 提取混淆矩阵<br>predi$confusion<br><br># 查看准确率<br>predi$score(msr("classif.acc"))<br></code></pre></td></tr></tbody></table></figure><p>回归的过程类似。</p><h2 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h2><h3 id="加载需要的包-4"><a href="#加载需要的包-4" class="headerlink" title="加载需要的包"></a>加载需要的包</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs {r}">library(tidyverse)<br>library(mlr3verse)<br>library(mlr3pipelines)<br>library(ggthemes)<br>library(ggplot2)<br></code></pre></td></tr></tbody></table></figure><h3 id="关于集成学习"><a href="#关于集成学习" class="headerlink" title="关于集成学习"></a>关于集成学习</h3><p>集成学习就是通过构建多个基学习器，按一定的策略结合成强学习器完成学习任务。</p><h3 id="装袋法"><a href="#装袋法" class="headerlink" title="装袋法"></a>装袋法</h3><p>装袋法采用的是并行机制，基学习器之间没有先后顺序，可以同时进行。装袋法采用的是有放回的抽样方法。</p><p>装袋法的代表算法是随机森林。</p><h3 id="提升法"><a href="#提升法" class="headerlink" title="提升法"></a>提升法</h3><p>提升法采用的是串行机制，基学习器之间存在依赖关系，按顺序进行训练。该算法主要关注降低偏差，每次迭代都关注训练过程中错误的样本，将弱学习器提升为强学习器。</p><p>代表算法有AdaBoost、GBDT、XGboost、LightGBM和catBoost等。</p><h3 id="堆叠法"><a href="#堆叠法" class="headerlink" title="堆叠法"></a>堆叠法</h3><p>堆叠法采用的是分阶段机制，将若干基模型的输出作为输入，再接一层主学习器，得到最终的预测。</p><h3 id="随机森林原理"><a href="#随机森林原理" class="headerlink" title="随机森林原理"></a>随机森林原理</h3><p>决策树是很弱的分类器，效果一般，但是将多个若学习器通过集成学习技术组合到一起，就可以实现强分类器。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>不容易过拟合，无需建制</li><li>可以并行计算，单个决策树可以同时训练</li><li>可以做分类或者是回归，无需调参，就可以获得很高的分类精度</li><li>对缺失值和异常值不敏感</li><li>可以处理很多变量，无需对变量进行约减</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>树越多越稳定越准确，但是也越慢</li><li>更擅长分类，回归差一些，回归预测的范围只能在训练数据的范围内</li><li>结果不容易解释，属于“黑箱”模型</li></ul><h3 id="mlr3案例-2"><a href="#mlr3案例-2" class="headerlink" title="mlr3案例"></a>mlr3案例</h3><p>mlr3实现随机森林调用的是ranger包（<strong>要求数据不能有NA</strong>）。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 使用自带的数据集创建任务</span><br>task <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>tsk<span class="hljs-punctuation">(</span><span class="hljs-string">"pima"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看数据缺失情况</span><br>task<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 直方图插补法进行缺失值插补</span><br>po <span class="hljs-operator">=</span> mlr3pipelines<span class="hljs-operator">::</span>po<span class="hljs-punctuation">(</span><span class="hljs-string">"imputehist"</span><span class="hljs-punctuation">)</span><br><br>task.new <span class="hljs-operator">=</span> po<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><br>task.new<span class="hljs-operator">$</span>missings<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 划分数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>split <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>partition<span class="hljs-punctuation">(</span>task <span class="hljs-operator">=</span> task.new<span class="hljs-punctuation">,</span> ratio <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 选择学习器</span><br>learner <span class="hljs-operator">=</span> mlr3<span class="hljs-operator">::</span>lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.ranger"</span><span class="hljs-punctuation">,</span><br>                    importance <span class="hljs-operator">=</span> <span class="hljs-string">"impurity"</span><span class="hljs-punctuation">,</span><br>                    predict_type <span class="hljs-operator">=</span> <span class="hljs-string">"prob"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看学习器超参数</span><br>learner<span class="hljs-operator">$</span>param_set<br><br><span class="hljs-comment"># 超参数调参</span><br><span class="hljs-comment"># 对树的数量和最小节点数进行调参</span><br>search.space <span class="hljs-operator">=</span> mlr3verse<span class="hljs-operator">::</span>ps<span class="hljs-punctuation">(</span><br>  num.trees <span class="hljs-operator">=</span> p_int<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">30</span><span class="hljs-punctuation">,</span> trafo <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-number">20</span><span class="hljs-operator">*</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 步长为20</span><br>  min.node.size <span class="hljs-operator">=</span> p_int<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br>at <span class="hljs-operator">=</span> mlr3tuning<span class="hljs-operator">::</span>auto_tuner<span class="hljs-punctuation">(</span><br>  method <span class="hljs-operator">=</span> <span class="hljs-string">"random_search"</span><span class="hljs-punctuation">,</span><br>  learner <span class="hljs-operator">=</span> learner<span class="hljs-punctuation">,</span><br>  resampling <span class="hljs-operator">=</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  measure <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  search_space <span class="hljs-operator">=</span> search.space<span class="hljs-punctuation">,</span><br>  term_evals <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>  store_models <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 选练模型</span><br>at<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task.new<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取最佳参数</span><br>at<span class="hljs-operator">$</span>tuning_result<br><br><span class="hljs-comment"># 最佳参数放回到学习器</span><br>learner<span class="hljs-operator">$</span>param_set<span class="hljs-operator">$</span>values <span class="hljs-operator">=</span> at<span class="hljs-operator">$</span>tuning_result<span class="hljs-operator">$</span>learner_param_vals<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># 更新后的学习器进行训练</span><br>learner<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task.new<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 进行预测</span><br>learner<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task.new<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> predict.res<br><br><span class="hljs-comment"># 提取混淆矩阵</span><br>predict.res<span class="hljs-operator">$</span>confusion<br><br><span class="hljs-comment"># 查看准确率</span><br>predict.res<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘制ROC曲线</span><br>mlr3viz<span class="hljs-operator">::</span>autoplot<span class="hljs-punctuation">(</span>predict.res<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"roc"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水稻-水稻互作中第一个主要的locus</title>
      <link href="/article/rice-rice/"/>
      <url>/article/rice-rice/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://nph.onlinelibrary.wiley.com/doi/10.1111/nph.18778">Pélissier R, Ducasse A, Ballini E, et al. A major genetic locus in neighbours controls changes of gene expression and susceptibility in intra‐specific rice mixtures[J]. New Phytologist, 2023.</a></p></blockquote><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul><li>研究发现种内互作时，neighbor植株能够影响focal植株的生理状态，但是底层的分子响应机制还不清楚。最近的的研究发现这种互作效应能够改变植株对病原菌的敏感性，这种现象被成为NMS（Neighbour-Modulated Susceptibility）。NMS的遗传基础及其相关的分子响应机制尚未被探索。</li><li>该研究中，使用Kitaake作为focal植株，另外的280个水稻品种作为neighbor植株，以Kitaake单作为对照，探究不同neighbor植株对Kitaake生物量和对稻瘟病菌的敏感性的差异。利用GWAS方法鉴定到相关的loci。此外，基于靶向转录组学，分析了focal植株与不同neighbor植株互作时易感性降低的分子响应机制。</li><li>该研究发现控制NMS的一个主要的locus，进一步的探索发现这个locus有着特定的表达模式。</li><li>该研究还发现磷（Pi）在NMS中可能有着重要的作用。</li></ul><h2 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h2><p>Kitaake作为focal植株，分别与另外的280个水稻品种进行间作。测量的指标有两个：</p><ul><li>生物量：三周的水稻从根冠部位剪断，37℃烘到完全干燥，然后称重。</li><li>抗性：接种菌株<code>CL26</code>，然后测量单位面积病斑数量。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210135039326.png" alt="image-20230210135039326"></p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><p>主要的数据处理方法是混合线性模型计算BLUP（最佳线性无偏预测）值。</p><script type="math/tex; mode=display">Y=\mu+\gamma k+\alpha i+\epsilon ijk</script><ul><li>Y是表型，生物量或者是单位面积病斑数量</li><li>$\mu$是理论均值；</li><li>$\gamma$k是试验的固定效应；</li><li>$\alpha$i是随机的基因型效应；</li><li>$\epsilon$ijk是残差。</li></ul><p>最后利用<code>lsmeans</code>这个R包计算模型的最小二乘均值（LSmeans）。</p><h2 id="主要结果"><a href="#主要结果" class="headerlink" title="主要结果"></a>主要结果</h2><h3 id="相比较于生物量，发病情况受到neighbor植株的影响更为强烈"><a href="#相比较于生物量，发病情况受到neighbor植株的影响更为强烈" class="headerlink" title="相比较于生物量，发病情况受到neighbor植株的影响更为强烈"></a>相比较于生物量，发病情况受到neighbor植株的影响更为强烈</h3><p>从下图可以看出，不管是发病情况（A）还是生物量，Kitaake都受到neighbor植株的影响（蓝色的是单作情况）。单作条件下Kitaake单位面积病斑数是9.1个，互作情况下Kitaake单位面积病斑数量在1.2个到21.3个之间。5其中5个neighbor互作条件下Kitaake对稻瘟病的易感性增加超过2倍，35个neighbor让Kitaake的易感性降低超过2倍。单作时的平均生物量是1.31g，互作条件下的生物量从0.77g到1.68g之间不等。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210143805358.png" alt="image-20230210143805358"></p><p>进一步分析发现生物量和感病性之间没有显著的相关性：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210144534159.png" alt="image-20230210144534159" style="zoom:50%;"></p><h3 id="GWAS鉴定关键的locus"><a href="#GWAS鉴定关键的locus" class="headerlink" title="GWAS鉴定关键的locus"></a>GWAS鉴定关键的locus</h3><p>通过计算遗传力（Heritability，$H^2$）发现生物量的的遗传力（0.36）比抗性的遗传力更高（0.24）。但是没有鉴定到与生物量显著相关的locus（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210144839710.png" alt="image-20230210144839710" style="zoom:50%;"></p><p>相反，鉴定到一个位于三号染色体上长度为251Kb的区域与抗性显著相关（下图），这个区域被命名为<code>NMS1</code>. </p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210145529732.png" alt="image-20230210145529732" style="zoom:50%;"></p><p>根据这个区域上SNP的类型，可以分为<em>NMS1-1</em>（70个品种）、<em>NMS1-2</em>（177个品种）和<em>NMS1-3</em>（32个品种）。与单作相比，<em>NMS1-3</em>这个单倍型的单位面积病斑数降低了20%；与另外两个单倍型相比，降低了22%. </p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210150322224.png" alt="image-20230210150322224" style="zoom: 80%;"></p><p>为了进一步验证<em>NMS1</em>能否对NM是表型进行预测，作者从Rice 3K数据库中选择42中未测试过的温带粳稻与Kitaake进行互作测试。结果发现与另外两个单倍型相比，<em>NMS1-3</em>单倍型仍然可以显著降低病害发生情况。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210150547893.png" alt="image-20230210150547893" style="zoom:50%;"></p><h3 id="互作条件下的转录变化"><a href="#互作条件下的转录变化" class="headerlink" title="互作条件下的转录变化"></a>互作条件下的转录变化</h3><p>选择92个涵盖多个生物学过程的基因进行FLUIDIGM分析（下图），发现<em>NMS1-3</em>这个单倍型的neighbor与对照可以很明显的分开，这说明<em>NMS1-1</em>这个单倍型有着更明显的作用。热图进一步的分析发现三种单倍型中与处及代谢和生长相关的基因的表达量均明显降低了。意外的是，<strong><em>OsWRKY45, OsCHI, OsPR1B, OsPOX223, OsSPL7, OsPAL, OsPBZ1</em></strong>这些防御相关的基因也在一定程度上被抑制表达了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20230210151538853.png" alt="image-20230210151538853" style="zoom: 80%;"></p><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><ul><li>NMS对生物量的影响较小；</li><li>免疫可能不是NMS唯一的驱动因素；</li><li>机械防御（胼胝质或木质素沉积）和ROS等值得进行探究；</li><li>负向的或中性的Neighbor植株应该考虑；</li><li><em>NMS1</em>区域上的基因<em>OsSPX5</em>属于<em>OsSPX</em>基因家族，这些基因调控Pi在水稻中的吸收、专化和平衡，<em>OsSPX5</em>解释NMS的原因有：<ul><li>Pi过量会增加会降低水稻的抗性；</li><li>一个Pi相关的转运子能够介导水稻的生长-防御平衡。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNA甲基化数据分析流程</title>
      <link href="/article/dnamehylation/"/>
      <url>/article/dnamehylation/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.nature.com/articles/s41477-022-01313-9">Wilkinson S W, Hannan Parker A, Muench A, et al. Long-lasting memory of jasmonic acid-dependent immunity requires DNA demethylation and ARGONAUTE1[J]. Nature Plants, 2023: 1-15.</a></p></blockquote><p>原始数据：<a href="https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP366380&amp;o=acc_s%3Aa">点击查看</a></p><h2 id="参考基因组"><a href="#参考基因组" class="headerlink" title="参考基因组"></a>参考基因组</h2><p><a href="https://plants.ensembl.org/Arabidopsis_thaliana/Info/Index">Ensembl Plants TAIR10.55</a></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>Bismark</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mamba install -c bioconda bismark<br></code></pre></td></tr></tbody></table></figure><ul><li>Bowtie2</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -c https://nchc.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.5.1/bowtie2-2.5.1-linux-x86_64.zip<br>unzip bowtie2-2.5.1-linux-x86_64.zip<br>cd bowtie2-2.5.1-linux-x86_64<br>make<br></code></pre></td></tr></tbody></table></figure><h2 id="基因组准备"><a href="#基因组准备" class="headerlink" title="基因组准备"></a>基因组准备</h2><p>甲基化的<code>C</code>在<code>Bisulfite</code>处理后不会发生变化；未发生甲基化的<code>C</code>在处理后会变为<code>U</code>，PCR扩增后会变为<code>T</code>. 因此甲基化比对时需要特定的基因组，所以需要对基因组进行转换：<code>C-&gt;T</code> 和 <code>G-&gt;A</code>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301301916249.png" alt="img" style="zoom:33%;"></p><p>DNA甲基化比对使用最广泛的比对软件是<code>Bowtie2</code>，因此选择<code>Bowtie2</code>作为比对器（不同的比对软件需要不同的index文件）：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bismark_genome_preparation --path_to_aligner ~/mambaforge/envs/tools4bioinf/bin/ --bowtie2 --parallel 60 --verbose data/genome <br></code></pre></td></tr></tbody></table></figure><p>完成转换后会在基因组数据路径下生成新的文件，分别是<code>C-&gt;T</code> 和 <code>G-&gt;A</code>的转换版：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">./data/genome<br>├── Bisulfite_Genome<br>│   ├── CT_conversion<br>│   │   ├── BS_CT.1.bt2<br>│   │   ├── BS_CT.2.bt2<br>│   │   ├── BS_CT.3.bt2<br>│   │   ├── BS_CT.4.bt2<br>│   │   ├── BS_CT.rev.1.bt2<br>│   │   ├── BS_CT.rev.2.bt2<br>│   │   └── genome_mfa.CT_conversion.fa<br>│   └── GA_conversion<br>│       ├── BS_GA.1.bt2<br>│       ├── BS_GA.2.bt2<br>│       ├── BS_GA.3.bt2<br>│       ├── BS_GA.4.bt2<br>│       ├── BS_GA.rev.1.bt2<br>│       ├── BS_GA.rev.2.bt2<br>│       └── genome_mfa.GA_conversion.fa<br>├── genome.fa<br>└── genome.gff3<br><br>3 directories, 16 files<br></code></pre></td></tr></tbody></table></figure><h2 id="比对"><a href="#比对" class="headerlink" title="比对"></a>比对</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bismark -p 60 --bowtie2 --genome ./data/genome/ -1 ./data/fastq/SRR18508333_1.fastq.gz -2 ./data/fastq/SRR18508333_2.fastq.gz -o ./results/2.mapping<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNA甲基化数据分析流程</title>
      <link href="/article/dnamehylation/"/>
      <url>/article/dnamehylation/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.nature.com/articles/s41477-022-01313-9">Wilkinson S W, Hannan Parker A, Muench A, et al. Long-lasting memory of jasmonic acid-dependent immunity requires DNA demethylation and ARGONAUTE1[J]. Nature Plants, 2023: 1-15.</a></p></blockquote><p>原始数据：<a href="https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP366380&amp;o=acc_s%3Aa">点击查看</a></p><h2 id="参考基因组"><a href="#参考基因组" class="headerlink" title="参考基因组"></a>参考基因组</h2><p><a href="https://plants.ensembl.org/Arabidopsis_thaliana/Info/Index">Ensembl Plants TAIR10.55</a></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>Bismark</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mamba install -c bioconda bismark<br></code></pre></td></tr></tbody></table></figure><ul><li>Bowtie2</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -c https://nchc.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.5.1/bowtie2-2.5.1-linux-x86_64.zip<br>unzip bowtie2-2.5.1-linux-x86_64.zip<br>cd bowtie2-2.5.1-linux-x86_64<br>make<br></code></pre></td></tr></tbody></table></figure><h2 id="基因组准备"><a href="#基因组准备" class="headerlink" title="基因组准备"></a>基因组准备</h2><p>甲基化的<code>C</code>在<code>Bisulfite</code>处理后不会发生变化；未发生甲基化的<code>C</code>在处理后会变为<code>U</code>，PCR扩增后会变为<code>T</code>. 因此甲基化比对时需要特定的基因组，所以需要对基因组进行转换：<code>C-&gt;T</code> 和 <code>G-&gt;A</code>.</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301301916249.png" alt="img" style="zoom:33%;"></p><p>DNA甲基化比对使用最广泛的比对软件是<code>Bowtie2</code>，因此选择<code>Bowtie2</code>作为比对器（不同的比对软件需要不同的index文件）：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bismark_genome_preparation --path_to_aligner ~/mambaforge/envs/tools4bioinf/bin/ --bowtie2 --parallel 60 --verbose data/genome <br></code></pre></td></tr></tbody></table></figure><p>完成转换后会在基因组数据路径下生成新的文件，分别是<code>C-&gt;T</code> 和 <code>G-&gt;A</code>的转换版：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">./data/genome<br>├── Bisulfite_Genome<br>│   ├── CT_conversion<br>│   │   ├── BS_CT.1.bt2<br>│   │   ├── BS_CT.2.bt2<br>│   │   ├── BS_CT.3.bt2<br>│   │   ├── BS_CT.4.bt2<br>│   │   ├── BS_CT.rev.1.bt2<br>│   │   ├── BS_CT.rev.2.bt2<br>│   │   └── genome_mfa.CT_conversion.fa<br>│   └── GA_conversion<br>│       ├── BS_GA.1.bt2<br>│       ├── BS_GA.2.bt2<br>│       ├── BS_GA.3.bt2<br>│       ├── BS_GA.4.bt2<br>│       ├── BS_GA.rev.1.bt2<br>│       ├── BS_GA.rev.2.bt2<br>│       └── genome_mfa.GA_conversion.fa<br>├── genome.fa<br>└── genome.gff3<br><br>3 directories, 16 files<br></code></pre></td></tr></tbody></table></figure><h2 id="比对"><a href="#比对" class="headerlink" title="比对"></a>比对</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bismark -p 60 --bowtie2 --genome ./data/genome/ -1 ./data/fastq/SRR18508333_1.fastq.gz -2 ./data/fastq/SRR18508333_2.fastq.gz -o ./results/2.mapping<br></code></pre></td></tr></tbody></table></figure><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">deduplicate_bismark --bam results/2.mapping/SRR18508333_1_bismark_bt2_pe.bam  <br></code></pre></td></tr></tbody></table></figure><h2 id="甲基化提取"><a href="#甲基化提取" class="headerlink" title="甲基化提取"></a>甲基化提取</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bismark_methylation_extractor --gzip --bedGraph results/2.mapping/SRR18508333_1_bismark_bt2_pe.deduplicated.bam -o results/2.mapping <br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我精读过的那些Paper</title>
      <link href="/article/paper/"/>
      <url>/article/paper/</url>
      
        <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th style="text-align:left">文献标题</th><th>一句话描述</th><th>文献解读</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://www.nature.com/articles/s41477-022-01313-9">Long-lasting memory of jasmonic acid-dependent immunity requires DNA demethylation and ARGONAUTE1</a></td><td>茉莉酸诱导的长期免疫需要甲基化的参与</td><td><a href="https://www.web4xiang.top/blog/article/JAimmunity/">点击查看</a></td></tr><tr><td style="text-align:left"><a href="https://nph.onlinelibrary.wiley.com/doi/10.1111/nph.18778">A major genetic locus in neighbours controls changes of gene expression and susceptibility in intra-specific rice mixtures</a></td><td>水稻-水稻互作诱导抗性的第一个Locus</td><td><a href="https://www.web4xiang.top/blog/article/rice-rice/">点击查看</a></td></tr><tr><td style="text-align:left"><a href="https://nph.onlinelibrary.wiley.com/doi/full/10.1111/nph.13286">Tsuda K, Somssich I E. Transcriptional networks in plant immunity[J]. New Phytologist, 2015, 206(3): 932-947.</a></td><td>植物免疫的转录调控网络</td><td><a href="https://www.web4xiang.top/blog/article/transnetplantimmunity/">点击查看</a></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td></td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>广义线性混合模型操作指南</title>
      <link href="/article/glmm/"/>
      <url>/article/glmm/</url>
      
        <content type="html"><![CDATA[<p><strong>更新版本</strong>:</p><h2 id="推荐的资料"><a href="#推荐的资料" class="headerlink" title="推荐的资料"></a>推荐的资料</h2><ul><li><a href="https://bookdown.org/roback/bookdown-BeyondMLR/ch-GLMM.html">https://bookdown.org/roback/bookdown-BeyondMLR/ch-GLMM.html</a></li><li><a href="https://m-clark.github.io/mixed-models-with-R/">https://m-clark.github.io/mixed-models-with-R/</a></li></ul><h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://peerj.com/articles/4794/">Harrison X A, Donaldson L, Correa-Cano M E, et al. A brief introduction to mixed effects modelling and multi-model inference in ecology[J]. PeerJ, 2018, 6: e4794.</a></p></blockquote><h2 id="固定效应和随机效应"><a href="#固定效应和随机效应" class="headerlink" title="固定效应和随机效应"></a>固定效应和随机效应</h2><p>案例：假设有5种动物，每种动物测量了100只（指标是体重），得到500个数据点。</p><p>代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">M1 <span class="hljs-operator">&lt;-</span> lm <span class="hljs-punctuation">(</span>mass ∼ group<span class="hljs-punctuation">)</span> <span class="hljs-comment"># 固定效应</span><br>M2 <span class="hljs-operator">&lt;-</span> lmer<span class="hljs-punctuation">(</span>mass ∼ <span class="hljs-number">1</span> <span class="hljs-operator">+</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">|</span>group<span class="hljs-punctuation">)</span> <span class="hljs-comment"># 随机效应</span><br></code></pre></td></tr></tbody></table></figure><h3 id="控制数据点之间的非独立性"><a href="#控制数据点之间的非独立性" class="headerlink" title="控制数据点之间的非独立性"></a>控制数据点之间的非独立性</h3><p>生物学数据通常是嵌套的，或者是具有层次结构的，比如多年多点多处理的重复测量数据。随机效应可以通过控制斜率或者是截距来控制这种非独立性。只拟合随机截距能够保证组件的均值是有差异的，但是得假设对一个拟合的协变量（固定效应）来说所有分组间的斜率是一样的。拟合随机截距和斜率允许预测变量的斜率根据单独的分组变量而变化。比如我们假设动物成功繁殖是其体重的一个函数，研究是说动物能否成功繁殖和其体重相关。如果有多点的采样，那么就会希望将“采样点”拟合为随机截距，然后去估计一个固定的斜率。也就是说成功繁殖“1单位”的变化在各组之间引起的变化是一样的。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">M3 <span class="hljs-operator">&lt;-</span> glmer<span class="hljs-punctuation">(</span>successful.breed ∼ body.mass <span class="hljs-operator">+</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">|</span>sample.site<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> family<span class="hljs-operator">=</span>binomial<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>如果假设不同采样点会影响到繁殖率，也就是说不同采样点之间，体重对繁殖率的影响强度是不一样的（斜率不一样），即体重每改变 1 个单位，繁殖成功率的变化在各组之间并不一致。这时候就需要随机斜率。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">M4 <span class="hljs-operator">&lt;-</span> glmer<span class="hljs-punctuation">(</span>successful.breed ∼ body.mass <span class="hljs-operator">+</span> <span class="hljs-punctuation">(</span>body.mass<span class="hljs-operator">|</span>sample.site<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> family<span class="hljs-operator">=</span>binomial<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>下面的图就分别展示了随机截距模型（A）和随机斜率且随机截距模型（B）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301251933076.png" alt="image-20230125193353811"></p><h3 id="提高参数估计的准确性"><a href="#提高参数估计的准确性" class="headerlink" title="提高参数估计的准确性"></a>提高参数估计的准确性</h3><p>随机效应模型使用来自所有分组的数据来估计分组均值整体分布的均值和方差。**假设所有均值都来自于一个共同的分布，会导致均值的估计值向着全局均值漂移。这种现象叫收缩，可以得到更小更精确的均值标准误。</p><h3 id="方差分量估计"><a href="#方差分量估计" class="headerlink" title="方差分量估计"></a>方差分量估计</h3><p>有时候组间方差是被关注的。</p><h2 id="拟合随机效应时的注意事项"><a href="#拟合随机效应时的注意事项" class="headerlink" title="拟合随机效应时的注意事项"></a>拟合随机效应时的注意事项</h2><ul><li>拟合随机截距时，至少需要5个<code>level</code>，也就是5个分组。</li><li>组间样本量差异较大时，模型很可能不稳定，尤其是随机斜率模型时。</li><li>难以评估组间方差的显著性和重要性。</li><li>随机效应的错误指定：<ul><li>未能辨别嵌套数据中由于分层引起的非独立性，如对一只鸟多个窝点的测量；</li><li>没有指定随机斜率；</li><li>在分层模型的错误 “水平 “上测试固定效应的显著性。传统的方法是<code>F</code>检验，但是呢<code>F</code>检验有缺陷，最新的标准方法是<code>likelihood ratio tests</code>，也就是似然比检验。</li></ul></li></ul><h2 id="GLMM模型的结构"><a href="#GLMM模型的结构" class="headerlink" title="GLMM模型的结构"></a>GLMM模型的结构</h2><h3 id="选择误差结构和链接函数"><a href="#选择误差结构和链接函数" class="headerlink" title="选择误差结构和链接函数"></a>选择误差结构和链接函数</h3><p>非正态的数据怎么处理：</p><ul><li>转换成正态的再进行处理；</li><li>使用GLM或者是GLMM并指定合适的误差分布和链接函数，选用的链接函数考虑到了我们的数据的（假定的）经验分布。</li></ul><p>直接的数据转换和通过链接函数得到的数据是不一样的，就是取对数的后的数和<code>logarithm</code>拟合后得到的新数据是不一样的。</p><h3 id="选择随机效应"><a href="#选择随机效应" class="headerlink" title="选择随机效应"></a>选择随机效应</h3><h4 id="交叉还是嵌套？"><a href="#交叉还是嵌套？" class="headerlink" title="交叉还是嵌套？"></a>交叉还是嵌套？</h4><p>实际数据可以根据试验设计或者是采样设计来指定随机效应。</p><hr><p><strong>下面的内容是旧的，部分描述可能不正确。</strong></p><h2 id="文献信息-1"><a href="#文献信息-1" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://www.sciencedirect.com/science/article/abs/pii/S0169534709000196">Bolker B M, Brooks M E, Clark C J, et al. Generalized linear mixed models: a practical guide for ecology and evolution[J]. Trends in ecology &amp; evolution, 2009, 24(3): 127-135.</a></p></blockquote><h2 id="关键名词"><a href="#关键名词" class="headerlink" title="关键名词"></a>关键名词</h2><ul><li>贝叶斯统计：一种统计学派或者说统计方法，特点是利用先验信息，形成先验分布，提高推断准确率。</li><li>偏差：估计值和真实值得之间的差异。</li><li>块随机效应：对组内所有个体影响一致的效应，导致群体内单一水平的相关性；</li><li>指数族：统计分布族，包括正态分布、二项分布、泊松分布、指数分布和伽马分布等。</li><li>固定效应和随机效应：固定效应和随机效应的区别就在于如何看待参数。对于固定效应来说，参数的含义是，自变量每变化一个单位，应变量平均变化多少。而对于随机效应而言，参数是服从正态分布的一个随机变量，也就是说对于两个不同的自变量的值，对应变量的影响不一定是相同的。</li></ul><h2 id="前言内容"><a href="#前言内容" class="headerlink" title="前言内容"></a>前言内容</h2><ul><li>当随机效应存在时，GLMM（Generalized linear mixed models，广义线性混合模型，广义线混模型）更适用于非正态的数据。</li><li>基础统计的一个基础是数据必须符合正态分布，而且呢基础统计想要量化的是每个变量的确切影响，也就是每个变量对目标变量的影响到底有多大。</li><li>一个很常见的随机效应：多年多点试验中的“区块”，可以理解成田间试验中的小区；个体之间的差异也可以看作随机效应。</li><li>在面对非正态分布的数据时，一种常见的取巧的办法是将非正态的数据转化为正态的，比如利用非参数检验。这些方法可能会忽视掉随机因子，或者是把这些随机因子当成了固定因子。</li><li>相比较于直接把数据丢进基础统计这个大框中，研究人员更应该考虑并选择合适的统计方法来满足他们的数据需求。</li><li>GLMM融合了LMM和GLM两种模型的优势：LMM模型考虑了随机效应；GLM使用链接函数和指数族来处理非正态分布的数据。</li><li>GLMM是处理非正态分布的最佳工具，在使用时只需要指定随机效应的分布、链接函数和结构。</li></ul><h2 id="估计Estimation"><a href="#估计Estimation" class="headerlink" title="估计Estimation"></a>估计Estimation</h2><p>对大多数的统计分析来说，估计模型的参数是很重要的一步。对GLMM，主要的参数有两个：</p><ul><li>固定效应参数：协变量的影响，处理和互作之间的差异。</li><li>随机效应参数：随机效应的标准差。</li></ul><p>当前的大都数GLMM工具都是利用最大似然法（Maximun Likelihood,ML）来估计这些参数的。如果，试验设计的时候的均衡的，响应变量是正态的，所有的处理都有一样的样品量，所有的随机效应都是嵌套效应，那么这时候用ANOVA计算得到的参数和ML计算得到的参数是一致的。但是对于更复杂的LMM或者是GLMM，就没有那么简单了：要找到ML的估计值，就需要对随机效应所有的ML估计值进行整合，这种方法呢就比较慢，而且当数据量大的时候，可能会计算不了。</p><p>为了解决这些问题，统计学家开发出伪似然等方法来估计GLMM的参数。需要区分标准的最大似然法（假定固定效应的估计值是准确无误的，然后去估计随机效应的标准差）和有限的最大似然法（REML）（对固定效应中的某些不确定进行平均化）。在数据集不是很大的时候，ML会低估随机效应的标准差；但是对于具有不同固定效应的模型，ML更有用。</p><p>penalized quasilikelihood（PQL）是最简单的，也是使用最广泛的。但是当司机效应的标准差过大时，PQL会得到有偏的参数，尤其是在处理二进制数据时。Poisso分布数据的平均Counts小于5或者是二进制数据中成功/失败的平均期望值小于5时，PQL的表现会比较差，但是还是有很多研究使用PQL。</p><p>Laplace approximation是比PQL更好一些的方法，其结果接近于真实的ML估计值。Gauss-Hermite quadrature的准确度更高，但是速度比Laplace approximation慢一些；当随机因子超过2各时，就不太适用了。</p><p>除此之外，还有基于贝叶斯框架的MCMC方法。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301251415887.png" alt="image-20230125141517699"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301251505694.png" alt="image-20230125150539592"></p><h2 id="推断Inference"><a href="#推断Inference" class="headerlink" title="推断Inference"></a>推断Inference</h2><p>完成第一步的参数估计后，下一步就是进行统计推断。也就是：通过评估估计值及其置信区间、比较并选择最佳模型，从而得到统计学和生物学上的结论。常见的推断有三种：</p><ul><li>假设检验：频率学派的假设检验来检验统计量，通过<em>p</em>值得判断是否拒绝零假设，如ANOVA中的F检验。</li><li>模型比较：通过假设检验进行比较，比如比较简单的嵌套模型和更复杂的模型；或者是使用信息论 的方法，即使用预期预测能力的度量来对模型进行排名或对其预测进行平均。</li><li>贝叶斯方法</li></ul><h3 id="假设检验"><a href="#假设检验" class="headerlink" title="假设检验"></a>假设检验</h3><p>常见的方法有Wald Z、$X^2$、t检验和F检验 。Wald Z和$X^2$只适用于没有过度离散的GLMM；Wald t 和F检验适用于过度离散的GLMM。不确定性的计算取决于残差自由度的数量，但是呢很难计算。</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>基因型与环境相互作用在拟南芥对食草动物反应中的作用（genotype-by-environment interaction in the response of Arabidopsis to herbivory）。</p><p>数据来源：</p><blockquote><p><a href="https://onlinelibrary.wiley.com/doi/full/10.1111/j.1558-5646.2007.00189.x">Banta J A, Dole J, Cruzan M B, et al. Evidence of local adaptation to coarse‐grained environmental variation in Arabidopsis thaliana[J]. Evolution: International Journal of Organic Evolution, 2007, 61(10): 2419-2432.</a></p></blockquote><p>响应变量：单株的果实数量，计数型数据，比如1株10个啊20个这种。</p><p>选择的模型是Poisson，链接函数是<code>log</code>.</p><p>有些处理中果实数量少于5个，因此呢选择<code>Laplace approximation</code>.</p><p>模型使用固定效应：<code>nutrient + clipping + nutrient × clipping</code>.</p><p>虽然植株材料来自于三大区域，但是呢考虑到采样个体不够，就忽略了群体结构。</p><p>由于残差过度离散，因此使用<code>quasi-Poisson model</code>。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301251311861.png" alt="image-20230125131134648" style="zoom:50%;"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>受胁迫植物的表观遗传记忆</title>
      <link href="/article/plantmemory/"/>
      <url>/article/plantmemory/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://www.cell.com/trends/plant-science/fulltext/S1360-1385(22">Gallusci P, Agius D R, Moschou P N, et al. Deep inside the epigenetic memories of stressed plants[J]. Trends in Plant Science, 2022.</a>00266-7?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS1360138522002667%3Fshowall%3Dtrue)</p></blockquote><h2 id="Highlights"><a href="#Highlights" class="headerlink" title="Highlights"></a>Highlights</h2><ul><li>植物“智能”背后的分子机制还不清楚，科学界对相关问题也有着激烈的讨论；</li><li>DNA甲基化、染色质重塑及RNA介导的调节等不同形式的表观遗传机制对数据感知、存储、解释及传输的贡献需要进一步阐明；</li><li>表观遗传修饰主要通过有丝分裂的方式遗传给下一代，部分可以通过减数分裂实现遗传，从而增强植物对气候变化的适应性；</li><li>对植物胁迫记忆机制的了解可以让我们定义更广泛的植物对环境变化响应的表观机制；</li><li>植物尽管没有中枢神经系统，但是呢可以通过数百分子的共同参与来实现“智能”记忆。</li></ul><h2 id="植物的激活机制"><a href="#植物的激活机制" class="headerlink" title="植物的激活机制"></a>植物的激活机制</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301231504559.png" alt="image-20230123150413077" style="zoom: 50%;"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>广义线性模型GLM学习笔记</title>
      <link href="/article/glmnote/"/>
      <url>/article/glmnote/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章：导论"><a href="#第一章：导论" class="headerlink" title="第一章：导论"></a>第一章：导论</h2><ul><li>定量变量可以叫做协变量，定性变量叫做因子。</li><li>因子需要进行数字化编码才能用在统计模型中，转换后叫做伪变量。</li><li>因子有<code>n</code>个水平时，伪变量至少需要<code>n-1</code>个。</li><li>合适的模型的标准：简单和准确。</li></ul><h2 id="第二章：线性回归模型"><a href="#第二章：线性回归模型" class="headerlink" title="第二章：线性回归模型"></a>第二章：线性回归模型</h2><h3 id="简介与回顾"><a href="#简介与回顾" class="headerlink" title="简介与回顾"></a>简介与回顾</h3><ul><li>线性回归模型是广义线性模型的一种特殊形式。</li></ul><h3 id="线性回归模型的定义"><a href="#线性回归模型的定义" class="headerlink" title="线性回归模型的定义"></a>线性回归模型的定义</h3><script type="math/tex; mode=display">\begin{cases}var[y_i] = \frac{\sigma^2}{w_i}\\\mu_i = \beta_0 + \sum_{j=1}^{p}\beta_jX_{ji}\end{cases}</script><p>在上面这个公式中：</p><ul><li>$y_i$表示的是第<code>i</code>个响应变量，也就是第<code>i</code>个因变量；</li><li>$\sigma^2$表示的是$y_i$的方差；</li><li>$w_i$表示的先验权重，是已知的，<strong>比如观测值的数量，比如100个观测值里面，30个观测值都是一样的，这时候30就可以作为先验权重</strong>，通常来说一个观测值只会出现一次，所以呢这个先验权重都是1如果出现的次数大于一次，就不再是1了；</li><li>$\beta_0$到$\beta_p$都需要从数据中进行推断，也就是未知的；</li><li><p>$\beta_o$通常被叫做截距（<code>inercept</code>），也就是当所有的自主变量都为0的适量，因变量所对应的值；$\beta_1$到$\beta_p$被称为斜率（<code>slope</code>）。</p></li><li><p>当只有一个自变量，也就是<code>p = 1</code>的时候，所得到的模型就是简单线性回归模型或者是简单回归模型；当<code>p &gt; 1</code>的时候，就是多元回归模型，或者是多元线性回归模型。</p></li><li>当所有的先验权重都等于1的时候，就叫做普通回归模型；当所有的先验权重都不全是1的时候，就叫做加权的回归模型。</li></ul><p>建模时需要满足的假设：</p><ul><li>适用性：相同的回归模型适用于所有观测值；</li><li>线性：$\mu$和所有的定量变量之间的真实关系是线性的；</li><li>独立性：响应变量<code>y</code>是恒定的。</li></ul><h3 id="简单的线性回归"><a href="#简单的线性回归" class="headerlink" title="简单的线性回归"></a>简单的线性回归</h3><h4 id="最小二乘估计"><a href="#最小二乘估计" class="headerlink" title="最小二乘估计"></a>最小二乘估计</h4><p>先看公式：</p><script type="math/tex; mode=display">\begin{cases}var[y_i] = \frac{\sigma^2}{w_i}\\\mu_i = \beta_0 + \beta_1x_{i}\end{cases}</script><p>简单线性回归的公式主要的部分是第二部分。</p><p>当我们给定一个$\beta_0$和一个$\beta_1$后，对每一个自变量，都可以得到一个模型计算后的理论观测值$\mu_i$. 既然是模型预测的，那肯定和实际的观测值有差异，我们可以用$e_i$来表示这个差异：</p><script type="math/tex; mode=display">e_i= y_i- \mu_i = y_i - \beta_0 - \beta_1x_i</script><p><strong>其实建模的过程就是找到合适的$\beta_0$和$\beta_1$，使得$e_i$最小</strong>。</p><p>为了避免有负值的出现，常见的做法是对其进行平方：</p><script type="math/tex; mode=display">S(\beta_0,\beta_1) = \sum_{i=1}^{n}w_ie_{i}^2=\sum_{i=1}^{n}w_i(y_i-\mu_i)^2=\sum_{i=1}^{n}w_i(y_i-\beta_0-\beta_1x_i)^2</script><p><strong>当S越小的时候，说明拟合的线到观测值的距离的和最小，也就是拟合得到的那根线基本可以代表自变量<code>x</code>和因变量<code>y</code>的真实关系。</strong></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301221530693.png" alt="image-20230122153029332"></p><h4 id="系数估计"><a href="#系数估计" class="headerlink" title="系数估计"></a>系数估计</h4><p>现在的问题是怎么找到最适的$\beta_0$和$\beta_1$?</p><script type="math/tex; mode=display">S(\beta_0,\beta_1) = \sum_{i=1}^{n}w_ie_{i}^2=\sum_{i=1}^{n}w_i(y_i-\mu_i)^2=\sum_{i=1}^{n}w_i(y_i-\beta_0-\beta_1x_i)^2</script><p>一个方法就是使用微积分计算得到最小的$S(\beta_0,\beta_1)$. </p><script type="math/tex; mode=display">\frac{\varphi S(\beta_0,\beta_1)}{\varphi \beta_0}=2\sum_{i=1}^{n}w_i(y_i-\mu_i)</script><script type="math/tex; mode=display">\frac{\varphi S(\beta_0,\beta_1)}{\varphi \beta_1}=2\sum_{i=1}^{n}w_ix_i(y_i-\mu_i)</script>]]></content>
      
      
      <categories>
          
          <category> 生物学信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>依赖茉莉酸的长久免疫记忆需要DNA甲基化的参与</title>
      <link href="/article/jaimmunity/"/>
      <url>/article/jaimmunity/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><blockquote><p><a href="https://www.nature.com/articles/s41477-022-01313-9">Wilkinson S W, Hannan Parker A, Muench A, et al. Long-lasting memory of jasmonic acid-dependent immunity requires DNA demethylation and ARGONAUTE1[J]. Nature Plants, 2023: 1-15.</a></p></blockquote><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2><ul><li>水杨酸（SA）参与的防御反应主要对（半）活体营养型病原菌发挥作用，茉莉酸（JA）参与的防御反应则主要是对死体营养型病原菌和草食动物发挥作用。</li><li>植物中胞嘧啶的甲基化通常叫做DNA甲基化，会发生在三种序列上：CG、CHG和CHH（H是除G 以外的其他碱基）。DN甲基化主要作用于转座元件以减少其对基因组的潜在影响。</li><li>RNA靶向的DNA甲基化（RdDM）和DNA去甲基化酶ROS1的拮抗作用共同控制TE富集区DNA甲基化的发生。</li><li>RdDM不仅和翻译后的基因沉默（PTSG）有关，还和小干扰RNA（siRNA）有关。这些siRNA来自依赖RNA聚合酶Ⅱ的转录本，将初始的DNA甲基化位点靶向未甲基化的位点。</li><li>RNA聚合酶Ⅳ也是RdDM所需要的。</li><li>近些年的研究表明RdDM和ROS1参与植物对生物胁迫的响应。</li><li>JA对植物免疫的短期影响的研究很多，但是其对植物的长期影响及其机制还不清楚。</li></ul><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><h3 id="JA的长期影响"><a href="#JA的长期影响" class="headerlink" title="JA的长期影响"></a>JA的长期影响</h3><blockquote><p>JA能够诱导植物对植食性动物的长期抗性，但是对死体营养型病原菌及半活体营养型病原菌却是长期的敏感性。简单来说就是JA诱导产生的长期抗性只对植食性动物有用，对病原菌的作用是负向的。</p></blockquote><p>试验设计是比较简单的（下图）。用1mM的茉莉酸处理2周龄的拟南芥幼苗，对照是水，这个处理用作观测诱导产生的长期抗性。一直生长到第五周，这时候开始处理短期诱导抗性分组，同样也是1mM的茉莉酸进行处理，对照同样是水。检测的指标是基因表达量。所选的基因<em>MYC2</em>和<em>VSP2</em>都是和茉莉酸紧密相关的关键基因。采样的时间点是短期处理的在喷施茉莉酸后4小时第一次采样，24小时第二次采样。长期观测处理组则是在处理后1周和3周进行采样。从基因的表达情况可以看出，茉莉酸处理后4小时和24小时，与对照相比，两个基因的表达量都显著的增强了。<em>MYC2</em>在处理后1周和3周其表达量没有法神显著的变化，<em>VSP2</em>在处理后1周其表达量与对照相比显著的增强了（图中看起来是和基线持平的），在处理后3周其表达量与对照相比其表达量没有发生显著变化。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111521366.png" alt="image-20230111152109220" style="zoom: 33%;"></p><p>上述结果似乎表明JA诱导的长期免疫没有用，至少在基因表达层面是没有差异的。那么在表型上有没有差别呢？为了验证JA诱导的短/长期免疫的表型差异，设计了如下试验（下图）。检测的对象有植食性昆虫棉叶虫（<em>Spodoptera littoralis, Sl</em>）、半活体营养型病原菌（<em>Pseudomonas syringae pv. tomato</em> DC3000，<em>Pst</em>）和死体营养型病原菌（<em>Plectosphaerella cucumerina</em>，<em>Pc</em>）。简单描述就是第五周的时候，也就是完成长期和短期处理后，分别用<em>Sl</em>、<em>Pst</em>和<em>Pc</em>处理拟南芥叶片，然后测量棉叶虫<em>Sl</em>的体重、<em>Pst</em>在叶片上的菌群数量以及<em>Pc</em>病斑直径。结果发现，不管是短期诱导还是长期诱导，棉叶虫的体重都减轻了，半活体营养型病原菌<em>Pst</em>的菌群数量都增加了。有趣的是，短期诱导时，死体营养型病原菌<em>Pc</em>的菌落直径显著变小；茉莉酸长期诱导后，死体营养型病原菌<em>Pc</em>的菌落直径却增加了。JA诱导的免疫不管是长期还是短期，其作用对植食性昆虫<em>Sl</em>的抑制作用一直存在；JA诱导的短期免疫对死体营养型病原菌<em>Pc</em>是能够正常发挥作用的，但是诱导产生的长期免疫对死体营养型病原菌<em>Pc</em>却有着相反的作用。JA信号参与的免疫过程会抑制依赖于SA的免疫作用，进而影响对（半）活体营养型病原菌的免疫反应，所以不管是JA的短期诱导还是长期诱导，其诱导的免疫对半活体营养型病原菌<em>Pst</em>的抗性均降低了。JA短期诱导的免疫和长期诱导的免疫对死体营养型病原菌<em>Pc</em>有着相反的免疫反应，<strong>这表明在拟南芥中，JA诱导的短期免疫和长期免疫有着本质差别。</strong></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111551785.png" alt="image-20230111155142715"></p><p>考虑到上述试验的处理都是外源喷施JA完成的，为了验证真实情况下JA诱导的免疫差异，便用棉叶虫<em>Sl</em>取食2周龄的拟南芥幼苗，三周后再用棉叶虫<em>Sl</em>取食拟南芥叶片、死体营养型病原菌<em>Pc</em>侵染拟南芥叶片。结果和外源喷施JA的结果一致：JA诱导的长期免疫对棉叶虫<em>Sl</em>有抑制作用，对死体营养型病原菌<em>Pc</em>的侵染具有促进作用（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111636616.png" alt="image-20230111163637520" style="zoom: 33%;"></p><h3 id="JA诱导的免疫对其他免疫途径的影响"><a href="#JA诱导的免疫对其他免疫途径的影响" class="headerlink" title="JA诱导的免疫对其他免疫途径的影响"></a>JA诱导的免疫对其他免疫途径的影响</h3><p>从第一个基因表达的结果可以看出的是，JA长期诱导后的第三周，<em>MYC2</em>和<em>VSP2</em>的表达量与对照相比没有差异，基本与基线持平。对此，作者猜测JA诱导的长期免疫之所以能够对棉叶虫<em>Sl</em>产生抗性，是由于JA诱导的长期免疫激发了依赖于JA途径的相关基因的转录表达。为此，选择依赖于MYC的抗虫相关的酸性磷酸酶基因<em>VSP2</em>进行检测。处理很简单，以水为对照利用JA处理拟南芥幼苗，然后在不同时间点进行新的处理（喷水或者是JA）。先用JA诱导过的拟南芥幼苗再遇到JA的时候，<em>VSP2</em>的表达量显著的增强。这就表明JA在拟南芥幼苗时期诱导产生的免疫能够长时间保持抗虫性。但是有趣的是，结果JA处理诱导后，在受到SA刺激时，SA免疫途径相关基因<em>PR1</em>的表达量显著的降低了；依赖于JA/ET途径的抗真菌相关基因<em>PDF1.2</em>的表达量也显著的降低了。这个结果表明JA诱导的免疫会负向调控SA途径基因<em>PR1</em>及JA/ET途径抗真菌基因<em>PDF1.2</em>的表达。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111642519.png" alt="image-20230111164243459"></p><h3 id="苗期JA处理对转录组的长期影响"><a href="#苗期JA处理对转录组的长期影响" class="headerlink" title="苗期JA处理对转录组的长期影响"></a>苗期JA处理对转录组的长期影响</h3><blockquote><p>JA诱导的长期免疫会增强植物依赖于JA信号对植食性昆虫的抗性；但是JA诱导的长期免疫会抑制依赖于SA和ET的信号通路，进而降低拟南芥对半活体型病原菌及死体型病原菌的抗性。</p></blockquote><p>为了验证JA诱导作用对转录组的长期影响，设计了和上面一样的试验：以水为对照，先用JA处理两周龄的拟南芥幼苗；到第五周时在分别用水和JA交叉喷施处理后的拟南芥幼苗，处理4小时后采样进行RNA-Seq. 从PCA和聚类的结果来看，（预）处理间有着很明显的差异。预处理和后续处理之间都有着很明显的差别。从PCA结果可以看出，JA预处理对转录组的影响比后续JA处理的影响更大。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111736957.png" alt="image-20230111173659892"></p><p>考虑到JA预处理改变了植株对死体营养型病原菌<em>Pc</em>的抗性/敏感性，作者猜测JA预处理改变了JA再次处理时的转录重编程。为此，从转录组数据中筛选出在JA预处理和二次处理之间存在显著差异的2409个基因。针对这2409个基因，进行进一步的筛选：</p><ul><li>JA诱导的长期免疫对棉叶虫<em>Sl</em>具有抗性的基因：JA二次处理后其表达量显著上调的基因（W_JA&gt;W_W）和两次JA处理后表达量高于先用水后用JA处理的基因（JA_JA&gt;W_JA）（下图左）（第三列表达量大于第一列，第四列表达量大于第三列）。一共筛选到832个基因，将这些基因进行聚类，一共可以聚为4。在这4类基因中，Ⅱ和Ⅳ类基因表现出明显的JA长期诱导免疫趋势。<em>VSP2</em>也在其中，将这些基因进行GO富集分析，显著富集的GO term包括茉莉酸相关通路、损伤相关通路及芥子油苷生物合成过程等。这些GO term均与植食性动物取食引起的免疫紧密相关。</li><li>JA诱导后对半活体营养型病原菌<em>Pst</em>抗性降低的基因：第二次JA处理后显著下调的基因（W_JA &lt; W_W）（下图中）（第三列表达量小于第一列）和两次JA处理后与单独第二次JA处理相比显著下调的基因（JA_JA&lt;W_JA）（第三列表达量大于第四列）。一共筛选到904个基因，这些基因可以聚类成三类。将这904个基因进行GO富集发分析，发现这些基因大多与水杨酸、植物类过敏性坏死反应及对细菌性病原菌的响应等GO term相关。</li><li>JA长期诱导后对死体营养型病原菌<em>Pc</em>抗性降低的基因：第二次JA处理后表达显著下调的基因（下图右）（W_JA&gt;W_W）（第三列表达量大于第一列）和两次JA处理后表达显著下调的基因（JA_JA&lt;W_JA）（第四列表达量小于第三列表达量）。一共筛选到395个基因，其中144个基因的表达模式符合要求。将这144个基因进行GO富集分析发现这些基因与水杨酸信号、茉莉酸及乙烯等信号通路相关，还有一个GO term与植物对真菌的响应显著相关。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111823065.png" alt="image-20230111182330928"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301111823532.png" alt="image-20230111182347470"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301112108039.png" alt="Honeyview_Snipaste_2023-01-11_21-08-01"></p><h3 id="JA诱导的长期抗虫性依赖于转录因子MYC2-3-4"><a href="#JA诱导的长期抗虫性依赖于转录因子MYC2-3-4" class="headerlink" title="JA诱导的长期抗虫性依赖于转录因子MYC2/3/4"></a>JA诱导的长期抗虫性依赖于转录因子MYC2/3/4</h3><blockquote><p>这么多现象，选择哪个进行下一步研究呢？那就选择结果是正向的那个吧。</p></blockquote><p>为了进一步研究JA诱导的长期免疫记忆对棉叶虫<em>Sl</em>保持抗性的转录调控机制，作者选择了203个显著差异表基因，研究其启动子区域（转录起始位点上游1000bp），期望找到与转录因子显著结合的Motif。结果发现显著富集到的Motif大多都含有典型的Motif G-box (CACGTG)。这个Motif的转录因子bHLH的结合位点，包括调控JA的转录因子MYC2/3/4. 定位到关键的转录因子，那么下一步就是验证其功能。于是便利用MYC2/3/4的三重突变体（<em>mycT</em>）与野生型进行比较，分别进行短期的JA诱导和长期的JA诱导。和之前的研究报道一致，哪怕是用水处理三重突变体，棉叶虫的体重与野生型相比均显著增加了，不管是长期诱导还是短期诱导。产生这个结果的一个原因是三重突变体的基础免疫系统被破坏。对野生型植株而言，JA处理后，不管是长期还是短期，棉叶虫<em>Sl</em>的体重均降低了，这说明JA能够诱导野生型植株对棉叶虫<em>Sl</em>的抗性。JA处理对三重突变体均无显著影响，不论是长期还是短期，这表明MYC2/3/4在JA诱导拟南芥植株对棉叶虫<em>Sl</em>的抗性过程中有着至关重要的作用。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301112110454.png" alt="image-20230111211018390"></p><h3 id="JA诱导的长期抗虫性需要DNA（去）甲基化的参与"><a href="#JA诱导的长期抗虫性需要DNA（去）甲基化的参与" class="headerlink" title="JA诱导的长期抗虫性需要DNA（去）甲基化的参与"></a>JA诱导的长期抗虫性需要DNA（去）甲基化的参与</h3><p>幼苗期的拟南芥对棉叶虫<em>Sl</em>是没有抗性的，但是JA处理后3周却产生了抗性，这表明这其中存在一种自我存续的抗性信号，通过细胞分裂的方式传递到新形成的叶片中。在细胞分裂过程中会发生DNA甲基化的变化。先前的研究表明转座元件DNA甲基化的改变能够调控防御相关基因的表达。在拟南芥中，RdDM和DNA去甲基化酶ROS1的拮抗作用共同调控转座元件的DNA甲基化。于是，作者就想探究下这个调节系统是否也参与了JA诱导的短期和长期抗虫性。同样是利用突变体，RdDM突变体是<em>nrpe1-11</em>，ROS1突变体是<em>ros1-4</em>. 短期诱导处理的代码是<strong>PT</strong>，长期诱导处理的代码是<strong>ST</strong>。短期诱导的时，突变体和野生型基本是持平的，也就是说棉叶虫<em>Sl</em>不管是吃的野生型植株叶片还是突变体植株的叶片，都没有差异；但是可以看到的是，JA处理与对照相比是有显著的差异的（PT <em>P</em>=0.000）。再看长期诱导，野生型植株在处理前后是有显著差异的，但是两个突变体在处理前后都没有显著的差异了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301120950320.png" alt="image-20230112095058107"></p><p>为了进一步探究两个基因突变后对JA长期诱导抗性的影响，作者设计了双向选择试验，也就是将2周六的拟南芥幼苗进行处理，3周后让棉叶虫<em>Sl</em>自由选择吃JA长期诱导后的叶片和对照水处理的叶片。结果发现只有野生型植株在JA长期诱导后具有显著的差异。<strong>这个结果和上面的结果共同说明RdDM和ROS1两者很可能都参与了JA诱导的对棉叶虫<em>Sl</em>的长期抗性。</strong></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301121037445.png" alt="image-20230112103710393" style="zoom:33%;"></p><h3 id="JA诱导的长期免疫与吲哚硫代葡萄糖苷的ROS1依赖性有关"><a href="#JA诱导的长期免疫与吲哚硫代葡萄糖苷的ROS1依赖性有关" class="headerlink" title="JA诱导的长期免疫与吲哚硫代葡萄糖苷的ROS1依赖性有关"></a>JA诱导的长期免疫与吲哚硫代葡萄糖苷的ROS1依赖性有关</h3><p>在转录组中鉴定到与JA诱导的对棉叶虫<em>Sl</em>长期抗性相关的203个基因，这203个基因的GO富集分析发现这些基因调控硫代葡萄糖苷的生物合成。再结合上一步发现的DNA甲基化和去甲基化调控JA诱导的长期免疫，作者们就猜想由表观遗传调控的硫代葡萄糖苷池的组成和大小影响了JA诱导的长期免疫。于是呢就用HPLC–QqQ检测JA长期诱导后野生型和突变体<em>ros1-4</em>中硫代葡萄糖苷的含量差异。结果发现JA由奥的长期免疫过程中硫代葡萄糖苷的组成会受到显著影响，尤其是吲哚硫代葡萄糖苷(IGs)的浓度。野生型植株在JA处理后，IGs的主要成分芸苔葡糖硫苷（I3M）及其下游的衍生物新芸苔苷（NMOI3M）的含量显著升高；但是呢IG 4 -甲氧基葡萄糖苷酶（4MOI3M）的含量显著下降了。在突变体<em>ros1-4</em>中，IGs的数量减少，其中I3M和NMOI3M含量降低，4MOI3Ｍ甚至都检测不到了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301121129581.png" alt="image-20230112112933441"></p><h3 id="JA诱导的长期免疫的特征"><a href="#JA诱导的长期免疫的特征" class="headerlink" title="JA诱导的长期免疫的特征"></a>JA诱导的长期免疫的特征</h3><blockquote><p>JA诱导的长期免疫的特征是：转座元件上的发生的可变的低度DANA甲基化。</p></blockquote><p>既然利用突变体发现JA诱导的长期免疫和DNA甲基化相关，那就来个全基因组测序（全基因组亚硫酸氢盐测序，whole-genome bisulfite sequencing，WGBS）。结果发现JA处理后，和对照相比所有的DNA甲基化组分都有降低的趋势，但是没有达到显著水平。从PCA的结果也看不出很明显的差异。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131029963.png" alt="image-20230113102940888"></p><p>是不是就没有差异，无法往下分析了呢？作者对全局的DNA甲基化进行PCA分析，没有呈现出很好的聚类效果，然后再进行聚类分析。在聚类分析的结果中，全局的DNA甲基是有着明显的聚类差异的，CHG和CHH两种DNA甲基化也是有明显的聚类差异的，CG类型的DNA甲基化没有明显的差异。从这两种分析的结果来看，JA处理后的DNA甲基化与对照相比是有差异的。非CG的DNA甲基化主要发生在转座子序列上，因此作者猜测JA诱导后改变的DNA甲基化主要发生在转座子序列上。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131031759.png" alt="image-20230113103150693"></p><p>考虑到在PCA结果，JA处理的三个样本间聚类效果较差，作者就用JA处理后的三个样本分别与对照的三个样本进行比较，比如将JA.1与三个对照进行比较。这样分析的话不但可以找到与对照有差异的差异甲基化区域（DMR），还可以找出JA处理的三个重复之间的DMR。分别鉴定到325、291和260个DMR。这些DMR虽然都是比较短的序列，但是呢这些序列都富含胞嘧啶，也展示出DNA甲基化的实质性变化。从整体上来看，这些差异的甲基化区域大多是CHH和CHG，很少是CG类型的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131050624.png" alt="image-20230113105024486"></p><h3 id="JA诱导的长期免疫的差异基因的DMR"><a href="#JA诱导的长期免疫的差异基因的DMR" class="headerlink" title="JA诱导的长期免疫的差异基因的DMR"></a>JA诱导的长期免疫的差异基因的DMR</h3><blockquote><p>长期 JA-IR 与差异表达防御基因启动子内的顺式作用 DMR 无关</p></blockquote><p>基因启动子区域的DNA甲基化能够影响转录因子与基因启动子区域Motif的结合。从WGBS的结果可以看出JA处理的三个重复之间存在差异，那么这些DMR会不会集中在启动子区域上的某个共性区域上呢？<code>all-C</code>分组中，发现位于1号染色体的两个consensus DMR，但是呢没有在基因的启动子区域上；将距离从100bp增加到500bp也没有发现新的DMRs。在CG和CHG分组中没有发现consensus DMRs。在CHH分组中，当距离为100bp时间，鉴定到10个consensus DMRs；当距离是500bp时，有25个consensus DMRs被鉴定到。也偶部分consensus DMRs位于基因的启动子区域内，但是呢这些基因都不是转录组中的差异基因。由此，<strong>作者们认为RdDM和ROS1在JA诱导产生的长期抗性过程中的作用不是通过调控依赖于MYC2/3/4的防御基因的启动子区域的顺势作用DMRs来实现的</strong>。</p><h3 id="JA长期处理诱导-ATREP2-转座元件家族特异性的长期低甲基化"><a href="#JA长期处理诱导-ATREP2-转座元件家族特异性的长期低甲基化" class="headerlink" title="JA长期处理诱导 ATREP2 转座元件家族特异性的长期低甲基化"></a>JA长期处理诱导 <em>ATREP2</em> 转座元件家族特异性的长期低甲基化</h3><p>最近的研究发现转座元件的DNA低甲基化能够通过反式调控机制影响防御基因的表达。反式激活的机制很多，如源自转座子的siRNA. 但是在JA诱导的长期免疫中，低甲基化的转座元件不太可能产生反式调控的siRNA，因为JA处理后，只有很少的consensus DMRs被鉴定到。同一家族或者相关家族的转座元件具有高度的同源性，作者们就假设同一个分类家族的不同转座元件具有相似的反式激活活性。说干就干，先把数据中在JA处理后显著富集的转座元件（超）家族找出来。果然，找到一个关键的转座元件<em>ATREP2</em>，属于<em>Helitron</em>转座元件家族。这个转座元件在JA处理的三个样本中都被显著富集到。除<em>ATREP2</em>外，JA诱导后，还有一些其他的转座元件家族被富集到（很弱的富集），但是呢没有像<em>ATREP2</em>那样被显著富集到，富集倍数也比较低，在三个重复之间也没有一致性。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131410881.png" alt="image-20230113141047763"></p><p>进一步发现<em>ATREP2</em> DMRs中的大多数都发生了低甲基化，并且分布在所有染色体上。<strong>但是在差异表达基因附近，没有发现<em>ATREP2</em> DMRs</strong>。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131416124.png" alt="image-20230113141646981"></p><p>在CG和CHG分组中，JA诱导后富集到的DMRs是LTR反转录转座子的Gypsy超家族。但是呢处于显著富集阈值附近，也么有翻译成特定的TE家族（不是很理解这句话）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131428451.png" alt="image-20230113142851354" style="zoom: 33%;"></p><p>因此，尽管DNA低甲基化存在着变异（差异），但是呢JA诱导的DNA甲基化始终靶向<em>ATREP2</em>家族的转座元件。 结合前面的MYC2/3/4被诱导表达，以及RdDM和ROS1在甲基化中的核心功能，作者认为他们的WGBS结果表明<em>ATREP2</em> TE家族成员的随机低甲基化通过反式作用机制诱导和/或启动JA依赖的防御基因的表达。</p><h3 id="RdDM调控ATREP2转座子的DNA甲基化"><a href="#RdDM调控ATREP2转座子的DNA甲基化" class="headerlink" title="RdDM调控ATREP2转座子的DNA甲基化"></a>RdDM调控<em>ATREP2</em>转座子的DNA甲基化</h3><p>既然都定位到了<em>ATREP2</em>转座元件家族受DNA甲基化的影响，那么下一步就是探究其中的调控机制。先前的研究根据依赖ROS1的去甲基化的拮抗程度对拟南芥RdDM靶位点的进行了分类。通过比较分析这些数据发现164个<em>ATREP2</em>转座元件家族成员中的25个和之前鉴定的RdDM位点重合。但是呢这个研究中鉴定到的受JA诱导调控的大部分DMRs与RdDM的位点并不吻合。先前的研究结果发现JA诱导的长期抗性依赖于RdDM和ROS1，而且JA处理对CHH类型的甲基化有着很明显的影响。现在却发现受JA诱导处理的DMRs却和RdDM的位点无法对应上，<strong>这是令人感到惊讶的</strong>。这个时候怎么办呢？直接对突变体进行甲基化测序，分别测了野生型、RdDM突变体<em>nrpe1-11</em>和ROS1突变体<em>ros1-4</em>. 选择三个大小差不多的转座子家族进行比较，即具有164个成员的<em>ATREP7</em>和162个成员的<em>TNAT1A</em>，这两个转座元件家族都和JA处理后的DNA甲基化无关；第三个转座元件家族就是<em>ATREP2</em>.结果发现<em>ATREP2</em>在野生型植株中被高度甲基化。而且，在突变体<em>nrpe1-11</em>中，<em>ATREP2</em>转座元件的甲基化水平急剧降低；但是在突变体<em>ros1-4</em>中甲基化水平还是很高。这表明JA处理野生型植株后，<em>ATREP2</em>富集的DMRs表现出高度依赖于RdDM的DAN甲基化。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131455147.png" alt="image-20230113145521076" style="zoom: 50%;"></p><h3 id="ROS1靶向ATREP2进行DNA去甲基化"><a href="#ROS1靶向ATREP2进行DNA去甲基化" class="headerlink" title="ROS1靶向ATREP2进行DNA去甲基化"></a>ROS1靶向<em>ATREP2</em>进行DNA去甲基化</h3><p>为什么在上面这个图里面突变体<em>ros1-4</em>的甲基化水平和野生型植株的差不多呢？也就为什么突变体<em>ros1-4</em>没有对<em>ATREP2</em>的甲基化水平产生影响呢？在突变体<em>nrpe1-11</em>中<em>ATREP2</em>的甲基化水平降低了，既然RdDM和ROS1具有拮抗作用，那么团变体<em>ros1-4</em>中<em>ATREP2</em>的甲基化水平也应该有很明显的变化啊。为什么会这样呢？作者猜测是由于<em>ATREP2</em>的甲基化水平在野生型植株中已经达到饱和了。为了验证ROS1是否能够靶向<em>ATREP2</em>转座子进行DNA甲基化，首先是利用β -雌二醇诱导的YFP标记ROS1，然后利用三代测序检测ROS1对<em>ATREP2</em>甲基化的影响水平。值得注意的是，与来自两个对照家族的TEs相比，雌二醇在<em>ATREP2</em>转座元件中诱导了广泛的DNA低甲基化。异位诱导后的ROS1靶向<em>ATREP2</em>使得DAN去甲基化再次证明<em>ATREP2</em>的甲基化是受Rd和ROS1的拮抗调控的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131517770.png" alt="image-20230113151722728" style="zoom:50%;"></p><h3 id="AGO1在JA诱导长期免疫中的功能"><a href="#AGO1在JA诱导长期免疫中的功能" class="headerlink" title="AGO1在JA诱导长期免疫中的功能"></a>AGO1在JA诱导长期免疫中的功能</h3><blockquote><p>来自<em>ATREP2</em>转座子的sRNA与AGO1关联，这个AGO1呢在JA诱导的长期抗虫性中具有重要作用。</p></blockquote><p>最近的研究发现AGO1能够与SRNAs关联并通过改变基因的染色质结构和募集Pol II来诱导依赖于JA的免疫基因的表达。</p><p>为了验证来自于<em>ATREP2</em>转座子的与AGO1关联的sRNA在JA诱导的长期免疫中是否发挥功能，作者们分析了来自茉莉酸甲酯处理后的来自的AGO1核的sRNA测序数据，结果发现来自于<em>ATREP2</em>的sRNA被显著富集到，尤其是长度为21nt的RNA。这些来自于<em>ATREP2</em>的sRNA中，$\frac{21nt RNA}{24nt RNA}$的比例明显升高，说明茉莉酸甲酯降低了Pol IV依赖的沉默，增加了Pol II转录的<em>ATREP2</em> TEs产生PTGS依赖的21nt sRNA。但是呢这些21nt RNA和24nt RNA的表达量均比对照的低，这就和作者们猜想的JA诱导提来自于<em>ATREP2</em>转座子的21nt sRNA活性不一样。但是呢，值得注意的是，这个树数据来源的研究中的处理和作者们这个文章的处理差很远，数据来源的研究中只用的拟南芥幼苗是10天大的，而且处理1天后就采样了。</p><p>为了找到更多的证据证明来自于<em>ATREP2</em>的sRNA能够反式调控依赖于JA的基因表达， 作者们利用BLAST分析JA长期诱导后显著变化的203个基因和<em>ATREP2</em>的同源性。结果发现，这种富集的序列互补性在IR相关基因的基因体中尤为明显，在随机选取的203个对照基因和203个稳定表达的基因中缺失。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131556016.png" alt="image-20230113155655964" style="zoom:50%;"></p><p>在最后，作者们还测试了AGO1在JA诱导从长期抗虫性中的功能。与野生型植株相比，两个突变体植株都没有展现出显著的JA诱导的长期抗虫性。因此，JA诱导的长期抗虫性需要完整的AGO1蛋白的参与。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131558000.png" alt="image-20230113155839957" style="zoom:67%;"></p><h2 id="研究结论"><a href="#研究结论" class="headerlink" title="研究结论"></a>研究结论</h2><blockquote><p>来自低甲基化的<em>ATREP2</em>的sRNA能够与AGO1结合，对启动或诱导近端/远端依赖于JA的防御基因的表达，并介导JA诱导的长期抗虫性。</p></blockquote><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202301131630763.png" alt="image-20230113163016621"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言生成Linux命令</title>
      <link href="/article/r2linux/"/>
      <url>/article/r2linux/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>pac4xiang<span class="hljs-operator">::</span>loadmypackages<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>df.id <span class="hljs-operator">&lt;-</span> data.table<span class="hljs-operator">::</span>fread<span class="hljs-punctuation">(</span><span class="hljs-string">"id.txt"</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br>comm <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> df.id<span class="hljs-operator">$</span>V1<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"parallel-fastq-dump -s data/sra/%s --o data/fastq --split-files -t 30"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"hisat2 -p 30 -x index/genome.index -1 data/fastq/%s_1.fastq -2 data/fastq/%s_2.fastq  -S mapping/%s.sam"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"/usr/local/bin/samtools sort -@ 10 -o mapping/%s.sorted.bam mapping/%s.sam"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"rm mapping/%s.sam"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"samtools index -bc -@ 30 mapping/%s.sorted.bam"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"samtools flagstat -@ 30 mapping/%s.sorted.bam"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br>  <br>  sprintf<span class="hljs-punctuation">(</span><span class="hljs-string">"featureCounts -p -t exon -g gene_id -a data/genome/all.gtf mapping/%s.sorted.bam -o counts/%s.counts.table.txt"</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    rbind<span class="hljs-punctuation">(</span>comm<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> comm<br><span class="hljs-punctuation">}</span><br><br>comm <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>slice<span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  data.table<span class="hljs-operator">::</span>fwrite<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"run.sh"</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu更新RStudioServer</title>
      <link href="/article/ubuntuupdaterstudioserver/"/>
      <url>/article/ubuntuupdaterstudioserver/</url>
      
        <content type="html"><![CDATA[<ol><li><p>暂停当前任务</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo rstudio-server suspend-all<br></code></pre></td></tr></tbody></table></figure></li><li><p>下线旧版本</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo rstudio-server offline<br></code></pre></td></tr></tbody></table></figure></li><li><p>下载新版本<br><a href="https://www.rstudio.com/products/rstudio/download-server/debian-ubuntu/">点击链接</a>下载最新版。</p></li><li><p>安装新版本</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gdebi &lt;rstudio-server-package.deb&gt;<br></code></pre></td></tr></tbody></table></figure></li><li><p>重启服务</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo rstudio-server restart<br></code></pre></td></tr></tbody></table></figure></li><li><p>上线新版本</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo rstudio-server online<br></code></pre></td></tr></tbody></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的生物信息学知识合集</title>
      <link href="/article/bioinf2allin1/"/>
      <url>/article/bioinf2allin1/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>趁着这次培训，把学的东西都整理一下。不断更新，想到啥更新啥。。。。。。</p><h1 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h1><ul><li><code>ssh</code>工具：目前在用的是<a href="https://tabby.sh/">Tabby</a>，比较满意的是在一个窗口就可以实现<code>ssh</code>+文件的上传下载。</li><li><code>markdown</code>工具：现在在用的是<a href="https://typora.io/">Typora</a>，付费版本。</li><li>代码编辑工具：<ul><li><code>R</code>：<code>RStudio</code></li><li></li><li>其他：<code>VS Code</code></li></ul></li></ul><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><p>使用VScode主要是为了方便远程连接服务器进行远程开发。体验了几次，还是很爽的。</p><ul><li>安装Remote-SSH</li><li>设置配置文件：输入服务器名称、IP地址、端口和用户名即可。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311141415211.png" alt="image-20231114141527850"></p><ul><li>更改设置：更改设置，<code>File-&gt;Preferences-&gt;Settings-&gt;Extension-&gt;Remote-SSH</code>，找到 Show Login Terminal 并勾选。</li></ul><p>后续提示输入密码，然后就可以 登录使用了。代码编辑器和终端在一个页面，就很方便。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311141418222.png" alt="image-20231114141842770"></p><h2 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h2><p>初学生信最折腾的就是软件安装，现在我基本上都是用<code>mamba</code>进行安装。<code>mamba</code>本质是<code>conda</code>，但是解析速度非常快，下载速度也非常快。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308072046122.png" alt=""></p><p>现在直接从<a href="https://github.com/conda-forge/miniforge#mambaforge">官方网站</a>下载即可安装，之前还需要先安装<code>conda</code>，官方也不推荐使用<code>conda</code>安装<code>mamba</code>.</p><p>以<code>Ubuntu</code>系统为例：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget <span class="hljs-string">"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-<span class="hljs-subst">$(uname)</span>-<span class="hljs-subst">$(uname -m)</span>.sh"</span><br>bash Mambaforge-$(<span class="hljs-built_in">uname</span>)-$(<span class="hljs-built_in">uname</span> -m).sh<br></code></pre></td></tr></tbody></table></figure><ul><li>创建环境（假如需要指定<code>python</code>版本）：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create --name 环境名称 python=3.11<br></code></pre></td></tr></tbody></table></figure><ul><li>激活环境</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba activate 环境名称<br></code></pre></td></tr></tbody></table></figure><ul><li>添加<code>channels</code></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/<br></code></pre></td></tr></tbody></table></figure><ul><li>查看环境都有哪些</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba <span class="hljs-built_in">env</span> list<br></code></pre></td></tr></tbody></table></figure><ul><li>安装软件：我通常是直接去<a href="https://anaconda.org/">ANACONDA</a>上搜，比如<code>fastqc</code>：</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308072054326.png" alt="image-20230807205440145"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308072055355.png" alt="image-20230807205501212"></p><p>把<code>conda</code>改成<code>mamba</code>就行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba  install -c bioconda fastqc<br></code></pre></td></tr></tbody></table></figure><ul><li>不更新依赖安装：某些大项目往往需要很多软件，各个软件依赖的其他软件版本通常不一样，这个时候可以考虑不更新依赖进行安装：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba  install -c bioconda fastqc --freeze-installed<br></code></pre></td></tr></tbody></table></figure><hr><p>其他不能用<code>mamba</code>安装的软件就只能根据官方文档进行安装了。</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>在<code>Ubuntu</code>上安装<code>Docker</code></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># Add Docker's official GPG key:</span><br>sudo apt-get update<br>sudo apt-get install ca-certificates curl gnupg<br>sudo install -m 0755 -d /etc/apt/keyrings<br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg<br>sudo <span class="hljs-built_in">chmod</span> a+r /etc/apt/keyrings/docker.gpg<br><br><span class="hljs-comment"># Add the repository to Apt sources:</span><br><span class="hljs-built_in">echo</span> \<br>  <span class="hljs-string">"deb [arch="</span>$(dpkg --print-architecture)<span class="hljs-string">" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \</span><br><span class="hljs-string">  "</span>$(. /etc/os-release &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$VERSION_CODENAME</span>"</span>)<span class="hljs-string">" stable"</span> | \<br>  sudo <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null<br>sudo apt-get update<br><br>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<br></code></pre></td></tr></tbody></table></figure><p>将用户加入<code>docker</code>用户组：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo usermod -aG docker username<br></code></pre></td></tr></tbody></table></figure><p>查看哪些用户在<code>docker</code>用户组中：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">grep <span class="hljs-string">'^docker:'</span> /etc/group<br></code></pre></td></tr></tbody></table></figure><p>将特定的目录挂载的到<code>docker</code>的工作目录下：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -it --name cactus.test -v ~/lixiang/yyt.acuce.3rd:/data quay.io/comparative-genomics-toolkit/cactus:v2.6.11<br></code></pre></td></tr></tbody></table></figure><p><code>docker</code>的默认目录是<code>/data</code>，<code>-v</code>参数将<code>~/lixiang/yyt.acuce.3rd</code>目录挂载到<code>/data</code>目录下。</p><p>输入<code>exit</code>退出当前容器。使用<code>docker rm name</code>删除对应的容器名称。</p><h1 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h1><h2 id="gVCF"><a href="#gVCF" class="headerlink" title="gVCF"></a>gVCF</h2><p>表头都有详细的注释信息，正文部分如下：</p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  Sample1</span><br><span class="hljs-attribute">Chr1</span>    <span class="hljs-number">1</span>       .       A       &lt;*&gt;     <span class="hljs-number">0</span>       .       END=<span class="hljs-number">914</span> GT:GQ:MIN_DP:PL <span class="hljs-number">0</span>/<span class="hljs-number">0</span>:<span class="hljs-number">1</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br><span class="hljs-attribute">Chr1</span>    <span class="hljs-number">915</span>     .       T       &lt;*&gt;     <span class="hljs-number">0</span>       .       END=<span class="hljs-number">915</span> GT:GQ:MIN_DP:PL ./.:<span class="hljs-number">0</span>:<span class="hljs-number">1</span>:<span class="hljs-number">29</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0</span><br><span class="hljs-attribute">Chr1</span>    <span class="hljs-number">916</span>     .       A       &lt;*&gt;     <span class="hljs-number">0</span>       .       END=<span class="hljs-number">977</span> GT:GQ:MIN_DP:PL <span class="hljs-number">0</span>/<span class="hljs-number">0</span>:<span class="hljs-number">1</span>:<span class="hljs-number">0</span>:<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">29</span><br><span class="hljs-attribute">Chr1</span>    <span class="hljs-number">978</span>     .       A       &lt;*&gt;     <span class="hljs-number">0</span>       .       END=<span class="hljs-number">978</span> GT:GQ:MIN_DP:PL ./.:<span class="hljs-number">0</span>:<span class="hljs-number">1</span>:<span class="hljs-number">29</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0</span><br></code></pre></td></tr></tbody></table></figure><p>每一列的含义如下：</p><ul><li><strong>#CHROM：</strong> 染色体的名字。</li><li><strong>POS：</strong> 变异发生的位置。</li><li><strong>ID：</strong> 变异的唯一标识符，通常为 “.” 表示未知或不适用。</li><li><strong>REF：</strong> 参考基因的碱基。</li><li><strong>ALT：</strong> 变异的碱基，可能是一个单一的碱基、多个碱基（例如插入或删除）、或者用 <code>&lt;*&gt;</code> 表示未知。</li><li><strong>QUAL：</strong> 变异的质量得分。</li><li><strong>FILTER：</strong> 变异是否通过过滤器，通常为 “.” 表示未经过滤。</li><li><strong>INFO：</strong> 包含更多关于变异的信息，如 END=977 表示变异的结束位置。</li><li><strong>FORMAT：</strong> 描述了样本基因型信息的格式。</li><li><strong>Sample1：</strong> 实际样本的基因型信息，如 “0/0:1:0:0,0,0” 表示该样本为纯合子（两个相同的等位基因），具体基因型信息依赖于 FORMAT 中的描述。</li></ul><p>在示例中，可以看到有两个样本（Sample1 和 ./.），每个样本有对应的基因型信息。纯合子通常表示为 “0/0”，而缺失数据通常表示为 “./.”。</p><p>要查看 VCF 文件，可以使用文本编辑器或者专用的 VCF 查看工具。如果使用文本编辑器，每一行的不同字段通过制表符或空格分隔。</p><h1 id="在线数据库"><a href="#在线数据库" class="headerlink" title="在线数据库"></a>在线数据库</h1><ul><li>33个水稻高质量基因组数据库（四川农大）：<a href="http://ricerc.sicau.edu.cn/">Rice Resource Center</a></li><li></li></ul><h1 id="本地数据库"><a href="#本地数据库" class="headerlink" title="本地数据库"></a>本地数据库</h1><p>套用的数据库在本节介绍安装配置方法，其他专业的数据库会对应章节介绍。</p><h2 id="NCBI"><a href="#NCBI" class="headerlink" title="NCBI"></a>NCBI</h2><p>截至2023年8月8日，最新版本是<code>V5</code>，需要修改下方代码。</p><h3 id="nt"><a href="#nt" class="headerlink" title="nt"></a>nt</h3><p>下载<code>NSBI</code>官方构建好索引的数据库，使用<code>ascp</code>加速下载，下载完成直接解压就能用。</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkcd ~<span class="hljs-regexp">/database/</span>ncbi.nt<br>~<span class="hljs-regexp">/.aspera/</span>connect<span class="hljs-regexp">/bin/</span>ascp -i ~<span class="hljs-regexp">/mambaforge/</span>envs<span class="hljs-regexp">/tools4bioinf/</span>etc/asperaweb_id_dsa.openssh --overwrite=diff -QTr -l6000m \ <br>    anonftp@ftp.ncbi.nlm.nih.gov:blast<span class="hljs-regexp">/db/</span>v4<span class="hljs-regexp">/nt_v4.{00..85}.tar.gz ./</span><br></code></pre></td></tr></tbody></table></figure><h3 id="nr"><a href="#nr" class="headerlink" title="nr"></a>nr</h3><p>下载<code>NSBI</code>官方构建好索引的数据库，使用<code>ascp</code>加速下载，下载完成直接解压就能用。</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkcd ~<span class="hljs-regexp">/database/</span>ncbi.nr<br>~<span class="hljs-regexp">/.aspera/</span>connect<span class="hljs-regexp">/bin/</span>ascp -i ~<span class="hljs-regexp">/mambaforge/</span>envs<span class="hljs-regexp">/tools4bioinf/</span>etc/asperaweb_id_dsa.openssh --overwrite=diff -QTr -l6000m \ <br>    anonftp@ftp.ncbi.nlm.nih.gov:blast<span class="hljs-regexp">/db/</span>v4<span class="hljs-regexp">/nt_v4.{00..79}.tar.gz ./</span><br></code></pre></td></tr></tbody></table></figure><h3 id="taxonomy"><a href="#taxonomy" class="headerlink" title="taxonomy"></a>taxonomy</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/ncbi.taxonomy<br>axel -n 50 ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz<br>tar -xvf taxdump.tar.gz<br></code></pre></td></tr></tbody></table></figure><h3 id="CDD"><a href="#CDD" class="headerlink" title="CDD"></a>CDD</h3><p><code>NCBI-CDD</code>用于结构域检索和验证，官方网站一次只能上传4000条序列，有时候比较影响进度，下面的代码用于本地数据库构建和比对。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 下载数据库数据</span><br>ascp -v -k 1 -T -l 1000m -i ~/mambaforge/envs/tools4bioinf/etc/asperaweb_id_dsa.openssh  anonftp@ftp.ncbi.nih.gov:/pub/mmdb/cdd/cdd.tar.gz ./<br><span class="hljs-comment"># 构建数据库</span><br>makeprofiledb -<span class="hljs-keyword">in</span> Cdd.pn -out ../db/ncbi.cdd -dbtype rps<br><span class="hljs-comment"># 比对</span><br>rpsblast -query results/oryza.1/6.all.wrky.pep.fa -outfmt 6 -evalue 0.01 -db ~/database/ncbi.cdd/db/ncbi.cdd -out results/oryza.1/7.ncbi.cdd.res.txt -num_threads 60<br><span class="hljs-comment"># 下载分类信息</span><br>ascp -v -k 1 -T -l 1000m -i ~/mambaforge/envs/tools4bioinf/etc/asperaweb_id_dsa.openssh  anonftp@ftp.ncbi.nih.gov:/pub/mmdb/cdd/cddid.tbl.gz ./     <br></code></pre></td></tr></tbody></table></figure><h3 id="示意图绘制"><a href="#示意图绘制" class="headerlink" title="示意图绘制"></a>示意图绘制</h3><p><a href="https://gdp.rjmart.cn/#/"><strong>Generic Diagramming Platform</strong></a></p><h3 id="生物序列展示"><a href="#生物序列展示" class="headerlink" title="生物序列展示"></a>生物序列展示</h3><p><a href="https://ibs.renlab.org/#/home">Illustrator for Biological Sequences</a></p><h1 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h1><h2 id="命令行界面配置"><a href="#命令行界面配置" class="headerlink" title="命令行界面配置"></a>命令行界面配置</h2><p>有个好看的界面，在报错的时候心情会好一些：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308100927240.png" alt="我的Linux命令行界面"></p><p><code>zsh</code>配置文件<code>.zshrc</code>配置细节（<code>uername</code>改成自己的用户名）：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-comment">######################################### 默认设置 ################################################</span><br><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-comment"># Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.</span><br><span class="hljs-comment"># Initialization code that may require console input (password prompts, [y/n]</span><br><span class="hljs-comment"># confirmations, etc.) must go above this block; everything else may go below.</span><br><span class="hljs-keyword">if</span> [[ -r <span class="hljs-string">"<span class="hljs-variable">${XDG_CACHE_HOME:-<span class="hljs-variable">$HOME</span>/.cache}</span>/p10k-instant-prompt-<span class="hljs-variable">${(%):-%n}</span>.zsh"</span> ]]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">source</span> <span class="hljs-string">"<span class="hljs-variable">${XDG_CACHE_HOME:-<span class="hljs-variable">$HOME</span>/.cache}</span>/p10k-instant-prompt-<span class="hljs-variable">${(%):-%n}</span>.zsh"</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># Path to your oh-my-zsh installation.</span><br><span class="hljs-built_in">export</span> ZSH=<span class="hljs-string">"/home/username/.oh-my-zsh"</span><br><br><span class="hljs-comment"># tabby ftp工具默认当前位置</span><br><span class="hljs-function"><span class="hljs-title">precmd</span></span> () { <span class="hljs-built_in">echo</span> -n <span class="hljs-string">"\x1b]1337;CurrentDir=<span class="hljs-subst">$(pwd)</span>\x07"</span> }<br><br><span class="hljs-comment">#ZSH_THEME="robbyrussell"</span><br><span class="hljs-comment">#ZSH_THEME="powerlevel10k/powerlevel10k"</span><br><br><span class="hljs-comment"># Add wisely, as too many plugins slow down shell startup.</span><br>plugins=(git)<br><span class="hljs-built_in">source</span> <span class="hljs-variable">$ZSH</span>/oh-my-zsh.sh<br><br><span class="hljs-comment"># To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.</span><br>[[ ! -f ~/.p10k.zsh ]] || <span class="hljs-built_in">source</span> ~/.p10k.zsh<br><br><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-comment">######################################### conda/mamba初始化 ######################################</span><br><span class="hljs-comment">###################################################################################################</span><br><br><span class="hljs-comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span><br><span class="hljs-comment"># !! Contents within this block are managed by 'conda init' !!</span><br>__conda_setup=<span class="hljs-string">"<span class="hljs-subst">$('/home/username/mambaforge/bin/conda' 'shell.zsh' 'hook' 2&gt; /dev/null)</span>"</span><br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">eval</span> <span class="hljs-string">"<span class="hljs-variable">$__conda_setup</span>"</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">"/home/username/mambaforge/etc/profile.d/conda.sh"</span> ]; <span class="hljs-keyword">then</span><br>        . <span class="hljs-string">"/home/username/mambaforge/etc/profile.d/conda.sh"</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">export</span> PATH=<span class="hljs-string">"/home/username/mambaforge/bin:<span class="hljs-variable">$PATH</span>"</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">unset</span> __conda_setup<br><br><span class="hljs-keyword">if</span> [ -f <span class="hljs-string">"/home/username/mambaforge/etc/profile.d/mamba.sh"</span> ]; <span class="hljs-keyword">then</span><br>    . <span class="hljs-string">"/home/username/mambaforge/etc/profile.d/mamba.sh"</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-comment"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span><br>LD_LIBRARY_PATH=<span class="hljs-variable">$LD_LIBRARY_PATH</span>:/home/username/mambaforge/lib<br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/home/username/software/mira/bin<br><br><br><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-comment">########################################## 快捷键 ################################################</span><br><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-built_in">alias</span> np=<span class="hljs-string">'nohup'</span><br><span class="hljs-built_in">alias</span> tt=<span class="hljs-string">'tail'</span><br><span class="hljs-built_in">alias</span> np=<span class="hljs-string">'nohup'</span><br><span class="hljs-built_in">alias</span> pp=<span class="hljs-string">'_pp(){ps -aux | grep $1};_pp'</span><br><span class="hljs-built_in">alias</span> rf=<span class="hljs-string">'rm -rf'</span><br><span class="hljs-built_in">alias</span> mm=<span class="hljs-string">'mamba'</span><br><span class="hljs-built_in">alias</span> mma=<span class="hljs-string">'mamba activate'</span><br><span class="hljs-built_in">alias</span> mmd=<span class="hljs-string">'mamba deactivate'</span><br><span class="hljs-built_in">alias</span> mml=<span class="hljs-string">'mamba env list'</span><br><span class="hljs-built_in">alias</span> hg=<span class="hljs-string">'_hg(){history | grep $1 | tail -n $2};_hg'</span><br><span class="hljs-built_in">alias</span> hh=<span class="hljs-string">'htop'</span><br><span class="hljs-built_in">alias</span> mmt=<span class="hljs-string">'mamba activate tools4bioinf'</span><br><span class="hljs-built_in">alias</span> pp=<span class="hljs-string">'python'</span><br><span class="hljs-built_in">alias</span> hh=<span class="hljs-string">'head'</span><br><span class="hljs-built_in">alias</span> get=<span class="hljs-string">'axel -n 30'</span><br><span class="hljs-built_in">alias</span> gh=<span class="hljs-string">'_gh(){grep "&gt;" $1 | head};_gh'</span><br><span class="hljs-built_in">alias</span> pp=<span class="hljs-string">'scp -r ubuntu@43.153.77.165:/home/ubuntu/download/\* ./'</span><br><span class="hljs-built_in">alias</span> ss=<span class="hljs-string">"sed -i -e 's/ //g' -e 's/dna:.\{1,1000\}//g' *.fa"</span><br><span class="hljs-built_in">alias</span> getaws=<span class="hljs-string">"aws s3 cp  --no-sign-request"</span><br><span class="hljs-built_in">alias</span> lw=<span class="hljs-string">"ll | wc -l"</span><br><span class="hljs-built_in">alias</span> mmi=<span class="hljs-string">"mamba install --freeze-installed"</span><br><span class="hljs-built_in">alias</span> mmb=<span class="hljs-string">"mamba install --freeze-installed -c bioconda "</span><br><span class="hljs-comment"># 千万不要写 alias conda="mamba",血的教训！！！</span><br><br><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-comment">########################################## starship ################################################</span><br><span class="hljs-comment">###################################################################################################</span><br><span class="hljs-comment"># run starship</span><br><span class="hljs-built_in">eval</span> <span class="hljs-string">"<span class="hljs-subst">$(starship init zsh)</span>"</span><br></code></pre></td></tr></tbody></table></figure><p><code>starship.toml</code>配置文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># # Get editor completions based on the config schema</span><br><span class="hljs-comment"># # "$schema" = 'https://starship.rs/config-schema.json'</span><br><span class="hljs-string">"<span class="hljs-variable">$schema</span>"</span> = <span class="hljs-string">'https://www.web4xiang.com/blog/article/starship/config-schema.json'</span><br><br><br><br>add_newline = <span class="hljs-literal">true</span><br><br>format = <span class="hljs-string">""</span><span class="hljs-string">"<span class="hljs-variable">$time</span> <span class="hljs-variable">$all</span>"</span><span class="hljs-string">""</span><br><br>[character]<br>success_symbol = <span class="hljs-string">"[👉👉👉➡️ ](white)"</span><br>error_symbol = <span class="hljs-string">"[👉👉👉➡️ ](red)"</span><br><br>[git_branch]<br>symbol = <span class="hljs-string">"🌱 "</span><br>truncation_length = 4<br>truncation_symbol = <span class="hljs-string">""</span><br><span class="hljs-comment"># ignore_branches = ["master", "main"]</span><br>format = <span class="hljs-string">"[](fg:#ffffff bg:none)[ 🌱 ](fg:#282c34 bg:#ffffff)[](fg:#ffffff bg:#24c90a)[ <span class="hljs-variable">$branch</span>](<span class="hljs-variable">$style</span>)[](fg:#24c90a bg:none) "</span><br>style = <span class="hljs-string">"fg:#ffffff bg:#24c90a"</span><br><br>[git_commit]<br>commit_hash_length = 4<br>tag_symbol = <span class="hljs-string">"🔖 "</span><br>format = <span class="hljs-string">"[\\(<span class="hljs-variable">$hash</span>\\)](<span class="hljs-variable">$style</span>) [\\(<span class="hljs-variable">$tag</span>\\)](<span class="hljs-variable">$style</span>)"</span><br>style = <span class="hljs-string">"green"</span><br><br>[git_status]<br>format=<span class="hljs-string">"[](fg:#ffffff bg:none)[ 🥶 ](fg:#282c34 bg:#ffffff)[ ](fg:#ffffff bg:#4da0ff)[<span class="hljs-variable">$modified</span>](fg:#282c34 bg:#4da0ff)[<span class="hljs-variable">$untracked</span>](fg:#282c34 bg:#4da0ff)[<span class="hljs-variable">$staged</span>](fg:#282c34 bg:#4da0ff)[<span class="hljs-variable">$renamed</span>](fg:#282c34 bg:#4da0ff)[](fg:#4da0ff bg:none)"</span><br>conflicted = <span class="hljs-string">""</span><br>ahead = <span class="hljs-string">"🏎💨"</span><br>behind = <span class="hljs-string">"😰"</span><br>diverged = <span class="hljs-string">"😵"</span><br>up_to_date = <span class="hljs-string">"🥰"</span><br>untracked = <span class="hljs-string">"🤷"</span><br>stashed = <span class="hljs-string">"📦"</span><br>modified = <span class="hljs-string">"📝"</span><br>renamed = <span class="hljs-string">"👅"</span><br>deleted = <span class="hljs-string">"🗑️"</span><br>style = <span class="hljs-string">"red"</span><br>disabled = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># [git_state]</span><br><span class="hljs-comment"># rebase = "REBASING"</span><br><span class="hljs-comment"># merge =       "MERGING"</span><br><span class="hljs-comment"># revert = "REVERTING"</span><br><span class="hljs-comment"># cherry_pick = "CHERRY-PICKING"</span><br><span class="hljs-comment"># bisect = "BISECTING"</span><br><span class="hljs-comment"># am = "AM"</span><br><span class="hljs-comment"># am_or_rebase = "AM/REBASE"</span><br><span class="hljs-comment"># style =       "yellow"</span><br><span class="hljs-comment"># format = '\([$state( $progress_current/$progress_total)]($style)\) '</span><br><span class="hljs-comment"># disabled = true</span><br><br><br>[directory]<br>format = <span class="hljs-string">"[](fg:#ffffff bg:none)[ 📚 ](fg:#282c34 bg:#ffffff)[](fg:#ffffff bg:#00b76d)[ <span class="hljs-variable">$path</span>](<span class="hljs-variable">$style</span>)[](fg:#00b76d bg:none) "</span><br>style = <span class="hljs-string">"fg:#ffffff bg:#00b76d"</span><br>truncation_length = 3<br>truncate_to_repo=<span class="hljs-literal">false</span><br>home_symbol = <span class="hljs-string">""</span><br><br>[nodejs]<br>symbol = <span class="hljs-string">"🤖 "</span><br>disabled = <span class="hljs-literal">true</span><br><br>[package]<br>symbol = <span class="hljs-string">"📦 "</span><br>disabled = <span class="hljs-literal">true</span><br><br>[python]<br>symbol = <span class="hljs-string">"🐍 "</span><br><br>[rust]<br>symbol = <span class="hljs-string">"🦀 "</span><br><br>[conda]<br>symbol = <span class="hljs-string">"🐳 "</span><br><br>[<span class="hljs-built_in">jobs</span>]<br>symbol = <span class="hljs-string">"🎯 "</span><br><br>[time]<br>disabled = <span class="hljs-literal">false</span><br>format=<span class="hljs-string">"[](fg:#ffffff bg:none)[🐼🐻 ](fg:#282c34 bg:#ffffff)[](fg:#ffffff bg:#772953)[ <span class="hljs-variable">$time</span>](<span class="hljs-variable">$style</span>)[](fg:#772953 bg:none)"</span><br>time_format = <span class="hljs-string">"%T"</span> <span class="hljs-comment">#change to %R to only have HH:MM</span><br>style=<span class="hljs-string">"fg:#ffffff bg:#772953"</span><br><br><span class="hljs-comment"># [custom.emoji]</span><br><span class="hljs-comment"># description = "Displays a (pseudo) random emoji for each prompt"</span><br><span class="hljs-comment"># command = "EMOJIS=(⛵️ 🛰 🪐 🚀 🧡 🔭 🌍 💫 ☄️ ✨ 🌠 🌌 ⭐️); EMOJI_INDEX=$(( $RANDOM % 12 + 0 )); echo ${EMOJIS[$EMOJI_INDEX]}"</span><br><span class="hljs-comment"># when = "1"</span><br><span class="hljs-comment"># shell = ["cmd /C"]</span><br><span class="hljs-comment"># format = "$output"</span><br></code></pre></td></tr></tbody></table></figure><h2 id="一些有用的命令"><a href="#一些有用的命令" class="headerlink" title="一些有用的命令"></a>一些有用的命令</h2><ul><li>kill掉某个程序产生的所有进程，如kill掉EDTA产生的所有进程：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ps -ef | grep <span class="hljs-string">'EDTA'</span> | grep -v grep | awk <span class="hljs-string">'{print $2}'</span> | xargs -r <span class="hljs-built_in">kill</span> -9<br></code></pre></td></tr></tbody></table></figure><h1 id="R语言"><a href="#R语言" class="headerlink" title="R语言"></a>R语言</h1><h2 id="软件安装-1"><a href="#软件安装-1" class="headerlink" title="软件安装"></a>软件安装</h2><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="PCoA"><a href="#PCoA" class="headerlink" title="PCoA"></a><code>PCoA</code></h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 输入数据的行是样品，列是特征变量</span><br>readr<span class="hljs-operator">::</span>read_table<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/sanqimetagenome/data/all.kraken2.rrarefied.counts.txt"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>contains<span class="hljs-punctuation">(</span><span class="hljs-string">"SRR"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  t<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  vegan<span class="hljs-operator">::</span>vegdist<span class="hljs-punctuation">(</span>method <span class="hljs-operator">=</span> <span class="hljs-string">"bray"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ape<span class="hljs-operator">::</span>pcoa<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> pcoa.res<br><br><span class="hljs-comment"># 提取权重</span><br>pcoa.res<span class="hljs-operator">$</span>values <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> pcoa.weight<br><br><span class="hljs-comment"># 提取位置</span><br>pcoa.res<span class="hljs-operator">$</span>vectors <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span><span class="hljs-string">"PCoa"</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"Run"</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df.sample.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df.pcoa.point<br><br><span class="hljs-comment"># PCoA绘图</span><br>df.pcoa.point <span class="hljs-operator">%&gt;%</span> <br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>PCoa1<span class="hljs-punctuation">,</span> PCoa2<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> Type<span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> Part<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"#222222"</span><span class="hljs-punctuation">,</span><br>             linetype <span class="hljs-operator">=</span> <span class="hljs-string">"dashed"</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"#222222"</span><span class="hljs-punctuation">,</span><br>             linetype <span class="hljs-operator">=</span> <span class="hljs-string">"dashed"</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">0.51</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"PCoA1 (21.64%)"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"PCoA2 (8.36%)"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_continuous<span class="hljs-punctuation">(</span>limit <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>limit <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  pac4xiang<span class="hljs-operator">::</span>mytheme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span><br>    panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.major <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid.minor <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> p.pcoa<br></code></pre></td></tr></tbody></table></figure><h3 id="PERMANOVA"><a href="#PERMANOVA" class="headerlink" title="PERMANOVA"></a><code>PERMANOVA</code></h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 输入数据的行是样品，列是特征变量</span><br><span class="hljs-comment"># Type*Part在df.sample.info这个数据框里面</span><br>vegan<span class="hljs-operator">::</span>adonis2<span class="hljs-punctuation">(</span>df.peranova.table <span class="hljs-operator">~</span> Type<span class="hljs-operator">*</span>Part<span class="hljs-punctuation">,</span><br>               data <span class="hljs-operator">=</span> df.sample.info<span class="hljs-punctuation">,</span><br>               permutations <span class="hljs-operator">=</span> <span class="hljs-number">999</span><span class="hljs-punctuation">,</span><br>               method<span class="hljs-operator">=</span><span class="hljs-string">"bray"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tibble<span class="hljs-operator">::</span>rownames_to_column<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"Index"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  writexl<span class="hljs-operator">::</span>write_xlsx<span class="hljs-punctuation">(</span><span class="hljs-string">"./data/sanqimetagenome/results/PERMANOVA.res.xlsx"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><a href="https://bookdown.org/mcwimberly/gdswr-book/">R语言空间数据可视化</a></li></ul><h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><h3 id="热图"><a href="#热图" class="headerlink" title="热图"></a>热图</h3><ul><li>修改<code>pheatmap</code>分类信息注释信息：</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R">ann_colors <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>   Sample.From <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>Cropland <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                   Understory <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>   MAGs.From <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>Cropland <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                 Understory <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>   Methods <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>metaWRAP <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>               CONCOCT <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>               MaxBin2 <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>               MetaBAT2 <span class="hljs-operator">=</span> ggsci<span class="hljs-operator">::</span>pal_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="R包开发"><a href="#R包开发" class="headerlink" title="R包开发"></a>R包开发</h2><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://r-pkgs.org/">https://r-pkgs.org/</a></p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>直接在 GitHub 上创建项目，然后Pull到本地即可。</p><p>使用下方的代码创建一些用得上的文件等：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># 检查R包名称的可用性，外网可用</span><br>available<span class="hljs-operator">::</span>available<span class="hljs-punctuation">(</span><span class="hljs-string">"biohelpers"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 添加MIT许可证信息</span><br>usethis<span class="hljs-operator">::</span>use_mit_license<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 添加文献引用信息</span><br>usethis<span class="hljs-operator">::</span>use_citation<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 添加开发记录文件</span><br>file.create<span class="hljs-punctuation">(</span><span class="hljs-string">"deve.log.R"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 添加github链接和bug提交链接，然后手动编辑DESCRIPTION这个文件中对应的内容</span><br>usethis<span class="hljs-operator">::</span>use_github_links<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 添加示例数据,直接存储为.rda格式</span><br><span class="hljs-comment"># file.create("./R/data.R") # 解释每个示例数据</span><br><span class="hljs-comment"># file.create("./R/process_data.R") # 数据处理记录脚本</span><br><br><span class="hljs-comment"># 将编译时用不到的文件添加到.Rbuildignore这个文件夹中，不会改变文件位置，只是在编译时忽略这些文件</span><br>usethis<span class="hljs-operator">::</span>use_build_ignore<span class="hljs-punctuation">(</span><span class="hljs-string">"README.md"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_build_ignore<span class="hljs-punctuation">(</span><span class="hljs-string">"deve.log.R"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_build_ignore<span class="hljs-punctuation">(</span><span class="hljs-string">"biohelpers.Rproj"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_build_ignore<span class="hljs-punctuation">(</span><span class="hljs-string">"R/process_data.R"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 编译时忽略这个脚本</span><br><br><span class="hljs-comment"># 添加全局变量，所有的全局变量全部添加在这个脚本里面</span><br>file.create<span class="hljs-punctuation">(</span><span class="hljs-string">"R/biohelpers-global.R"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 修改版本</span><br>usethis<span class="hljs-operator">::</span>use_version<span class="hljs-punctuation">(</span><span class="hljs-string">"major"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 第一位数字，当你做了不向后兼容的 API 修改时，增加主版本号。</span><br>usethis<span class="hljs-operator">::</span>use_version<span class="hljs-punctuation">(</span><span class="hljs-string">"minor"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 第二位数字，当你在不破坏向后兼容性的前提下增加功能时，增加次版本号。</span><br>usethis<span class="hljs-operator">::</span>use_version<span class="hljs-punctuation">(</span><span class="hljs-string">"patch"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 第三位数字，当你做了向后兼容的问题修正时，增加修订号。</span><br>usethis<span class="hljs-operator">::</span>use_version<span class="hljs-punctuation">(</span><span class="hljs-string">"dev"</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 第四位数字，通常用来表示开发中的版本，可能不稳定或不完整。</span><br><br><span class="hljs-comment"># 添加用到的R包和函数</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"dplyr"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"%&gt;%"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"dplyr"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"arrange"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"dplyr"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"mutate"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"dplyr"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"select"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"dplyr"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"left_join"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"FactoMineR"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"PCA"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"factoextra"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"get_eigenvalue"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"tibble"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"rownames_to_column"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"ggplot"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"aes"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"geom_vline"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"geom_hline"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"geom_point"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"labs"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"magrittr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"set_names"</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_import_from<span class="hljs-punctuation">(</span><span class="hljs-string">"stringr"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"str_replace"</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># 将某些文件格式化为tidyverse风格</span><br>styler<span class="hljs-operator">::</span>style_file<span class="hljs-punctuation">(</span><span class="hljs-string">"R/pca_in_one.R"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 编译vignettes</span><br><span class="hljs-comment"># usethis::use_vignette(name = "pca_in_one") # 运行第二次会覆盖之前的</span><br>devtools<span class="hljs-operator">::</span>build_vignettes<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 检查</span><br><span class="hljs-comment"># file.remove("./NAMESPACE")</span><br>devtools<span class="hljs-operator">::</span>load_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>devtools<span class="hljs-operator">::</span>document<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_tidy_description<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>devtools<span class="hljs-operator">::</span>check<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 编译R包并安装</span><br>devtools<span class="hljs-operator">::</span>build<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>devtools<span class="hljs-operator">::</span>check_built<span class="hljs-punctuation">(</span><span class="hljs-string">"../biohelpers_0.0.0.4.tar.gz"</span><span class="hljs-punctuation">)</span><br>file.copy<span class="hljs-punctuation">(</span><span class="hljs-string">"../biohelpers_0.0.0.4.tar.gz"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># devtools::install_local()</span><br>usethis<span class="hljs-operator">::</span>use_github_release<span class="hljs-punctuation">(</span>publish <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># pkgdown添加网页</span><br>pkgdown<span class="hljs-operator">::</span>build_site<span class="hljs-punctuation">(</span>new_process <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>usethis<span class="hljs-operator">::</span>use_pkgdown_github_pages<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>开发完每个函数都需要 check 一次，免得 bug 太多，debug 到爆炸。</p><h3 id="易出错点"><a href="#易出错点" class="headerlink" title="易出错点"></a>易出错点</h3><ul><li>不能 import 或者是 importFrom base，不然会报错：operation not allowed on base namespace</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment">#' <span class="hljs-doctag">@importFrom</span> base as.data.frame</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@importFrom</span> base factor</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@importFrom</span> base paste0</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@importFrom</span> base round</span><br><span class="hljs-comment">#' <span class="hljs-doctag">@importFrom</span> base unique</span><br></code></pre></td></tr></tbody></table></figure><ul><li>example 中用到的 R 包也要在 import 中进行声明</li><li>用不到的 .R 问价统统忽略，不然会报错：</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs r">Non<span class="hljs-operator">-</span>standard file<span class="hljs-operator">/</span>directory found at top level<span class="hljs-operator">:</span><br>    <span class="hljs-string">'test_function.R'</span><br></code></pre></td></tr></tbody></table></figure><ul><li>!!sym 不能接收 NULL 作为传入对象</li></ul><h3 id="GitHub-Pages-设置"><a href="#GitHub-Pages-设置" class="headerlink" title="GitHub Pages 设置"></a>GitHub Pages 设置</h3><p>首先在.gitignore 这个文件中将/docs 这个文件夹删除，这样才能推送上去形成页面。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202411151620093.png" alt="img"></p><p>推送有延迟，要等几个小时，也尽量不要频繁推送更新。</p><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h1 id="基因组"><a href="#基因组" class="headerlink" title="基因组"></a>基因组</h1><h2 id="三代基因组组装（Hi-Fi）"><a href="#三代基因组组装（Hi-Fi）" class="headerlink" title="三代基因组组装（Hi-Fi）"></a>三代基因组组装（Hi-Fi）</h2><h3 id="软件安装-2"><a href="#软件安装-2" class="headerlink" title="软件安装"></a>软件安装</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba install -c bioconda hifiasm<br>mamba install -c bioconda ragtag<br>mamba install -c bioconda busco<br></code></pre></td></tr></tbody></table></figure><h3 id="hifiasm组装"><a href="#hifiasm组装" class="headerlink" title="hifiasm组装"></a>hifiasm组装</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> hifiasm -o 01.hifiasm/101 -t60 -l0 data/fq/101.fq &gt; hifiasm.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></tbody></table></figure><p>结果文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang 164M 10月 23 16:18 101.bp.a_ctg.gfa<br>-rw-rw-r-- 1 lixiang lixiang 901K 10月 23 16:18 101.bp.a_ctg.lowQ.bed<br>-rw-rw-r-- 1 lixiang lixiang 2.2M 10月 23 16:18 101.bp.a_ctg.noseq.gfa<br>-rw-rw-r-- 1 lixiang lixiang 410M 10月 23 16:17 101.bp.p_ctg.gfa<br>-rw-rw-r-- 1 lixiang lixiang 958K 10月 23 16:18 101.bp.p_ctg.lowQ.bed<br>-rw-rw-r-- 1 lixiang lixiang  11M 10月 23 16:17 101.bp.p_ctg.noseq.gfa<br>-rw-rw-r-- 1 lixiang lixiang 709M 10月 23 16:17 101.bp.p_utg.gfa<br>-rw-rw-r-- 1 lixiang lixiang 2.6M 10月 23 16:17 101.bp.p_utg.lowQ.bed<br>-rw-rw-r-- 1 lixiang lixiang  15M 10月 23 16:17 101.bp.p_utg.noseq.gfa<br>-rw-rw-r-- 1 lixiang lixiang 727M 10月 23 16:17 101.bp.r_utg.gfa<br>-rw-rw-r-- 1 lixiang lixiang 2.7M 10月 23 16:17 101.bp.r_utg.lowQ.bed<br>-rw-rw-r-- 1 lixiang lixiang  16M 10月 23 16:17 101.bp.r_utg.noseq.gfa<br>-rw-rw-r-- 1 lixiang lixiang 3.0G 10月 23 16:15 101.ec.bin<br>-rw-rw-r-- 1 lixiang lixiang 149M 10月 23 16:16 101.ovlp.reverse.bin<br>-rw-rw-r-- 1 lixiang lixiang 1.7G 10月 23 16:16 101.ovlp.source.bin<br>-rw-rw-r-- 1 lixiang lixiang 406M 10月 23 17:01 101.primary.assembly.fa<br>-rw-rw-r-- 1 lixiang lixiang  15K 10月 23 17:13 101.primary.assembly.fa.fai<br>drwxrwxr-x 2 lixiang lixiang 4.0K 10月 23 17:34 101.rag.tag<br></code></pre></td></tr></tbody></table></figure><p>其中<code>`p_ctg.gfa</code>是主要的<code>contigs</code>.</p><p>将组装得到的结果转换为<code>fasta</code>格式：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">gfatools gfa2fa  01.hifiasm/101.bp.p_ctg.gfa &gt; 01.hifiasm/process/101.primary.assembly.fa<br></code></pre></td></tr></tbody></table></figure><p>挂载到染色体得到伪染色体：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ragtag.py scaffold -t 60  ~/project/yyt.3rd.acuce/02.r498/01.r498.genome/R498.genome 01.hifiasm/process/101.primary.assembly.fa -o 01.hifiasm/process/101.rag.tag<br></code></pre></td></tr></tbody></table></figure><p>提取染色体序列：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">seqkit grep -f chr.id.txt 01.hifiasm/process/101.rag.tag/ragtag.scaffold.fasta &gt; 01.hifiasm/final/101.HiFiasm.fa<br></code></pre></td></tr></tbody></table></figure><p>BUSCO验证组装结果：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">busco -i 01.hifiasm/final/101.HiFiasm.fa -l ~/lixiang/database/busco.plant/embryophyta_odb10 --cpu 75 -f --offline -m genome -o 01.hifiasm/busco/101<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">---------------------------------------------------<br>|Results from dataset embryophyta_odb10            |<br>---------------------------------------------------<br>|C:98.7%[S:96.3%,D:2.4%],F:0.9%,M:0.4%,n:1614      |<br>|1593   Complete BUSCOs (C)                        |<br>|1554   Complete and single-copy BUSCOs (S)        |<br>|39     Complete and duplicated BUSCOs (D)         |<br>|14     Fragmented BUSCOs (F)                      |<br>|7      Missing BUSCOs (M)                         |<br>|1614   Total BUSCO <span class="hljs-built_in">groups</span> searched                |<br>---------------------------------------------------<br></code></pre></td></tr></tbody></table></figure><h2 id="pbsv鉴定结构变异"><a href="#pbsv鉴定结构变异" class="headerlink" title="pbsv鉴定结构变异"></a>pbsv鉴定结构变异</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># pbmm2进行比对</span><br>pbmm2 align --<span class="hljs-built_in">sort</span> -J 60 03.mapping/01.index/r498.mmi data/raw/101/r84071_230824_001/A01/m84071_230824_103359_s1.hifi_reads.bc2027.bam -j 60 03.mapping/02.bam/101.bam<br></code></pre></td></tr></tbody></table></figure><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 鉴定结构变异信号</span><br><span class="hljs-attribute">pbsv</span> discover <span class="hljs-number">03</span>.mapping/<span class="hljs-number">02</span>.bam/<span class="hljs-number">101</span>.bam <span class="hljs-number">05</span>.pbsv/<span class="hljs-number">101</span>.svsig.gz<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 鉴定结构变异-单个样本</span><br>pbsv call -j 60 -S 0 data/ref/r498.fa 05.pbsv/101.svsig.gz 05.pbsv/101.pbsv.vcf<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 鉴定结构变异-多个样本</span><br>pbsv call ref.fa ref.sample1.svsig.gz ref.sample2.svsig.gz ref.var.vcf<br></code></pre></td></tr></tbody></table></figure><h2 id="sniffles2结构变异"><a href="#sniffles2结构变异" class="headerlink" title="sniffles2结构变异"></a>sniffles2结构变异</h2><p>这个软件的速度非常快。参考文献:</p><blockquote><p><a href="https://www.nature.com/articles/s41592-018-0001-7">Sedlazeck F J, Rescheneder P, Smolka M, et al. Accurate detection of complex structural variations using single-molecule sequencing[J]. Nature methods, 2018, 15(6): 461-468.</a></p></blockquote><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sniffles -t 60 --input 03.mapping/02.bam/1.bam --snf 08.sniffles/1.snf<br>sniffles -t 60 --input 08.sniffles/*.snf --vcf 08.sniffles/all.sniffles.vcf<br></code></pre></td></tr></tbody></table></figure><p>下一步是利用SV推断群体结构，这里选择不过滤位点信息，如果是后续做GWAS的话再过来位点。</p><p>将<code>vcf</code>文件转为<code>bed</code>文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">vcftools --vcf 08.sniffles/all.sniffles.vcf --plink --out 08.sniffles/all.sniffles.for.plink.pca.vcf<br>plink --noweb --file 08.sniffles/all.sniffles.for.plink.pca.vcf --make-bed --out 08.sniffles/all.sniffles.for.plink.pca.vcf.final<br></code></pre></td></tr></tbody></table></figure><p>输出的文件有这些：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">all.sniffles.for.plink.pca.vcf.final.bed<br>all.sniffles.for.plink.pca.vcf.final.bim<br>all.sniffles.for.plink.pca.vcf.final.fam<br>all.sniffles.for.plink.pca.vcf.final.log<br>all.sniffles.for.plink.pca.vcf.final.nosex<br>all.sniffles.for.plink.pca.vcf.log<br>all.sniffles.for.plink.pca.vcf.map<br>all.sniffles.for.plink.pca.vcf.ped<br>all.sniffles.vcf<br></code></pre></td></tr></tbody></table></figure><p>计算PCA：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">plink --threads 60 --bfile 08.sniffles/all.sniffles.for.plink.pca.vcf.final --pca 3 --out 08.sniffles/all.sniffles.plink.pca.res<br></code></pre></td></tr></tbody></table></figure><p>输出的文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang   24 10月 29 13:04 08.sniffles/all.sniffles.plink.pca.res.eigenval<br>-rw-rw-r-- 1 lixiang lixiang 3.6K 10月 29 13:04 08.sniffles/all.sniffles.plink.pca.res.eigenvec<br>-rw-rw-r-- 1 lixiang lixiang 1.1K 10月 29 13:04 08.sniffles/all.sniffles.plink.pca.res.log<br>-rw-rw-r-- 1 lixiang lixiang  582 10月 29 13:04 08.sniffles/all.sniffles.plink.pca.res.nosex<br></code></pre></td></tr></tbody></table></figure><h2 id="GFF文件注释VCF文件"><a href="#GFF文件注释VCF文件" class="headerlink" title="GFF文件注释VCF文件"></a>GFF文件注释VCF文件</h2><p>使用的是<a href="https://github.com/brentp/vcfanno#vcfanno">vcfanno</a>，参考文献：</p><blockquote><p><a href="https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-0973-5">Pedersen B S, Layer R M, Quinlan A R. Vcfanno: fast, flexible annotation of genetic variants[J]. Genome biology, 2016, 17(1): 1-9.</a></p></blockquote><p>先对GFF文件进行处理。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sort</span> -k1,1 -k4,4n r498.gff &gt; r498.sorted.gff<br>bgzip r498.sorted.gff<br>tabix r498.sorted.gff.gz<br></code></pre></td></tr></tbody></table></figure><p>两个配置文件：</p><p>gff_sv.lua:</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">function</span> gff_to_gene_name(infos, name_field)<br>    <span class="hljs-keyword">if</span> infos == nil or <span class="hljs-comment">#infos == 0 then</span><br>        <span class="hljs-built_in">return</span> nil<br>    end<br>    <span class="hljs-built_in">local</span> result = {}<br><br>    <span class="hljs-keyword">for</span> i=1,<span class="hljs-comment">#infos do</span><br>        info = infos[i]<br>        <span class="hljs-built_in">local</span> s, e = string.find(info, name_field .. <span class="hljs-string">"="</span>)<br>        <span class="hljs-keyword">if</span> s ~= nil <span class="hljs-keyword">then</span><br>            name = info:sub(e + 1)<br>            s, e = string.find(name, <span class="hljs-string">";"</span>)<br>            <span class="hljs-keyword">if</span> e == nil <span class="hljs-keyword">then</span><br>                e = name:len()<br>            <span class="hljs-keyword">else</span><br>                e = e - 1<br>            end<br><br>            result[name:sub(0, e)] = 1<br>        end<br>    end<br>    <span class="hljs-built_in">local</span> keys = {}<br>    <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> pairs(result) <span class="hljs-keyword">do</span><br>        keys[<span class="hljs-comment">#keys+1] = k</span><br>    end<br>    <span class="hljs-built_in">return</span> table.concat(keys,<span class="hljs-string">","</span>)<br>end<br></code></pre></td></tr></tbody></table></figure><p>gff_sv.conf:</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">[[annotation]]<br>file=<span class="hljs-string">"r498.sorted.gff.gz"</span><br>columns=[9]<br>names=[<span class="hljs-string">"gene"</span>]<br>ops=[<span class="hljs-string">"lua:gff_to_gene_name(vals, 'gene_name')"</span>]<br></code></pre></td></tr></tbody></table></figure><p>运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vcfanno -p 60 -lua gff_sv.lua gff_sv.conf all.sniffles.vcf &gt; all.sniffles.vcfanno.vcf <br></code></pre></td></tr></tbody></table></figure><h2 id="DNA甲基化"><a href="#DNA甲基化" class="headerlink" title="DNA甲基化"></a>DNA甲基化</h2><p>由于<code>PacBio HiFi</code> 的数据能够直接对DNA甲基化进行鉴定，因此加一步DNA甲基化：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">~/software/pb-CpG-tools-v2.3.2/bin/aligned_bam_to_cpg_scores --bam 03.mapping/02.bam/101.bam  --output-prefix ./04.CpG.methylation/101 --model ~/software/pb-CpG-tools-v2.3.2/models/pileup_calling_model.v1.tflite --threads 60<br></code></pre></td></tr></tbody></table></figure><h2 id="重复序列注释"><a href="#重复序列注释" class="headerlink" title="重复序列注释"></a>重复序列注释</h2><p>使用<code>EDTA</code>对重复序列进行注释，参考文献：</p><blockquote><p><a href="Ou S, Su W, Liao Y, et al. Benchmarking transposable element annotation methods for creation of a streamlined, comprehensive pipeline[J]. Genome biology, 2019, 20(1">Benchmarking transposable element annotation methods for creation of a streamlined, comprehensive pipeline</a>: 1-18.)</p></blockquote><h3 id="软件安装-3"><a href="#软件安装-3" class="headerlink" title="软件安装"></a>软件安装</h3><p>我直接用conda安装的时候失败了，选择按照官网建议的方式安装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/oushujun/EDTA.git<br>conda <span class="hljs-built_in">env</span> create -f EDTA.yml<br></code></pre></td></tr></tbody></table></figure><p>测试是否安装成功：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> ./EDTA/test<br>EDTA.pl --genome genome.fa --cds genome.cds.fa --curatedlib ../database/rice6.9.5.liban --exclude genome.exclude.bed --overwrite 1 --sensitive 1 --anno 1 --evaluate 1 --threads 10<br></code></pre></td></tr></tbody></table></figure><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><p>基因组文件是必须的，其他可选的文件有：</p><ul><li>编码序列：可以是这个物种的，也可以是近缘种的；</li><li>基因组上基因的起始和终止位置；</li><li>精准的物种TE库，如果没有就最好不要加进去。</li></ul><h3 id="运行示例"><a href="#运行示例" class="headerlink" title="运行示例"></a>运行示例</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">EDTA.pl --species Rice --genome ../02.hifiasm/final/1.HiFiasm.fa --cds ../01.data/ref/r498.cds.fa --curatedlib ../01.data/ref/r498.te.bed --overwrite 1 --sensitive 1 --evaluate 1 --threads 60<br></code></pre></td></tr></tbody></table></figure><h2 id="Augustus基因注释"><a href="#Augustus基因注释" class="headerlink" title="Augustus基因注释"></a>Augustus基因注释</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">augustus --species=rice --protein=on --codingseq=on --introns=on --start=on --stop=on --cds=on --exonnames=on --gff3=on  02.hifiasm/final/1.HiFiasm.fa  &gt; 14.augustus/1.augustus.gff3<br></code></pre></td></tr></tbody></table></figure><h2 id="DeepVariant鉴定变异"><a href="#DeepVariant鉴定变异" class="headerlink" title="DeepVariant鉴定变异"></a>DeepVariant鉴定变异</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>直接使用docker安装：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker pull google/deepvariant:1.6.0<br></code></pre></td></tr></tbody></table></figure><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>需要<code>bam</code>文件和基因组文件。<code>bam</code>问价可以使用<code>minimap</code>比对得到，需要使用<code>samtools</code>构建索引，生成<code>.bai</code>文件；基因组文件需要使用<code>samtools faidx</code>构建索引。</p><h3 id="开始运行"><a href="#开始运行" class="headerlink" title="开始运行"></a>开始运行</h3><p>我尝试使用基因组间的比对结果进行变异检测，但是失败了，换成原始数据比对得到的<code>bam</code>文件就可以了：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run \<br>-v <span class="hljs-string">"/home/lixiang/lixiang/yyt.acuce.3rd/03.mapping/02.bam/"</span>:<span class="hljs-string">"/input"</span> \<br>-v <span class="hljs-string">"/home/lixiang/lixiang/yyt.acuce.3rd/19.deepvariant/"</span>:<span class="hljs-string">"/output"</span> \<br>google/deepvariant:1.6.0 /opt/deepvariant/bin/run_deepvariant \<br>--model_type=WGS \<br>--ref=/input/r498.chr1-ch12.fa \<br>--reads=/input/99.bam \<br>--output_vcf=/output/vcf/99.vcf.gz \<br>--output_gvcf=/output/gvcf/99.gvcf.gz \<br>--num_shards=50 \<br>--logging_dir=/output/log/logs \<br>--dry_run=<span class="hljs-literal">false</span> \<br>--sample_name 99<br></code></pre></td></tr></tbody></table></figure><p>一行代码：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -v <span class="hljs-string">"/home/lixiang/lixiang/yyt.acuce.3rd/03.mapping/02.bam/"</span>:<span class="hljs-string">"/input"</span> -v <span class="hljs-string">"/home/lixiang/lixiang/yyt.acuce.3rd/19.deepvariant/"</span>:<span class="hljs-string">"/output"</span> google/deepvariant:1.6.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/r498.chr1-ch12.fa --reads=/input/99.bam --output_vcf=/output/vcf/99.vcf.gz --output_gvcf=/output/gvcf/99.gvcf.gz --num_shards=50 --logging_dir=/output/log/logs --dry_run=<span class="hljs-literal">false</span> --sample_name 99<br></code></pre></td></tr></tbody></table></figure><h3 id="变异数量统计"><a href="#变异数量统计" class="headerlink" title="变异数量统计"></a>变异数量统计</h3><p>用<code>bedtools</code>统计染色体不同区域上变异的覆盖度。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 构建基因组索引</span><br>samtools faidx r498.chr1-ch12.fa<br><br><span class="hljs-comment"># 基因组划窗</span><br>bedtools makewindows -g r498.chr1-ch12.fa.fai -w 100000 &gt; r498.genome.window.100000.bed<br><br><span class="hljs-comment"># 计算覆盖度</span><br>bedtools coverage -a r498.genome.window.100000.bed -b vcf/1.vcf.gz -counts &gt; snp.coverage/1.variant.deepvariant.coverage.txt<br></code></pre></td></tr></tbody></table></figure><h2 id="SyRi鉴定结构变异"><a href="#SyRi鉴定结构变异" class="headerlink" title="SyRi鉴定结构变异"></a>SyRi鉴定结构变异</h2><p>对结构变异进行注释：</p><ul><li>提取结构变异的位置信息形成<code>bed</code>文件：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">awk <span class="hljs-string">'$4 !="-"'</span> ../15.syri/02.sryi/1.HiFiasm.syrisyri.out | <span class="hljs-built_in">cut</span> -f 1-3,9 | &gt; ./1.HiFiasm.syrisyri.bed<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#染色体起始位置终止位置变异编号</span><br>Chr1    9522    9522    SNP3865<br>Chr1    9523    9523    SNP3866<br>Chr1    9570    9571    DEL3867<br>Chr1    9608    9608    INS3868<br>Chr1    9674    9674    INS3869<br>Chr1    9717    9717    SNP3870<br>Chr1    9757    9757    INS3871<br>Chr1    9794    9795    DEL3872<br>Chr1    9813    9815    DEL3873<br>Chr1    9822    9823    DEL3874<br></code></pre></td></tr></tbody></table></figure><ul><li>提取<code>gff</code>文件中<code>gene</code>的信息，形成<code>bed</code>文件：</li></ul><figure class="highlight dart"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart">awk <span class="hljs-string">'<span class="hljs-subst">$3</span> =="gene"'</span> r498.gff | awk {<span class="hljs-string">'print <span class="hljs-subst">$1</span>,<span class="hljs-subst">$4</span>, <span class="hljs-subst">$5</span>, <span class="hljs-subst">$9</span>'</span>} | awk <span class="hljs-string">'{split(<span class="hljs-subst">$4</span>, arr, ";"); print <span class="hljs-subst">$1</span>, <span class="hljs-subst">$2</span>, <span class="hljs-subst">$3</span>, arr[1]}'</span> | sed <span class="hljs-string">'s/ /\t/g'</span> | sed <span class="hljs-string">'s/ID=//g'</span> &gt; r498.gene.bed<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 染色体起始位置终止位置基因ID</span><br>Chr10   2763040 2763714 OsR498G1018107300.01<br>Chr10   20368540        20372915        OsR498G1018933700.01<br>Chr10   1287616 1287972 OsR498G1069497000.01<br>Chr10   4105970 4107094 OsR498G1069588100.01<br>Chr10   7942000 7943565 OsR498G1018367300.01<br>Chr10   13557765        13562571        OsR498G1018574200.01<br>Chr10   19655553        19661142        OsR498G1018894000.01<br>Chr10   19144811        19147243        OsR498G1018866300.01<br>Chr10   23208493        23210268        OsR498G1019111000.01<br>Chr10   3002409 3003778 OsR498G1018118600.01<br></code></pre></td></tr></tbody></table></figure><ul><li>合并：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bedtools intersect -a 1.HiFiasm.syrisyri.bed -b r498.gene.bed -loj -wo &gt; 1.HiFiasm.syrisyri.sv.gene.txt <br></code></pre></td></tr></tbody></table></figure><p>没有和基因位置有交集的会用占位符占位：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">Chr1    466785  466785  SNP4173 .       -1      -1      .<br>Chr1    468345  468345  SNP4174 .       -1      -1      .<br>Chr1    472130  472133  DEL4175 .       -1      -1      .<br>Chr1    484574  484574  SNP4176 Chr1    482644  485461  OsR498G0100029700.01<br>Chr1    484578  484583  DEL4177 Chr1    482644  485461  OsR498G0100029700.01<br>Chr1    485537  485537  SNP4178 .       -1      -1      .<br>Chr1    486206  486206  INS4179 .       -1      -1      .<br>Chr1    486289  486289  INS4180 .       -1      -1      .<br>Chr1    486673  486673  SNP4181 Chr1    486574  487163  OsR498G0100029900.01<br>Chr1    486677  486677  SNP4182 Chr1    486574  487163  OsR498G0100029900.01<br>Chr1    487347  487347  SNP4183 .       -1      -1      .<br></code></pre></td></tr></tbody></table></figure><p>如果只想要注释到基因上的变异位点，使用：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bedtools intersect -a 1.HiFiasm.syrisyri.bed -b r498.gene.bed -wa -wb &gt; 1.HiFiasm.syrisyri.sv.gene.txt<br></code></pre></td></tr></tbody></table></figure><p>输出的结果就全是注释到基因的变异位点：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">Chr1    32047   32047   SNP3883 Chr1    24850   34201   OsR498G0100001100.01<br>Chr1    47307   47315   DEL3884 Chr1    46834   50926   OsR498G0100002100.01<br>Chr1    51885   51885   INS3885 Chr1    51148   52666   OsR498G0100002300.01<br>Chr1    229993  229993  SNP3900 Chr1    226316  230889  OsR498G0100015500.01<br>Chr1    281669  281669  SNP3908 Chr1    278278  285269  OsR498G0100017900.01<br>Chr1    302175  302175  INS3910 Chr1    296187  309155  OsR498G0100018900.01<br>Chr1    302551  302551  SNP3911 Chr1    296187  309155  OsR498G0100018900.01<br>Chr1    307894  307894  SNP3912 Chr1    296187  309155  OsR498G0100018900.01<br>Chr1    307942  307942  INS3913 Chr1    296187  309155  OsR498G0100018900.01<br>Chr1    322957  322958  DEL3918 Chr1    321670  324907  OsR498G0100021200.01<br></code></pre></td></tr></tbody></table></figure><h2 id="VCF文件建树"><a href="#VCF文件建树" class="headerlink" title="VCF文件建树"></a>VCF文件建树</h2><p>大概可以分为过滤、计算距离、建树等三步。</p><ul><li>过滤低质量的变异位点：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bcftools filter -i <span class="hljs-string">'QUAL&gt;=20'</span> all.deepvariant.vcf.gz -O z -o all.deepvariant.filtered.vcf.gz<br></code></pre></td></tr></tbody></table></figure><ul><li>筛选SNP数据：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bcftools view -v snps all.deepvariant.filtered.vcf.gz -Oz -o all.deepvariant.filtered.snp.vcf.gz<br></code></pre></td></tr></tbody></table></figure><ul><li>再次过滤SNP：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">plink --vcf all.deepvariant.filtered.cnp.vcf.gz --geno 0.1 --maf 0.05 --out all.deepvariant.filtered.snp.plink --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:<span class="hljs-comment"># --keep-allele-order</span><br></code></pre></td></tr></tbody></table></figure><ul><li>转换为phylip格式：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">python3 ~/software/vcf2phylip-2.8/vcf2phylip.py -i all.deepvariant.filtered.snp.plink.vcf<br></code></pre></td></tr></tbody></table></figure><ul><li>IQ-tree建树：<code>-m MFP</code>表示查找最佳模型，<code>-b</code>表示Bootstrap 迭代次数。为了节省时间，看个大概，可以使用<code>-m TEST</code>。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">iqtree --mem 80% -T 60 -m MFP -b 1000  -s all.deepvariant.filtered.snp.plink.min4.phy<br></code></pre></td></tr></tbody></table></figure><blockquote><p><code>-m MFP</code>：ModelFinder will test up to 1232 protein models (sample size: 168525) …</p><p><code>-m TEST</code>：ModelFinder will test up to 224 protein models (sample size: 168525) …</p></blockquote><p>运行完成会输出最佳模型：</p><blockquote><p>Best-fit model: PMB+F+I+G4 chosen according to BIC.</p></blockquote><ul><li>计算距离</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">~/software/VCF2Dis-1.50/bin/VCF2Dis -i all.deepvariant.filtered.snp.vcf.gz -o all.deepvariant.filtered.snp.mat    <br></code></pre></td></tr></tbody></table></figure><ul><li>构建nj-tree</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">````<br><br><span class="hljs-comment">## VCF文件PCA</span><br><br>- 过滤低质量的变异位点：<br><br>````sh<br>bcftools filter -i <span class="hljs-string">'QUAL&gt;=20'</span> all.deepvariant.vcf.gz -O z -o all.deepvariant.filtered.vcf.gz<br></code></pre></td></tr></tbody></table></figure><ul><li>筛选SNP数据：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bcftools view -v snps all.deepvariant.filtered.vcf.gz -Oz -o all.deepvariant.filtered.snp.vcf.gz<br></code></pre></td></tr></tbody></table></figure><ul><li>再次过滤SNP：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">plink --vcf all.deepvariant.filtered.cnp.vcf.gz --geno 0.1 --maf 0.05 --out all.deepvariant.filtered.snp.plink --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:<span class="hljs-comment"># --keep-allele-order</span><br></code></pre></td></tr></tbody></table></figure><ul><li>格式转换：将vcf文件转换为plink格式。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">vcftools --vcf all.deepvariant.filtered.snp.plink.vcf --plink --out all.deepvariant.filtered.snp.plink.pca.data<br>plink --noweb --file all.deepvariant.filtered.snp.plink.pca.data --make-bed --out all.deepvariant.filtered.snp.plink.pca.data.final<br></code></pre></td></tr></tbody></table></figure><ul><li>PCA</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">plink --bfile all.deepvariant.filtered.snp.plink.pca.data.final --pca --out all.deepvariant.filtered.snp.plink.pca.result<br></code></pre></td></tr></tbody></table></figure><p>最终的文件有这些：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang  308 11月 14 19:54 all.deepvariant.filtered.snp.plink.nosex<br>-rw-rw-r-- 1 lixiang lixiang 2.3M 11月 14 20:21 all.deepvariant.filtered.snp.plink.pca.data.final.bed<br>-rw-rw-r-- 1 lixiang lixiang 5.1M 11月 14 20:21 all.deepvariant.filtered.snp.plink.pca.data.final.bim<br>-rw-rw-r-- 1 lixiang lixiang  794 11月 14 20:21 all.deepvariant.filtered.snp.plink.pca.data.final.fam<br>-rw-rw-r-- 1 lixiang lixiang 1.6K 11月 14 20:21 all.deepvariant.filtered.snp.plink.pca.data.final.log<br>-rw-rw-r-- 1 lixiang lixiang  308 11月 14 20:21 all.deepvariant.filtered.snp.plink.pca.data.final.nosex<br>-rw-rw-r-- 1 lixiang lixiang  532 11月 14 20:19 all.deepvariant.filtered.snp.plink.pca.data.log<br>-rw-rw-r-- 1 lixiang lixiang 4.4M 11月 14 20:19 all.deepvariant.filtered.snp.plink.pca.data.map<br>-rw-rw-r-- 1 lixiang lixiang  36M 11月 14 20:19 all.deepvariant.filtered.snp.plink.pca.data.ped<br>-rw-rw-r-- 1 lixiang lixiang  166 11月 14 20:22 all.deepvariant.filtered.snp.plink.pca.result.eigenval<br>-rw-rw-r-- 1 lixiang lixiang  12K 11月 14 20:22 all.deepvariant.filtered.snp.plink.pca.result.eigenvec<br>-rw-rw-r-- 1 lixiang lixiang 1.1K 11月 14 20:22 all.deepvariant.filtered.snp.plink.pca.result.log<br>-rw-rw-r-- 1 lixiang lixiang  308 11月 14 20:22 all.deepvariant.filtered.snp.plink.pca.result.nosex<br>-rw-rw-r-- 1 lixiang lixiang  42M 11月 14 19:54 all.deepvariant.filtered.snp.plink.vcf<br>-rw-rw-r-- 1 lixiang lixiang 725M 11月 14 18:36 all.deepvariant.filtered.vcf.gz<br>-rw-rw-r-- 1 lixiang lixiang 8.3G 11月 14 17:23 all.deepvariant.vcf.gz<br></code></pre></td></tr></tbody></table></figure><p>用<code>all.deepvariant.filtered.snp.plink.pca.result.eigenval</code>和<code>all.deepvariant.filtered.snp.plink.pca.result.eigenvec</code>这两个文件就可以画图了。</p><h2 id="ANNOVAR注释变异"><a href="#ANNOVAR注释变异" class="headerlink" title="ANNOVAR注释变异"></a>ANNOVAR注释变异</h2><ul><li>gff3文件转GenPred文件（PS：GFF3文件需要有表头，加上<code>##gff-version 3</code>即可。）</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">gff3ToGenePred KY131.IGDBv1.Allset.gff KY131_refGene.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>提取转录本序列</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">perl ~/software/annovar/retrieve_seq_from_fasta.pl --format refGene --seqfile KY131.genome KY131_refGene.txt -outfile KY131_refGeneMrna.fa <br></code></pre></td></tr></tbody></table></figure><ul><li>过滤并转换VCF格式</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">bcftools filter -i <span class="hljs-string">'QUAL&gt;=20'</span> 07.gatk/s-1-2_H7GYJCCXY_L1.RGA5.gvcf -O z -o 07.gatk/s-1-2_H7GYJCCXY_L1.RGA5.gvcf.filtered.gz<br>perl ~/software/annovar/convert2annovar.pl -format vcf4 07.gatk/s-1-2_H7GYJCCXY_L1.RGA5.gvcf.filtered.gz &gt; 07.gatk/s-1-2_H7GYJCCXY_L1.RGA5.annovar.vcf<br></code></pre></td></tr></tbody></table></figure><ul><li>注释</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">perl ~/software/annovar/annotate_variation.pl --geneanno -dbtype refGene --buildver KY131 07.gatk/s-1-2_H7GYJCCXY_L1.RGA5.annovar.vcf 01.data/ANNOVAR -out 10.annovar/s-1-2_H7GYJCCXY_L1.RGA5<br></code></pre></td></tr></tbody></table></figure><p>输出结果：每个文件会输出三个文件</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang  36K 11月 24 15:39 s-101_H7YKKCCXY_L1.PIK1.exonic_variant_function<br>-rw-rw-r-- 1 lixiang lixiang 1.1K 11月 24 15:39 s-101_H7YKKCCXY_L1.PIK1.<span class="hljs-built_in">log</span><br>-rw-rw-r-- 1 lixiang lixiang  31K 11月 24 15:39 s-101_H7YKKCCXY_L1.PIK1.variant_function<br></code></pre></td></tr></tbody></table></figure><ul><li>s-101_H7YKKCCXY_L1.PIK1.exonic_variant_function：变异信息，是同义突变还是非同义突变，以及突变前后的序列差异。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311241605043.png" alt="image-20231124160534751"></p><ul><li>s-101_H7YKKCCXY_L1.PIK1.variant_function：突变发生的位置在那个区域。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202311241606350.png" alt="image-20231124160610739"></p><h1 id="转录组"><a href="#转录组" class="headerlink" title="转录组"></a>转录组</h1><h2 id="可变剪切分析"><a href="#可变剪切分析" class="headerlink" title="可变剪切分析"></a>可变剪切分析</h2><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><blockquote><p><a href="https://www.pnas.org/doi/abs/10.1073/pnas.1419161111">Shen S, Park J W, Lu Z, et al. rMATS: robust and flexible detection of differential alternative splicing from replicate RNA-Seq data[J]. <strong><em>Proceedings of the National Academy of Sciences</em></strong>, 2014, 111(51): E5593-E5601.</a></p></blockquote><h3 id="软件安装-4"><a href="#软件安装-4" class="headerlink" title="软件安装"></a>软件安装</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba  install -c bioconda rmats<br></code></pre></td></tr></tbody></table></figure><h3 id="构建索引"><a href="#构建索引" class="headerlink" title="构建索引"></a>构建索引</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">STAR --runMode genomeGenerate --genomeDir 01.genome.data/star.index --genomeFastaFiles 01.genome.data/genome.fa --sjdbGTFfile 01.genome.data/genome.gtf<br></code></pre></td></tr></tbody></table></figure><h1 id="泛基因组"><a href="#泛基因组" class="headerlink" title="泛基因组"></a>泛基因组</h1><h2 id="graph-based-pan-genome"><a href="#graph-based-pan-genome" class="headerlink" title="graph-based pan-genome"></a>graph-based pan-genome</h2><p>如何理解基于图的泛基因组呢？可以想象成一个网络图，有节点<code>node</code>和边<code>edge</code>，节点就是没有发生变异的序列，edge呢就是发生了遗传变异的序列，将这些节点连接起来就得到<code>path</code>. </p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202312260914631.png" alt="image-20231226091411962"></p><h2 id="Minigraph-Cactus"><a href="#Minigraph-Cactus" class="headerlink" title="Minigraph-Cactus"></a>Minigraph-Cactus</h2><p>这个流程发表在NBT上（<a href="https://www.nature.com/articles/s41587-023-01793-w">Pangenome graph construction from genome alignments with Minigraph-Cactus</a>)，人类泛基因组文章用的就是这个流程。</p><h3 id="软件安装-5"><a href="#软件安装-5" class="headerlink" title="软件安装"></a>软件安装</h3><p>软甲地址是<a href="https://github.com/ComparativeGenomicsToolkit/cactus">https://github.com/ComparativeGenomicsToolkit/cactus</a>. 自己编译，但是我编译好几次都没有泛基因组这个流程，索性用Docker直接部署。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker pull quay.io/comparative-genomics-toolkit/cactus:v2.7.0<br></code></pre></td></tr></tbody></table></figure><h3 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h3><ul><li>样品文件准备：准备一个txt文件，以<code>\t</code>分隔，第一列是样品名称，第二列是样品所在的路径：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">100     ./genome/100.HiFiasm.fa<br>101     ./genome/101.HiFiasm.fa<br>10      ./genome/10.HiFiasm.fa<br>11      ./genome/11.HiFiasm.fa<br>12      ./genome/12.HiFiasm.fa<br>13      ./genome/13.HiFiasm.fa<br>14      ./genome/14.HiFiasm.fa<br>15      ./genome/15.HiFiasm.fa<br>16      ./genome/16.HiFiasm.fa<br>17      ./genome/17.HiFiasm.fa<br></code></pre></td></tr></tbody></table></figure><ul><li>进入镜像：需要指定宿主机的工作目录，也就是文件存放的位置，如我的工作路径在<code>~/lixiang/yyt.acuce.3rd/25.pangenome</code>：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -itd --name cactus-pan -v ~/lixiang/yyt.acuce.3rd/25.pangenome:/data quay.io/comparative-genomics-toolkit/cactus:v2.7.0<br></code></pre></td></tr></tbody></table></figure><ul><li>开始运行：100个水稻的基因组差不多24小时就能运行完了，速度还是很快的：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> docker <span class="hljs-built_in">exec</span> cactus-pan cactus-pangenome ./jb sample.txt --outDir ./cactus-pangenome.r498 --outName Acuce --reference R498 --vcf --giraffe --gfa --gbz --odgi --xg --viz --draw --chrom-vg --chrom-og --maxMemory 400G --logFile run.log <br></code></pre></td></tr></tbody></table></figure><ul><li>输出文件：输出文件包含了最常见的<code>gfa</code>格式的<code>graph</code>文件，<code>vcf</code>文件存放变异信息，<code>chrom-subproblems</code>文件夹包含了每条染色体的<code>graph</code>。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sh">总计 38G<br>drwxr-xr-x  2 root    root     4.0K 12月 24 02:33 Acuce.chroms<br>-rw-r--r--  1 root    root     323M 12月 24 02:33 Acuce.d2.dist<br>-rw-r--r--  1 root    root     366M 12月 24 02:33 Acuce.d2.gbz<br>-rw-r--r--  1 root    root     4.8G 12月 24 02:33 Acuce.d2.min<br>-rw-r--r--  1 root    root      13G 12月 24 02:33 Acuce.full.hal<br>-rw-r--r--  1 root    root     6.6G 12月 24 02:33 Acuce.full.og<br>-rw-r--r--  1 root    root     316M 12月 23 14:26 Acuce.gaf.gz<br>-rw-r--r--  1 root    root     367M 12月 24 02:33 Acuce.gbz<br>-rw-r--r--  1 root    root     126M 12月 23 14:27 Acuce.gfa.fa.gz<br>-rw-r--r--  1 root    root    1015M 12月 24 02:33 Acuce.gfa.gz<br>-rw-r--r--  1 root    root     1.8G 12月 23 14:26 Acuce.paf<br>-rw-r--r--  1 root    root     1.7M 12月 23 14:26 Acuce.paf.filter.log<br>-rw-r--r--  1 root    root     440M 12月 23 14:26 Acuce.paf.unfiltered.gz<br>-rw-r--r--  1 root    root     1.3G 12月 24 02:33 Acuce.raw.vcf.gz<br>-rw-r--r--  1 root    root     186K 12月 24 02:33 Acuce.raw.vcf.gz.tbi<br>-rw-r--r--  1 root    root      17M 12月 24 02:33 Acuce.snarls<br>-rw-r--r--  1 root    root     477K 12月 24 02:33 Acuce.stats.tgz<br>-rw-r--r--  1 root    root     122M 12月 23 10:03 Acuce.sv.gfa.gz<br>-rw-r--r--  1 lixiang lixiang  2.1G 12月 24 02:33 Acuce.vcf<br>-rw-r--r--  1 root    root     179K 12月 24 02:33 Acuce.vcf.gz.tbi<br>drwxr-xr-x  2 root    root     4.0K 12月 24 02:33 Acuce.viz<br>-rw-r--r--  1 root    root     5.9G 12月 24 02:33 Acuce.xg<br>drwxr-xr-x  2 root    root     4.0K 12月 23 18:40 chrom-alignments<br>drwxr-xr-x 18 root    root     4.0K 12月 23 14:33 chrom-subproblems<br>-rw-r--r--  1 root    root     3.7K 12月 23 14:27 sample.txt<br></code></pre></td></tr></tbody></table></figure><h1 id="比较基因组"><a href="#比较基因组" class="headerlink" title="比较基因组"></a>比较基因组</h1><h2 id="软件安装-6"><a href="#软件安装-6" class="headerlink" title="软件安装"></a>软件安装</h2><p>使用<code>mamba</code>安装软件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create --name comparative.genomics<br>mamba activate comparative.genomics<br><br><span class="hljs-comment"># blast+</span><br>mamba install -c bioconda blast<br><br><span class="hljs-comment"># OrthoFinder</span><br>mmaba install -c bioconda orthofinder<br><br><span class="hljs-comment"># gffread=0.99</span><br><span class="hljs-comment"># 脚本需要这个版本</span><br>mamba install -c bioconda gffread=0.9.9<br><br><span class="hljs-comment"># bio-per</span><br><span class="hljs-comment"># 脚本需要用到这个perl模块</span><br>mamba install -c bioconda perl-bioperl<br><br>mamba install -c bioconda gblocks<br><br>mamba install -c bioconda pal2nal<br><br>mamba install -c bioconda paml<br><br>mamba install -c bioconda cafe<br></code></pre></td></tr></tbody></table></figure><p>需要手动安装<code>FigTree</code>，主要功能是将系统发育树设置为有根树。</p><p>官方地址：<a href="https://github.com/rambaut/figtree/releases/tag/v1.4.4">https://github.com/rambaut/figtree/releases/tag/v1.4.4</a>. </p><p><a href="./FigTree.v1.4.4.zip">点击下载Windows版本</a>，解压后双击打开即可。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308082029225.png" alt="FigTree"></p><h2 id="数据下载处理"><a href="#数据下载处理" class="headerlink" title="数据下载处理"></a>数据下载处理</h2><p>从<a href="http://ricerc.sicau.edu.cn/RiceRC/download/downloadBefore">Rice Resource Center</a>下载非洲栽培稻<code>CG14</code>、籼稻代表性品种<code>IR64</code>、<code>R498</code>和我们国内水稻研究领域常用的<code>ZH11</code>用于本次分析。最终得到如下的文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-r--r-- 1 lixiang lixiang 338M 12月 19  2019 CG14.fa<br>-rw-r--r-- 1 lixiang lixiang 103M 12月 25  2019 CG14.gff3<br>-rw-rw-r-- 1 lixiang lixiang 374M  8月  8 16:38 IR64.fa<br>-rw-rw-r-- 1 lixiang lixiang 159M  8月  8 16:37 IR64.gff3<br>-rw-r--r-- 1 lixiang lixiang 364M 12月 19  2019 ZH11.fa<br>-rw-r--r-- 1 lixiang lixiang 135M 12月 25  2019 ZH11.gff3<br></code></pre></td></tr></tbody></table></figure><p><strong>一个比较重要的点：基因组中染色体的编号和<code>gff</code>文件中的必须一致！！！</strong>如：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;grep <span class="hljs-string">"&gt;"</span> CG14.fa| <span class="hljs-built_in">head</span><br>&gt;Chr1<br>&gt;Chr2<br>&gt;Chr3<br>&gt;Chr4<br>&gt;Chr5<br>&gt;Chr6<br>&gt;Chr7<br>&gt;Chr8<br>&gt;Chr9<br>&gt;Chr10<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;<span class="hljs-built_in">head</span> CG14.gff3 <br>Chr1    IGDBv1  gene    1264    1617    .       -       .       ID=OsCG14G0100000200.01;Name=OsCG14G0100000200.01;<br>Chr1    IGDBv1  mRNA    1264    1617    .       -       .       ID=OsCG14G0100000200.01.T01;Name=OsCG14G0100000200.01.T01;Parent=OsCG14G0100000200.01;<br>Chr1    IGDBv1  exon    1597    1617    .       -       .       ID=exon239804;Name=exon239804;Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  exon    1458    1594    .       -       .       ID=exon239805;Name=exon239805;Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  exon    1264    1384    .       -       .       ID=exon239806;Name=exon239806;Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  CDS     1597    1617    .       -       0       ID=cds239804;Name=cds239804;Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  CDS     1458    1594    .       -       0       ID=cds239805;Name=cds239805;Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  CDS     1264    1384    .       -       2       ID=cds239806;Name=cds239806;Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  stop_codon      1264    1266    .       -       .       Parent=OsCG14G0100000200.01.T01<br>Chr1    IGDBv1  gene    3872    4408    .       -       .       ID=OsCG14G0100000600.01;Name=OsCG14G0100000600.01;<br></code></pre></td></tr></tbody></table></figure><p>下一步是准备<code>CDS</code>文件和<code>蛋白序列</code>文件。使用这两个脚本：<a href="./get_cds_pep_from_gff_and_genome.pl">get_cds_pep_from_gff_and_genome.pl</a>、<a href="./get_longest_pepV2.pl">get_longest_pepV2.pl</a>和<a href="./accordingIDgetGFF.pl">accordingIDgetGFF.pl</a></p><p>使用方法为：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">perl ./01.scripts/get_cds_pep_from_gff_and_genome.pl -gff ./02.data/CG14.gff3 -genome ./02.data/CG14.fa -index CG14 -<span class="hljs-built_in">od</span> ./03.cds.pep/CG14<br>perl ./01.scripts/get_cds_pep_from_gff_and_genome.pl -gff ./02.data/ZH11.gff3 -genome ./02.data/ZH11.fa -index ZH11 -<span class="hljs-built_in">od</span> ./03.cds.pep/ZH11<br>perl ./01.scripts/get_cds_pep_from_gff_and_genome.pl -gff ./02.data/IR64.gff3 -genome ./02.data/IR64.fa -index IR64 -<span class="hljs-built_in">od</span> ./03.cds.pep/IR64<br>perl ./01.scripts/get_cds_pep_from_gff_and_genome.pl -gff ./02.data/R498.gff3 -genome ./02.data/R498.fa -index R498 -<span class="hljs-built_in">od</span> ./03.cds.pep/R498<br></code></pre></td></tr></tbody></table></figure><p>运行完成就可以得到下面的结果：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;ll 03.cds.pep/CG14/Longest <br>总计 89M<br>-rw-rw-r-- 1 lixiang lixiang 1.6M  8月  8 16:00 CG14.gff_for_MCSCANX.txt<br>-rw-rw-r-- 1 lixiang lixiang 1.8M  8月  8 16:00 CG14.gff_for_WGD.txt<br>-rw-rw-r-- 1 lixiang lixiang 1.7M  8月  8 16:00 CG14.<span class="hljs-built_in">id</span><br>-rw-rw-r-- 1 lixiang lixiang  41M  8月  8 16:00 CG14.longest.cds.fa<br>-rw-rw-r-- 1 lixiang lixiang  30M  8月  8 16:0<br></code></pre></td></tr></tbody></table></figure><h2 id="基因家族推断"><a href="#基因家族推断" class="headerlink" title="基因家族推断"></a>基因家族推断</h2><p>使用<code>OrthoFinder</code>. 需要注意的点有：</p><ul><li>输入文件是蛋白序列，以<code>.fa</code>或者<code>.fasta</code>结尾；</li><li>不能存在可变剪切，输入每个基因最长的转录本；</li><li>多倍体必须拆成亚基因组对应的蛋白质序列去做。如陆地棉为<code>AADD</code>，共获得两套亚基因组A和D，所以要把该基因组所有的蛋白分成A和D这两个物种去做。</li></ul><h3 id="拷贝最长转录本的蛋白序列"><a href="#拷贝最长转录本的蛋白序列" class="headerlink" title="拷贝最长转录本的蛋白序列"></a>拷贝最长转录本的蛋白序列</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> 04.longest.pep<br><span class="hljs-built_in">cp</span> 03.cds.pep/CG14/Longest/CG14.longest.protein.fa 04.longest.pep/CG14.fa   <br><span class="hljs-built_in">cp</span> 03.cds.pep/ZH11/Longest/ZH11.longest.protein.fa 04.longest.pep/ZH11.fa<br><span class="hljs-built_in">cp</span> 03.cds.pep/IR64/Longest/IR64.longest.protein.fa 04.longest.pep/IR64.fa<br><span class="hljs-built_in">cp</span> 03.cds.pep/R498/Longest/R498.longest.protein.fa 04.longest.pep/R498.fa<br></code></pre></td></tr></tbody></table></figure><h3 id="运行OrthoFinder"><a href="#运行OrthoFinder" class="headerlink" title="运行OrthoFinder"></a>运行OrthoFinder</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">orthofinder -f 04.longest.pep -S diamond -t 50 -n 05.orthofinder<br><span class="hljs-built_in">mkdir</span> 05.orthofinder<br><span class="hljs-built_in">mv</span> 04.longest.pep/OrthoFinder/Results_05.orthofinder/* 05.orthofinder<br></code></pre></td></tr></tbody></table></figure><ul><li><code>-S</code>表示使用什么软件进行蛋白序列比对，<code>diamond</code>非常快，通常用它。</li><li><code>-t</code>表示线程数，数字越大运行越快。</li></ul><h3 id="Orthofinder输出结果"><a href="#Orthofinder输出结果" class="headerlink" title="Orthofinder输出结果"></a>Orthofinder输出结果</h3><p>运行完成会输出如下的结果：</p><blockquote><p>OrthoFinder assigned 108252 genes (94.3% of total) to 31664 orthogroups. Fifty percent of all genes were in orthogroups with 3 or more genes (G50 was 3) and were contained in the largest 12883 orthogroups (O50 was 12883). There were 24518 orthogroups with all species present and 19801 of these consisted entirely of single-copy genes.</p></blockquote><p>输出这些文件（主要包含<code>共有基因家族和共有基因</code>、<code>各物种特有基因家族和特有基因</code>、<code>单拷贝基因家族和单拷贝基因</code>和<code>未能形成基因家族的物种特有基因</code>）：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang 2.5K  8月  8 16:50 Citation.txt<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:50 Comparative_Genomics_Statistics<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:50 Gene_Duplication_Events<br>drwxrwxr-x 2 lixiang lixiang 216K  8月  8 16:49 Gene_Trees<br>-rw-rw-r-- 1 lixiang lixiang  748  8月  8 16:50 Log.txt<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:49 Orthogroups<br>drwxrwxr-x 2 lixiang lixiang 1.1M  8月  8 16:49 Orthogroup_Sequences<br>drwxrwxr-x 5 lixiang lixiang 4.0K  8月  8 16:50 Orthologues<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:49 Phylogenetically_Misplaced_Genes<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:49 Phylogenetic_Hierarchical_Orthogroups<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:49 Putative_Xenologs<br>drwxrwxr-x 2 lixiang lixiang 216K  8月  8 16:49 Resolved_Gene_Trees<br>drwxrwxr-x 2 lixiang lixiang 532K  8月  8 16:49 Single_Copy_Orthologue_Sequences<br>drwxrwxr-x 2 lixiang lixiang 4.0K  8月  8 16:49 Species_Tree<br>drwxrwxr-x 5 lixiang lixiang 4.0K  8月  8 16:50 WorkingDirectory<br></code></pre></td></tr></tbody></table></figure><h3 id="不同物种共有的Orthogroups"><a href="#不同物种共有的Orthogroups" class="headerlink" title="不同物种共有的Orthogroups"></a>不同物种共有的Orthogroups</h3><p>共有和特有的<code>Orthogroups</code>:</p><figure class="highlight tap"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">&gt;cat 05.orthofinder/Comparative_Genomics_Statistics/Orthogroups_SpeciesOverlaps.tsv<br>        CG14    IR64    ZH11<br>CG14   <span class="hljs-number"> 28526 </span> <span class="hljs-number"> 26818 </span>  26007<br>IR64   <span class="hljs-number"> 26818 </span> <span class="hljs-number"> 29829 </span>  27297<br>ZH11   <span class="hljs-number"> 26007 </span> <span class="hljs-number"> 27297 </span>  28913<br></code></pre></td></tr></tbody></table></figure><h3 id="主要统计信息"><a href="#主要统计信息" class="headerlink" title="主要统计信息"></a>主要统计信息</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;<span class="hljs-built_in">cat</span> 05.orthofinder/Comparative_Genomics_Statistics/Statistics_Overall.tsv <br>Number of species       3 <span class="hljs-comment">#用于分析的物种数量</span><br>Number of genes 114839 <span class="hljs-comment">#所有基因数量</span><br>Number of genes <span class="hljs-keyword">in</span> orthogroups  108252 <span class="hljs-comment"># 聚类成功的基因数量</span><br>Number of unassigned genes      6587 <span class="hljs-comment"># 没有聚类上的基因数量</span><br>Percentage of genes <span class="hljs-keyword">in</span> orthogroups      94.3 <span class="hljs-comment"># 聚类成功的基因比例</span><br>Percentage of unassigned genes  5.7 <span class="hljs-comment"># 未聚类的基因的比例</span><br>Number of orthogroups   31664 <span class="hljs-comment"># 基因家族数量</span><br>Number of species-specific orthogroups  578 <span class="hljs-comment"># 物种特异性基因家族数量</span><br>Number of genes <span class="hljs-keyword">in</span> species-specific orthogroups 2296 <span class="hljs-comment"># 物种特异性基因家族包含的基因数量</span><br>Percentage of genes <span class="hljs-keyword">in</span> species-specific orthogroups     2.0 <span class="hljs-comment"># 物种特有基因家族中包含的基因总数占比</span><br>Mean orthogroup size    3.4 <span class="hljs-comment"># 基因家族平均基因数量</span><br>Median orthogroup size  3.0 <span class="hljs-comment"># 基因家族基因数量的中位数</span><br>G50 (assigned genes)    3 <span class="hljs-comment"># 按照基因家族中包含基因数目从大到小排列，排列到50%（按照聚类上基因数目统计）的基因时对应的那个基因家族包含的基因数目时对应的那个基因家族包含的基因数目</span><br>G50 (all genes) 3 <span class="hljs-comment"># 按照全部基因统计</span><br>O50 (assigned genes)    11785 <span class="hljs-comment"># </span><br>O50 (all genes) 12883<br>Number of orthogroups with all species present  24518 <span class="hljs-comment"># 所有物种都含有的基因家族数量</span><br>Number of single-copy orthogroups       19801 <span class="hljs-comment"># 单拷贝基因家族数量</span><br><span class="hljs-comment"># 下面的是其他统计信息</span><br>Date    2023-08-08<br>Orthogroups file        Orthogroups.tsv<br>Unassigned genes file   Orthogroups_UnassignedGenes.tsv<br>Per-species statistics  Statistics_PerSpecies.tsv<br>Overall statistics      Statistics_Overall.tsv<br>Orthogroups shared between species      Orthogroups_SpeciesOverlaps.tsv<br><br>Average number of genes per-species <span class="hljs-keyword">in</span> orthogroup       Number of orthogroups   Percentage of orthogroups       Number of genes Percentage of genes<br>&lt;1      5512    17.4    11024   10.2<br><span class="hljs-string">'1      23452   74.1    73919   68.3</span><br><span class="hljs-string">'</span>2      1953    6.2     12442   11.5<br><span class="hljs-string">'3      419     1.3     4015    3.7</span><br><span class="hljs-string">'</span>4      145     0.5     1828    1.7<br><span class="hljs-string">'5      58      0.2     913     0.8</span><br><span class="hljs-string">'</span>6      40      0.1     747     0.7<br><span class="hljs-string">'7      17      0.1     378     0.3</span><br><span class="hljs-string">'</span>8      15      0.0     375     0.3<br><span class="hljs-string">'9      13      0.0     359     0.3</span><br><span class="hljs-string">'</span>10     6       0.0     187     0.2<br>11-15   19      0.1     709     0.7<br>16-20   9       0.0     482     0.4<br>21-50   4       0.0     352     0.3<br>51-100  2       0.0     522     0.5<br>101-150 0       0.0     0       0.0<br>151-200 0       0.0     0       0.0<br>201-500 0       0.0     0       0.0<br>501-1000        0       0.0     0       0.0<br><span class="hljs-string">'1001+  0       0.0     0       0.0</span><br><span class="hljs-string"></span><br><span class="hljs-string">Number of species in orthogroup Number of orthogroups</span><br><span class="hljs-string">1       578 # 578个基因存在于1个物种中</span><br><span class="hljs-string">2       6568 # 6568个基因存在于2个物种中</span><br><span class="hljs-string">3       24518 # 24518个基因存在于3个物种中【PS：这就是泛基因组中的core gene啊】</span><br></code></pre></td></tr></tbody></table></figure><h3 id="物种统计信息"><a href="#物种统计信息" class="headerlink" title="物种统计信息"></a>物种统计信息</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;<span class="hljs-built_in">cat</span> 05.orthofinder/Comparative_Genomics_Statistics/Statistics_PerSpecies.tsv <br></code></pre></td></tr></tbody></table></figure><div class="table-container"><table><thead><tr><th>比较指标</th><th>CG14</th><th>IR64</th><th>ZH11</th></tr></thead><tbody><tr><td>Number of genes【用于计算的基因数量】</td><td>38016</td><td>39498</td><td>37325</td></tr><tr><td>Number of genes in  orthogroups【参与聚类的基因数量】</td><td>35327</td><td>37146</td><td>35779</td></tr><tr><td>Number of unassigned genes【未参与聚类的基因数量】</td><td>2689</td><td>2352</td><td>1546</td></tr><tr><td>Percentage of genes in  orthogroups【参与聚类的基因比例】</td><td>92.9</td><td>94</td><td>95.9</td></tr><tr><td>Percentage of unassigned  genes【未参与聚类的基因比例】</td><td>7.1</td><td>6</td><td>4.1</td></tr><tr><td>Number of orthogroups  containing species【基因家族数量】</td><td>28526</td><td>29829</td><td>28913</td></tr><tr><td>Percentage of orthogroups  containing species【基因家族基因比例】</td><td>90.1</td><td>94.2</td><td>91.3</td></tr><tr><td>Number of species-specific  orthogroups【特有的基因家族】</td><td>219</td><td>232</td><td>127</td></tr><tr><td>Number of genes in  species-specific orthogroups【特有的基因数量】</td><td>756</td><td>827</td><td>713</td></tr><tr><td>Percentage of genes in  species-specific orthogroups【特有基因的比例】</td><td>2</td><td>2.1</td><td>1.9</td></tr></tbody></table></div><p>PS：用这个表基因可以做泛基因组分析中那个典型的图了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308081726216.png" alt="Genomic variation in 3,010 diverse accessions of Asian cultivated rice"></p><blockquote><p><a href="https://www.nature.com/articles/s41586-018-0063-9">Wang W, Mauleon R, Hu Z, et al. Genomic variation in 3,010 diverse accessions of Asian cultivated rice[J]. Nature, 2018, 557(7703): 43-49.</a></p></blockquote><p>结果可视化：</p><p><a href="./Statistics_PerSpecies.xlsx">点击下载示例数据</a></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br><br>readxl<span class="hljs-operator">::</span>read_excel<span class="hljs-punctuation">(</span><span class="hljs-string">"./Statistics_PerSpecies.xlsx"</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  tidyr<span class="hljs-operator">::</span>pivot_longer<span class="hljs-punctuation">(</span>cols <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">,</span> `Copy number`<span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>summarise<span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">%&gt;%</span> <br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> `Copy number`<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_col<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"Value"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Variety"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  facet_wrap<span class="hljs-punctuation">(</span>.<span class="hljs-operator">~</span>group<span class="hljs-punctuation">,</span> scales <span class="hljs-operator">=</span> <span class="hljs-string">"free"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_npg<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>ggsave<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"./Statistics_PerSpecies.png"</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> dpi <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308081919991.png" alt="Statistics_PerSpecies"></p><h3 id="Orthogroups文件夹"><a href="#Orthogroups文件夹" class="headerlink" title="Orthogroups文件夹"></a>Orthogroups文件夹</h3><ul><li><code>Orthogroups.tsv</code>：每一行是一个基因家族，后面的每一列是每个基因家族在每个品种中的基因编号。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308081849668.png" alt="Orthogroups.tsv"></p><ul><li><code>Orthogroups.txt</code>: 类似于<code>Orthogroups.tsv</code>，只不过是<code>OrthoMCL</code> 的输出格式。</li><li><code>Orthogroups_UnassignedGenes.tsv</code>：物种特异性基因，没有聚类为基因家族的。</li></ul><p><img src="C:\Users\lixia\AppData\Roaming\Typora\typora-user-images\image-20230808185301478.png" alt="Orthogroups_UnassignedGenes.tsv"></p><ul><li><p><code>Orthogroups.GeneCount.tsv</code>：每个物种中每个基因家族的数量。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">Orthogroup      CG14    IR64    ZH11    Total<br>OG0000000       0       298     4       302<br>OG0000001       0       3       217     220<br>OG0000002       0       0       107     107<br>OG0000003       0       2       85      87<br>OG0000004       0       83      0       83<br>OG0000005       2       30      43      75<br>OG0000006       53      3       3       59<br>OG0000007       0       33      26      59<br>OG0000008       1       55      1       57<br></code></pre></td></tr></tbody></table></figure></li><li><p><code>Orthogroups_SingleCopyOrthologues.txt</code>：单拷贝基因家族编号。</p></li></ul><h3 id="单拷贝基因序列"><a href="#单拷贝基因序列" class="headerlink" title="单拷贝基因序列"></a>单拷贝基因序列</h3><p><code>Single_Copy_Orthologue_Sequences</code>这个文件夹里面的是单拷贝基因家族的序列文件。每个文件就是一个单拷贝基因家族的序列。作用：<strong>单拷贝基因用于推断物种系统发育树</strong>。</p><h3 id="Species-Tree"><a href="#Species-Tree" class="headerlink" title="Species_Tree"></a>Species_Tree</h3><p>这个文件夹存放的是有根的物种树。</p><h2 id="构建物种系统发育树"><a href="#构建物种系统发育树" class="headerlink" title="构建物种系统发育树"></a>构建物种系统发育树</h2><p>之前我使用的是<code>OrthoFinder</code>输出的物种树木，这里提供一种新的方法。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308081921007.png" alt="该图片来自“生信帮”"></p><h3 id="多序列比对"><a href="#多序列比对" class="headerlink" title="多序列比对"></a>多序列比对</h3><p>使用的是单拷贝基因。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">ls</span> 05.orthofinder/Single_Copy_Orthologue_Sequences/OG*[0-9].fa | awk <span class="hljs-string">'{print "mafft --localpair --maxiterate 1000 "$1" 1&gt;"$1".mafft.fa 2&gt;mafft.error"}'</span> | sh<br><span class="hljs-built_in">mkdir</span> 06.species.tree<br><span class="hljs-built_in">mv</span> 05.orthofinder/Single_Copy_Orthologue_Sequences/*.mafft.fa ./06.species.tree/<br></code></pre></td></tr></tbody></table></figure><h3 id="合并CDS序列"><a href="#合并CDS序列" class="headerlink" title="合并CDS序列"></a>合并<code>CDS</code>序列</h3><p>先合并为一个，再按照单拷贝基因家族进行拆分。<a href="./get_single_copy_cds_file.pl">点击下载脚本</a>。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> 03.cds.pep/*/Longest/*.longest.cds.fa &gt; 06.species.tree/all.cds.fa<br><br>perl 01.scripts/get_single_copy_cds_file.pl 06.species.tree/all.cds.fa 05.orthofinder/Single_Copy_Orthologue_Sequences<br><span class="hljs-built_in">mv</span> 05.orthofinder/Single_Copy_Orthologue_Sequences/*.mafft.fa.cds ./06.species.tree <br><span class="hljs-built_in">rm</span> 06.species.tree/all.cds.fa  <br></code></pre></td></tr></tbody></table></figure><h3 id="蛋白序列→密码子序列"><a href="#蛋白序列→密码子序列" class="headerlink" title="蛋白序列→密码子序列"></a>蛋白序列→密码子序列</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">ls</span> 06.species.tree/OG*[0-9].fa.mafft.fa | awk <span class="hljs-string">'{print "pal2nal.pl "$1" "$1".cds -output fasta &gt; "$1".codon.fa" }'</span> | sh<br></code></pre></td></tr></tbody></table></figure><p>运行的过程中出现一些提示：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">ERROR: number of input seqs differ (aa: 0;  nuc: 3)!!<br><br>   aa  <span class="hljs-string">''</span><br>   nuc <span class="hljs-string">'OsCG14G0780001574.01 OsIR64G0714247300.01 OsZH11G0717076700.01'</span><br><br>ERROR: number of input seqs differ (aa: 0;  nuc: 3)!!<br><br>   aa  <span class="hljs-string">''</span><br>   nuc <span class="hljs-string">'OsCG14G0713270300.01 OsIR64G0714248700.01 OsZH11G0717078300.01'</span><br></code></pre></td></tr></tbody></table></figure><h3 id="比对结果优化"><a href="#比对结果优化" class="headerlink" title="比对结果优化"></a>比对结果优化</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">ls</span> 06.species.tree/OG*[0-9].fa.mafft.fa.codon.fa | awk <span class="hljs-string">'{print "Gblocks "$1" -t=c -b5=h"}'</span> | sh<br></code></pre></td></tr></tbody></table></figure><h3 id="构建Super-gene"><a href="#构建Super-gene" class="headerlink" title="构建Super gene"></a>构建<code>Super gene</code></h3><p>需要注意物种编号:</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> 05.orthofinder/WorkingDirectory/SpeciesIDs.txt <br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">0: CG14.fa<br>1: IR64.fa<br>2: ZH11.fa<br></code></pre></td></tr></tbody></table></figure><p>新建一个文件<code>name.txt</code>，顺序必须和上面的一致：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308082042045.png" alt="name.txt"></p><p>开始构建<code>super gene</code>（<a href="./get_super_gene.pl">点击下载脚本</a>）：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">perl 01.scripts/get_super_gene.pl 06.species.tree 06.species.tree/super.gene.phy.fa 06.species.tree/name.txt <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202307301519469.png" alt="image-20230730151921065"></p><h3 id="IQ-TREE建树"><a href="#IQ-TREE建树" class="headerlink" title="IQ-TREE建树"></a><code>IQ-TREE</code>建树</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> iqtree -s 06.species.tree/super.gene.phy.fa -bb 1000 -m TEST -nt 1 -pre ./06.species.tree/IQ_TREE &amp;<br></code></pre></td></tr></tbody></table></figure><p>出现报错，因为少于四个。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">All model information printed to ./06.species.tree/IQ_TREE.model.gz<br>CPU time <span class="hljs-keyword">for</span> ModelFinder: 4.087 seconds (0h:0m:4s)<br>Wall-clock time <span class="hljs-keyword">for</span> ModelFinder: 4.695 seconds (0h:0m:4s)<br>Generating 1000 samples <span class="hljs-keyword">for</span> ultrafast bootstrap (seed: 351912)...<br>ERROR: It makes no sense to perform bootstrap with less than 4 sequences.<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang   85  8月  9 10:49 06.species.tree/IQ_TREE.bionj<br>-rw-rw-r-- 1 lixiang lixiang 9.8K  8月  9 10:49 06.species.tree/IQ_TREE.ckp.gz<br>-rw-rw-r-- 1 lixiang lixiang   93  8月  9 10:49 06.species.tree/IQ_TREE.contree<br>-rw-rw-r-- 1 lixiang lixiang 8.0K  8月  9 10:49 06.species.tree/IQ_TREE.iqtree<br>-rw-rw-r-- 1 lixiang lixiang  19K  8月  9 10:49 06.species.tree/IQ_TREE.<span class="hljs-built_in">log</span><br>-rw-rw-r-- 1 lixiang lixiang  258  8月  9 10:49 06.species.tree/IQ_TREE.mldist<br>-rw-rw-r-- 1 lixiang lixiang  980  8月  9 10:49 06.species.tree/IQ_TREE.model.gz<br>-rw-rw-r-- 1 lixiang lixiang  280  8月  9 10:49 06.species.tree/IQ_TREE.splits.nex<br>-rw-rw-r-- 1 lixiang lixiang   93  8月  9 10:49 06.species.tree/IQ_TREE.treefile<br></code></pre></td></tr></tbody></table></figure><p>利用<code>FigTree</code>将<code>Os</code>设置为树的根。</p><h2 id="全基因组比对和可视化"><a href="#全基因组比对和可视化" class="headerlink" title="全基因组比对和可视化"></a>全基因组比对和可视化</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310122003093.png" alt=""></p><ul><li>使用<code>minimap2</code>进行基因组比对：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">minimap2 -ax asm5 -t 75 --eqx nip.fa R498.chr12.fa | samtools <span class="hljs-built_in">sort</span> -O BAM - &gt; r498.2.nip.bam<br>minimap2 -ax asm5 -t 75 --eqx R498.chr12.fa acuce.chr12.fa | samtools <span class="hljs-built_in">sort</span> -O BAM - &gt; acuce2r498.bam<br></code></pre></td></tr></tbody></table></figure><p>​    水稻基因组4分钟就能比对完。</p><ul><li>使用<code>syri</code>鉴定结构变异：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">syri -c r498.2.nip.bam -r nip.fa -q R498.chr12.fa -F B --prefix r498.2.nip &amp;<br>syri -c acuce2r498.bam -r R498.chr12.fa -q acuce.chr12.fa -F B --prefix acuce2r498 &amp;  <br></code></pre></td></tr></tbody></table></figure><ul><li>准备<code>genomes.txt</code>文件：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#file   name</span><br>nip.faNipponbare<br>R498.chr12.faR498<br>acuce.chr12.faAcuce<br></code></pre></td></tr></tbody></table></figure><ul><li>运行<code>plotsr</code>绘图：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">plotsr --sr acuce2r498syri.out --genomes genomes.txt -o acuce2r498.plotsr.png<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202310132012885.png" alt="image-20231013201249498"></p><p>选择展示特定染色体：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">plotsr --chr Chr5 --chr Chr6 --chr Chr7 --chr Chr8  --sr r498.2.nipsyri.out --sr acuce2r498syri.out --genomes genomes.txt -o nipponbare.r498.acuce.sr.plot.chr5-8.png<br></code></pre></td></tr></tbody></table></figure><h1 id="群体遗传学"><a href="#群体遗传学" class="headerlink" title="群体遗传学"></a>群体遗传学</h1><p>参考这个文章进行分析：</p><blockquote><p><a href="https://www.nature.com/articles/s41477-023-01476-z">Jing C Y, Zhang F M, Wang X H, et al. Multiple domestications of Asian rice[J]. Nature Plants, 2023: 1-15.</a></p></blockquote><h2 id="软件安装-7"><a href="#软件安装-7" class="headerlink" title="软件安装"></a>软件安装</h2><p>基本上用<code>mamba</code>就能完成所有安装，比较坑的是<code>GATK</code>依赖的版本和其他软件的依赖有冲突，因此<code>GATK</code>需要单独创建一个环境。流程代码也需要修改，按大步骤分开运行。</p><h2 id="基因组比对"><a href="#基因组比对" class="headerlink" title="基因组比对"></a>基因组比对</h2><p>主要分为两步：构建基因组索引和将测序数据比对到参考基因组上。</p><h3 id="构建基因组索引"><a href="#构建基因组索引" class="headerlink" title="构建基因组索引"></a>构建基因组索引</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># bwa</span><br>bwa index 03.genome/genome.fa <br><br><span class="hljs-comment"># samtools</span><br>samtools faidx 03.genome/genome.fa<br><br><span class="hljs-comment"># picard</span><br><span class="hljs-comment"># picard CreateSequenceDictionary -R genome.fa </span><br><br><span class="hljs-comment"># GATK</span><br>gatk CreateSequenceDictionary -R 03.genome/genome.fa<br></code></pre></td></tr></tbody></table></figure><p>运行完成后得到的文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang 1.5K  8月 27 10:30 genome.dict<br>-rw-rw-r-- 1 lixiang lixiang 374M  8月 27 09:55 genome.fa<br>-rw-rw-r-- 1 lixiang lixiang   15  8月 27 10:48 genome.fa.amb<br>-rw-rw-r-- 1 lixiang lixiang  429  8月 27 10:48 genome.fa.ann<br>-rw-rw-r-- 1 lixiang lixiang 368M  8月 27 10:48 genome.fa.bwt<br>-rw-rw-r-- 1 lixiang lixiang  92M  8月 27 10:48 genome.fa.pac<br>-rw-rw-r-- 1 lixiang lixiang 184M  8月 27 10:50 genome.fa.sa<br>-rw-rw-r-- 1 lixiang lixiang  82M  8月 27 09:55 genome.gff3<br>-rw-rw-r-- 1 lixiang lixiang  71M  8月 27 10:00 genome.gtf<br>-rw-rw-r-- 1 lixiang lixiang  353  8月 27 10:25 samtools.fa.fai<br></code></pre></td></tr></tbody></table></figure><h3 id="比对"><a href="#比对" class="headerlink" title="比对"></a>比对</h3><p>将比对的结果直接传给<code>samtools</code>完成<code>bam</code>文件的排序：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bwa mem -M -t 50 -R <span class="hljs-string">"@RG\tID:s-100_H7GYJCCXY_L4\tSM:s-100_H7GYJCCXY_L4\tPL:illumina"</span> 03.genome/genome.fa 02.data/yyt.reseq/s-100_H7GYJCCXY_L4_1.clean.fq.gz 02.data/yyt.reseq/s-100_H7GYJCCXY_L4_2.clean.fq.gz | samtools <span class="hljs-built_in">sort</span> -@ 50 -m 8G -o 04.bwa.mapping/s-100_H7GYJCCXY_L4.sorted.bam<br></code></pre></td></tr></tbody></table></figure><p><strong>-R这个参数必须有，不然后面GATK会报错。</strong></p><p>耗时20分钟左右。</p><h2 id="变异检测"><a href="#变异检测" class="headerlink" title="变异检测"></a>变异检测</h2><p>主要是使用<code>GATK4</code>完成分析的。关于<code>GATK4</code>内存和线程数的使用，可以参考微信公众号文章<a href="https://mp.weixin.qq.com/s/8aRNOQJxicgx2b2G8rrybQ"></a>。</p><h3 id="标记重复"><a href="#标记重复" class="headerlink" title="标记重复"></a>标记重复</h3><p>使用<code>MarkDuplicates</code>对重复序列进行标记。这个模块在<code>GATK4</code>和<code>picard</code>中都有。<code>picard</code>可以一步同时完成重复序列标记和构建索引，<code>GATK</code>需要分为两步。</p><ul><li><code>picard</code></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">picard -Xmx400g MarkDuplicates I=04.bwa.mapping/s-100_H7GYJCCXY_L4.sorted.bam O=05.deduplicates/s-100_H7GYJCCXY_L4.sorted.bam CREATE_INDEX=<span class="hljs-literal">true</span>  REMOVE_DUPLICATES=trueu M= 05.deduplicates/s-100_H7GYJCCXY_L4.txt<br></code></pre></td></tr></tbody></table></figure><ul><li><code>GATK4</code></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">gatk --java-options <span class="hljs-string">"-Xmx20G -XX:ParallelGCThreads=8"</span> MarkDuplicates --REMOVE_DUPLICATES <span class="hljs-literal">false</span> -I 04.bwa.mapping/s-100_H7GYJCCXY_L4.sorted.bam -O 05.deduplicates/s-100_H7GYJCCXY_L4.gatk.bam -M 05.deduplicates/s-100_H7GYJCCXY_L4.gatk.metrc.csv<br></code></pre></td></tr></tbody></table></figure><p>耗时9分钟左右。</p><p>构建<code>bam</code>文件索引：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">samtools index -@ 20 05.deduplicates/s-100_H7GYJCCXY_L4.gatk.bam <br></code></pre></td></tr></tbody></table></figure><h3 id="变异检测-1"><a href="#变异检测-1" class="headerlink" title="变异检测"></a>变异检测</h3><p>使用<code>HaplotypeCaller</code>模块进行变异检测，生成<code>gvcf</code>文件。只支持单样本。</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">gatk <span class="hljs-attr">--java-options</span> <span class="hljs-string">"-Xmx20G -XX:ParallelGCThreads=8"</span> HaplotypeCaller -R <span class="hljs-number">03</span>.genome/genome<span class="hljs-selector-class">.fa</span> -I <span class="hljs-number">05</span>.deduplicates/s-<span class="hljs-number">100</span>_H7GYJCCXY_L4<span class="hljs-selector-class">.gatk</span><span class="hljs-selector-class">.bam</span> -O <span class="hljs-number">06</span>.haplotypecaller/s-<span class="hljs-number">100</span>_H7GYJCCXY_L4<span class="hljs-selector-class">.gvcf</span><span class="hljs-selector-class">.gz</span> -ERC GVCF<br></code></pre></td></tr></tbody></table></figure><h2 id="从二代数据鉴定R基因"><a href="#从二代数据鉴定R基因" class="headerlink" title="从二代数据鉴定R基因"></a>从二代数据鉴定R基因</h2><h3 id="基因组下载"><a href="#基因组下载" class="headerlink" title="基因组下载"></a>基因组下载</h3><p>下载参考基因组数据。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">get https://www.mbkbase.org/R498/R498_Chr.soft.fasta.gz<br>get https://www.mbkbase.org/R498/R498_IGDBv3_coreset.tar.gz<br>get https://www.mbkbase.org/R498/R498_CoreSet.pro.tar.gz<br>get https://www.mbkbase.org/R498/R498_CoreSet.pro.tar.gz<br></code></pre></td></tr></tbody></table></figure><h3 id="Blast比对"><a href="#Blast比对" class="headerlink" title="Blast比对"></a>Blast比对</h3><p>核酸序列建库疯狂报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">BLAST Database error: No <span class="hljs-built_in">alias</span> or index file found <span class="hljs-keyword">for</span> protein database [./blastdb/piapik] <span class="hljs-keyword">in</span> search path [/sas16t/lixiang/yyt.reseq/02.blast::]<br></code></pre></td></tr></tbody></table></figure><p>换蛋白序列建库比对：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">makeblastdb -<span class="hljs-keyword">in</span> piapik.fa -dbtype prot -out blastdb/piapik<br>blastp -query R498_CoreSet.pros.format.fasta -db blastdb/piapik -evalue 1e-5 -num_threads 60 -outfmt 6 -out blast.out.txt<br></code></pre></td></tr></tbody></table></figure><h3 id="提取gff文件和基因序列"><a href="#提取gff文件和基因序列" class="headerlink" title="提取gff文件和基因序列"></a>提取gff文件和基因序列</h3><p>提取gff文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">grep <span class="hljs-string">"OsR498G1119642600.01"</span> R498_IGDBv3_coreset/R498_IGDBv3_coreset.gff &gt; pia.gff<br>grep <span class="hljs-string">"OsR498G1120737800.01"</span> R498_IGDBv3_coreset/R498_IGDBv3_coreset.gff &gt; pik.gff<br></code></pre></td></tr></tbody></table></figure><p>提取基因序列：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">type</span>=<span class="hljs-string">"gene"</span><br>sed <span class="hljs-string">'s/"/\t/g'</span> piapik.gff | awk -v <span class="hljs-built_in">type</span>=<span class="hljs-string">"<span class="hljs-variable">${type}</span>"</span> <span class="hljs-string">'BEGIN{OFS=FS="\t"}{if($3==type) {print $1,$4-1,$5,$14,".",$7}}'</span> &gt; piapik.bed <br></code></pre></td></tr></tbody></table></figure><p>提取蛋白序列和CDS序列用于后续的SnpEff：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">seqkit grep -f piapik.cds.id.txt genome.cds.fa &gt; piapik.cds.fa<br>seqkit grep -f piapik.cds.id.txt genome.pro.fa &gt; piapik.pro.fa<br></code></pre></td></tr></tbody></table></figure><p>将这些文件拷贝到SnpEff文件夹：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> ../../../01.data/genome/piapik.fa sequences.fa<br><span class="hljs-built_in">cp</span> ../../../01.data/genome/piapik.gff genes.gff<br><span class="hljs-built_in">cp</span> ../../../01.data/genome/R498_IGDBv3_coreset/piapik.cds.fa cds.fa<br><span class="hljs-built_in">cp</span> ../../../01.data/genome/R498_IGDBv3_coreset/piapik.pro.fa ./protein.fa<br><span class="hljs-built_in">cp</span> PiaPik/sequences.fa ./genomes/PiaPik.fa <br></code></pre></td></tr></tbody></table></figure><h3 id="构建索引-1"><a href="#构建索引-1" class="headerlink" title="构建索引"></a>构建索引</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">bwa index 01.data/genome/piapik.fa<br>samtools  faidx 01.data/genome/piapik.fa<br>gatk CreateSequenceDictionary -R 01.data/genome/piapik.fa <br></code></pre></td></tr></tbody></table></figure><h3 id="SnpEff索引"><a href="#SnpEff索引" class="headerlink" title="SnpEff索引"></a>SnpEff索引</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">java -jar /home/lixiang/mambaforge/envs/gatk4/share/snpeff-5.1-2/snpEff.jar build -c snpEff.config -gff3 -v PiaPik -noCheckCds -noCheckProtein<br></code></pre></td></tr></tbody></table></figure><h3 id="批量运行"><a href="#批量运行" class="headerlink" title="批量运行"></a>批量运行</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span>(list = <span class="hljs-built_in">ls</span>())<br><br>library(tidyverse)<br><br><span class="hljs-built_in">dir</span>(<span class="hljs-string">"./01.data/clean.data/"</span>) %&gt;% <br>  as_data_frame() %&gt;% <br>  magrittr::set_names(<span class="hljs-string">"file"</span>) %&gt;% <br>  dplyr::mutate(sample = stringr::str_split(file, <span class="hljs-string">"\\."</span>) %&gt;% <br>                  sapply(<span class="hljs-string">"["</span>, 1) %&gt;% <br>                  stringr::str_sub(1, stringr::str_length(.)-2)) -&gt; samples<br><br><span class="hljs-comment">## 构建批量代码</span><br><br>genome = <span class="hljs-string">"01.data/genome/piapik.fa "</span><br><br>all.run = NULL<br><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> unique(samples<span class="hljs-variable">$sample</span>)) {<br>  <span class="hljs-comment">## exit then skip </span><br>  <span class="hljs-keyword">if</span> (file.exists(sprintf(<span class="hljs-string">"./03.mapping/%s.sorted.mapped.bam"</span>,i))) {<br>    next<br>  }<span class="hljs-keyword">else</span>{<br>    f.read = sprintf(<span class="hljs-string">"./01.data/clean.data/%s_1.clean.fq.gz"</span>,i)<br>    r.read = sprintf(<span class="hljs-string">"./01.data/clean.data/%s_2.clean.fq.gz"</span>,i)<br>    title = sprintf(<span class="hljs-string">"\"@RG\\tID:%s\\tSM:%s\\tPL:illumina\""</span>,i,i)<br>    bam = sprintf(<span class="hljs-string">"./03.mapping/%s.sorted.bam"</span>,i)<br>    <br>    <span class="hljs-comment">## bwa mem</span><br>    sprintf(<span class="hljs-string">"bwa mem -M -t 75 -R %s %s %s %s | samtools sort -@ 50 -m 8G -o %s"</span>,title, genome, f.read, r.read, bam) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment">## extract mapped</span><br>    sprintf(<span class="hljs-string">"samtools view -bF 12 -@ 75 03.mapping/%s.sorted.bam -o 04.sorted.bam/%s.sorted.mapped.bam"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment">## index</span><br>    sprintf(<span class="hljs-string">"samtools index -@ 75 -bc 04.sorted.bam/%s.sorted.mapped.bam"</span>,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment">## ## Pia</span><br>    <span class="hljs-comment">## sprintf("samtools view 03.mapping/%s.sorted.mapped.bam Pia -o 03.mapping/%s.sorted.mapped.Pia.bam",i,i) %&gt;% </span><br>    <span class="hljs-comment">##   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">##   rbind(all.run) -&gt; all.run</span><br>    <span class="hljs-comment">## </span><br>    <span class="hljs-comment">## ## Pik</span><br>    <span class="hljs-comment">## sprintf("samtools view 03.mapping/%s.sorted.mapped.bam Pik -o 03.mapping/%s.sorted.mapped.Pik.bam",i,i) %&gt;% </span><br>    <span class="hljs-comment">##   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">##   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment">## ## bam2fastq</span><br>    <span class="hljs-comment">## sprintf("bedtools bamtofastq -i 03.mapping/%s.sorted.mapped.Pia.bam -fq 03.mapped.fastq/%s_1.Pia.fsatq -fq2 03.mapped.fastq/%s_2.Pia.fsatq",i,i,i) %&gt;% </span><br>    <span class="hljs-comment">##   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">##   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment">## sprintf("bedtools bamtofastq -i 03.mapping/%s.sorted.mapped.Pik.bam -fq 03.mapped.fastq/%s_1.Pik.fsatq -fq2 03.mapped.fastq/%s_2.Pik.fsatq",i,i,i) %&gt;% </span><br>    <span class="hljs-comment">##   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">##   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment">## ## rm bam</span><br>    <span class="hljs-comment">## sprintf("rm 03.mapping/%s.sorted.bam",i) %&gt;% </span><br>    <span class="hljs-comment">##   as_data_frame() %&gt;% </span><br>    <span class="hljs-comment">##   rbind(all.run) -&gt; all.run</span><br>    <br>    <span class="hljs-comment">## coverage</span><br>    sprintf(<span class="hljs-string">"samtools coverage ./04.sorted.bam/%s.sorted.mapped.bam &gt; 05.converage/%s.coverage.txt"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment">## picard</span><br>    sprintf(<span class="hljs-string">"picard -Xmx400g MarkDuplicates I=04.sorted.bam/%s.sorted.mapped.bam O=06.picard/%s.picard.bam CREATE_INDEX=true  REMOVE_DUPLICATES=trueu M=06.picard/%s.txt"</span>,i, i, i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt; all.run<br>    <br>    <span class="hljs-comment">## gatk</span><br>    sprintf(<span class="hljs-string">"gatk --java-options \"-Xmx20G -XX:ParallelGCThreads=8\" HaplotypeCaller -R 01.data/genome/piapik.fa  -I 06.picard/%s.picard.bam -O 07.gatk/%s.gvcf -ERC GVCF"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt;all.run<br>    <br>    <span class="hljs-comment">## gvcf 2 vcf</span><br>    sprintf(<span class="hljs-string">"gatk GenotypeGVCFs -R 01.data/genome/piapik.fa  -V 07.gatk/%s.gvcf -O 07.gatk/%s.vcf"</span>,i,i) %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt;all.run<br>    <br>    <span class="hljs-comment">## SneEff</span><br>    sprintf(<span class="hljs-string">"java -Xmx10G -jar ~/mambaforge/envs/gatk4/share/snpeff-5.1-2/snpEff.jar ann -c  08.snpeff/snpEff.config PiaPik 07.gatk/%s.vcf &gt; 08.snpeff/%s.ann.vcf -csvStats 08.snpeff/%s.positive.csv -stats 08.snpeff/%s.positive.html"</span>,i,i,i,i)  %&gt;% <br>      as_data_frame() %&gt;% <br>      rbind(all.run) -&gt;all.run<br>  }<br>}<br><br>all.run %&gt;% <br>  dplyr::slice(nrow(all.run):1) %&gt;% <br>  write.table(<span class="hljs-string">"./run.all.sh"</span>, col.names = FALSE, row.names = FALSE, quote = FALSE)<br></code></pre></td></tr></tbody></table></figure><h3 id="合并覆盖度"><a href="#合并覆盖度" class="headerlink" title="合并覆盖度"></a>合并覆盖度</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">dir</span>(<span class="hljs-string">"./05.converage/"</span>) %&gt;% <br>  as_data_frame() %&gt;% <br>  magrittr::set_names(<span class="hljs-string">"file"</span>) -&gt; coverage<br><br>all.converage.final = NULL<br><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> coverage<span class="hljs-variable">$file</span>) {<br>  sprintf(<span class="hljs-string">"./05.converage/%s"</span>,i) %&gt;% <br>    readr::read_delim() %&gt;% <br>    dplyr::mutate(sample = stringr::str_replace(i,<span class="hljs-string">".coverage.txt"</span>,<span class="hljs-string">""</span>)) %&gt;% <br>    dplyr::select(ncol(.), 1:(ncol(.)-1)) %&gt;% <br>    rbind(all.converage.final) -&gt; all.converage.final<br>}<br><br>all.converage.final %&gt;% <br>  write.table(<span class="hljs-string">"./all.coverage.txt"</span>, sep = <span class="hljs-string">"\t"</span>, quote = FALSE, row.names = FALSE)<br></code></pre></td></tr></tbody></table></figure><h3 id="判断突变类型"><a href="#判断突变类型" class="headerlink" title="判断突变类型"></a>判断突变类型</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span>(list = <span class="hljs-built_in">ls</span>())<br><br>readr::read_delim(<span class="hljs-string">"./01.data/genome/piapik.gff"</span>, col_names = FALSE) %&gt;% <br>  dplyr::select(1,3:5) %&gt;% <br>  magrittr::set_names(c(<span class="hljs-string">"HROM"</span>,<span class="hljs-string">"gene.region"</span>,<span class="hljs-string">"start"</span>,<span class="hljs-string">"end"</span>)) %&gt;% <br>  dplyr::filter(gene.region == <span class="hljs-string">"exon"</span>) %&gt;% <br>  dplyr::mutate(HROM = stringr::str_replace(HROM,<span class="hljs-string">"\\."</span>,<span class="hljs-string">"_"</span>))-&gt; df.gff<br><br><span class="hljs-built_in">dir</span>(<span class="hljs-string">"./08.snpeff/"</span>) %&gt;% <br>  as_data_frame() %&gt;% <br>  magrittr::set_names(<span class="hljs-string">"vcf"</span>) %&gt;% <br>  dplyr::filter(stringr::str_ends(vcf, <span class="hljs-string">"ann.vcf"</span>))-&gt; vcf<br><br>all.vcf = NULL<br><br><span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> vcf<span class="hljs-variable">$vcf</span>) {<br>  sprintf(<span class="hljs-string">"./08.snpeff/%s"</span>,i) %&gt;% <br>    data.table::fread() %&gt;% <br>    magrittr::set_names(c(<span class="hljs-string">"HROM"</span>, <span class="hljs-string">"POS"</span>, <span class="hljs-string">"ID"</span>, <span class="hljs-string">"REF"</span>, <span class="hljs-string">"ALT"</span>, <span class="hljs-string">"QUAL"</span>, <span class="hljs-string">"FILTER"</span>, <span class="hljs-string">"INFO"</span>, <span class="hljs-string">"FORMAT"</span>, <span class="hljs-string">"sample"</span>)) %&gt;% <br>    dplyr::select(1:8) %&gt;% <br>    dplyr::mutate(mutation.type = stringr::str_split(INFO,<span class="hljs-string">";"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,12) %&gt;% <br>                    stringr::str_split(<span class="hljs-string">"\\|"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,2),<br>                  mutation.region = stringr::str_split(INFO,<span class="hljs-string">";"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,12) %&gt;% <br>                    stringr::str_split(<span class="hljs-string">"\\|"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,6),<br>                  mutation.protein = stringr::str_split(INFO,<span class="hljs-string">";"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,12) %&gt;% <br>                    stringr::str_split(<span class="hljs-string">"\\|"</span>) %&gt;% <br>                    sapply(<span class="hljs-string">"["</span>,11)) %&gt;% <br>    dplyr::select(-INFO) %&gt;% <br>    dplyr::left_join(df.gff) %&gt;% <br>    dplyr::mutate(group = case_when(POS &gt;= start &amp; POS &lt;= end ~ <span class="hljs-string">"Exon"</span>, TRUE ~ <span class="hljs-string">"Non-exon"</span>)) %&gt;% <br>    dplyr::filter(group == <span class="hljs-string">"Exon"</span>) %&gt;% <br>    dplyr::select(1:5,8:10) %&gt;% <br>    magrittr::set_names(c(<span class="hljs-string">"chrom"</span>, <span class="hljs-string">"position"</span>, <span class="hljs-string">"id"</span>, <span class="hljs-string">"ref"</span>, <span class="hljs-string">"alt"</span>, <span class="hljs-string">"mutation.type"</span>, <span class="hljs-string">"mutation.region"</span>, <span class="hljs-string">"mutation.protein"</span>)) %&gt;% <br>    dplyr::mutate(sample = stringr::str_replace(i,<span class="hljs-string">".ann.vcf"</span>,<span class="hljs-string">""</span>)) %&gt;% <br>    dplyr::mutate(rgene = case_when(chrom == <span class="hljs-string">"OsR498G1119642600_01"</span> ~ <span class="hljs-string">"Pia"</span>, TRUE ~ <span class="hljs-string">"Pik"</span>)) %&gt;% <br>    dplyr::select(9:10,2:8) %&gt;% <br>    rbind(all.vcf) -&gt; all.vcf<br>}<br><br>all.vcf %&gt;% <br>  write.table(<span class="hljs-string">"./all.vcf.txt"</span>, sep = <span class="hljs-string">"\t"</span>, quote = FALSE, row.names = FALSE)<br></code></pre></td></tr></tbody></table></figure><h1 id="扩增子"><a href="#扩增子" class="headerlink" title="扩增子"></a>扩增子</h1><h2 id="软件安装-8"><a href="#软件安装-8" class="headerlink" title="软件安装"></a>软件安装</h2><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><h3 id="数据抽平"><a href="#数据抽平" class="headerlink" title="数据抽平"></a>数据抽平</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># df.kraken2.raw.count的行是特征变量，列是样品</span><br>vegan<span class="hljs-operator">::</span>rrarefy<span class="hljs-punctuation">(</span><br>  t<span class="hljs-punctuation">(</span>df.kraken2.raw.count<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>colSums<span class="hljs-punctuation">(</span>df.kraken2.raw.count<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  t<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> df<br></code></pre></td></tr></tbody></table></figure><h1 id="宏基因组"><a href="#宏基因组" class="headerlink" title="宏基因组"></a>宏基因组</h1><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202309051316653.png" alt="https://www.science.org/doi/10.1126/science.abb5352"></p><h2 id="软件安装-9"><a href="#软件安装-9" class="headerlink" title="软件安装"></a>软件安装</h2><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba install -c bioconda kraken2<br>mamba install -c bioconda checkm2<br>mamba install -c bioconda drep<br>mamba install -c bioconda gtdbtk=2.1.1<br>mamba install -c bioconda quast<br></code></pre></td></tr></tbody></table></figure><h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><h3 id="Kraken2数据库"><a href="#Kraken2数据库" class="headerlink" title="Kraken2数据库"></a>Kraken2数据库</h3><p><a href="https://github.com/DerrickWood/kraken2">点击访问kraken2官方网站</a>。</p><p>可以直接从<a href="https://nmdc.cn/datadownload">国家微生物数据科学中心</a>下载，下载链接：<a href="ftp://download.nmdc.cn/tools/meta/kraken2/">ftp://download.nmdc.cn/tools/meta/kraken2/</a>. 下载完成直接解压可以使用了：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">rw-r--r-- 1 lixiang lixiang 3.4M  3月 11 04:37 database100mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang 3.1M  3月 11 08:58 database150mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang 2.8M  3月 11 14:27 database200mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang 2.6M  3月 11 20:26 database250mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang 2.4M  3月 12 03:13 database300mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang 3.9M  3月 10 22:23 database50mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang 3.6M  3月 11 01:10 database75mers.kmer_distrib<br>-rw-r--r-- 1 lixiang lixiang  69G  3月 10 19:33 hash.k2d<br>-rw-r--r-- 1 lixiang lixiang 2.7M  3月 10 19:41 inspect.txt<br>-rw-rw-r-- 1 lixiang lixiang  53G  6月 14 13:01 k2_pluspf_20230314.tar.gz<br>-rw-r--r-- 1 lixiang lixiang 2.1M  3月 10 19:42 ktaxonomy.tsv<br>-rw-r--r-- 1 lixiang lixiang   64  3月 10 19:33 opts.k2d<br>-rw-r--r-- 1 lixiang lixiang 6.0M  3月 10 09:12 seqid2taxid.map<br>-rw-r--r-- 1 lixiang lixiang 3.2M  3月 10 09:42 taxo.k2d<br>drwxrwxr-x 3 lixiang lixiang 4.0K  6月 15 18:18 taxonomy<br></code></pre></td></tr></tbody></table></figure><p><a href="./MANUAL.html">点击下载查看官方完整使用教程</a>。</p><h3 id="CheckM2数据库"><a href="#CheckM2数据库" class="headerlink" title="CheckM2数据库"></a>CheckM2数据库</h3><p>参考文献：</p><blockquote><p><a href="https://www.nature.com/articles/s41592-023-01940-w">CheckM2: a rapid, scalable and accurate tool for assessing microbial genome quality using machine learning</a></p></blockquote><p>公众号解读：</p><blockquote><p><a href="https://mp.weixin.qq.com/s/w-KGiY-kb-HK0gmWGy0J5w">Nautre 方法 | CheckM2 基于机器学习快速、可扩展和准确地评估微生物基因组质量</a></p></blockquote><p>根据<a href="https://github.com/chklovski/CheckM2">官方文档</a>直接使用下面的命令下载配置数据库：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">checkm2 database --download --path ~/database/checkm2<br></code></pre></td></tr></tbody></table></figure><p>下载速度还行，校园网可以达到5M/s左右。</p><p>下载完成后使用下面的代码测试有没有安装配置成功：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">checkm2 testrun<br></code></pre></td></tr></tbody></table></figure><p>没问题的话会输出：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">[08/13/2023 09:35:33 AM] INFO: Test run: Running quality prediction workflow on <span class="hljs-built_in">test</span> genomes with 50 threads.<br>[08/13/2023 09:35:33 AM] INFO: Running checksum on <span class="hljs-built_in">test</span> genomes.<br>[08/13/2023 09:35:33 AM] INFO: Checksum successful.<br>[08/13/2023 09:35:36 AM] INFO: Calling genes <span class="hljs-keyword">in</span> 3 bins with 50 threads:<br>    Finished processing 3 of 3 (100.00%) bins.<br>[08/13/2023 09:36:01 AM] INFO: Calculating metadata <span class="hljs-keyword">for</span> 3 bins with 50 threads:<br>    Finished processing 3 of 3 (100.00%) bin metadata.<br>[08/13/2023 09:36:03 AM] INFO: Annotating input genomes with DIAMOND using 50 threads<br>[08/13/2023 09:36:55 AM] INFO: Processing DIAMOND output<br>[08/13/2023 09:36:55 AM] INFO: Predicting completeness and contamination using ML models.<br>[08/13/2023 09:37:05 AM] INFO: Parsing all results and constructing final output table.<br>[08/13/2023 09:37:05 AM] INFO: CheckM2 finished successfully.<br>[08/13/2023 09:37:05 AM] INFO: Test run successful! See README <span class="hljs-keyword">for</span> details. Results:<br> Name  Completeness  Contamination         Completeness_Model_Used  Translation_Table_Used<br>TEST1        100.00           0.74 Neural Network (Specific Model)                      11<br>TEST2         98.54           0.21 Neural Network (Specific Model)                      11<br>TEST3         98.75           0.51 Neural Network (Specific Model)                      11<br></code></pre></td></tr></tbody></table></figure><p>手动配置现有数据库：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">checkm data setRoot /sas16t/lixiang/database/checkm<br></code></pre></td></tr></tbody></table></figure><h3 id="GTDB-TK数据库"><a href="#GTDB-TK数据库" class="headerlink" title="GTDB-TK数据库"></a>GTDB-TK数据库</h3><p>安装完成后会提示配置数据库：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">Automatic:<br><br>        1. Run the <span class="hljs-built_in">command</span> <span class="hljs-string">"download-db.sh"</span> to automatically download and extract to:<br>            /home/user/mambaforge/envs/metagenome/share/gtdbtk-2.1.1/db/<br><br>    Manual:<br><br>        1. Manually download the latest reference data:<br>            wget https://data.gtdb.ecogenomic.org/releases/release207/207.0/auxillary_files/gtdbtk_r207_v2_data.tar.gz<br><br>        2. Extract the archive to a target directory:<br>            tar -xvzf gtdbtk_r207_v2_data.tar.gz -C <span class="hljs-string">"/path/to/target/db"</span> --strip 1 &gt; /dev/null<br>            <span class="hljs-built_in">rm</span> gtdbtk_r207_v2_data.tar.gz<br><br>        3. Set the GTDBTK_DATA_PATH environment variable by running:<br>            conda <span class="hljs-built_in">env</span> config vars <span class="hljs-built_in">set</span> GTDBTK_DATA_PATH=<span class="hljs-string">"/path/to/target/db"</span><br><br></code></pre></td></tr></tbody></table></figure><p>由于<code>mamba</code>是安装在<code>home</code>目录下的，数据库比较占空间，所以手动下载数据库放到其他盘，然后在<code>.zshrc</code>文件中写这样一句配置（PS：尝试过将数据库软连接到<code>/home/lixiang/mambaforge/envs/metagenome/share/gtdbtk-2.1.1/db/</code>，没有成功）：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">GTDBTK_DATA_PATH=<span class="hljs-string">"/sas16t/user/database/gtdb.v207/"</span><br></code></pre></td></tr></tbody></table></figure><p>然后进行测试是否配置成功：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;gtdbtk <span class="hljs-built_in">test</span><br>[2023-08-13 16:26:22] INFO: GTDB-Tk v2.3.0<br>[2023-08-13 16:26:22] INFO: gtdbtk <span class="hljs-built_in">test</span><br>[2023-08-13 16:26:23] INFO: Using GTDB-Tk reference data version r214: /sas16t/lixiang/database/gtdb.v207/<br>[2023-08-13 16:26:23] INFO: Using a temporary directory as out_dir was not specified.<br>[2023-08-13 16:26:23] INFO: Command: gtdbtk classify_wf --skip_ani_screen --genome_dir /tmp/gtdbtk_tmp_wc9jpdog/genomes --out_dir /tmp/gtdbtk_tmp_wc9jpdog/output --cpus 1 -f<br>    &lt;TEST OUTPUT&gt;     [2023-08-13 16:26:23] INFO: gtdbtk classify_wf --skip_ani_screen --genome_dir /tmp/gtdbtk_tmp_wc9jpdog/genomes --out_dir /tmp/gtdbtk_tm    &lt;TEST OUTPUT&gt;     [2023-08-13 16:26:23] INFO: Using GTDB-Tk reference data version r214: /sas16t/lixiang/database/gtdb.v207/                                 &lt;TEST OUTPUT&gt;     [2023-08-13 16:40:26] INFO: Note that Tk classification mode is insufficient <span class="hljs-keyword">for</span> publication of new taxonomic designations. New designa    &lt;TEST OUTPUT&gt;     [2023-08-13 16:40:26] INFO: Done.                                                                                                      <br>    [2023-08-13 16:40:26] INFO: Test has successfully finished. <br></code></pre></td></tr></tbody></table></figure><p>如果配置失败的话可以使用下面的代码进行配置：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba <span class="hljs-built_in">env</span> config vars <span class="hljs-built_in">set</span> GTDBTK_DATA_PATH=<span class="hljs-string">"/sas16t/lixiang/database/gtdb.v207/"</span><br></code></pre></td></tr></tbody></table></figure><p>再运行<code>gtdbtk check_install</code>验证是否安装成功：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sh">[2023-09-07 15:19:51] INFO: GTDB-Tk v2.3.0<br>[2023-09-07 15:19:51] INFO: gtdbtk check_install<br>[2023-09-07 15:19:51] INFO: Using GTDB-Tk reference data version r214: /sas16t/lixiang/database/gtdb.v207/<br>[2023-09-07 15:19:51] INFO: Running install verification<br>[2023-09-07 15:19:51] INFO: Checking that all third-party software are on the system path:<br>[2023-09-07 15:19:51] INFO:          |-- FastTree         OK<br>[2023-09-07 15:19:51] INFO:          |-- FastTreeMP       OK<br>[2023-09-07 15:19:51] INFO:          |-- fastANI          OK<br>[2023-09-07 15:19:51] INFO:          |-- guppy            OK<br>[2023-09-07 15:19:51] INFO:          |-- hmmalign         OK<br>[2023-09-07 15:19:51] INFO:          |-- hmmsearch        OK<br>[2023-09-07 15:19:51] INFO:          |-- mash             OK<br>[2023-09-07 15:19:51] INFO:          |-- pplacer          OK<br>[2023-09-07 15:19:51] INFO:          |-- prodigal         OK<br>[2023-09-07 15:19:51] INFO: Checking integrity of reference package: /sas16t/lixiang/database/gtdb.v207/<br>[2023-09-07 15:19:54] INFO:          |-- pplacer          OK                                        <br>[2023-09-07 15:19:54] INFO:          |-- masks            OK                                        <br>[2023-09-07 15:19:54] INFO:          |-- markers          OK                                        <br>[2023-09-07 15:19:55] INFO:          |-- radii            OK                                        <br>[2023-09-07 15:20:09] INFO:          |-- msa              OK                                        <br>[2023-09-07 15:20:09] INFO:          |-- metadata         OK                                        <br>[2023-09-07 15:20:09] INFO:          |-- taxonomy         OK                                        <br>[2023-09-07 15:27:54] INFO:          |-- fastani          OK                                        <br>[2023-09-07 15:27:54] INFO:          |-- mrca_red         OK                                        <br>[2023-09-07 15:27:54] INFO: Done.<br></code></pre></td></tr></tbody></table></figure><p>还需要配置<code>Mash</code>数据库，数据库下载地址：<a href="https://figshare.com/articles/online_resource/Mash_Sketched_databases_for_Accessible_Reference_Data_for_Genome-Based_Taxonomy_and_Comparative_Genomics/14408801">https://figshare.com/articles/online_resource/Mash_Sketched_databases_for_Accessible_Reference_Data_for_Genome-Based_Taxonomy_and_Comparative_Genomics/14408801</a></p><p>下载解压后放在<code>GTDB</code>数据库下的<code>mash</code>文件夹内即可。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">-rw-rw-r-- 1 lixiang lixiang 138M  9月  7 15:38 Bacteria_Archaea_type_assembly_set.msh<br>-rw-rw-r-- 1 lixiang lixiang 3.2M  9月  7 15:38 Bacteria_Archaea_type_proteome_set.msh<br>-rw-rw-r-- 1 lixiang lixiang 4.9M  9月  7 15:38 Freshwater_Metagenome_assembly_set.msh<br>-rw-rw-r-- 1 lixiang lixiang  78M  9月  7 15:38 Fungal_Database.2022_genomic.fna.gz.msh<br>-rw-rw-r-- 1 lixiang lixiang 6.4M  9月  7 15:38 Fungi_type_assembly_set.msh<br>-rw-rw-r-- 1 lixiang lixiang  88K  9月  7 15:38 Fungi_type_proteome_set.msh<br>-rw-rw-r-- 1 lixiang lixiang 377M  9月  7 15:38 GTDBr202_genomic.fna.msh<br>-rw-rw-r-- 1 lixiang lixiang 3.8M  9月  7 15:38 Soil_Metgenome_assembly_set.msh<br>-rw-rw-r-- 1 lixiang lixiang 352M  9月  7 15:38 Virus_Sept21_GenBank_assembly_set.msh<br></code></pre></td></tr></tbody></table></figure><h2 id="Kraken"><a href="#Kraken" class="headerlink" title="Kraken"></a>Kraken</h2><p>数据库配置查看上一节。</p><p>使用方法如下：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">kraken2 --db /path/to/kraken2数据库 --threads 50 --report sample.kraken2.report --report-minimizer-data --minimum-hit-groups 2 sample.r1.fq.gz sample.r2.fq.gz &gt; sample.kraken2<br></code></pre></td></tr></tbody></table></figure><p>从<code>report</code>中提出结果：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">awk <span class="hljs-string">'$6 == "S" {print}'</span> sample.kraken2.report &gt; sample.kraken2.count.txt <br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">0.05  36989   36989   145318  94971   S       2782665                   Bradyrhizobium sp. 200<br>0.05  35410   35410   136532  88732   S       2782641                   Bradyrhizobium sp. 170<br>0.03  26027   26027   120680  75200   S       1325120                   Bradyrhizobium sp. CCBAU 53421<br>0.03  22196   22196   80115   52688   S       858422                    Bradyrhizobium sp. CCBAU 051011<br>0.03  20407   20407   75697   50707   S       1325100                   Bradyrhizobium sp. CCBAU 51753<br>0.03  19362   19362   117767  78227   S       1197460                   Bradyrhizobium sp. 6(2017)<br>0.02  17401   17401   66466   42997   S       2057741                   Bradyrhizobium sp. SK17<br>0.02  15609   15609   72888   45484   S       1404443                   Bradyrhizobium sp. 41S5<br>0.01  11111   11111   36661   22319   S       1521768                   Bradyrhizobium sp. WD16<br>0.01  10672   10672   54472   41285   S       1325114                   Bradyrhizobium sp. CCBAU 53351<br></code></pre></td></tr></tbody></table></figure><p>包括 6 列，方便整理下游分析。</p><ul><li><p>百分比</p></li><li><p>count</p></li><li><p>count 最优</p></li><li><p>(U) nclassified, (R) oot, (D) omain, (K) ingdom, (P) hylum, (C) lass, (O) rder, (F) amily, (G) enus, or (S) pecies. “G2” 代表位于属一种间</p></li><li><p>NCBI 物种 ID</p></li><li><p>科学物种名</p></li></ul><p>加了参数<code>--report-minimizer-data</code>后会多输出两列，也就是第四列和第五列。</p><p>也可以搭配<code>bracken</code>使用：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bracken -d /path/to/kraken2数据库 -l S -r 100 -t 50 -i sample.kraken2.report -o sample.bracken -w sample.brackenw<br></code></pre></td></tr></tbody></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">name    taxonomy_id     taxonomy_lvl    kraken_assigned_reads   added_reads     new_est_reads   fraction_total_reads<br>Bradyrhizobium sp. 200  2782665 S       36989   8041    45030   0.00301<br>Bradyrhizobium sp. 170  2782641 S       35410   9381    44791   0.00299<br>Bradyrhizobium sp. CCBAU 53421  1325120 S       26027   6399    32426   0.00216<br>Bradyrhizobium sp. CCBAU 051011 858422  S       22196   3166    25362   0.00169<br>Bradyrhizobium sp. CCBAU 51753  1325100 S       20407   3304    23711   0.00158<br>Bradyrhizobium sp. 6(2017)      1197460 S       19362   7354    26716   0.00178<br>Bradyrhizobium sp. SK17 2057741 S       17401   6079    23480   0.00157<br>Bradyrhizobium sp. 41S5 1404443 S       15609   8526    24135   0.00161<br>Bradyrhizobium sp. WD16 1521768 S       11111   1356    12467   0.00083<br></code></pre></td></tr></tbody></table></figure><h2 id="组装和评估"><a href="#组装和评估" class="headerlink" title="组装和评估"></a>组装和评估</h2><p>组装直接使用<code>MetaWRAP</code>的功能模块即可：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">metawrap assembly -1 ./03.each.sample/SRR9948796/2.clean.reads/SRR9948796_1.fastq -2 ./03.each.sample/SRR9948796/2.clean.reads/SRR9948796_2.fastq -m 200 -t 60 --megahit -o ./03.each.sample/SRR9948796/3.assembly<br></code></pre></td></tr></tbody></table></figure><p>质量评估使用<code>QUAST</code>：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">quast -t 70 ./03.each.sample/SRR9948809/3.assembly/final_assembly.fasta -o ./09.assembly.quality/SRR9948809<br></code></pre></td></tr></tbody></table></figure><h2 id="基因丰度"><a href="#基因丰度" class="headerlink" title="基因丰度"></a>基因丰度</h2><p>使用<code>prodigal</code>完成基因预测：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">prodigal -p meta -a ./10.assembly.gene.prediction/SRR16798125.final_assembly.pep -d ./10.assembly.gene.prediction/SRR16798125.final_assembly.cds -f gff -g 11 -o ./10.assembly.gene.prediction/SRR16798125.final_assembly.gff  -i ./03.each.sample/SRR16798125/3.assembly/final_assembly.fasta &gt; ./10.assembly.gene.prediction/SRR16798125.prodigal.log<br></code></pre></td></tr></tbody></table></figure><h2 id="分箱策略"><a href="#分箱策略" class="headerlink" title="分箱策略"></a>分箱策略</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202308111029025.png" alt="该图片来自“美吉生物”微信公众号"></p><p>总体思路：三种不同的分箱软件→分箱优化→去重→分类注释和功能注释。</p><h2 id="分箱质检"><a href="#分箱质检" class="headerlink" title="分箱质检"></a>分箱质检</h2><h3 id="CheckM2"><a href="#CheckM2" class="headerlink" title="CheckM2"></a>CheckM2</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">checkm2 predict --threads 50 -x .fa --input 07.all.init.bins/bins/ --output-directory 07.all.init.bins/checkm2 &gt; checkm2.log <br></code></pre></td></tr></tbody></table></figure><p>其中：</p><ul><li><code>-x</code>表示后缀，默认的是<code>.fna</code>.</li></ul><h2 id="分箱聚类"><a href="#分箱聚类" class="headerlink" title="分箱聚类"></a>分箱聚类</h2><h3 id="fastANI"><a href="#fastANI" class="headerlink" title="fastANI"></a>fastANI</h3><p>平均核苷酸一致性Average Nucleotide Identity (ANI)，参考下面这篇文献使用<code>fastANI</code>：</p><blockquote><p><a href="https://www.science.org/doi/abs/10.1126/science.abb5352">Levin D, Raab N, Pinto Y, et al. Diversity and functional landscapes in the microbiota of animals in the wild[J]. Science, 2021, 372(6539): eabb5352.</a></p></blockquote><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">fastANI -t 70 --rl 15.bins.ANI/all.bins.id.txt --ql 15.bins.ANI/all.bins.id.txt -o 15.bins.ANI/all.bins.fastANI.txt<br></code></pre></td></tr></tbody></table></figure><p>2400对，跑了36分钟。</p><p>用<code>ANI</code>聚类的阈值是89：</p><blockquote><p>The cutoff for hierarchical clustering was set while minimizing both over<br>and under clustering for ANI of 89.</p></blockquote><p><code>ANI</code>大于95的<code>bins</code>进行合并（但是如果分类注释的时候是不同的分类水平则拆分开）：</p><blockquote><p>Then, clusters for which all bins had ANI greater than 95 were merged.</p></blockquote><p>每个<code>cluster</code>代表性的<code>bins</code>如何挑选呢：</p><blockquote><p>For each cluster the representative genome was set based on the following<br>metrics: completeness, contamination, coverage, polymorphism and N50. Each genome in a cluster was scored based on the percentile of this genome across all the 1,582 genomes. The genome with the highest score was set as the representative genome.</p></blockquote><p>在这个文献中还提到了根据<code>ANI</code>的值来判断<code>MAG</code>是全新的还是已经被报道过的。</p><blockquote><p>The maximum ANI values were used for novelty categorization as follows: rSGBs with maximum ANI values above 95% were defined as known species, values below 83% as previously undescribed (novel) species, and values in between as intermediate.</p></blockquote><p>可以以<code>proGenomes</code>（一共有4305248个contigs）作为参考基因组，参考文献：</p><blockquote><p><a href="https://academic.oup.com/nar/article-abstract/45/D1/D529/2290940">Mende D R, Letunic I, Huerta-Cepas J, et al. proGenomes: a resource for consistent functional and taxonomic annotations of prokaryotic genomes[J]. Nucleic acids research, 2016: gkw989.</a></p></blockquote><p><a href="https://progenomes.embl.de/download.cgi">点击访问下载地址</a>。</p><p>使用案例：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">fastANI -q ../13.bins.class/data/SRR10695388_concoct_bin.1.fa -r /sas16t/lixiang/database/progenomes/progenomes3.contigs.representatives.fasta -<br>o ani.res.txt<br></code></pre></td></tr></tbody></table></figure><h2 id="分箱注释"><a href="#分箱注释" class="headerlink" title="分箱注释"></a>分箱注释</h2><h3 id="GTDB"><a href="#GTDB" class="headerlink" title="GTDB"></a>GTDB</h3><p>使用<code>GTDB</code>进行注释：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">gtdbtk classify_wf --cpus 60 --mash_db /sas16t/lixiang/database/gtdb.v207/mash  -x fa --genome_dir data --out_dir ./<br></code></pre></td></tr></tbody></table></figure><p>输出这些文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:59 align<br>drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:59 classify<br>drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:32 data<br>lrwxrwxrwx 1 lixiang lixiang   32  9月  7 15:44 gtdbtk.ar53.summary.tsv -&gt; classify/gtdbtk.ar53.summary.tsv<br>lrwxrwxrwx 1 lixiang lixiang   34  9月  7 15:59 gtdbtk.bac120.summary.tsv -&gt; classify/gtdbtk.bac120.summary.tsv<br>-rw-rw-r-- 1 lixiang lixiang 3.5K  9月  7 15:59 gtdbtk.json<br>-rw-rw-r-- 1 lixiang lixiang 6.6K  9月  7 15:59 gtdbtk.log<br>-rw-rw-r-- 1 lixiang lixiang    0  9月  7 15:36 gtdbtk.warnings.log<br>drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:59 identify<br></code></pre></td></tr></tbody></table></figure><p>构建系统发育树：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">gtdbtk infer --cpus 60 --msa_file align/gtdbtk.bac120.user_msa.fasta.gz --out_dir ./<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:59 align<br>drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:59 classify<br>drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:32 data<br>lrwxrwxrwx 1 lixiang lixiang   32  9月  7 15:44 gtdbtk.ar53.summary.tsv -&gt; classify/gtdbtk.ar53.summary.tsv<br>lrwxrwxrwx 1 lixiang lixiang   34  9月  7 15:59 gtdbtk.bac120.summary.tsv -&gt; classify/gtdbtk.bac120.summary.tsv<br>-rw-rw-r-- 1 lixiang lixiang  718  9月  7 16:02 gtdbtk.json<br>-rw-rw-r-- 1 lixiang lixiang 7.1K  9月  7 16:02 gtdbtk.log<br>lrwxrwxrwx 1 lixiang lixiang   47  9月  7 16:02 gtdbtk.unrooted.tree -&gt; infer/intermediate_results/gtdbtk.unrooted.tree<br>-rw-rw-r-- 1 lixiang lixiang    0  9月  7 15:36 gtdbtk.warnings.log<br>drwxrwxr-x 2 lixiang lixiang 4.0K  9月  7 15:59 identify<br>drwxrwxr-x 3 lixiang lixiang 4.0K  9月  7 16:02 infer<br></code></pre></td></tr></tbody></table></figure><p><code>gtdbtk.unrooted.tree</code>就是需要的树文件 。</p><h2 id="分箱去重"><a href="#分箱去重" class="headerlink" title="分箱去重"></a>分箱去重</h2><p>有时候分箱得到的结果是非冗余的，也就是部分<code>bins</code>基本是一样的，这时候就需要去重。可以使用<code>dRep</code>进行去重。<code>dRep</code>参考文献：</p><blockquote><p><a href="https://www.nature.com/articles/ismej2017126">Olm M R, Brown C T, Brooks B, et al. dRep: a tool for fast and accurate genomic comparisons that enables improved genome recovery from metagenomes through de-replication[J]. The ISME journal, 2017, 11(12): 2864-2868.</a></p></blockquote><p>有几个软件比较难安装：</p><ul><li><p><code>ANIcalculator</code>：<a href="https://ani.jgi.doe.gov/html/anicalculator.php">https://ani.jgi.doe.gov/html/anicalculator.php</a>. 下载了解压就行。</p></li><li><p><code>nsimscan</code>：<a href="https://github.com/abadona/qsimscan">https://github.com/abadona/qsimscan</a>. 这个需要编译。</p></li><li><p><code>Centrifuge</code>：<a href="https://github.com/DaehwanKimLab/centrifuge">https://github.com/DaehwanKimLab/centrifuge</a>. 这个也需要编译：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/DaehwanKimLab/centrifuge<br><span class="hljs-built_in">cd</span> centrifuge<br>make<br></code></pre></td></tr></tbody></table></figure></li></ul><p>使用方法：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">dRep dereplicate drep.res -g data/*.fa<br></code></pre></td></tr></tbody></table></figure><p>输出的提示信息：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">Dereplicated genomes................. /home/lixiang/project/pn.metagenomics/temp/drep.res/dereplicated_genomes/<br>Dereplicated genomes information..... /home/lixiang/project/pn.metagenomics/temp/drep.res/data_tables/Widb.csv<br>Figures.............................. /home/lixiang/project/pn.metagenomics/temp/drep.res/figures/<br>Warnings............................. /home/lixiang/project/pn.metagenomics/temp/drep.res/log/warnings.txt<br></code></pre></td></tr></tbody></table></figure><p>目录<code>dereplicated_genomes</code>是去重后的<code>bins</code>.</p><h2 id="分箱建树"><a href="#分箱建树" class="headerlink" title="分箱建树"></a>分箱建树</h2><p>使用<a href="https://github.com/biobakery/phylophlan/wiki#requirements">PhyloPhlAn 3.0构建系统发育树</a>。参考文献：</p><blockquote><p><a href="https://www.nature.com/articles/s41467-020-16366-7">Asnicar F, Thomas A M, Beghini F, et al. Precise phylogenetic analysis of microbial isolates and genomes from metagenomes using PhyloPhlAn 3.0[J]. Nature communications, 2020, 11(1): 2500.</a></p></blockquote><h3 id="下载数据库"><a href="#下载数据库" class="headerlink" title="下载数据库"></a>下载数据库</h3><ul><li><p><strong>PhyloPhlAn</strong> (<code>-d phylophlan</code>, 400 universal marker genes) presented in <em><a href="https://www.nature.com/articles/ncomms3304">Segata, N et al. NatComm 4:2304 (2013)</a></em></p></li><li><p><strong>AMPHORA2</strong> (<code>-d amphora2</code>, 136 universal marker genes) presented in <em><a href="https://academic.oup.com/bioinformatics/article/28/7/1033/210898">Wu M, Scott AJ Bioinformatics 28.7 (2012)</a></em></p></li></ul><p>下载了直接解压就行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">http://cmprod1.cibio.unitn.it/databases/PhyloPhlAn/amphora2.tar<br>http://cmprod1.cibio.unitn.it/databases/PhyloPhlAn/phylophlan.tar<br></code></pre></td></tr></tbody></table></figure><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><p>通常是使用蛋白序列进行建树，类似于<code>OrthoFinder</code>。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">phylophlan_write_config_file -o 17.bins.tree/config_aa.cfg --force_nucleotides -d a --db_aa diamond --map_aa diamond --msa mafft --trim trimal --tree1 fasttree --tree2 raxml --overwrite<br></code></pre></td></tr></tbody></table></figure><p>配置文件示例：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs sh">[db_aa]<br>program_name = /home/lixiang/mambaforge/envs/metagenome/bin/diamond<br>params = makedb<br>threads = --threads<br>input = --<span class="hljs-keyword">in</span><br>output = --db<br>version = version<br>command_line = <span class="hljs-comment">#program_name# #params# #threads# #input# #output#</span><br><br>[map_aa]<br>program_name = /home/lixiang/mambaforge/envs/metagenome/bin/diamond<br>params = blastp --quiet --threads 60 --outfmt 6 --more-sensitive --<span class="hljs-built_in">id</span> 50 --max-hsps 35 -k 0<br>input = --query<br>database = --db<br>output = --out<br>version = version<br>command_line = <span class="hljs-comment">#program_name# #params# #input# #database# #output#</span><br><br>[msa]<br>program_name = /home/lixiang/mambaforge/envs/metagenome/bin/mafft<br>params = --quiet --anysymbol --thread 60 --auto<br>version = --version<br>command_line = <span class="hljs-comment">#program_name# #params# #input# &gt; #output#</span><br>environment = TMPDIR=/tmp<br><br>[trim]<br>program_name = /home/lixiang/mambaforge/envs/metagenome/bin/trimal<br>params = -gappyout<br>input = -<span class="hljs-keyword">in</span><br>output = -out<br>version = --version<br>command_line = <span class="hljs-comment">#program_name# #params# #input# #output#</span><br><br>[tree1]<br>program_name = /home/lixiang/mambaforge/envs/metagenome/bin/FastTreeMP<br>params = -quiet -pseudo -spr 4 -mlacc 2 -slownni -fastest -no2nd -mlnni 4 -gtr -nt<br>output = -out<br>command_line = <span class="hljs-comment">#program_name# #params# #output# #input#</span><br>environment = OMP_NUM_THREADS=3<br><br>[tree2]<br>program_name = /home/lixiang/mambaforge/envs/metagenome/bin/raxmlHPC-PTHREADS-SSE3<br>params = -p 1989 -m GTRCAT<br>database = -t<br>input = -s<br>output_path = -w<br>output = -n<br>version = -v<br>command_line = <span class="hljs-comment">#program_name# #params# #threads# #database# #output_path# #input# #output#</span><br>threads = -T<br></code></pre></td></tr></tbody></table></figure><h3 id="构建进化树"><a href="#构建进化树" class="headerlink" title="构建进化树"></a>构建进化树</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> phylophlan -d phylophlan --databases_folder ~/lixiang/database/phylophlan3/ -t a -f 17.bins.tree/config_aa.cfg --<span class="hljs-built_in">nproc</span> 60 --diversity medium --fast -i 17.bins.tree/pep -o 17.bins.tree &gt; phylophlan.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></tbody></table></figure><p>系统发育树可视化使用<code>iTOL</code>完成。</p><h2 id="MetaWRAP流程"><a href="#MetaWRAP流程" class="headerlink" title="MetaWRAP流程"></a>MetaWRAP流程</h2><h3 id="参考文献-1"><a href="#参考文献-1" class="headerlink" title="参考文献"></a>参考文献</h3><blockquote><p><a href="https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-018-0541-1?ref=https://githubhelp.com">Uritskiy G V, DiRuggiero J, Taylor J. MetaWRAP—a flexible pipeline for genome-resolved metagenomic data analysis[J]. Microbiome, 2018, 6(1): 1-13.</a></p></blockquote><h3 id="软件安装-10"><a href="#软件安装-10" class="headerlink" title="软件安装"></a>软件安装</h3><p>软件地址：<a href="https://github.com/bxlab/metaWRAP">https://github.com/bxlab/metaWRAP</a>. 软件的依赖非常非常多，我是这样安装成功的：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mamba create -y --name metawrap-env --channel ursky metawrap-mg=1.3.2<br></code></pre></td></tr></tbody></table></figure><p>检查是否安装成功：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt; metawrap -h<br><br>MetaWRAP v=1.3.2<br>Usage: metaWRAP [module]<br><br>        Modules:<br>        read_qc         Raw <span class="hljs-built_in">read</span> QC module (<span class="hljs-built_in">read</span> trimming and contamination removal)<br>        assembly        Assembly module (metagenomic assembly)<br>        kraken          KRAKEN module (taxonomy annotation of reads and assemblies)<br>        kraken2         KRAKEN2 module (taxonomy annotation of reads and assemblies)<br>        blobology       Blobology module (GC vs Abund plots of contigs and bins)<br><br>        binning         Binning module (metabat, maxbin, or concoct)<br>        bin_refinement  Refinement of bins from binning module<br>        reassemble_bins Reassemble bins using metagenomic reads<br>        quant_bins      Quantify the abundance of each bin across samples<br>        classify_bins   Assign taxonomy to genomic bins<br>        annotate_bins   Functional annotation of draft genomes<br><br>        --<span class="hljs-built_in">help</span> | -h             show this <span class="hljs-built_in">help</span> message<br>        --version | -v  show metaWRAP version<br>        --show-config   show <span class="hljs-built_in">where</span> the metawrap configuration files are stored<br></code></pre></td></tr></tbody></table></figure><h3 id="数据库配置-1"><a href="#数据库配置-1" class="headerlink" title="数据库配置"></a>数据库配置</h3><h4 id="CheckM"><a href="#CheckM" class="headerlink" title="CheckM"></a>CheckM</h4><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/checkm<br>axel -n 50 ftp://download.nmdc.cn/tools/meta/checkm/checkm_data_2015_01_16.tar.gz      <br>tar -xvf checkm_data_2015_01_16.tar.gz   <br><br><span class="hljs-comment"># 输入下面代码配置数据库</span><br>checkm data setRoot<br></code></pre></td></tr></tbody></table></figure><h4 id="Kraken2"><a href="#Kraken2" class="headerlink" title="Kraken2"></a>Kraken2</h4><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/kraken2<br>axel -n 50 ftp://download.nmdc.cn/tools/meta/kraken2/k2_pluspf_20230314.tar.gz<br>tar -xvf k2_pluspf_20230314.tar.gz<br></code></pre></td></tr></tbody></table></figure><h4 id="NCBI-nt"><a href="#NCBI-nt" class="headerlink" title="NCBI-nt"></a>NCBI-nt</h4><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/ncbi.nt<br>~/.aspera/connect/bin/ascp -i ~/mambaforge/envs/tools4bioinf/etc/asperaweb_id_dsa.openssh --overwrite=diff -QTr -l6000m \ <br>    anonftp@ftp.ncbi.nlm.nih.gov:blast/db/v4/nt_v4.{00..85}.tar.gz ./<br></code></pre></td></tr></tbody></table></figure><h4 id="NCBI-taxonomy"><a href="#NCBI-taxonomy" class="headerlink" title="NCBI-taxonomy"></a>NCBI-taxonomy</h4><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/ncbi.taxonomy<br>axel -n 50 ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz<br>tar -xvf taxdump.tar.gz<br></code></pre></td></tr></tbody></table></figure><h4 id="宿主基因组"><a href="#宿主基因组" class="headerlink" title="宿主基因组"></a>宿主基因组</h4><p>以人类的<code>hg38</code>基因组为例。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkcd ~/database/human.genome<br>axel -n 50 http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz   <br>gunzip hg38.fa.gz<br><span class="hljs-built_in">cat</span> *fa &gt; hg38.fa<br><span class="hljs-built_in">rm</span> chr*.fa<br>bmtool -d hg38.fa -o hg38.bitmask<br>srprism mkindex -i hg38.fa -o hg38.srprism -M 100000<br></code></pre></td></tr></tbody></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>上述数据库下载完成后需要修改<code>MetaWRAP</code>的配置文件，不需要的就注释掉，路径一定要写对，不然会报错的。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi ~/mambaforge/envs/metawrap-env/bin/config-metawrap<br><span class="hljs-comment"># Paths to metaWRAP scripts (dont have to modify)</span><br>mw_path=$(<span class="hljs-built_in">which</span> metawrap)<br>bin_path=<span class="hljs-variable">${mw_path%/*}</span><br>SOFT=<span class="hljs-variable">${bin_path}</span>/metawrap-scripts<br>PIPES=<span class="hljs-variable">${bin_path}</span>/metawrap-modules<br><br><span class="hljs-comment"># CONFIGURABLE PATHS FOR DATABASES (see 'Databases' section of metaWRAP README for details)</span><br><span class="hljs-comment"># path to kraken standard database</span><br><span class="hljs-comment"># KRAKEN_DB=~/KRAKEN_DB</span><br>KRAKEN2_DB=~/database/kraken2.plus.plantandfungi <br><br><span class="hljs-comment"># path to indexed human (or other host) genome (see metaWRAP website for guide). This includes .bitmask and .srprism files</span><br>BMTAGGER_DB=~/database/human.genome<br><span class="hljs-comment">#</span><br><span class="hljs-comment"># paths to BLAST databases</span><br>BLASTDB=~/database/ncbi.nt<br>TAXDUMP=~/database/ncbi.taxonomy<br></code></pre></td></tr></tbody></table></figure><h3 id="主要运行步骤"><a href="#主要运行步骤" class="headerlink" title="主要运行步骤"></a>主要运行步骤</h3><p>有一个自定义的脚本：这个脚本的作用是修改<code>bins</code>的编号，有时候编号太长了后面的步骤会报错。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br>fasta_file = sys.argv[<span class="hljs-number">1</span>]<br>out_file = sys.argv[<span class="hljs-number">2</span>]<br>index_file = sys.argv[<span class="hljs-number">3</span>]<br><br>i = <span class="hljs-number">0</span>  <span class="hljs-comment"># 从数字0开始</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(fasta_file, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> f, <span class="hljs-built_in">open</span>(out_file, <span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> out, <span class="hljs-built_in">open</span>(index_file, <span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> index:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>        <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">"&gt;"</span>):<br>            i += <span class="hljs-number">1</span><br>            <span class="hljs-comment"># 修改序列名称</span><br>            out.write(<span class="hljs-string">"&gt;seq{0}\n"</span>.<span class="hljs-built_in">format</span>(i))<br>            <span class="hljs-comment"># 输出新旧ID对应关系</span><br>            old_id = line.replace(<span class="hljs-string">"&gt;"</span>,<span class="hljs-string">""</span>)<br>            new_id = <span class="hljs-string">"&gt;seq"</span> + <span class="hljs-built_in">str</span>(i)<br>            index.write(<span class="hljs-built_in">str</span>(new_id) + <span class="hljs-string">"\t"</span> + old_id)<br>        <span class="hljs-keyword">else</span>:<br>            out.write(line)<br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">"Done."</span>)<br></code></pre></td></tr></tbody></table></figure><p>每一步程序：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># step.1：数据质控</span><br><span class="hljs-keyword">for</span> F <span class="hljs-keyword">in</span> 0.data/*_1.fastq; <span class="hljs-keyword">do</span> R=<span class="hljs-variable">${F%_*}</span>_2.fastq; BASE=<span class="hljs-variable">${F##*/}</span>; SAMPLE=<span class="hljs-variable">${BASE%_*}</span>; metawrap read_qc --skip-bmtagger -1 <span class="hljs-variable">$F</span> -2 <span class="hljs-variable">$R</span> -t 70 -o 1.read.qc/<span class="hljs-variable">$SAMPLE</span> &amp; <span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">mkdir</span> -p 2.clean.reads/all<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 1.read.qc/*; <span class="hljs-keyword">do</span><br>b=<span class="hljs-variable">${i#*/}</span><br><span class="hljs-built_in">mv</span> <span class="hljs-variable">${i}</span>/final_pure_reads_1.fastq 2.clean.reads/<span class="hljs-variable">${b}</span>_1.fastq<br><span class="hljs-built_in">mv</span> <span class="hljs-variable">${i}</span>/final_pure_reads_2.fastq 2.clean.reads/<span class="hljs-variable">${b}</span>_2.fastq<br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># # step.2：合并所有序列用于组装</span><br><span class="hljs-built_in">cat</span> 2.clean.reads/*_1.fastq &gt; 2.clean.reads/all/all_reads_1.fastq<br><span class="hljs-built_in">cat</span> 2.clean.reads/*_2.fastq &gt; 2.clean.reads/all/all_reads_2.fastq<br><br><span class="hljs-comment"># step.3：开始组装</span><br>metawrap assembly -1 2.clean.reads/all/all_reads_1.fastq -2 2.clean.reads/all/all_reads_2.fastq -m 100 -t 60 --megahit -o 3.assembly<br><br><span class="hljs-comment"># step.4：Kraken2进行分类</span><br>metawrap kraken2 -o 4.kraken2 -s 1000000 2.clean.reads/*.fastq 3.assembly/final_assembly.fasta &amp;      <br><br><span class="hljs-comment"># step.5：开始分箱</span><br>metawrap binning -o 5.init.binning -t 60 -a 3.assembly/final_assembly.fasta --metabat2 --maxbin2 --concoct 2.clean.reads/*.fastq <br><br><span class="hljs-comment"># step.6：优化三个软件输出的分箱结果</span><br>metawrap bin_refinement -o 6.bin.refinement -t 60 -A 5.init.binning/metabat2_bins -B 5.init.binning/maxbin2_bins -C 5.init.binning/concoct_bins -c 50 -x 10<br><br><span class="hljs-comment"># step.7：分箱可视化</span><br>metawrap blobology -a 3.assembly/final_assembly.fasta -t 60 -o 7.blobology --bins 6.bin.refinement/metawrap_50_10_bins 2.clean.reads/*fastq<br><br><span class="hljs-comment"># step.8：分箱定量</span><br>metawrap quant_bins -b 6.bin.refinement/metawrap_50_10_bins -o 8.quant.bins -a 3.assembly/final_assembly.fasta 2.clean.reads/*fastq<br><br><span class="hljs-comment"># step.9：再次重新分箱，优化结果</span><br>metawrap reassemble_bins -o 9.bin.reassembly -1 2.clean.reads/all/all_reads_1.fastq -2 2.clean.reads/all/all_reads_2.fastq -t 60 -m 100 -c 50 -x 10 -b 6.bin.refinement/metawrap_50_10_bins<br><br><span class="hljs-comment"># step.10：分箱结果注释</span><br>metawrap classify_bins -b  9.bin.reassembly/reassembled_bins -o 10.bins.classification -t 60 <br><br><span class="hljs-comment"># step.11：重命名bins的编号</span><br><span class="hljs-built_in">mkdir</span> 9.bin.reassembly/renamed.bins<br><span class="hljs-built_in">mkdir</span> 9.bin.reassembly/renamed.bins.id<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 9.bin.reassembly/reassembled_bins/*; <span class="hljs-keyword">do</span> python3 ~/scripts/rename.fasta.id.py <span class="hljs-variable">${i}</span> 9.bin.reassembly/renamed.bins/<span class="hljs-variable">${i##*/}</span> 9.bin.reassembly/renamed.bins.id/<span class="hljs-variable">${i##*/}</span>.id.txt; <span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># step.12：注释bins</span><br>metawrap annotate_bins -o 11.bins.anno -t 60 -b 9.bin.reassembly/renamed.bins<br><br><span class="hljs-comment"># step.13：对bins的蛋白进行功能注释</span><br><span class="hljs-comment"># 这一步需要切换到python3环境下，直接调用python3的绝对路径也可以</span><br><span class="hljs-built_in">mkdir</span> 12.eggNOG-mapper<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> 11.bins.anno/bin_translated_genes/*; <span class="hljs-keyword">do</span> python3 ~/software/eggNOgmapper/emapper.py -m diamond --cpu 60 -i  11.bins.anno/bin_translated_genes/<span class="hljs-variable">${i##*/}</span> --output 12.eggNOG-mapper/<span class="hljs-variable">${i##*/}</span>.eggnogmapper.txt; <span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><p><code>MetaWRAP</code>得到的是流程性的结果，个性化分析需要自行完成。</p><h2 id="关于组装方法"><a href="#关于组装方法" class="headerlink" title="关于组装方法"></a>关于组装方法</h2><p>宏基因组分析中最让人头疼的一个点就是组装的时候需要将所有样品的序列合并后再进行组装（因为某些基因的丰度非常低，单个样品组装的时候无法扫描到），这就需要大量的内存。现在宏基因组的数据量基本上是12G，左右两端加起来就有25G左右，再4个生物学重复，那就是100G了。随着样品数量增多，计算所需的内存数量也随之增加。这也就导致现在的宏基因组文章基本上是单样本组装的，也就是一个生物学重复进行一次组装。这个文章提出一种新的、对大多数研究者有用的组装方式：</p><blockquote><p><a href="https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-022-01259-2">Delgado L F, Andersson A F. Evaluating metagenomic assembly approaches for biome-specific gene catalogues[J]. Microbiome, 2022, 10(1): 1-11.</a></p></blockquote><p>改组装方法可以简单描述如下：</p><ul><li>单个样本单独组装；</li><li>使用<code>BBnorm</code>对原始数据进行标准化，相当于是随机抽取序列中的一部分，然后把所有数据合并后进行组装；</li><li>将上述两种方法得到的组装结果合并，然后使用<code>MMSeqs</code>对结果进行过滤。</li></ul><h2 id="NatCom文章方法"><a href="#NatCom文章方法" class="headerlink" title="NatCom文章方法"></a>NatCom文章方法</h2><p>这个文章的分析思路比较有意思：</p><blockquote><p><a href="https://www.nature.com/articles/s41467-022-32805-z">Zeng S, Patangia D, Almeida A, et al. A compendium of 32,277 metagenome-assembled genomes and over 80 million genes from the early-life human gut microbiome[J]. Nature Communications, 2022, 13(1): 5139.</a></p></blockquote><h2 id="Sciecne文章方法"><a href="#Sciecne文章方法" class="headerlink" title="Sciecne文章方法"></a><em>Sciecne</em>文章方法</h2><p>这篇文章真的是醍醐灌顶啊：</p><blockquote><p><a href="https://www.science.org/doi/abs/10.1126/science.adf5300">Klapper M, Hübner A, Ibrahim A, et al. Natural products from reconstructed bacterial genomes of the Middle and Upper Paleolithic[J]. Science, 2023, 380(6645): 619-624.</a></p></blockquote><h3 id="MAG-dereplication"><a href="#MAG-dereplication" class="headerlink" title="MAG dereplication"></a>MAG dereplication</h3><p>在这个文章中提到<code>MAG dereplication</code>，非常有用的：</p><blockquote><p>Using the 459 MAGs that passed the minimum quality requirements, we dereplicated the MAGs using the “dereplicate” command of dRep (103) v3.3.0, performing the primary clustering at 90%, the secondary clustering at 95%, and requiring a coverage threshold (“nc”) of 30%.</p></blockquote><h3 id="MAG-taxonomic"><a href="#MAG-taxonomic" class="headerlink" title="MAG taxonomic"></a>MAG taxonomic</h3><p>这个文章用了两种方法：</p><ul><li><code>GTDBTK</code></li><li><code>SGB</code>：类似与系统发育树的方法检查<code>MAG</code>是否是之前报道过的。</li></ul><h2 id="群体遗传"><a href="#群体遗传" class="headerlink" title="群体遗传"></a>群体遗传</h2><p>在<a href="https://www.science.org/doi/full/10.1126/sciadv.adg2059#supplementary-materials">Jurdzinski K T, Mehrshad M, Delgado L F, et al. Large-scale phylogenomics of aquatic bacteria reveal molecular mechanisms for adaptation to salinity[J]. Science Advances, 2023, 9(21): eadg2059.</a>看到<code>POGENOM</code>这个方法，找到了原文献：</p><blockquote><p><a href="https://www.nature.com/articles/s41396-021-00985-z">Sjöqvist C, Delgado L F, Alneberg J, et al. Ecologically coherent population structure of uncultivated bacterioplankton[J]. The ISME journal, 2021, 15(10): 3034-3049.</a></p></blockquote><p><a href="https://github.com/EnvGen/POGENOM">点击访问GitHub</a>.</p><h1 id="DNA甲基化-1"><a href="#DNA甲基化-1" class="headerlink" title="DNA甲基化"></a>DNA甲基化</h1><h2 id="机器学习方法"><a href="#机器学习方法" class="headerlink" title="机器学习方法"></a>机器学习方法</h2><blockquote><p><a href="https://www.nature.com/articles/s41467-023-39784-9">Ni P, Nie F, Zhong Z, et al. DNA 5-methylcytosine detection and methylation phasing using PacBio circular consensus sequencing[J]. Nature Communications, 2023, 14(1): 4054.</a></p></blockquote><h3 id="提取序列"><a href="#提取序列" class="headerlink" title="提取序列"></a>提取序列</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ccsmeth call_hifi --subreads 01.data/bam/1.merged.bam --threads 60 --output 07.ccsmeth/01.callhifi/1.callhifi.bam<br></code></pre></td></tr></tbody></table></figure><h3 id="序列比对"><a href="#序列比对" class="headerlink" title="序列比对"></a>序列比对</h3><p>这一步的本质是用<code>pbmm2</code>进行比对 。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ccsmeth align_hifi --hifireads 01.data/bam/1.merged.bam --ref 01.data/ref/r498.fa --output 07.ccsmeth/02.alignhifi/1.align.hifi.pbmm2.bam --threads 60<br></code></pre></td></tr></tbody></table></figure><h3 id="变异检测-2"><a href="#变异检测-2" class="headerlink" title="变异检测"></a>变异检测</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">CUDA_VISIBLE_DEVICES=0 ccsmeth call_mods --input 03.mapping/02.bam/1.bam --re 01.data/ref/r498.fa --model_file 01.data/model_ccsmeth_5mCpG_call_mods_attbigru2s_b21.v2.ckpt --output 07.ccsmeth/03.callmodification/1.callmods --threads 60 --threads_call 60 --model_type attbigru2s --mode align<br></code></pre></td></tr></tbody></table></figure><h3 id="变异频率"><a href="#变异频率" class="headerlink" title="变异频率"></a>变异频率</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">````<br><br><br><br><br><br><br><br><br><br><br><br><span class="hljs-comment">## BiaMark流程</span><br><br><span class="hljs-comment">### 基因组准备</span><br><br>````sh<br>bismark_genome_preparation --path_to_aligner  ~/mambaforge/envs/BisMark/bin/ --verbose 06.CpG.methylation.PC/03.bismark.index/ <br></code></pre></td></tr></tbody></table></figure><h3 id="BisMark"><a href="#BisMark" class="headerlink" title="BisMark"></a>BisMark</h3><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">bismark -q -p 60 --score_min L,0,-0.6 -X 1000 ./06.CpG.methylation.PC/03.bismark.index -1 ./06.CpG.methylation.PC/01.clean.data/CRR190475_f1.fq.gz -2 ./06.CpG.methylation.PC/01.clean.data/CRR190475_r2.fq.gz -o 06.CpG.methylation.PC/04.bismark.bam<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行linux命令实现批量sra转fastq</title>
      <link href="/article/sra2fastq/"/>
      <url>/article/sra2fastq/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> data/sra/ | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> <span class="hljs-built_in">id</span>; <span class="hljs-keyword">do</span> parallel-fastq-dump -s ./data/sra/<span class="hljs-variable">$id</span> --o ./data/fastq --split-files -t 30; <span class="hljs-keyword">done</span><br><br><span class="hljs-built_in">nohup</span> <span class="hljs-built_in">ls</span> data/sra | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> <span class="hljs-built_in">id</span>; <span class="hljs-keyword">do</span> hisat2 -p 30 -x index/genome.index -1 data/fastq/<span class="hljs-variable">$id</span>\_1.fastq -2 data/fastq/<span class="hljs-variable">$id</span>\_2.fastq | /usr/local/bin/samtools <span class="hljs-built_in">sort</span> -@ 10 -o mapping/<span class="hljs-variable">$id</span>.sorted.bam;<span class="hljs-keyword">done</span> &amp;<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux运维笔记</title>
      <link href="/article/ubuntunote/"/>
      <url>/article/ubuntunote/</url>
      
        <content type="html"><![CDATA[<h2 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h2><ul><li>强制重启报错，重启后无法进入系统。解决方法：重启后按上下键，选择第三个内核进入系统。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202212071343200.png" alt="image-20221207134332967"></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h2 id="用户相关"><a href="#用户相关" class="headerlink" title="用户相关"></a>用户相关</h2><h2 id="Docker相关"><a href="#Docker相关" class="headerlink" title="Docker相关"></a>Docker相关</h2><ul><li><p>暂停并移除所有的容器和镜像</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs {bash}">docker ps -aq<br>docker stop $(docker ps -aq)<br>docker rm $(docker ps -aq)<br>docker rmi $(docker ps -aq)<br>docker rmi $(docker images -q)<br>docker ps -aq<br></code></pre></td></tr></tbody></table></figure></li></ul><h2 id="Conda相关"><a href="#Conda相关" class="headerlink" title="Conda相关"></a>Conda相关</h2>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alias传参简写命令</title>
      <link href="/article/ubuntualias/"/>
      <url>/article/ubuntualias/</url>
      
        <content type="html"><![CDATA[<p>查询历史命令，找到相关的命令并查看最近的：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> hg=<span class="hljs-string">'_hg(){history | grep $1 | tail};_hg'</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用tidyverse遇到的一个问题</title>
      <link href="/article/abug4tidyverse/"/>
      <url>/article/abug4tidyverse/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br>iris <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>    Species <span class="hljs-operator">==</span> <span class="hljs-string">"setosa"</span> <span class="hljs-operator">~</span> <span class="hljs-string">"lp"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> Species<br>  <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>报错：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">Error <span class="hljs-keyword">in</span> `dplyr::mutate()`<span class="hljs-operator">:</span><br><span class="hljs-operator">!</span> Problem <span class="hljs-keyword">while</span> computing `temp = case_when(Species<br>  == "setosa" ~ "lp", TRUE ~ Species)`.<br>Caused by error <span class="hljs-keyword">in</span> `case_when()`<span class="hljs-operator">:</span><br><br>Run `rlang::last_error()` to see where the error occurred.<br></code></pre></td></tr></tbody></table></figure><p>这样就不报错：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">iris <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>Species <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>Species<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>    Species <span class="hljs-operator">==</span> <span class="hljs-string">"setosa"</span> <span class="hljs-operator">~</span> <span class="hljs-string">"lp"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-literal">TRUE</span> <span class="hljs-operator">~</span> Species<br>  <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wiki.js部署</title>
      <link href="/article/wikijsinstall/"/>
      <url>/article/wikijsinstall/</url>
      
        <content type="html"><![CDATA[<h2 id="安装PostgreSQL"><a href="#安装PostgreSQL" class="headerlink" title="安装PostgreSQL"></a>安装PostgreSQL</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; sudo apt upgrade<br><br>sudo apt-cache search postgresql | grep postgresql<br>sudo sh -c <span class="hljs-string">'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" &gt; /etc/apt/sources.list.d/pgdg.list'</span><br>wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -<br>sudo apt -y update<br>sudo apt -y install postgresql-14<br>systemctl status postgresql<br>sudo -u postgres psql -c <span class="hljs-string">"SELECT version();"</span><br>sudo -u postgres psql<br><br>sudo sed -i <span class="hljs-string">'/^host/s/ident/md5/'</span> /etc/postgresql/14/main/pg_hba.conf<br>sudo sed -i <span class="hljs-string">'/^local/s/peer/trust/'</span> /etc/postgresql/14/main/pg_hba.conf<br>sudo vim /etc/postgresql/14/main/pg_hba.conf<br>sudo vim /etc/postgresql/14/main/postgresql.conf<br><span class="hljs-comment"># 修改下一行内容</span><br>listen_addresses=<span class="hljs-string">'*'</span><br>sudo systemctl restart postgresql<br>sudo systemctl <span class="hljs-built_in">enable</span> postgresql<br><br>sudo -u postgres psql<br>create database testdb;<br>create user user1 with encrypted password <span class="hljs-string">'Passw0rd'</span>;<br>grant all privileges on database testdb to user1;<br><br>ss -tunelp | grep 5432<br></code></pre></td></tr></tbody></table></figure><h2 id="创建数据库、用户名及密码"><a href="#创建数据库、用户名及密码" class="headerlink" title="创建数据库、用户名及密码"></a>创建数据库、用户名及密码</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo passwd postgres<br>su postgres<br>psql<br><br>create user wikijs with password <span class="hljs-string">'xxxxxxxx'</span><br>create database wikijs owner wikijs<br>grant all pivileges on database wikijs to wikijs<br>\q<br></code></pre></td></tr></tbody></table></figure><h2 id="安装wiki-js"><a href="#安装wiki-js" class="headerlink" title="安装wiki.js"></a>安装wiki.js</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">/home<br><span class="hljs-built_in">mkdir</span> wikijs<br><span class="hljs-built_in">cd</span> wikijs<br>wget https://github.com/requarks/wiki/releases/download/v2.5.292/wiki-js.tar.gz<br>tar zxvf wiki-js.tar.gz<br></code></pre></td></tr></tbody></table></figure><p><a href="https://github.com/requarks/wiki/releases/tag/v2.5.292">点击手动下载wiki.js</a></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>修改wikijs文件夹下的yml配置文件，运行启动：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node server<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu服务器Rstudio-server报错</title>
      <link href="/article/ubunturerror/"/>
      <url>/article/ubunturerror/</url>
      
        <content type="html"><![CDATA[<p>突然无法登录Rstudio Server，后台报错：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">ERROR The previous R session terminated abnormally; LOGGED FROM<span class="hljs-operator">:</span> rstudio<span class="hljs-operator">::</span>core<span class="hljs-operator">:</span><br></code></pre></td></tr></tbody></table></figure><p>实在是找不到报错的原因，kill掉Rsession也不行，重启服务器也不行。</p><p>解决方案如下：</p><p>删除用户目录下的这个文件夹即可<code>.local/share/**rstudio**</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCBI爬取单子叶双子叶信息</title>
      <link href="/article/monocotdicotncbi/"/>
      <url>/article/monocotdicotncbi/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> re<br><br>file_write = <span class="hljs-built_in">open</span>(<span class="hljs-string">"/home/lixiang/temp_file/latin.name.group.txt"</span>,<span class="hljs-string">"w"</span>)<br>cot_list = [<span class="hljs-string">"eudicots"</span>, <span class="hljs-string">"monocots"</span>]<br><br>file_open = <span class="hljs-built_in">open</span>(<span class="hljs-string">"/home/lixiang/temp_file/latin.name.txt"</span>,<span class="hljs-string">"r"</span>)<br>file_read = file_open.readlines()<br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> file_read:<br>    url = <span class="hljs-string">"https://www.ncbi.nlm.nih.gov/taxonomy/?term="</span> + name.replace(<span class="hljs-string">" "</span>,<span class="hljs-string">"+"</span>)<br>    res = requests.get(url)<br>    soup = BeautifulSoup(res.text, <span class="hljs-string">'html.parser'</span>)<br>    item = soup.find(<span class="hljs-string">"div"</span>, class_=<span class="hljs-string">"supp"</span>).find(<span class="hljs-string">"p"</span>).text.split(<span class="hljs-string">","</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> item:<br>        i = i.replace(<span class="hljs-string">" "</span>,<span class="hljs-string">""</span>)<br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> cot_list:<br>            write_content = name.replace(<span class="hljs-string">"\n"</span>,<span class="hljs-string">""</span>) + <span class="hljs-string">"\t"</span> + i.replace(<span class="hljs-string">" "</span>,<span class="hljs-string">""</span>) + <span class="hljs-string">"\n"</span><br>            file_write.write(write_content)<br>            <br>file_write.close()<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blogdown部署到云服务器</title>
      <link href="/article/blogdown2cloud/"/>
      <url>/article/blogdown2cloud/</url>
      
        <content type="html"><![CDATA[<h2 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h2><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><p>服务器端主要是构建目录接受和存放博客内容。</p><figure class="highlight plaintext"><figcaption><span>eval</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs {bash">mkdir myblog<br>cd myblog<br>git init --bare myblog.git<br>vi myblog.git/hooks/post-receive<br>## 输入下面一行内容，目录换成自己的<br>git --work-tree=/home/hexo/blog --git-dir=/home/hexo/hexo.git checkout -f<br>chmod +x myblog.git/hooks/post-receive<br></code></pre></td></tr></tbody></table></figure><h3 id="本地端"><a href="#本地端" class="headerlink" title="本地端"></a>本地端</h3><p>本地端就是本地的博客目录。</p><figure class="highlight plaintext"><figcaption><span>eval</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs {bash">gti init<br>git remote add txyfwq root@106.xx.xx.xx:/root/myblog/myblog.git<br>git add .<br>git commit -m "20220627 upload"<br>git push --set-upstream txyfwq master<br></code></pre></td></tr></tbody></table></figure><h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><p>请参考<a href="https://blog.web4xiang.top/posts/ssldkzf/">博客</a>。</p><h2 id="修改网站图片"><a href="#修改网站图片" class="headerlink" title="修改网站图片"></a>修改网站图片</h2><p>只需要将下面路径的文件替换成想要的图片即可。</p><figure class="highlight plaintext"><figcaption><span>eval</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs {bash">themes\github.com\wowchemy\wowchemy-hugo-modules\wowchemy\v5\assets\media\icon.png<br></code></pre></td></tr></tbody></table></figure><h2 id="修改页面宽度"><a href="#修改页面宽度" class="headerlink" title="修改页面宽度"></a>修改页面宽度</h2><p>找到这个文件：<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs {css}">themes\github.com\wowchemy\wowchemy-hugo-modules\wowchemy\v5\assets\scss\custom.scss<br></code></pre></td></tr></tbody></table></figure><p></p><p>添加下面一行内容(85%是比例)：<br></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs {css}">.article-container{<br>    max-width: 85%<br>}<br></code></pre></td></tr></tbody></table></figure><p></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bedtools报错序列长度不一样的解决方法</title>
      <link href="/article/bedtoolserror/"/>
      <url>/article/bedtoolserror/</url>
      
        <content type="html"><![CDATA[<p>使用<code>bedtools</code>提取结构域序列报错：</p><blockquote><p>ERROR: mismatched line lengths at line 57775 within sequence Actinidia07630t11288xxPlantKGA_3 </p></blockquote><p>解决方法：</p><p>使用博德研究所的<code>picard</code>(地址：<a href="https://github.com/broadinstitute/picard/releases/tag/2.27.5)中的小工具（[教程地址](https://broadinstitute.github.io/picard/command-line-overview.html#NormalizeFasta)）：">https://github.com/broadinstitute/picard/releases/tag/2.27.5)中的小工具（[教程地址](https://broadinstitute.github.io/picard/command-line-overview.html#NormalizeFasta)）：</a></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210282329875.png" alt="image-20221028232924604"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar picard.jar NormalizeFasta -I all.pep.fa.new.fa -O all.pep.fa.new.2.fa<br></code></pre></td></tr></tbody></table></figure><p><strong>序列文件必须以.fa结尾</strong>（我的数据是这样）。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qPCR:从样品采集到表达量计算</title>
      <link href="/article/qpcrfromsample2expression/"/>
      <url>/article/qpcrfromsample2expression/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.sciencedirect.com/science/article/pii/S0167779918303421">Taylor S C, Nadeau K, Abbasi M, et al. The ultimate qPCR experiment: producing publication quality, reproducible data the first time[J]. Trends in Biotechnology, 2019, 37(7): 761-774.</a></p></blockquote><h2 id="采样计划"><a href="#采样计划" class="headerlink" title="采样计划"></a>采样计划</h2><ul><li>有多少个处理？</li><li>每个处理有几个生物学重复？</li><li>每个生物学重复做几次技术重复？</li><li>要检测多少个目标基因(包括内参基因)?</li></ul><p>采样之前规划好，准备好相应的离心管等耗材。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241117485.png" alt="image-20221024111707325"></p><h2 id="如何采样"><a href="#如何采样" class="headerlink" title="如何采样"></a>如何采样</h2><h3 id="采样时间选择"><a href="#采样时间选择" class="headerlink" title="采样时间选择"></a>采样时间选择</h3><p>采样时间会影响基因的表达,很可能在采样时间点目标基因没有发生转录表达，也就是刚好碰上转录表达的窗口期。最好是有预实验确定采样时间点。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241122051.png" alt="image-20221024112232977" style="zoom: 67%;"></p><h3 id="采样部位选择"><a href="#采样部位选择" class="headerlink" title="采样部位选择"></a>采样部位选择</h3><p>那么多组织部位，如何选择呢？混采的结果很可能是没有差异，最好是具有组织部位特异性（下图）。比如水稻叶片，通常采旗叶🚩的中间部位。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241127482.png" alt="image-20221024112714357" style="zoom: 50%;"></p><p>我的采样Tips：</p><ul><li><p>每个样品至少分装成2管子；</p><ul><li>一管用于qPCR，另外一管用于其他组学；</li><li>第一次提取RNA失败的时候还有机会再提一次。</li></ul></li><li><p>不同的生物学重复混为一个样品，减少生物学重复中间的差异。比如我有4个生物学重复，那我就从4个生物学重复中各选一株的旗叶，混为第一个生物学重复的样品，分装为2管。</p></li></ul><h2 id="如何点样"><a href="#如何点样" class="headerlink" title="如何点样"></a>如何点样</h2><p>点样分为两个部分：</p><ul><li>Mix：除开cDNA以外的所有成分，包括引物、qPCR Mix和H$_2$O.</li><li>cDNA：从RNA反转录来的cDNA.</li></ul><p>需要如下的阴性对照：</p><ul><li>H$_2$O：检测使用的H$_2$O是否有污染（最好是将大瓶的RNA-free Water分装到小的离心管中，一次一管，用完就丢，避免影响后续的试验）；</li><li>RNA样品：检测是否有基因组DNA污染。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241136212.png" alt="image-20221024113635134" style="zoom:50%;"></p><h2 id="技术重复"><a href="#技术重复" class="headerlink" title="技术重复"></a>技术重复</h2><p>当cDNA的浓度很低时，在第一个循环时，加入的引物不能结合到所有的靶标片段，会导致最后扩增的结果差异较大，出现这种情况的书哈就需要将不同的生物学重复的结果取平均值用于后续计算。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241147429.png" alt="image-20221024114704311" style="zoom:50%;"></p><h2 id="关于引物"><a href="#关于引物" class="headerlink" title="关于引物"></a>关于引物</h2><h3 id="引物要求一：溶解曲线是单峰"><a href="#引物要求一：溶解曲线是单峰" class="headerlink" title="引物要求一：溶解曲线是单峰"></a>引物要求一：溶解曲线是单峰</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241156077.png" alt="image-20221024115619975"></p><h3 id="引物要求二：扩增效率范围"><a href="#引物要求二：扩增效率范围" class="headerlink" title="引物要求二：扩增效率范围"></a>引物要求二：扩增效率范围</h3><p>采样梯度稀释的方法计算引物的扩增效率。如何从稀释倍数计算引物的扩增效率（<a href="https://www.web4xiang.top/blog/article/primereff/">参考帖子</a>）？相关工具参考<a href="https://www.web4xiang.top/post/r-package-qpcrtools-examples/">qPCRtools</a>.</p><p>另外一个重要的点是内参基因，内参基因不稳定会导致结果差异很大。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241201700.png" alt="image-20221024120141593"></p><h2 id="表达量计算"><a href="#表达量计算" class="headerlink" title="表达量计算"></a>表达量计算</h2><p>最常见的方法是2$^{-{\delta}{\delta}C_t}$法：</p><script type="math/tex; mode=display">2^{-[(处理_{目的基因C_q}-对照_{目的基因C_q})-(处理_{内参基因的平均C_q}-对照_{内参基因的平均C_q})]}</script><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241205177.png" alt="image-20221024120550089"></p><h2 id="可能的问题及解决方法"><a href="#可能的问题及解决方法" class="headerlink" title="可能的问题及解决方法"></a>可能的问题及解决方法</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210241212843.png" alt="Honeyview_Snipaste_2022-10-24_12-11-46"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>该选什么统计方法呢?</title>
      <link href="/article/which.stat/"/>
      <url>/article/which.stat/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210240947135.png" alt="Snipaste_2022-10-24_09-43-51"></p><p>(来自<strong>Statistical Rethinking</strong>第二版)</p>]]></content>
      
      
      <categories>
          
          <category> 统计学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2坐标轴的scale</title>
      <link href="/article/ggplot2.scale/"/>
      <url>/article/ggplot2.scale/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210240933767.png" alt="ggplot2.scale"></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回归的R2和相关性中的R</title>
      <link href="/article/corandregre/"/>
      <url>/article/corandregre/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210091946234.png" alt="image-20221009194612955"></p><p>帖子推荐</p><p><a href="https://mlu-explain.github.io/linear-regression/">回归模型的可视化解释</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 统计学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nature杂志统计知识合集</title>
      <link href="/article/naturestat/"/>
      <url>/article/naturestat/</url>
      
        <content type="html"><![CDATA[<p>偶然发现的一个合集：<a href="https://www.nature.com/collections/qghhqm">Statistics for Biologists</a>.</p><blockquote><p>统计学不会告诉我们是对还是错，只会告诉我们犯错的可能性！</p><p>Statistics does not tell us whether we are right. It tells us the chances of being wrong.</p></blockquote><h2 id="不确定性的重要性"><a href="#不确定性的重要性" class="headerlink" title="不确定性的重要性"></a>不确定性的重要性</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210121133221.png" alt="image-20221012113308135"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210121137843.png" alt="image-20221012113422206"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210121146714.png" alt="image-20221012114614633"></p><h2 id="误差棒-Error-bar"><a href="#误差棒-Error-bar" class="headerlink" title="误差棒(Error bar)"></a>误差棒(Error bar)</h2><p><a href="https://www.nature.com/articles/nmeth.2659">点击查看文献原文</a></p><p>误差棒有三种类型：</p><ol><li>标准差SD</li><li>标准误SEM</li><li>置信区间CI</li></ol><p>误差棒一样的时候，<em>P</em>值可能完全不一样（下图a）；<em>P</em>值一致的时候，三种误差棒的长度会不一致，SD和CI的长度差不多，SEM的长度会短很多（$SEM = \frac{SD}{\sqrt n}$）。<strong>误差棒交叉的时候是会有差异的，不能单看误差棒之间是否有间隔来判断是否有差异；标准误之间有间隔的时候，也不一定有差异！！！</strong>。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210071022440.png" alt="image-20221007102245299"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210071100882.png" alt="image-20221007110056810"></p><h2 id="t检验和P值"><a href="#t检验和P值" class="headerlink" title="t检验和P值"></a><em>t</em>检验和<em><code>P</code></em>值</h2><p>一句话理解<em><code>P</code></em>值的含义：观察到的差异多大程度上是偶然因素导致的？比如常用的阈值0.05，也就意味着观察到的差异有5%的可能是由偶然因素引起的；0.01表示观察到的差异有1%的可能是由偶然因素引发的。<em><code>P</code></em>值越小，表明观察到的差异越不可能是由偶然因素引起的。<strong>观测值越多，得到显著差异结果的可能性越大！</strong></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210121052505.png" alt="image-20221012105251392"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202210121105049.png" alt="image-20221012110515958"></p>]]></content>
      
      
      <categories>
          
          <category> 统计学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gff文件缺少gene特征</title>
      <link href="/article/gff3gene/"/>
      <url>/article/gff3gene/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk -F<span class="hljs-string">"[\t=]"</span>  <span class="hljs-string">'BEGIN{OFS="\t"}{if($3=="mRNA"){print $1,$2,"gene",$4,$5,$6,$7,$8,$9"="$10 ; print $1,$2,$3,$4,$5,$6,$7,$8,$9"="$10"Parent="$10;}else{print $0}}'</span> all.gff3 &gt; all.gff3.new<br></code></pre></td></tr></tbody></table></figure><p>复制粘贴使用：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk -F<span class="hljs-string">"[\t=]"</span>  <span class="hljs-string">'BEGIN{OFS="\t"}{if($3=="mRNA"){print $1,$2,"gene",$4,$5,$6,$7,$8,$9"="$10 ; print $1,$2,$3,$4,$5,$6,$7,$8,$9"="$10"Parent="$10;}else{print $0}}'</span> <br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pan-基因家族鉴定方法</title>
      <link href="/article/pan-genefamily/"/>
      <url>/article/pan-genefamily/</url>
      
        <content type="html"><![CDATA[<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.nature.com/articles/s41422-022-00685-z">Shang L, Li X, He H, et al. A super pan-genomic landscape of rice[J]. Cell Research, 2022: 1-19.</a></p></blockquote><p>这篇文献中要鉴定的是<code>pan-NLRome</code>，使用的方法是：</p><ul><li><code>InterProscan</code>软件注释，筛选阈值是<code>E-value &lt; 1e−4</code>；</li><li><a href="https://github.com/steuernb/NLR-Parser"><code>NLR-Parser</code></a>鉴定结构域；</li><li>上面两个结果交叉验证；</li><li>含有<code>NB-LRR</code>结构域和<code>motif9、10及11</code>的都算作<code>NLRs</code>;</li><li>使用<code>Nipponbare</code>及<code>Tetep</code>的基因组对上述方法进行验证，保证方法的稳定性；</li><li>将95%的品种中都出现的基因定义为<code>core non-redundant NLRs</code>，其余的是<code>dispensable NLRs</code>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>植物诱导抗性相关名词的统一</title>
      <link href="/article/plantir/"/>
      <url>/article/plantir/</url>
      
        <content type="html"><![CDATA[<h2 id="混乱的术语"><a href="#混乱的术语" class="headerlink" title="混乱的术语"></a>混乱的术语</h2><p><code>诱导抗性</code>（Induced Resistance，IR）是指曾经受到病原菌、昆虫、有益微生物、化学物质、物理损伤或取食等刺激的植物当再次受到这些刺激时比那些没有受过刺激的植物有着更低的敏感性。除了直接可以观察到的对病原菌或昆虫敏感性降低以外，还可以从防御响应水平上对<code>IR</code>进行评估，如活性氧增加、更多的胼胝质沉积、表观遗传变化、转录变化、蛋白质组变化及代谢变化等。这些效应和病原菌相关分子模式、损伤相关分子模式及病原菌效应子激发的效应类似 。</p><p>自从1900年代第一次观察到<code>IR</code>以来，有不同的概念来描述<code>IR</code>，如<code>plant immunization</code>这个名词一直有人使用。2000年召开的<strong>首届植物病害诱导抗性国际研讨会</strong>重新修订命名了一些专有名词。但是这远远不够，还是存在一些让人混淆的地方，如200年发表的<strong><em>Terminology related to induced systemic resistance: Incorrect use of synonyms may lead to a scientific dilemma by misleading interpretation of results</em></strong>就指出<code>IR</code>领域术语的混乱在一定程度上阻碍了国际学术交流。十余年后，学术界从分子层面对<code>IR</code>有了新的认识和理解，但是在中国过程中并没有实现术语和概念的统一化和标准化。</p><h2 id="IR术语的校正"><a href="#IR术语的校正" class="headerlink" title="IR术语的校正"></a><code>IR</code>术语的校正</h2><p>Ross等人首次观察到烟草上的一个叶片受到病毒侵染后，其他叶片对该病毒的敏感性降低，基于此，他们提出<code>系统获得性抗性</code>（systemic acquired resistance, SAR）这一概念。然而，在Ross及其同事后续的研究中，他们用其他专业名词来描述这个现象，如<code>systemic resistance</code>、<code>‘systemic induced resistance</code>、<code>induced resistance</code>。直到今天，<code>SAR</code>这个概念还在一直被使用，它涵盖了以下要素：</p><ul><li>通常有局部接种坏死性病原菌诱导产生；</li><li>通常由水杨酸途径相关；</li><li>也可以通过N -羟基哌啶酸介导实现 ；</li><li>通常与一些病原菌相关蛋白的积累相关。</li></ul><p>在1990年代发现能够激发<code>IR</code>的<code>PGPR</code>或者是<code>PGPF</code>（plant growth-promoting rhizobacteria and fungi）。Pieterse等研究模式植物拟南芥发现这种现象和水杨酸或者PR基因无关，反而和茉莉酸、乙烯途径相关。于是，人们利用<code>ISR</code>（Induced systemic resistance）来描述这种现象，与<code>SAR</code>进行区分，虽然这两种现象被认为是类似的。尽管<code>ISR</code>和<code>SAR</code>的机制和有效范围可能不一样，但是观察到的效果是差不多的。</p><p>随着时间推移，<code>ISR</code>和<code>SAR</code>这两个术语的使用似乎呈现出二分状态。基于在拟南芥中参与的激素途径不一致及最初观察到诱导这些表型的微生物的差异，<code>ISR</code>和<code>SAR</code>基本上被认为是不一样的<code>IR</code>表型。与此同时，<code>ISR</code>也被认为是<code>IR</code>的系统形式。此外，化学物质、非蛋白性氨基酸、物理损伤及挥发性有机化合物也可以激发<code>IR</code>，但是作为非生物因素，这些刺激产生的<code>IR</code>在严格意义上不术语<code>ISR</code>或者<code>SAR</code>。</p><p>为了统一所有一致的<code>IR</code>现象，推荐使用<code>IR</code>（induced resistance）作为概括性术语，<code>IR stimulus</code>作为一般性术语。什么时候使用<code>ISR</code>呢？当有足够的证据证明植物局部受到<code>IR</code>刺激后，内源性信号在整个植株中传播并刺激整个植株地上部分的防御，则可以使用<code>ISR</code>。当没有类似的证据或者这种刺激分布在植物整体中时，推荐使用的术语是<code>IR</code>，如外源施用$\beta$-氨基丁酸或者内生菌时应该使用<code>IR</code>。<code>ISR</code>不应该局限于<code>PGPR</code>或者<code>PGPF</code>诱导的<code>IR</code>现象，茉莉酸和乙烯刺激产生的表型现象也可以归属于<code>ISR</code>。由于<code>SAR</code>有着严格的定义，本文认为特定的<code>ISR</code>表型依旧应该表述为<code>SAR</code>表型。</p><p>在选择术语的使用时，需要注意<code>局部抗性</code>（local resistance）和<code>系统抗性</code>（systemic resistance）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209271129916.png" alt="image-20220927112958682"></p><h2 id="IR：直接-激发的防御响应之和"><a href="#IR：直接-激发的防御响应之和" class="headerlink" title="IR：直接+激发的防御响应之和"></a><code>IR</code>：直接+激发的防御响应之和</h2><p>过去数十年的研究发现<code>IR</code>并不是总是依赖于很强的<code>直接防御反应</code>，有时候甚至和<code>直接防御反应</code>不相关。一些基因、酶或者是通路在<code>IR</code>刺激时不会受到直接的影响；但是在受到新的刺激时会表现出更早、更强或者是更快的响应。这种激发侵染诱导的细胞的防御反应被称为<code>防御启动</code>（defence priming）。需要注意的是，这种防御启动确实需要由<code>IR</code>刺激激活的各种机制，如休眠信号蛋白、转录因子、激素等积累，还有表观改变及受体或者共受体的增加等。防御启动的主要结果是防御反应得到增强。描述<code>IR</code>表型的一大特征是直接、增强的防御反应的相对贡献。</p><p>一段时间，增强的防御反应被认为是<code>IR</code>最明显的表型。当前对<code>IR</code>被定义为直接诱导的防御反应（长期或者短时间的）和激发的防御反应。其中的一些刺激主要作于植物的防御基因或者是代谢物，而其他的刺激则通过<code>防御启动</code>发挥功能。除此之外，还有其他的特征可以用来描述<code>IR</code>表型，如植物品种、栽培种及作用方式等。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209272204670.png" alt="image-20220927220441304"></p><h2 id="该叫你什么呢❓"><a href="#该叫你什么呢❓" class="headerlink" title="该叫你什么呢❓"></a>该叫你什么呢❓</h2><p>能够激发<code>IR</code>的化合物应该叫什么呢？现目前的文献中有这些表述方式：</p><ul><li><code>resistance activator</code></li><li><code>plant (defense) activator</code></li><li><code>synthetic inducer of defense responses</code></li><li><code>defense elicitor</code></li><li><code>inducer of plant immunity</code></li><li><code>(plant) resistance inducer</code></li><li><code>disease resistance compound</code></li><li><code>elicitor</code></li><li><code>inducer</code></li><li><code>SAR inducer</code></li><li><code>plant strengthener</code></li><li><code>priming-inducing chemical</code></li><li><code>priming agent</code></li></ul><p>之所以出现如此多的名称，是因为这些表述似乎与特定的机制相关。除了令人困惑之外，这些术语与特定效应的假定关联也可以被认为是不正确的。 即使对于经过充分研究的<code>IR</code>刺激，其潜在机制也可能因多个参数不同而不同。一个<code>IR</code>表型是不是和直接的防御响应或者是激发的防御响应相关，不仅仅取决于激发因素，还会受到试验条件、环境及空间参数的影响。如<code>BABA</code>的诱导效应就取决于研究的植物、<code>BABA</code>的浓度、病原菌（活体营养型或者死体营养型）；再比如吲哚-3-羧酸则会作用于不同阶段的植物。这篇文献推荐使用<code>IR stimulus</code>表示能够激发<code>IR</code>的任何行为或化合物。细分则可以表示为<code>BABA-IR</code>、<code>PGPR-ISR</code>、<code>chemical X-IR</code>、<code>Pseudomonas syringae-SAR</code>等。通常不应该把命名和机制关联。</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>氨基酸转运子调控植物免疫-生长平衡</title>
      <link href="/article/aatmsph/"/>
      <url>/article/aatmsph/</url>
      
        <content type="html"><![CDATA[<h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><h3 id="先天免疫与诱导免疫"><a href="#先天免疫与诱导免疫" class="headerlink" title="先天免疫与诱导免疫"></a>先天免疫与诱导免疫</h3><p>植物的先天免疫可以分为<code>PTI</code>和<code>ETI</code>。除了先天免疫之外，当植物从生物胁迫中恢复以后，会获得持续时间较长的抗性，这种叫做诱导抗性（induced resistance，<code>IR</code>）。获得IR的植株在遭受第二次侵染时，能够更快更强地做出响应以保护自己。IR通常有如下几种方式：</p><ul><li>由先天免疫激发；</li><li>由根际微生物激发：如有益微生物；</li><li>由特定化合物激发：如挥发性有机化合物和<em>β</em> 氨基酸。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161438745.PNG" alt=""></p><h3 id="beta-氨基酸"><a href="#beta-氨基酸" class="headerlink" title="$\beta$氨基酸"></a>$\beta$氨基酸</h3><p>我们常见的氨基酸的氨基是在$\alpha$位上的，如果氨基在$\beta$位上就是$\beta$氨基酸。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209071435206.png" alt="image-20220907143516969"></p><h3 id="BABA与RBH"><a href="#BABA与RBH" class="headerlink" title="BABA与RBH"></a><code>BABA</code>与<code>RBH</code></h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161440625.PNG" alt="幻灯片5"></p><p><em>β</em> 氨基丁酸(<code>BABA</code>)激发植物的防御机制可以通过SA途径实现，也可以不需要SA途径的参与。植物收到生物／非生物胁迫时会有大量的<em>β</em> 氨基丁酸积累。先前的研究发现<code>BABA</code>的受体是一个天冬氨酰 tRNA 天冬氨酸酶(<code>INI1</code>)。<code>BABA</code>也是根际信号，刺激植物获得诱导系统抗性。<strong>但是胞内转运机制还不清楚</strong>。虽然没<code>BABA</code>具有诱导抗性的功能，但是<strong>高浓度的<code>BABA</code>会抑制植株的生长</strong>。为了找到和<code>BABA</code>同样具有诱导功能的类似物，作者们筛选到了<code>R-β-高丝氨酸</code>(<code>RBH</code>)。<code>RBH</code>能够不依赖于<code>IBI1</code>酶实现对植株的抗性的诱导，而且对植株的生长没有影响。当拟南芥受到<em>Hyaloperonospora arabidopsidis</em>（<em>Hpa</em>，霜霉菌）侵染时，<code>RBH</code>不会激发依赖于<code>SA</code>的基因表达，但是会刺激<code>camalexin</code>的合成；当拟南芥受到<em>Plectosphaerella cucumerina</em>侵染时，<code>RBH</code>会激发依赖于<code>JA</code>途径的防御基因的 表达。由此可见，<code>RBH</code>诱导植物产生抗性的途径和<code>BABA</code>不一样。而且，<strong><code>RBH</code>是被感知和吸收的分子机制还不清楚</strong>。</p><h3 id="T-DNA"><a href="#T-DNA" class="headerlink" title="T-DNA"></a><code>T-DNA</code></h3><p><code>Ti 质粒</code>是土壤农杆菌的天然质粒，该质粒上有一段特殊的 <code>DNA</code>区段，当农杆菌侵染植物细胞时，该 <code>DNA</code> 区段能自发转移，插入植物染色体 <code>DNA</code>中，<code>Ti 质粒</code>上的这一段能转移的<code>DNA</code>被叫做 <code>T-DNA</code>。人们根据这一现象，将<code>Ti</code>质粒进行改造，将感兴趣的基因放进<code>T-DNA</code> 区段中，通过农杆菌侵染植物细胞，实现外源基因对植物的遗传转化。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209151715049.png" style="zoom: 33%;"></p><h2 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h2><h3 id="突变体库筛选靶标基因"><a href="#突变体库筛选靶标基因" class="headerlink" title="突变体库筛选靶标基因"></a>突变体库筛选靶标基因</h3><p>如何定位和和<code>RHB</code>诱导的抗性相关的基因呢？<code>T-DNA</code>筛选是一种很有效的方法，得益于前期的研究，作者从一个特殊的<code>T-DNA</code>插入系中筛选目的基因。一共是有23547个突变系。将这些突变系种植在土壤中，土壤用浓度为0.5mM的<code>RBH</code>进行浸泡至饱和，然后接种病原菌<em><code>Hpa</code></em>。如果某个株系在接种后表现出明显的发病，那么对应的株系就很有可能是目的基因所在的株系。经过两轮筛选后，一共筛选到427个候选的株系。在此基础上，利用台盼蓝染色观察处理和对照之间的病原菌生长情况。其中有104个展现出部分功能缺失，有四个株系表现为完全的功能缺失，就选择这四个株系所包含的关键基因作为目的基因进行研究。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161438745.PNG" alt="幻灯片6"></p><p>在对第一个基因进行研究的时候发现，这个基因在敲除系中表现出更差的抗性。但是在对其他三个基因进行研究的时候没有发现这现象，甚至在敲除后植株的抗性更高了。那么也就将第一个基因确定为目标基因，研究发现这个基因编码<strong>赖氨酸/组氨酸转运子</strong>，名为为<em><code>LHT1</code></em>。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161450409.PNG" alt="幻灯片7"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161449855.PNG" alt="幻灯片8"></p><h3 id="LHT1调控植株吸收RBH"><a href="#LHT1调控植株吸收RBH" class="headerlink" title="LHT1调控植株吸收RBH"></a><em>LHT1</em>调控植株吸收<code>RBH</code></h3><p>首先我们知道的是，<code>RBH</code>能够诱导植株的免疫，那<em><code>LHT1</code></em>是如何调控<code>RBH</code>的呢？<em><code>LHT1</code></em>能够转运酸性及中性氨基酸，那首先想到的是<em><code>LHT1</code></em>是不是通过调控植株对<code>RBH</code>的吸收来实现诱导抗性的呢？为了探究这个问题，那就是典型的敲除和过表达。首先可以看到的是，敲除系对<code>RBH</code>的吸收明显受到抑制；而过表达系能够吸收更多的<code>RBH</code>，比野生型还多。这个结果说明<em><code>LHT1</code></em>调控植株对<code>RBH</code>的吸收。而且对应的接种结果也一样。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161454674.PNG" alt="幻灯片9"></p><p>虽然<code>RBH</code>不像<code>BABA</code>那样明显影响植株的生长，但是对植株的生长还是有那么一些影响的。那么植株对<code>RBH</code>的耐受性是不是由<em><code>LHT1</code></em>调控的呢？首先可以看到的是，当<code>RBH</code>的浓度越来越高以后，植株的生长受到了明显的抑制。但是，当往培养基中加入<em><code>LHT1</code></em>的高亲和力底物<code>L-丙氨酸</code>以后，这种抑制作用得到明显的缓解。这个结果表明，植株对<code>RBH</code>的耐受性是由<em><code>LHT1</code></em>控制的，当<em><code>LHT1</code></em>吸收更多的<code>RBH</code>，那么植株受到的毒害就越严重。总之，是<em><code>LHT1</code></em>调控植株吸收<code>RBH</code>，当<code>RBH</code>浓度过高时，生长就会受到明显的抑制。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161501131.PNG" alt="幻灯片10"></p><h3 id="RBH分解代谢与耐受性"><a href="#RBH分解代谢与耐受性" class="headerlink" title="RBH分解代谢与耐受性"></a>RBH分解代谢与耐受性</h3><p>有没有这样一种可能？拟南芥植株能够更好地将<code>RBH</code>进行分解代谢，这样呢<code>RBH</code>的毒害性就降低了。为了验证这种可能性，作者利用无N培养基，让植株吸收的<code>RBH</code>成为唯一的N源，如果植株能够正常代谢<code>RBH</code>，那<code>RBH</code>就会被代谢成N源，植株也就能够正常生长。但是，研究发现拟南芥并不能代谢<code>RBH</code>。但是当培养基中由<code>L-丙氨酸</code>的时候，植株是可以正常生长的，而且过表达的植株长得更好。这个结果说明植株对<code>RBH</code>的耐受性并不是因为植株能够分解代谢<code>RBH</code>，而是植株通过表达<em><code>LHT1</code></em>控制对<code>RBH</code>的吸收。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161507682.PNG" alt="幻灯片11"></p><h3 id="LHT1调控植株对BABA的吸收"><a href="#LHT1调控植株对BABA的吸收" class="headerlink" title="LHT1调控植株对BABA的吸收"></a><em>LHT1</em>调控植株对<code>BABA</code>的吸收</h3><p><code>BABA</code>和<code>RBH</code>在结构上很像，那<em><code>LHT1</code></em>能不能调控植株对<code>BABA</code>的吸收呢？类似的实验证明是可以的，完全可以。而且过表达植株在<code>0.025mM</code>的浓度的时候就有很好的诱导效应，浓度再增加对诱导免疫没有多少改善。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161517475.PNG" alt="幻灯片12"></p><h3 id="LHT1调控植株对BABA耐受性"><a href="#LHT1调控植株对BABA耐受性" class="headerlink" title="LHT1调控植株对BABA耐受性"></a><em>LHT1</em>调控植株对<em>BABA</em>耐受性</h3><p>和先前的验证方法一样，验证<em>LHT1</em>能否影响植株对<code>BABA</code>的耐受性。结果和预料的一样，<code>BABA</code>浓度升高后，毒性越明显；过表达的植株所受到的毒害效应更明显。</p><p><img src="C:/Users/xiang/Desktop/%E6%96%87%E7%8C%AE%E6%B1%87%E6%8A%A520220926/%E5%B9%BB%E7%81%AF%E7%89%8713.PNG" alt="幻灯片13"></p><h3 id="LHT1对BABA和RBH的转运"><a href="#LHT1对BABA和RBH的转运" class="headerlink" title="LHT1对BABA和RBH的转运"></a><em>LHT1</em>对<code>BABA</code>和<code>RBH</code>的转运</h3><p>首先是利用一个特殊的酵母再次证明了<em><code>LHT1</code></em>能够调控氨基酸的吸收。在此基础上呢，像测试<em><code>LHT1</code></em>对<code>BABA</code>和<code>RBH</code>的转运动力学（简单来说就是看看浓度到那个地方的时候转运的量就没有明显的变化了）。从下图的<code>C</code>和<code>D</code>可以看到的是，加入<code>BABA</code>以后，转运的效率和总量并没有很明显的变化；但是，当加入<code>RBH</code>以后，<code>L-丙氨酸</code>低浓度的时候，表面有增强转运，随着<code>L-丙氨酸</code>浓度升高，转运效率得到明显的提高，而且平台期也来得更晚一些。这也就是表明<code>RBH</code>能够促进<code>L-丙氨酸</code>的吸收。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161524073.PNG" alt="幻灯片14"></p><h2 id="阅读收获"><a href="#阅读收获" class="headerlink" title="阅读收获"></a>阅读收获</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209161526978.PNG" alt="幻灯片15"></p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 遗传学 </tag>
            
            <tag> 免疫-生长平衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转录组+代谢组筛选柳枝稷耐旱相关代谢物</title>
      <link href="/article/liuzhijidaixie/"/>
      <url>/article/liuzhijidaixie/</url>
      
        <content type="html"><![CDATA[<h2 id="柳枝稷简介"><a href="#柳枝稷简介" class="headerlink" title="柳枝稷简介"></a>柳枝稷简介</h2><p>柳枝稷是多年生草本植物，主要有南北两个生态型。</p><ul><li>重要的生物燃料：较高的能量效率+较好耐旱性；</li><li>合适的牛饲料；</li><li>水土保持功能；</li><li>鸟类保育功能。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209052118667.png" alt="image-20220905211808537"></p><h2 id="研究目的"><a href="#研究目的" class="headerlink" title="研究目的"></a>研究目的</h2><p>柳枝稷是单子叶植物，同为单子叶植物的玉米和水稻在响应干旱胁迫时都有着特异性的代谢反应，但是还没有柳枝稷响应干旱胁迫时特异性代谢的相关研究。</p><h2 id="研究方法"><a href="#研究方法" class="headerlink" title="研究方法"></a>研究方法</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209052206736.png" alt="image-20220905220626619" style="zoom: 50%;"></p><h2 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h2><p>在干旱胁迫3~4周的时候两个柳枝稷展示出明显的耐旱差异（上图，左侧为处理，右侧为对照）。</p><h3 id="干旱胁迫早期转录差异"><a href="#干旱胁迫早期转录差异" class="headerlink" title="干旱胁迫早期转录差异"></a>干旱胁迫早期转录差异</h3><p>在干旱胁迫两周后，两种柳枝稷都表现出明显的转录表达差异（下图）。<code>Alamo</code>的差异比<code>CiR</code>的小很多；从组织部位来看的话，根部对干旱胁迫的响应更明显。在两种柳枝稷和两种组织部位中共同表达的基因只有两个，分别是生物钟相关的基因和脂质转移相关的基因。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061040735.png" alt="image-20220906103742417" style="zoom:50%;"></p><h3 id="干旱胁迫后期转录差异"><a href="#干旱胁迫后期转录差异" class="headerlink" title="干旱胁迫后期转录差异"></a>干旱胁迫后期转录差异</h3><p>在干旱胁迫的后期（四周），两种柳枝稷都有着明显的转录表达差异（下图）。除了已知的和干旱胁迫相关的基因表达有明显差异外，还有大量未知的基因（<code>unknown</code>）发生了明显的转录表达变化，而且差异倍数很大。</p><p>脱落酸（<code>ABA</code>）广泛地参与了植物对干旱的响应，在这两种柳枝稷中，与<code>ABA</code>相关的差异表达基因是不同的，尽管如此，但是任然表明两种柳枝稷在响应干旱胁迫时<code>ABA</code>均参与其中。</p><p>另外一个有意思的发现是，在<code>Alamo</code>中没有观察到明显的干旱表型，在<code>Alamo</code>表达上调的基因中没有找到与细胞死亡（凋亡）这个生物学过程相关的基因，这也就说明观察到的差异表达模式是和干旱胁迫相关的，而不是干旱胁迫引发的植物死亡相关。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061651963.png" alt="image-20220906165113781" style="zoom: 50%;"></p><h3 id="受干旱胁迫影响的代谢通路"><a href="#受干旱胁迫影响的代谢通路" class="headerlink" title="受干旱胁迫影响的代谢通路"></a>受干旱胁迫影响的代谢通路</h3><p><code>GO</code>富集分析发现（下图左），在<code>Alamo</code>的叶部主要是和DNA结合相关的通路被富集到，在根部则是和碳水化合物代谢相关的通路。有意思的是，在<code>CiR</code>的根部，富集较多的是和非生物胁迫相关的通路，而不是碳水化合物相关的通路。</p><p><code>KEGG</code>富集结果表明，<code>CiR</code>富集到更多的通路，这个是因为<code>CiR</code>具有更多的差异表达基因。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061140051.png" alt="image-20220906114034918"></p><h3 id="萜类和苯丙烷生物合成相关基因"><a href="#萜类和苯丙烷生物合成相关基因" class="headerlink" title="萜类和苯丙烷生物合成相关基因"></a>萜类和苯丙烷生物合成相关基因</h3><p>萜类和苯丙烷生物合成的富集结果是之前的研究是一致的。之前的研究发现萜类和苯丙烷类化合物参与了柳枝稷对干旱胁迫、UV胁迫及氧化胁迫的响应。为了验证在这两种柳枝稷中这些物质合成相关的基因是不是存在特异性表达，作者将和这些物质生物合成通路相关的基因提取出来进行比较。结果发现这些物质都是组织特异性的，也就是在根部和叶片上的表达存在着明显的差异。但是并不存在品种特异性表达。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061217050.png" alt="image-20220906121758939" style="zoom: 67%;"></p><h3 id="三萜生物合成相关基因差异表达"><a href="#三萜生物合成相关基因差异表达" class="headerlink" title="三萜生物合成相关基因差异表达"></a>三萜生物合成相关基因差异表达</h3><p>作者前期的研究中鉴定了大量参与三萜类物质代谢的基因，将这些基因的表达量提取绘制热图后发现这些基因存在品种特异性表达和组织特异性表达（下图）。<code>Alamo</code>的叶片中有两部分基因在干旱胁迫2周和4周后受到明显的诱导表达；根部有一部分基因在干旱胁迫四周后受到明显的诱导表达。这些基因都呈现出一定的共表达模式。大部分基因在<code>Alamo</code>中表现出明显的组织特异性。但是在<code>CiR</code>中没有明显的共表达基因，组织特异性也不明显。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061516076.png" alt="image-20220906151616918" style="zoom:67%;"></p><h3 id="双萜生物合成相关基因差异表达"><a href="#双萜生物合成相关基因差异表达" class="headerlink" title="双萜生物合成相关基因差异表达"></a>双萜生物合成相关基因差异表达</h3><p>作者先前的工作在柳枝稷中鉴定了二萜生物合成网络（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061610280.png" alt="image-20220906160905320" style="zoom:50%;"></p><p>有了完整的代谢网络，就可以很方便地查看二萜生物合成相关基因的表达量（下图）。首先可以看到的是不论是在<code>Alamo</code>还是在<code>CiR</code>中，这些基因的表达都呈现出明显的组织特异性，而且这些基因在根部有着更明显的表达模式。在<code>Alamo</code>根部，部分基因呈现出很明显的共表达模式。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061610888.png" alt="image-20220906160805307" style="zoom:50%;"></p><h3 id="干旱胁迫诱导的代谢变化"><a href="#干旱胁迫诱导的代谢变化" class="headerlink" title="干旱胁迫诱导的代谢变化"></a>干旱胁迫诱导的代谢变化</h3><p>为了对转录组的结果进行补充说明。作者进行了代谢组检测。</p><p>和转录组一样，首先是利用<code>PERMANOVA</code>分析发现影响代谢物的主要因素是组织部位，然后是基因型，最后才是干旱胁迫处理。因此根据不同的组织部位和处理分别进行<code>PLS-DA</code>分析（下图）。从下图可以看出，在干旱胁迫处理前，两种柳枝稷的代谢差异是很大的；在干旱胁迫四周后，不论是在叶片还是在根部，代谢差异都呈现出明显的差异；而且在经过干旱胁迫后，叶片代谢变化更明显。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061647340.png" alt="image-20220906164726225" style="zoom:50%;"></p><p>为了找到导致干旱胁迫后的代谢差异，作者提取了PLS-DA结果 中主要的特征代谢物，并观察这些特征代谢物在不同处理中的丰度差异（下图）。在叶片中最主要的特征代谢物是磷脂嘞物质，在干旱胁迫后 ，这些物质在<code>Alamo</code>中含量增加，但是在<code>CiR</code>中的含量降低。根部的特征代谢物种类更多，大部分物质在干旱胁迫后其含量都升高了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209061703268.png" alt="image-20220906170341109" style="zoom: 50%;"></p><p>在所有这些干旱胁迫特征代谢物中，只有<code>ABA</code>和<code>sucrose</code>这两个物质在两种柳枝稷的根和叶片中都发生了明显的变化（下图a）。前面的分析发现甾体、三萜皂苷和双萜这些物质在两种柳枝稷中有着明显的丰度差异，那么这些物质在干旱胁迫后好不好有明显的差异呢？结果发现这些物质大多都呈现出组织特异性表达和品种特异性表达，干旱胁迫诱导的差异物质较少，属于类胡萝卜素（下图左加粗文字）。LC-MS只能知道这些物质属于类胡萝卜素，进一步作者利用NMR（核磁共振波谱）将这几个物质进行鉴定，发现有两种是异构体（下图右边）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209071104192.png" alt="image-20220907110446149"></p><h2 id="阅读收获"><a href="#阅读收获" class="headerlink" title="阅读收获"></a>阅读收获</h2><ul><li>PLA-DA分析代谢组数据；</li><li>PERMANOVA计算因素重要性。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转录组 </tag>
            
            <tag> 代谢组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Augustus注释基因组</title>
      <link href="/article/augustus/"/>
      <url>/article/augustus/</url>
      
        <content type="html"><![CDATA[<ol><li><p><code>AUGUSTUS</code>版本：3.4.0</p></li><li><p><a href="https://vcru.wisc.edu/simonlab/bioinformatics/programs/augustus/docs/tutorial2015/">官方参考手册</a></p></li><li><p>下载<a href="https://www.ncbi.nlm.nih.gov/genome/?term=Lentinus%20edodes"><strong>Lentinula edodes</strong></a>GenBank格式注释文件:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">we https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/021/015/755/GCF_021015755.1_Lenedo1/GCF_021015755.1_Lenedo1_genomic.gbff.gz -O ref.gbff.gz<br>gunzip ref.gbff.gz<br></code></pre></td></tr></tbody></table></figure></li><li><p>剔除序列头无用信息：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">py3 /usr/bin/split.fasta.id.py -i Pchr.fa -by 3 -n 1 -o Pchr.2.fa<br></code></pre></td></tr></tbody></table></figure></li><li><p>将数据进行拆分用于训练：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">randomSplit<span class="hljs-selector-class">.pl</span> ref<span class="hljs-selector-class">.gbff</span> <span class="hljs-number">100</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>初始化存放位置：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">new_species.pl --species=Pchr<br></code></pre></td></tr></tbody></table></figure></li><li><p>训练：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">etraining --species=Pchr ref.gbff.train<br></code></pre></td></tr></tbody></table></figure></li><li><p>查看训练结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -ort <span class="hljs-variable">$AUGUSTUS_CONFIG_PATH</span>/species/Pchr/<br></code></pre></td></tr></tbody></table></figure></li><li><p>测试模型：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">augustus --species=Pchr ref.gbff.test | <span class="hljs-built_in">tee</span> firsttest.out <span class="hljs-comment"># takes ~1m</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>查看预测准确率：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep -A 22 Evaluation firsttest.out<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202208302204292.png" alt="image-20220830183243181"></p></li><li><p>参考<a href="https://vcru.wisc.edu/simonlab/bioinformatics/programs/augustus/docs/tutorial2015/prediction.html">官方手册</a>预测<em>Phanerodontia chrysosporium</em>基因：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> augustus --species=Pchr Pchr.2.fa &gt; Pchr.gff &amp;<br></code></pre></td></tr></tbody></table></figure></li><li><p>提取基因蛋白序列：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">getAnnoFasta.pl Pchr.gff<br></code></pre></td></tr></tbody></table></figure></li><li><p>提取CDS：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gffread Pchr.final.gff -g Pchr.2.fa -x Pchr.cds.dna.fa<br></code></pre></td></tr></tbody></table></figure></li><li><p>提取CDS的蛋白序列：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gffread Pchr.final.gff -g Pchr.2.fa -y Pchr.cds.pep.fa<br></code></pre></td></tr></tbody></table></figure></li><li><p>结果文件信息：</p><ol><li><code>Pchr.final.gff</code>：基因组注释文件</li><li><code>Pchr.pep.fa</code>：基因蛋白序列</li><li><code>Pchr.cds.dna.fa</code>：基因编码区DNA序列</li><li><code>Pchr.cds.pep.fa</code>：基因编码区蛋白序列</li></ol></li></ol><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NBS-LRR基因知识</title>
      <link href="/article/nbs-lrr/"/>
      <url>/article/nbs-lrr/</url>
      
        <content type="html"><![CDATA[<h2 id="NBS-LRR的结构和生物学功能"><a href="#NBS-LRR的结构和生物学功能" class="headerlink" title="NBS-LRR的结构和生物学功能"></a>NBS-LRR的结构和生物学功能</h2><p>从结构上判断一个基因是不是NBS-LRR基因的方法是看其是否具有NBS结构域和LRR结构域。NBS结构域通常在蛋白的中间区域，长度大概是300个氨基酸；LRR结构域通常是在蛋白的C端，长度大概是20-30个氨基酸。</p><p>NBS-LRR也被称为NB-ARC，或者直接叫做NLR，但是在相关研究中使用最广泛的名称还是NBS-LRR。</p><p>NBS-LRR是植物抗性蛋白中最重要的结构，NBS结构域负责识别病原菌，LRR结构域则负责后续的信号传导。NBS具有很多保守的motifs，这些保守的motifs能够与ATP或者是GTP结合，然后对其进行水解。LRR结构域的序列多样性较高，通常和蛋白-蛋白互作相关，特异性识别病原菌的效应子。</p><p>根据N端的结构域，可以将NBS-LRR分为如下几类：</p><ul><li>TIR-NBS-LRR（TNL）：是否含有<code>Toll/interleukin 1 receptor</code>结构域；</li><li>CC-NBS-LRR（CNL）：是否含有<code>coiled-coil</code>结构域；</li><li>RPW8-NBS-LRR（RNL）：是否含有<code>Resistance to Powdery mildeW8</code>结构域。</li></ul><h2 id="NBS-LRR基因的调控策略"><a href="#NBS-LRR基因的调控策略" class="headerlink" title="NBS-LRR基因的调控策略"></a>NBS-LRR基因的调控策略</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/Snipaste_2022-08-14_11-01-28.png" alt=""></p><h2 id="NBS-LRR基因激活的细胞反应"><a href="#NBS-LRR基因激活的细胞反应" class="headerlink" title="NBS-LRR基因激活的细胞反应"></a>NBS-LRR基因激活的细胞反应</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/Snipaste_2022-08-14_11-01-28.png" alt=""></p><h2 id="NBS-LRR基因的鉴定"><a href="#NBS-LRR基因的鉴定" class="headerlink" title="NBS-LRR基因的鉴定"></a>NBS-LRR基因的鉴定</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/3.png" alt=""></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分子生物学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>植物R基因分类</title>
      <link href="/article/plantr/"/>
      <url>/article/plantr/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/Snipaste_2022-08-14_09-38-14.png" alt="Snipaste_2022-08-14_09-38-14"></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分子生物学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学知识库</title>
      <link href="/article/mybioinf/"/>
      <url>/article/mybioinf/</url>
      
        <content type="html"><![CDATA[<h2 id="浅言前言"><a href="#浅言前言" class="headerlink" title="浅言前言"></a>浅言前言</h2><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h2 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h2><h3 id="报错及解决方案"><a href="#报错及解决方案" class="headerlink" title="报错及解决方案"></a>报错及解决方案</h3><ul><li><code>Some index files failed to download. They have been ignored, or old ones used instead.</code>：编辑<code>vi /etc/resolv.conf</code>，加入：</li></ul><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nameserver</span> <span class="hljs-number">8.8.8.8</span><br>nameserver <span class="hljs-number">8.8.4.4</span><br></code></pre></td></tr></tbody></table></figure><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><ul><li>不同域名指定端口</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Default server configuration</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">server {</span><br>listen 80 default_server;<br>listen [::]:80 default_server;<br><br>root /var/www/html;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Add index.php to the list <span class="hljs-keyword">if</span> you are using PHP</span><br>index index.html index.htm index.nginx-debian.html;<br><br>server_name _;<br><br>location / {<br><span class="hljs-meta prompt_"># </span><span class="language-bash">First attempt to serve request as file, <span class="hljs-keyword">then</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">as directory, <span class="hljs-keyword">then</span> fall back to displaying a 404.</span><br>try_files $uri $uri/ =404;<br>}<br>}<br><br>server {<br>    listen 80;<br>    server_name xxx.xxx.com;<br>    location / {<br>        proxy_pass http://localhost:3000;<br>        proxy_set_header Host $host;<br>        proxy_set_header X-Real-IP $remote_addr;<br>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>        proxy_set_header X-Forwarded-Proto $scheme;<br>    }<br>}<br><br>server {<br>    listen 80;<br>    server_name xxx.xxx.com;<br>    location / {<br>        proxy_pass http://localhost:1288;<br>        proxy_set_header Host $host;<br>        proxy_set_header X-Real-IP $remote_addr;<br>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>        proxy_set_header X-Forwarded-Proto $scheme;<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul><li><p><a href="https://busco.ezlab.org/">BUSCO</a>：基因组组装质量评估软件。</p><ul><li>使用教程：<a href="https://www.jianshu.com/p/5041460f7a5d">简书链接</a></li></ul></li><li><p><a href="https://www.addgene.org/">Addgene</a>：非营利性的质粒库</p></li><li><a href="https://www.primer3plus.com/">Primer3Plus</a>：引物设计</li><li><a href="https://transcriptionfactor.org/">DBD</a>：转录因子预测数据库</li><li><a href="Plant Transcription Factor Database">Plant Transcription Factor Database</a>：植物转录因子数据库</li><li><a href="https://bis.zju.edu.cn/ricenetdb/"><em>RiceNetDB</em></a>：水稻基因互作数据库（浙大）</li><li><a href="https://cgm.sjtu.edu.cn/3kricedb/">RPAN: Rice Pan-genome Browser</a>：水稻泛基因组数据库（上海交大）</li><li><a href="https://ftp.ncbi.nih.gov/blast/db/">NCBI blast数据库</a></li><li><a href="https://nmdc.cn/datadownload">国家微生物数据科学中心数据下载</a></li><li><a href="http://systbio.cau.edu.cn/plad/index.php">PlaD</a>：植物对病原体防御反应的转录组学数据库</li><li><a href="http://ipf.sustech.edu.cn/pub/ricerna/">植物转录组表达数据库</a></li><li><a href="https://jaspar.genereg.net/">JASPAR：预测转录因子结合位点的网站</a></li><li>NAR专刊: <a href="https://academic.oup.com/nar/issue/47/D1">各种数据库文章</a></li><li><a href="http://ipf.sustech.edu.cn/pub/plantrna/">南方科技大学-植物转录组数据库</a></li></ul><h2 id="序列处理"><a href="#序列处理" class="headerlink" title="序列处理"></a>序列处理</h2><h3 id="从基因组提取蛋白序列"><a href="#从基因组提取蛋白序列" class="headerlink" title="从基因组提取蛋白序列"></a>从基因组提取蛋白序列</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gffread genome.gff -g genome.fa -y 100.pep<br></code></pre></td></tr></tbody></table></figure><h3 id="从基因组提取基因序列"><a href="#从基因组提取基因序列" class="headerlink" title="从基因组提取基因序列"></a>从基因组提取基因序列</h3><p>搜索半天找不到合适的工具，让ChatGPT写了一个：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Bio <span class="hljs-keyword">import</span> SeqIO<br><span class="hljs-keyword">import</span> gffutils<br><span class="hljs-keyword">import</span> argparse<br><br><span class="hljs-comment"># 解析命令行参数</span><br>parser = argparse.ArgumentParser(description=<span class="hljs-string">"Extract gene sequences from genome and GFF files."</span>)<br>parser.add_argument(<span class="hljs-string">"-genome"</span>, dest=<span class="hljs-string">"genome_file"</span>, required=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">"Path to the genome FASTA file"</span>)<br>parser.add_argument(<span class="hljs-string">"-gff"</span>, dest=<span class="hljs-string">"gff_file"</span>, required=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">"Path to the GFF3 file"</span>)<br>parser.add_argument(<span class="hljs-string">"-out"</span>, dest=<span class="hljs-string">"out_file"</span>, required=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">"Path to the output file"</span>)<br>args = parser.parse_args()<br><br><span class="hljs-comment"># 读取基因组序列</span><br>genome_seq = SeqIO.to_dict(SeqIO.parse(args.genome_file, <span class="hljs-string">"fasta"</span>))<br><br><span class="hljs-comment"># 读取GFF文件并建立数据库</span><br>db_file = args.gff_file + <span class="hljs-string">".db"</span><br>db = gffutils.create_db(args.gff_file, dbfn=db_file, force=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># 遍历所有基因，提取核酸序列并输出到文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(args.out_file, <span class="hljs-string">"w"</span>) <span class="hljs-keyword">as</span> out_file:<br>    <span class="hljs-keyword">for</span> gene <span class="hljs-keyword">in</span> db.features_of_type(<span class="hljs-string">"gene"</span>):<br>        <span class="hljs-comment"># 获取基因序列的位置信息</span><br>        seq_region = gene.seqid<br>        start = gene.start<br>        end = gene.end<br>        strand = gene.strand<br>        <br>        <span class="hljs-comment"># 从基因组序列中提取基因核酸序列</span><br>        <span class="hljs-keyword">if</span> seq_region <span class="hljs-keyword">in</span> genome_seq:<br>            gene_seq = genome_seq[seq_region][start-<span class="hljs-number">1</span>:end].seq<br>            <span class="hljs-keyword">if</span> strand == <span class="hljs-string">"-"</span>:<br>                gene_seq = gene_seq.reverse_complement()<br>            <br>            <span class="hljs-comment"># 输出基因核酸序列到文件</span><br>            out_file.write(<span class="hljs-string">"&gt;"</span> + gene.<span class="hljs-built_in">id</span> + <span class="hljs-string">"\n"</span>)<br>            out_file.write(<span class="hljs-built_in">str</span>(gene_seq) + <span class="hljs-string">"\n"</span>)<br></code></pre></td></tr></tbody></table></figure><h3 id="提取启动子序列"><a href="#提取启动子序列" class="headerlink" title="提取启动子序列"></a>提取启动子序列</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导入所需的包</span><br><span class="hljs-keyword">from</span> Bio <span class="hljs-keyword">import</span> SeqIO<br><span class="hljs-keyword">import</span> argparse<br><br><span class="hljs-comment"># 创建参数解析器</span><br>parser = argparse.ArgumentParser(description=<span class="hljs-string">'从GFF文件中提取每个转录本的信息，并在此基础上提取指定长度的启动子序列。'</span>)<br>parser.add_argument(<br>    <span class="hljs-string">'-i'</span>,<br>    <span class="hljs-string">'--input'</span>,<br>    dest=<span class="hljs-string">'gff_file'</span>,<br>    <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>,<br>    required=<span class="hljs-literal">True</span>,<br>    <span class="hljs-built_in">help</span>=<span class="hljs-string">'输入GFF文件路径。'</span><br>)<br>parser.add_argument(<br>    <span class="hljs-string">'-g'</span>,<br>    <span class="hljs-string">'--genome'</span>,<br>    dest=<span class="hljs-string">'genome_file'</span>,<br>    <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>,<br>    required=<span class="hljs-literal">True</span>,<br>    <span class="hljs-built_in">help</span>=<span class="hljs-string">'输入基因组序列文件路径。'</span><br>)<br>parser.add_argument(<br>    <span class="hljs-string">'-o'</span>,<br>    <span class="hljs-string">'--output'</span>,<br>    dest=<span class="hljs-string">'output_file'</span>,<br>    <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>,<br>    required=<span class="hljs-literal">True</span>,<br>    <span class="hljs-built_in">help</span>=<span class="hljs-string">'输出文件路径。'</span><br>)<br>parser.add_argument(<br>    <span class="hljs-string">'-l'</span>,<br>    <span class="hljs-string">'--length'</span>,<br>    dest=<span class="hljs-string">'promoter_length'</span>,<br>    <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>,<br>    default=<span class="hljs-number">1500</span>,<br>    <span class="hljs-built_in">help</span>=<span class="hljs-string">'指定启动子序列的长度，默认为1500bp。'</span><br>)<br><br><span class="hljs-comment"># 解析参数</span><br>args = parser.parse_args()<br><br><span class="hljs-comment"># 初始化基因组序列</span><br>genome_dict = SeqIO.to_dict(SeqIO.parse(args.genome_file, <span class="hljs-string">'fasta'</span>))<br><br><span class="hljs-comment"># 从GFF文件中提取转录本位置信息，并从基因组序列中提取启动子序列</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(args.output_file, <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> out_file, <span class="hljs-built_in">open</span>(args.gff_file) <span class="hljs-keyword">as</span> in_file:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> in_file:<br>        fields = line.strip().split(<span class="hljs-string">'\t'</span>)<br>        <span class="hljs-keyword">if</span> fields[<span class="hljs-number">2</span>] == <span class="hljs-string">'mRNA'</span>:<br>            transcript_id = fields[<span class="hljs-number">8</span>].split(<span class="hljs-string">';'</span>)[<span class="hljs-number">0</span>].split(<span class="hljs-string">'='</span>)[<span class="hljs-number">1</span>]<br>            gene_id = fields[<span class="hljs-number">8</span>].split(<span class="hljs-string">';'</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">'='</span>)[<span class="hljs-number">1</span>]<br>            chr_num = fields[<span class="hljs-number">0</span>]<br>            start = <span class="hljs-built_in">int</span>(fields[<span class="hljs-number">3</span>])<br>            end = <span class="hljs-built_in">int</span>(fields[<span class="hljs-number">4</span>])<br>            strand = fields[<span class="hljs-number">6</span>]<br>            <span class="hljs-comment"># 根据正负链计算起始位置和终止位置</span><br>            <span class="hljs-keyword">if</span> strand == <span class="hljs-string">'+'</span>:<br>                promoter_start = <span class="hljs-built_in">max</span>(<span class="hljs-number">0</span>, start - args.promoter_length)<br>                promoter_end = start<br>            <span class="hljs-keyword">else</span>:<br>                promoter_start = end<br>                promoter_end = <span class="hljs-built_in">min</span>(<span class="hljs-built_in">len</span>(genome_dict[chr_num]), end + args.promoter_length)<br>            <span class="hljs-comment"># 从基因组序列中提取启动子序列</span><br>            promoter_seq = <span class="hljs-built_in">str</span>(genome_dict[chr_num].seq[promoter_start:promoter_end]).upper()<br>            <span class="hljs-comment"># 将启动子序列写入输出文件</span><br>            out_file.write(<span class="hljs-string">f'&gt;<span class="hljs-subst">{transcript_id}</span>\n<span class="hljs-subst">{promoter_seq}</span>\n'</span>)<br></code></pre></td></tr></tbody></table></figure><p>用法如下：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">python getpromoterseqfromgenome<span class="hljs-selector-class">.py</span> -genome <span class="hljs-number">1</span><span class="hljs-selector-class">.fa</span> -gff temp<span class="hljs-selector-class">.gff</span> -length <span class="hljs-number">5</span> -out test<span class="hljs-selector-class">.fa</span>    <br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eggNOG-mapper本地化</title>
      <link href="/article/eggnotmapper/"/>
      <url>/article/eggnotmapper/</url>
      
        <content type="html"><![CDATA[<ul><li>从GitHub克隆项目</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/eggnogdb/eggnog-mapper.git<br></code></pre></td></tr></tbody></table></figure><ul><li>下载<a href="http://eggnog5.embl.de/download/emapperdb-5.0.2/">数据库</a>放在<code>data</code>文件夹下并解压</li><li>开始使用<ul><li>需要安装<code>diamond</code>，版本越新越好</li><li>python：需要使用python3</li><li>i：输入文件</li><li>out：输出文件</li><li>m：使用diamond比对</li></ul></li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python emapper.py -i pep.fa --output out -m diamond --cpu 12<br></code></pre></td></tr></tbody></table></figure><ul><li>输出结果</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">1\. query_name 输入的ID<br>2\. seed eggNOG ortholog 在eggNOG中比对到的最佳结果<br>3\. seed ortholog evalue<br>4\. seed ortholog score<br>5\. Predicted taxonomic group<br>6\. Predicted protein name 预测得到的蛋白名<br>7\. Gene Ontology terms 注释到的GO terms<br>8\. EC number<br>9\. KEGG_ko 注释到的ko<br>10\. KEGG_Pathway 注释到的通路<br>11\. KEGG_Module<br>12\. KEGG_Reaction<br>13\. KEGG_rclass<br>14\. BRITE<br>15\. KEGG_TC<br>16\. CAZy<br>17\. BiGG Reaction<br>18\. tax_scope: eggNOG taxonomic level used <span class="hljs-keyword">for</span> annotation<br>19\. eggNOG OGs<br>20\. bestOG (deprecated, use smallest from eggnog OGs)<br>21\. COG Functional Category<br>22\. eggNOG free text description<br></code></pre></td></tr></tbody></table></figure><p><strong>421万条序列注释用了11小时。</strong></p><hr><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/emapper_workflow.png" alt="img"></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言笔记</title>
      <link href="/article/sharer/"/>
      <url>/article/sharer/</url>
      
        <content type="html"><![CDATA[<h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202208262149383.png" alt=""></p><h2 id="R语言基础"><a href="#R语言基础" class="headerlink" title="R语言基础"></a>R语言基础</h2><h3 id="R语言简介"><a href="#R语言简介" class="headerlink" title="R语言简介"></a>R语言简介</h3><h3 id="R语言应用"><a href="#R语言应用" class="headerlink" title="R语言应用"></a>R语言应用</h3><p>谷歌学术2022年8月10日截图：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/Snipaste_2022-08-10_23-00-25.png" alt=""></p><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p>如果电脑分成系统盘（C盘）和非系统盘（非C盘），先在非C盘的位置创建文件夹<code>R</code>，然后安装<code>R</code>和<code>RStudio</code>的时候选择安装在这个路径。</p><h4 id="R"><a href="#R" class="headerlink" title="R"></a>R</h4><ul><li><a href="https://cran.r-project.org/bin/">所有版本下载地址</a></li><li><a href="https://cran.r-project.org/bin/windows/base/old/">Windows旧版本下载地址</a></li></ul><h4 id="RStudio"><a href="#RStudio" class="headerlink" title="RStudio"></a>RStudio</h4><ul><li><a href="https://www.rstudio.com/products/rstudio/download/#download">官网下载地址</a></li></ul><h4 id="rtools"><a href="#rtools" class="headerlink" title="rtools"></a>rtools</h4><p><code>rtools</code>的作用可以简单理解为有时候有些R包的安装需要用<code>rtools</code>编译才能安装。</p><p>注意：<strong>安装时默认路径安装！！！</strong></p><ul><li><a href="https://cran.r-project.org/bin/windows/Rtools/">官网下载地址</a></li></ul><h3 id="软件设置"><a href="#软件设置" class="headerlink" title="软件设置"></a>软件设置</h3><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><h3 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h3><h2 id="R包管理"><a href="#R包管理" class="headerlink" title="R包管理"></a>R包管理</h2><h3 id="查找合适的包"><a href="#查找合适的包" class="headerlink" title="查找合适的包"></a>查找合适的包</h3><h3 id="R包管理-1"><a href="#R包管理-1" class="headerlink" title="R包管理"></a>R包管理</h3><h3 id="镜像问题"><a href="#镜像问题" class="headerlink" title="镜像问题"></a>镜像问题</h3><h3 id="Bioconductor包"><a href="#Bioconductor包" class="headerlink" title="Bioconductor包"></a>Bioconductor包</h3><h3 id="安装R包"><a href="#安装R包" class="headerlink" title="安装R包"></a>安装R包</h3><h3 id="R包迁移"><a href="#R包迁移" class="headerlink" title="R包迁移"></a>R包迁移</h3><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="认识数据"><a href="#认识数据" class="headerlink" title="认识数据"></a>认识数据</h3><h3 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h3><h3 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h3><h3 id="读写文本文件"><a href="#读写文本文件" class="headerlink" title="读写文本文件"></a>读写文本文件</h3><h3 id="读写EXcel"><a href="#读写EXcel" class="headerlink" title="读写EXcel"></a>读写EXcel</h3><h3 id="读写其他文件"><a href="#读写其他文件" class="headerlink" title="读写其他文件"></a>读写其他文件</h3><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h3 id="数据结构-1"><a href="#数据结构-1" class="headerlink" title="数据结构"></a>数据结构</h3><h3 id="变量操作"><a href="#变量操作" class="headerlink" title="变量操作"></a>变量操作</h3><h2 id="数据索引"><a href="#数据索引" class="headerlink" title="数据索引"></a>数据索引</h2><h3 id="数据索引-1"><a href="#数据索引-1" class="headerlink" title="数据索引"></a>数据索引</h3><h3 id="判断类型"><a href="#判断类型" class="headerlink" title="判断类型"></a>判断类型</h3><h3 id="修改内容"><a href="#修改内容" class="headerlink" title="修改内容"></a>修改内容</h3><h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h3 id="筛选"><a href="#筛选" class="headerlink" title="筛选"></a>筛选</h3><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><h3 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h3><h2 id="ggplot2基础"><a href="#ggplot2基础" class="headerlink" title="ggplot2基础"></a>ggplot2基础</h2><h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><ul><li><a href="https://rstudio-conf-2022.github.io/ggplot2-graphic-design/">R语言课程</a></li></ul><h3 id="绘图语法"><a href="#绘图语法" class="headerlink" title="绘图语法"></a>绘图语法</h3><ul><li>理解区分分类变量和连续变量；</li><li><code>+</code>必须位于每行绘图代码的末尾；</li><li>区分形状颜色和填充色；</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202208262220337.png" alt="image-20220826222040082"></p><ul><li>不同的几何对象可以筛选数据；</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202208262230992.png" alt="image-20220826223036734" style="zoom:50%;"></p><h3 id="图层概念"><a href="#图层概念" class="headerlink" title="图层概念"></a>图层概念</h3><h3 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h3><h3 id="颜色修改"><a href="#颜色修改" class="headerlink" title="颜色修改"></a>颜色修改</h3><h4 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h4><ul><li><a href="https://r-charts.com/colors/#converter">颜色代码转换</a></li></ul><h3 id="坐标修改"><a href="#坐标修改" class="headerlink" title="坐标修改"></a>坐标修改</h3><h3 id="分面操作"><a href="#分面操作" class="headerlink" title="分面操作"></a>分面操作</h3><h2 id="常见图形"><a href="#常见图形" class="headerlink" title="常见图形"></a>常见图形</h2><h3 id="学习资源-1"><a href="#学习资源-1" class="headerlink" title="学习资源"></a>学习资源</h3><ul><li><a href="https://r-charts.com/ggplot2/">常见图形</a></li><li><a href="https://data.library.virginia.edu/mathematical-annotation-in-r/">绘图添加公式</a></li><li><a href="https://blog.djnavarro.net/posts/2022-08-23_visualising-a-billion-rows/">十亿级数据可视化</a></li><li><a href="https://rkabacoff.github.io/datavis/">R数据可视化</a></li><li>常见统计图形</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202209101502257.jpg" alt=""></p><h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><h3 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h3><h4 id="堆积柱状图加上误差线"><a href="#堆积柱状图加上误差线" class="headerlink" title="堆积柱状图加上误差线"></a>堆积柱状图加上误差线</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs R">StackedBarErrorBar <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">,</span> group<span class="hljs-punctuation">,</span> level<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  StackedBarErrorBar.sub <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">,</span> group<span class="hljs-punctuation">,</span> level<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    res <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br>    col.name <span class="hljs-operator">&lt;-</span> colnames<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br><br>    data <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>rename<span class="hljs-punctuation">(</span><br>        value <span class="hljs-operator">=</span> value<span class="hljs-punctuation">,</span><br>        group <span class="hljs-operator">=</span> group<br>      <span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> data<br><br>    <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>level<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      data <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>group <span class="hljs-operator">%in%</span> level<span class="hljs-punctuation">[</span>i<span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>level<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>mean.value <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> mean.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>duplicated<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>mean.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> res.1<br><br>      mean.value <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>res.1<span class="hljs-operator">$</span>mean.value<span class="hljs-punctuation">)</span><br><br>      data <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>group <span class="hljs-operator">==</span> level<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>mean.posi <span class="hljs-operator">=</span> mean.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>          mean.value <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          sd.posi <span class="hljs-operator">=</span> sd<span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          n <span class="hljs-operator">=</span> n<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          se <span class="hljs-operator">=</span> sd.posi <span class="hljs-operator">/</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        rbind<span class="hljs-punctuation">(</span>res<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> res<br>    <span class="hljs-punctuation">}</span><br><br>    col.name <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>col.name<span class="hljs-punctuation">,</span> <span class="hljs-string">"mean.posi"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"mean.value"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sd.posi"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"n"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"se"</span><span class="hljs-punctuation">)</span><br><br>    res <span class="hljs-operator">%&gt;%</span><br>      magrittr<span class="hljs-operator">::</span>set_names<span class="hljs-punctuation">(</span>col.name<span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> res<br><br>    <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>res<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><br>  <span class="hljs-comment"># contiction</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-string">"grouped_df"</span> <span class="hljs-operator">%in%</span> <span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    data <span class="hljs-operator">%&gt;%</span><br>      do<span class="hljs-punctuation">(</span>StackedBarErrorBar.sub<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">,</span><br>        value <span class="hljs-operator">=</span> value<span class="hljs-punctuation">,</span><br>        group <span class="hljs-operator">=</span> group<span class="hljs-punctuation">,</span><br>        level <span class="hljs-operator">=</span> level<br>      <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> res<br>  <span class="hljs-punctuation">}</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">{</span><br>    StackedBarErrorBar.sub<span class="hljs-punctuation">(</span><br>      data <span class="hljs-operator">=</span> data<span class="hljs-punctuation">,</span><br>      value <span class="hljs-operator">=</span> value<span class="hljs-punctuation">,</span><br>      group <span class="hljs-operator">=</span> group<span class="hljs-punctuation">,</span><br>      level <span class="hljs-operator">=</span> level<br>    <span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> res<br>  <span class="hljs-punctuation">}</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>res<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs css">df %&gt;% <br>  dplyr::<span class="hljs-built_in">filter</span>(group == <span class="hljs-string">"干重"</span>) %&gt;% <br>  tidyr::<span class="hljs-built_in">pivot_longer</span>(cols = <span class="hljs-number">3</span>:<span class="hljs-number">6</span>) %&gt;% <br>  dplyr::<span class="hljs-built_in">select</span>(-group)%&gt;% <br>  dplyr::<span class="hljs-built_in">group_by</span>(treatment) %&gt;% <br>  <span class="hljs-built_in">StackedBarErrorBar</span>(.,<br>                     value = <span class="hljs-string">"Value"</span>,<br>                     group = <span class="hljs-string">"name"</span>, <br>                     level = <span class="hljs-built_in">c</span>(<span class="hljs-string">"叶"</span>,<span class="hljs-string">"茎"</span>, <span class="hljs-string">"主根"</span>,<span class="hljs-string">"须根"</span>)) %&gt;% <br>  dplyr::<span class="hljs-built_in">mutate</span>(name = <span class="hljs-built_in">factor</span>(name, level = <span class="hljs-built_in">c</span>(<span class="hljs-string">"叶"</span>,<span class="hljs-string">"茎"</span>, <span class="hljs-string">"主根"</span>,<span class="hljs-string">"须根"</span>)),<br>                label = <span class="hljs-string">"a"</span>) %&gt;% <br>  <span class="hljs-built_in">ggplot</span>(<span class="hljs-built_in">aes</span>(treatment, y = mean.value/n, fill = name)) +<br>  <span class="hljs-built_in">geom_bar</span>(stat = <span class="hljs-string">"identity"</span>) +<br>  <span class="hljs-built_in">geom_errorbar</span>(<span class="hljs-built_in">aes</span>(ymin = mean.posi - se,<br>                    ymax = mean.posi + se),<br>                width = <span class="hljs-number">0.2</span>) +<br>  <span class="hljs-built_in">geom_text</span>(<span class="hljs-built_in">aes</span>(treatment,y = mean.posi + se + <span class="hljs-number">2</span>, label = label), check_overlap = TRUE) +<br>  <span class="hljs-built_in">geom_hline</span>(yintercept = <span class="hljs-number">62</span>, color = NA) +<br>  <span class="hljs-built_in">scale_fill_aaas</span>() +<br>  <span class="hljs-built_in">scale_y_continuous</span>(expand = <span class="hljs-built_in">c</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)) +<br>  <span class="hljs-built_in">mytheme</span>() +<br>  <span class="hljs-built_in">theme</span>(legend.position = <span class="hljs-built_in">c</span>(<span class="hljs-number">0.1</span>, <span class="hljs-number">0.85</span>),<br>        legend.title = <span class="hljs-built_in">element_blank</span>(),<br>        legend.background = <span class="hljs-built_in">element_blank</span>())<br><br></code></pre></td></tr></tbody></table></figure><h3 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h3><h3 id="箱线图"><a href="#箱线图" class="headerlink" title="箱线图"></a>箱线图</h3><h3 id="韦恩图"><a href="#韦恩图" class="headerlink" title="韦恩图"></a>韦恩图</h3><h3 id="小提琴图"><a href="#小提琴图" class="headerlink" title="小提琴图"></a>小提琴图</h3><h3 id="热图"><a href="#热图" class="headerlink" title="热图"></a>热图</h3><h2 id="基础统计"><a href="#基础统计" class="headerlink" title="基础统计"></a>基础统计</h2><h3 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h3><ul><li><a href="https://rcompanion.org/handbook/">Summary and Analysis of Extension Program Evaluation in R</a></li><li><a href="https://xcelab.net/rm/statistical-rethinking/">贝叶斯统计学习</a></li><li><a href="https://modernstatisticswithr.com/index.html">现代统计在R中的实现</a></li><li><a href="https://mlu-explain.github.io/linear-regression/">线性回归模型的可视化解释</a></li><li><a href="http://madrury.github.io/jekyll/update/statistics/2016/07/20/lm-in-R.html">R语言是如何实现线性回归模型的</a></li></ul><h3 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h3><ul><li><p>求最小二乘均值并标注显著性</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>multcomp<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>emmeans<span class="hljs-punctuation">)</span><br><br>lm<span class="hljs-punctuation">(</span>Sepal.Length <span class="hljs-operator">~</span> Species<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> iris<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  emmeans<span class="hljs-punctuation">(</span><span class="hljs-operator">~</span>Species<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  cld<span class="hljs-punctuation">(</span>alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> Letters <span class="hljs-operator">=</span> <span class="hljs-built_in">letters</span><span class="hljs-punctuation">,</span> adjust<span class="hljs-operator">=</span><span class="hljs-string">"tukey"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>什么是模型的<em>p</em>值：和空模型相比，是否显著。</p></li><li><p>什么是模型的<em>$R^2$</em>：多少的因变量被模型解释。</p></li><li><p><em>glm</em>模型不会返回<em>p</em>值和<em>$R^2$</em>，利用函数<em>anova</em>可以计算<em>p</em>值，函数<em>nagelkerke</em>可以计算伪<em>$R^2$</em>。</p></li></ul><h3 id="t检验"><a href="#t检验" class="headerlink" title="t检验"></a>t检验</h3><h3 id="方差分析"><a href="#方差分析" class="headerlink" title="方差分析"></a>方差分析</h3><h3 id="卡方检验"><a href="#卡方检验" class="headerlink" title="卡方检验"></a>卡方检验</h3><h3 id="wilcox检验"><a href="#wilcox检验" class="headerlink" title="wilcox检验"></a>wilcox检验</h3><h3 id="Fisher精确检验"><a href="#Fisher精确检验" class="headerlink" title="Fisher精确检验"></a>Fisher精确检验</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># create a dataframe</span><br>df <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><span class="hljs-string">"cured"</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">60</span><span class="hljs-punctuation">,</span> <span class="hljs-number">30</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"noncured"</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"treated"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"nontreated"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>df<br><span class="hljs-comment"># output</span><br>           cured noncured<br>treated       <span class="hljs-number">60</span>       <span class="hljs-number">10</span><br>nontreated    <span class="hljs-number">30</span>       <span class="hljs-number">25</span><br><br>mosaicplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span>  <br><br>library<span class="hljs-punctuation">(</span>stats<span class="hljs-punctuation">)</span><br>fisher.test<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># output</span><br><br>Fisher Exact Test <span class="hljs-keyword">for</span> Count Data<br><br>data<span class="hljs-operator">:</span>  df<br>p<span class="hljs-operator">-</span>value <span class="hljs-operator">=</span> <span class="hljs-number">0.0002357</span><br>alternative hypothesis<span class="hljs-operator">:</span> true odds ratio is not equal to <span class="hljs-number">1</span><br><span class="hljs-number">95</span> percent confidence interval<span class="hljs-operator">:</span><br>  <span class="hljs-number">1.983312</span> <span class="hljs-number">13.107997</span><br>sample estimates<span class="hljs-operator">:</span><br>odds ratio <br>  <span class="hljs-number">4.930093</span><br><br><span class="hljs-comment"># create a dataframe</span><br>df <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><span class="hljs-string">"no_disease"</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">40</span><span class="hljs-punctuation">,</span> <span class="hljs-number">30</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"disease"</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                    row.names <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"drugA"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"drugB"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"drugC"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>df<br><span class="hljs-comment"># output</span><br>      no_disease disease<br>drugA         <span class="hljs-number">40</span>      <span class="hljs-number">10</span><br>drugB         <span class="hljs-number">30</span>      <span class="hljs-number">20</span><br>drugC         <span class="hljs-number">25</span>      <span class="hljs-number">25</span><br><br>mosaicplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span>  <br><br>library<span class="hljs-punctuation">(</span>stats<span class="hljs-punctuation">)</span><br>fisher.test<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># output</span><br>Fishers Exact Test <span class="hljs-keyword">for</span> Count Data<br><br>data<span class="hljs-operator">:</span>  df<br>p<span class="hljs-operator">-</span>value <span class="hljs-operator">=</span> <span class="hljs-number">0.005304</span><br>alternative hypothesis<span class="hljs-operator">:</span> two.sided<br><br>library<span class="hljs-punctuation">(</span>rstatix<span class="hljs-punctuation">)</span><br>pairwise_fisher_test<span class="hljs-punctuation">(</span>as.matrix<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> p.adjust.method <span class="hljs-operator">=</span> <span class="hljs-string">"fdr"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># output</span><br>  group1 group2     n       p   p.adj p.adj.signif<br><span class="hljs-operator">*</span> <span class="hljs-operator">&lt;</span>chr<span class="hljs-operator">&gt;</span>  <span class="hljs-operator">&lt;</span>chr<span class="hljs-operator">&gt;</span>  <span class="hljs-operator">&lt;</span>dbl<span class="hljs-operator">&gt;</span>   <span class="hljs-operator">&lt;</span>dbl<span class="hljs-operator">&gt;</span>   <span class="hljs-operator">&lt;</span>dbl<span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>chr<span class="hljs-operator">&gt;</span>       <br><span class="hljs-number">1</span> drugA  drugB    <span class="hljs-number">100</span> <span class="hljs-number">0.0486</span>  <span class="hljs-number">0.0729</span>  ns          <br><span class="hljs-number">2</span> drugA  drugC    <span class="hljs-number">100</span> <span class="hljs-number">0.00305</span> <span class="hljs-number">0.00915</span> <span class="hljs-operator">*</span><span class="hljs-operator">*</span>          <br><span class="hljs-number">3</span> drugB  drugC    <span class="hljs-number">100</span> <span class="hljs-number">0.422</span>   <span class="hljs-number">0.422</span>   ns   <br></code></pre></td></tr></tbody></table></figure><h3 id="贝叶斯统计"><a href="#贝叶斯统计" class="headerlink" title="贝叶斯统计"></a>贝叶斯统计</h3><h4 id="学习资料-1"><a href="#学习资料-1" class="headerlink" title="学习资料"></a>学习资料</h4><ul><li><a href="https://bayesf22-notebook.classes.andrewheiss.com/bayes-rules/16-chapter.html">bayesf22</a></li></ul><h2 id="基础分析"><a href="#基础分析" class="headerlink" title="基础分析"></a>基础分析</h2><h3 id="回归分析"><a href="#回归分析" class="headerlink" title="回归分析"></a>回归分析</h3><h3 id="相关性分析"><a href="#相关性分析" class="headerlink" title="相关性分析"></a>相关性分析</h3><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><h3 id="PCA"><a href="#PCA" class="headerlink" title="PCA"></a>PCA</h3><h3 id="LDA"><a href="#LDA" class="headerlink" title="LDA"></a>LDA</h3><h3 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h3><p><a href="https://mp.weixin.qq.com/s/q02Y-xZV2F4ubtLg_CZKXQ">参考帖子</a></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#随机森林寻找 Biomarker 和环境驱动因子，以及气泡图 + 柱状图 + 热图组合可视化</span><br>otu<span class="hljs-operator">&lt;-</span>read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"D://test/test_otu.csv"</span><span class="hljs-punctuation">,</span>row.names <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>env<span class="hljs-operator">&lt;-</span>read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"D://test/test_design.csv"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#链接：https://pan.baidu.com/s/10MnqI7AJEk3f_qVoPDtjyA 提取码：5nnb #已经更新</span><br>library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>randomForest<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>reshape2<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#构建数据框</span><br>train_otu<span class="hljs-operator">&lt;-</span>cbind<span class="hljs-punctuation">(</span>env<span class="hljs-operator">$</span>Group<span class="hljs-punctuation">,</span>t<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>train_otu<span class="hljs-operator">&lt;-</span>as.data.frame<span class="hljs-punctuation">(</span>train_otu<span class="hljs-punctuation">)</span><br><span class="hljs-comment">###### 构建模型</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>rf_train<span class="hljs-operator">&lt;-</span> randomForest <span class="hljs-punctuation">(</span>train_otu<span class="hljs-operator">$</span>V1<span class="hljs-operator">~</span>.<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> train_otu<span class="hljs-punctuation">,</span> ntree<span class="hljs-operator">=</span><span class="hljs-number">1000</span><span class="hljs-punctuation">,</span>importance <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#ntree 可用来调整模型效果</span><br>rf_train<br><span class="hljs-comment">###### 挖掘预测模型中最重要的关键微生物 biomarker</span><br>df<span class="hljs-operator">&lt;-</span>data.frame<span class="hljs-punctuation">(</span>importance<span class="hljs-punctuation">(</span>rf_train<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> check.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">###### heatmap of top 20 preditors</span><br><span class="hljs-comment">#筛选前 20 重要 OTU, 依据 Increase in MSE%</span><br>df<span class="hljs-operator">&lt;-</span>df<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>MeanDecreaseAccuracy<span class="hljs-punctuation">,</span>decreasing <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>df<span class="hljs-operator">&lt;-</span>df<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">20</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br><span class="hljs-comment">#获取 top20otu 物种信息和丰度表</span><br>otu_top<span class="hljs-operator">&lt;-</span>subset<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">,</span>rownames<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">)</span><span class="hljs-operator">%in%</span>rownames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>pp<span class="hljs-operator">&lt;-</span>otu_top<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span><br>pp_new<span class="hljs-operator">&lt;-</span>as.data.frame<span class="hljs-punctuation">(</span>cbind<span class="hljs-punctuation">(</span>rowSums<span class="hljs-punctuation">(</span>pp<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span>rowSums<span class="hljs-punctuation">(</span>pp<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">13</span><span class="hljs-operator">:</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>pp_new<span class="hljs-punctuation">)</span><span class="hljs-operator">&lt;-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"AA"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"BB"</span><span class="hljs-punctuation">)</span><br>pp_new<span class="hljs-operator">$</span>AA<span class="hljs-operator">&lt;-</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>pp_new<span class="hljs-operator">$</span>AA<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>pp_new<span class="hljs-operator">$</span>BB<span class="hljs-operator">&lt;-</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>pp_new<span class="hljs-operator">$</span>BB<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>io<span class="hljs-operator">&lt;-</span>pp_new<span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>pp_new<span class="hljs-operator">=</span>row.names<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">%&gt;%</span>melt<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#组图 A Biomarker 在样品之间的丰度气泡图</span><br>ggplot<span class="hljs-punctuation">(</span>io<span class="hljs-punctuation">,</span>aes<span class="hljs-punctuation">(</span>variable<span class="hljs-punctuation">,</span>pp_new<span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_tile<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"grey2"</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">0.7</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>pch<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">8.2</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  scale_fill_gradientn<span class="hljs-punctuation">(</span>colours <span class="hljs-operator">=</span>colorRampPalette<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'#2D6DB1'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'#DC1623'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">111</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme_minimal<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br> <span class="hljs-comment"># theme(legend.position = "down",legend.text = element_text(size = 6))</span><br>  theme<span class="hljs-punctuation">(</span>axis.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text.x <span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span><span class="hljs-number">90</span><span class="hljs-punctuation">,</span>hjust <span class="hljs-operator">=</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span>vjust <span class="hljs-operator">=</span> <span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">##### 组图 b 柱状图展示 top 20 OTU 的重要性</span><br>dataframe<span class="hljs-operator">&lt;-</span>cbind<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span>rownames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggplot<span class="hljs-punctuation">(</span>dataframe<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>MeanDecreaseAccuracy<span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span>rownames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_bar<span class="hljs-punctuation">(</span>stat <span class="hljs-operator">=</span> <span class="hljs-string">"identity"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">0.7</span><span class="hljs-punctuation">,</span>position <span class="hljs-operator">=</span> <span class="hljs-string">"dodge"</span><span class="hljs-punctuation">,</span>colour<span class="hljs-operator">=</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">"#2D6DB1"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  labs<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span><span class="hljs-string">"Increase in MSE%"</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-string">""</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span>base_line_size <span class="hljs-operator">=</span> <span class="hljs-number">1.1</span><span class="hljs-punctuation">,</span>base_rect_size <span class="hljs-operator">=</span><span class="hljs-number">1.1</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>panel.grid.major<span class="hljs-operator">=</span>element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>panel.grid.minor<span class="hljs-operator">=</span>element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"right"</span><span class="hljs-punctuation">,</span>legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#组图 c 相关矩阵展示 top 20 OTU 和环境因子关联性</span><br><span class="hljs-comment">#合并理化因子和微生物</span><br>library<span class="hljs-punctuation">(</span>corrplot<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>Hmisc<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>reshape2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>RColorBrewer<span class="hljs-punctuation">)</span><br>df3<span class="hljs-operator">&lt;-</span>cbind<span class="hljs-punctuation">(</span>t<span class="hljs-punctuation">(</span>otu_top<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>env<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#计算 Spearman 相关分析系数</span><br>spearman_df <span class="hljs-operator">&lt;-</span> corr.test<span class="hljs-punctuation">(</span>df3<span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">'spearman'</span><span class="hljs-punctuation">,</span> adjust <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span><br>spearman_r<span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>spearman_df<span class="hljs-operator">$</span>r<span class="hljs-punctuation">)</span> <br>spearman_r<span class="hljs-operator">&lt;-</span>spearman_r<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">20</span><span class="hljs-punctuation">,</span><span class="hljs-number">21</span><span class="hljs-operator">:</span><span class="hljs-number">28</span><span class="hljs-punctuation">]</span><br>spearman_p<span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>spearman_df<span class="hljs-operator">$</span>p<span class="hljs-punctuation">)</span> <br>spearman_p<span class="hljs-operator">&lt;-</span>spearman_p<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">20</span><span class="hljs-punctuation">,</span><span class="hljs-number">21</span><span class="hljs-operator">:</span><span class="hljs-number">28</span><span class="hljs-punctuation">]</span><br><span class="hljs-comment">#绘制相关分析图</span><br><span class="hljs-comment">#转化为 ggplot 画图需要的长列表</span><br>io1<span class="hljs-operator">&lt;-</span>spearman_r<span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>pp<span class="hljs-operator">=</span>row.names<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">%&gt;%</span>melt<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>io2<span class="hljs-operator">&lt;-</span>spearman_p<span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>pp<span class="hljs-operator">=</span>row.names<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">%&gt;%</span>melt<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>df<span class="hljs-operator">&lt;-</span>cbind<span class="hljs-punctuation">(</span>io1<span class="hljs-punctuation">,</span>io2<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span>io2<span class="hljs-operator">$</span>value<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#添加显著性，标记星号，实际需要自行添加 (根据相关分析显著性结果 Spearman、Pearson 的 p 值)，这里仅供画图，数据无意义。</span><br>colnames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-operator">&lt;-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"pp"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"variable"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"value"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"sig"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"p"</span><span class="hljs-punctuation">)</span><br>df<span class="hljs-operator">$</span>sig<span class="hljs-punctuation">[</span>df<span class="hljs-operator">$</span>p<span class="hljs-operator">&lt;=</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">]</span><span class="hljs-operator">&lt;-</span><span class="hljs-string">"*"</span><br>df<span class="hljs-operator">$</span>sig<span class="hljs-punctuation">[</span>df<span class="hljs-operator">$</span>p<span class="hljs-operator">&lt;=</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">]</span><span class="hljs-operator">&lt;-</span><span class="hljs-string">"**"</span><br>df<span class="hljs-operator">$</span>sig<span class="hljs-punctuation">[</span>df<span class="hljs-operator">$</span>p<span class="hljs-operator">&lt;=</span><span class="hljs-number">0.001</span><span class="hljs-punctuation">]</span><span class="hljs-operator">&lt;-</span><span class="hljs-string">"***"</span><br>df<span class="hljs-operator">$</span>sig<span class="hljs-punctuation">[</span>df<span class="hljs-operator">$</span>p<span class="hljs-operator">&gt;=</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">]</span><span class="hljs-operator">&lt;-</span><span class="hljs-string">""</span><br><span class="hljs-comment">#计算 Spearman、Pearson 的 r 值后，其范围为 - 1 到 1</span><br>ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span>aes<span class="hljs-punctuation">(</span>variable<span class="hljs-punctuation">,</span>pp<span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_tile<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"grey2"</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">0.7</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>pch<span class="hljs-operator">=</span><span class="hljs-number">22</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">7.2</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>df<span class="hljs-operator">$</span>sig<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"gray2"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_gradientn<span class="hljs-punctuation">(</span>colours <span class="hljs-operator">=</span>colorRampPalette<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'#2D6DB1'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'#DC1623'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-number">111</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span>fill<span class="hljs-operator">=</span><span class="hljs-string">"R value"</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme_minimal<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text.x <span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span><span class="hljs-number">90</span><span class="hljs-punctuation">,</span>hjust <span class="hljs-operator">=</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span>vjust <span class="hljs-operator">=</span> <span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span>size<span class="hljs-operator">=</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h2 id="组学分析"><a href="#组学分析" class="headerlink" title="组学分析"></a>组学分析</h2><h3 id="转录组"><a href="#转录组" class="headerlink" title="转录组"></a>转录组</h3><h3 id="群体遗传学"><a href="#群体遗传学" class="headerlink" title="群体遗传学"></a>群体遗传学</h3><h4 id="GWAS"><a href="#GWAS" class="headerlink" title="GWAS"></a>GWAS</h4><h5 id="学习资料-2"><a href="#学习资料-2" class="headerlink" title="学习资料"></a>学习资料</h5><ul><li><a href="https://github.com/whussain2/R-for-Plant-Breeding/tree/master/GWAS_in_R">R完成GWAS</a></li></ul><h3 id="微生物组"><a href="#微生物组" class="headerlink" title="微生物组"></a>微生物组</h3><h4 id="大数据挖掘"><a href="#大数据挖掘" class="headerlink" title="大数据挖掘"></a>大数据挖掘</h4><ul><li><strong>NetMoss</strong>算法，通过分析微生物网络模块的变化鉴定疾病相关的生物指示者。<ul><li><a href="https://www.nature.com/articles/s43588-022-00247-8">文献原文</a></li><li><a href="https://mp.weixin.qq.com/s/wvzSFh8AYuRM-yP7q-wA7A">微信公众号</a></li><li><a href="https://github.com/xiaolw95/NetMoss2">GitHub</a></li></ul></li></ul><h4 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h4><ul><li><a href="https://www.davidzeleny.net/anadat-r/doku.php/en:start">生态学数据分析</a></li></ul><h4 id="PERMANOVA"><a href="#PERMANOVA" class="headerlink" title="PERMANOVA"></a>PERMANOVA</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br><br>data<span class="hljs-punctuation">(</span>dune<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>dune.env<span class="hljs-punctuation">)</span><br><br>dune.dist <span class="hljs-operator">&lt;-</span> vegdist<span class="hljs-punctuation">(</span>dune<span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">"bray"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># default test by terms</span><br><br>dune.div <span class="hljs-operator">&lt;-</span> adonis2<span class="hljs-punctuation">(</span>dune <span class="hljs-operator">~</span> Management<span class="hljs-operator">*</span>A1<span class="hljs-punctuation">,</span> <br>                    data <span class="hljs-operator">=</span> dune.env<span class="hljs-punctuation">,</span> <br>                    permutations <span class="hljs-operator">=</span> <span class="hljs-number">999</span><span class="hljs-punctuation">,</span> <br>                    method<span class="hljs-operator">=</span><span class="hljs-string">"bray"</span><span class="hljs-punctuation">)</span><br><br>dune.div <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># overall tests</span><br><br>adonis2<span class="hljs-punctuation">(</span>dune <span class="hljs-operator">~</span> Management<span class="hljs-operator">*</span>A1<span class="hljs-punctuation">,</span> <br>        data <span class="hljs-operator">=</span> dune.env<span class="hljs-punctuation">,</span> <br>        permutations <span class="hljs-operator">=</span> <span class="hljs-number">999</span><span class="hljs-punctuation">,</span> <br>        method<span class="hljs-operator">=</span><span class="hljs-string">"bray"</span><span class="hljs-punctuation">,</span><br>        by <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h4 id="结构方程模型"><a href="#结构方程模型" class="headerlink" title="结构方程模型"></a>结构方程模型</h4><h5 id="带线性混合效应模型的-SEM-构建、解释以及实际应用"><a href="#带线性混合效应模型的-SEM-构建、解释以及实际应用" class="headerlink" title="带线性混合效应模型的 SEM 构建、解释以及实际应用"></a>带线性混合效应模型的 SEM 构建、解释以及实际应用</h5><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202211131110711.png" alt="图片"></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#加载包，导入数据</span><br>library<span class="hljs-punctuation">(</span>piecewiseSEM<span class="hljs-punctuation">)</span><span class="hljs-comment">#加载包</span><br>sampld <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">"clipboard"</span><span class="hljs-punctuation">,</span>header<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#读入数据</span><br>sample_psem <span class="hljs-operator">&lt;-</span> psem<span class="hljs-punctuation">(</span> <br>  lme4<span class="hljs-operator">::</span>lmer<span class="hljs-punctuation">(</span>MBN <span class="hljs-operator">~</span> Plantdiversity <span class="hljs-operator">+</span> N_addition <span class="hljs-operator">+</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">|</span>site<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> sampld<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  lme4<span class="hljs-operator">::</span>lmer<span class="hljs-punctuation">(</span>PC1 <span class="hljs-operator">~</span> Plantdiversity <span class="hljs-operator">+</span> N_addition <span class="hljs-operator">+</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">|</span>site<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> sampld<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>  lme4<span class="hljs-operator">::</span>lmer<span class="hljs-punctuation">(</span>Plantdiversity <span class="hljs-operator">~</span> N_addition<span class="hljs-operator">+</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">|</span>site<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> sampld<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  lme4<span class="hljs-operator">::</span>lmer<span class="hljs-punctuation">(</span>N2O <span class="hljs-operator">~</span> N_addition<span class="hljs-operator">+</span>MBN<span class="hljs-operator">+</span>PC1<span class="hljs-operator">+</span>Plantdiversity <span class="hljs-operator">+</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">|</span>site<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> sampld<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><span class="hljs-comment">#建模</span><br>summary<span class="hljs-punctuation">(</span>sample_psem<span class="hljs-punctuation">)</span><span class="hljs-comment">#提取建模结果</span><br><br>plot<span class="hljs-punctuation">(</span>sample_psem<span class="hljs-punctuation">,</span>digits <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202211131110143.png" alt="图片"></p><h2 id="R开发"><a href="#R开发" class="headerlink" title="R开发"></a>R开发</h2><h3 id="shiny"><a href="#shiny" class="headerlink" title="shiny"></a>shiny</h3><h4 id="golem开发shiny"><a href="#golem开发shiny" class="headerlink" title="golem开发shiny"></a>golem开发shiny</h4><ul><li>学习资料：<a href="https://engineering-shiny.org/">Engineering Production-Grade Shiny Apps</a></li><li>速查表：<a href="https://smach.github.io/R4JournalismBook/HowDoI.html">How Do I? …(do that in R)</a></li></ul><p>主要笔记：</p><ul><li>创建项目</li></ul><p>下面的代码会创建一个<code>R package</code>格式的文件夹，</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">golem<span class="hljs-operator">::</span>create_golem<span class="hljs-punctuation">(</span>path <span class="hljs-operator">=</span> <span class="hljs-string">"path/to/package"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R">.<br><span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> DESCRIPTION<br><span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> dev<br><span class="hljs-operator">|</span>   <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> <span class="hljs-number">01</span>_start.R<br><span class="hljs-operator">|</span>   <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> <span class="hljs-number">02</span>_dev.R<br><span class="hljs-operator">|</span>   <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> <span class="hljs-number">03</span>_deploy.R<br><span class="hljs-operator">|</span>   <span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> run_dev.R<br><span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> GOKEGG4TCMP.Rproj<br><span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> inst<br><span class="hljs-operator">|</span>   <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> app<br><span class="hljs-operator">|</span>   <span class="hljs-operator">|</span>   <span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> www<br><span class="hljs-operator">|</span>   <span class="hljs-operator">|</span>       <span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> favicon.ico<br><span class="hljs-operator">|</span>   <span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> golem<span class="hljs-operator">-</span>config.yml<br><span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> man<br><span class="hljs-operator">|</span>   <span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> run_app.Rd<br><span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> NAMESPACE<br><span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> R<br>    <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> app_config.R<br>    <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> app_server.R<br>    <span class="hljs-operator">+</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> app_ui.R<br>    <span class="hljs-punctuation">\</span><span class="hljs-operator">-</span><span class="hljs-operator">-</span> run_app.R<br></code></pre></td></tr></tbody></table></figure><p>主要的操作都在<code>dev</code>这个文件夹下完成。</p><ul><li>编辑<code>DESCRIPTION</code>文件</li></ul><h4 id="shinyWidgets"><a href="#shinyWidgets" class="headerlink" title="shinyWidgets"></a>shinyWidgets</h4><p><a href="https://dreamrs.github.io/shinyWidgets/index.html">各种有意思的组件</a></p><h4 id="shiny案例"><a href="#shiny案例" class="headerlink" title="shiny案例"></a>shiny案例</h4><p><a href="https://demo.appsilon.com/shiny-semantic-components/">appsilon</a></p><h4 id="CSS优化shiny"><a href="#CSS优化shiny" class="headerlink" title="CSS优化shiny"></a>CSS优化shiny</h4><ul><li><p><a href="https://appsilon.com/howto-css-and-shiny/">How to Use CSS to Style Your R Shiny Dashboards</a></p></li><li><p><a href="https://unleash-shiny.rinterface.com/beautify-css.html">CSS for Shiny</a></p></li><li><p><a href="https://www.rstudio.com/conference/2022/keynotes/past-future-shiny/">The Past and Future of Shiny</a></p></li></ul><h4 id="服务器部署Rshiny注意事项"><a href="#服务器部署Rshiny注意事项" class="headerlink" title="服务器部署Rshiny注意事项"></a>服务器部署Rshiny注意事项</h4><ul><li>应用文件夹应该放在<code>/srv/shiny-server</code>文件夹下才能生效，否则页面无法找到；</li><li>可以把应用放在<code>/opt/shiny-server/app/</code>下，然后软连接到<code>/srv/shiny-server</code>.</li></ul><h2 id="其他知识点"><a href="#其他知识点" class="headerlink" title="其他知识点"></a>其他知识点</h2><h3 id="关于距离"><a href="#关于距离" class="headerlink" title="关于距离"></a>关于距离</h3><h4 id="各种距离计算"><a href="#各种距离计算" class="headerlink" title="各种距离计算"></a>各种距离计算</h4><p><a href="https://franknielsen.github.io/Divergence/index.html">点击访问</a></p><h3 id="git知识点"><a href="#git知识点" class="headerlink" title="git知识点"></a>git知识点</h3><h4 id="添加服务器git服务器"><a href="#添加服务器git服务器" class="headerlink" title="添加服务器git服务器"></a>添加服务器git服务器</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">git remote add sysfwq ssh<span class="hljs-operator">:</span><span class="hljs-operator">/</span><span class="hljs-operator">/</span>lixiang<span class="hljs-operator">@</span>xx.xx.xx.xx<span class="hljs-operator">:</span><span class="hljs-number">2222</span><span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>xx<span class="hljs-operator">/</span>gitppi<span class="hljs-operator">/</span>phdata.git<br>git push sysfwq<br>git push <span class="hljs-operator">-</span><span class="hljs-operator">-</span>set<span class="hljs-operator">-</span>upstream sysfwq master<br></code></pre></td></tr></tbody></table></figure><h3 id="snakemake流程"><a href="#snakemake流程" class="headerlink" title="snakemake流程"></a>snakemake流程</h3><ul><li><a href="https://www.schlosslab.org/just-enough-python/">适用于R用户的snakemake教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx一个域名实多个项目管理+域名跳转</title>
      <link href="/article/7bda1387/"/>
      <url>/article/7bda1387/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.web4xiang.top/post/nginxanddomain/">点击查看正文</a></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker配置阿里云镜像</title>
      <link href="/article/dockeraly/"/>
      <url>/article/dockeraly/</url>
      
        <content type="html"><![CDATA[<ul><li><p>登录阿里云获取专用镜像链接：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p></li><li><p>修改配置文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vi  /etc/docker/daemon.json<br></code></pre></td></tr></tbody></table></figure></li><li><p>加入下面的内容：</p></li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">{<br>  <span class="hljs-string">"registry-mirrors"</span>: [<span class="hljs-string">"https://xxxxxxx.mirror.aliyuncs.com"</span>]<br>}<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rmawkdown模板</title>
      <link href="/article/rmarkdowntemple/"/>
      <url>/article/rmarkdowntemple/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">---<br>title: "YYT data analysis report"<br>author: "Xiang Li"<br>date: '2022-06-06'<br>output: <br>  html_document: <br>    toc: true<br>    toc_depth: 3<br>    toc_float: true<br>    #theme: united<br>    css: style.css<br>    number_sections: true<br>---<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCBI基因组ftp下载连接</title>
      <link href="/article/ncbi-genome/"/>
      <url>/article/ncbi-genome/</url>
      
        <content type="html"><![CDATA[<p><a href="ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/">ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/</a></p><p><a href="ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/">ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/</a></p><p><a href="ftp://ftp.ncbi.nlm.nih.gov/genomes/all/">ftp://ftp.ncbi.nlm.nih.gov/genomes/all/</a></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言传参示例</title>
      <link href="/article/rparameters/"/>
      <url>/article/rparameters/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>args <span class="hljs-operator">&lt;-</span> commandArgs<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>df <span class="hljs-operator">=</span> data.table<span class="hljs-operator">::</span>fread<span class="hljs-punctuation">(</span>args<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> encoding <span class="hljs-operator">=</span> <span class="hljs-string">"UTF-8"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>n <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_length<span class="hljs-punctuation">(</span>sequence<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>df <span class="hljs-operator">=</span> df <span class="hljs-operator">%&gt;%</span> <br>  tibble<span class="hljs-operator">::</span>add_row<span class="hljs-punctuation">(</span>id <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>nrow<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> sequence <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> n <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> .before <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  data.table<span class="hljs-operator">::</span>fwrite<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> args<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                     sep <span class="hljs-operator">=</span> <span class="hljs-string">" "</span><span class="hljs-punctuation">,</span><br>                     col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <br>                     row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAPIT3笔记</title>
      <link href="/article/gapit3/"/>
      <url>/article/gapit3/</url>
      
        <content type="html"><![CDATA[<ul><li>安装</li></ul><p>服务器编译失败，转用腾讯云安装，然后将对应的R包拷贝到服务器上。</p><ul><li>示例</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>GAPIT3<span class="hljs-punctuation">)</span><br><br>myY <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">"~/temp_file/GAPIT3-master/inst/extdata/mdp_traits.txt"</span><span class="hljs-punctuation">,</span> head <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>myGD<span class="hljs-operator">=</span>read.table<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"~/temp_file/GAPIT3-master/inst/extdata/mdp_numeric.txt"</span><span class="hljs-punctuation">,</span>head<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br>myGM<span class="hljs-operator">=</span>read.table<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"~/temp_file/GAPIT3-master/inst/extdata/mdp_SNP_information.txt"</span><span class="hljs-punctuation">,</span>head<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br><br>myGAPIT_MLM <span class="hljs-operator">&lt;-</span> GAPIT<span class="hljs-punctuation">(</span><br>  Y<span class="hljs-operator">=</span>myY<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#fist column is individual ID, the third columns is days to pollination</span><br>  GD<span class="hljs-operator">=</span>myGD<span class="hljs-punctuation">,</span><br>  GM<span class="hljs-operator">=</span>myGM<span class="hljs-punctuation">,</span><br>  PCA.total<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>  model<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"GLM"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"MLM"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CMLM"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"FarmCPU"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Blink"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  Multiple_analysis<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/v2-2f2237fd6320754735d519eb50c4a633_720w.jpg" alt="img"></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dplyr提取列表元素</title>
      <link href="/article/extractfromlist/"/>
      <url>/article/extractfromlist/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>geneid <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_split<span class="hljs-punctuation">(</span>id<span class="hljs-punctuation">,</span> <span class="hljs-string">"-"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> sapply<span class="hljs-punctuation">(</span><span class="hljs-string">"["</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言周末班授课大纲</title>
      <link href="/article/rclasslist/"/>
      <url>/article/rclasslist/</url>
      
        <content type="html"><![CDATA[<ol><li>第01讲 R语言简介与如何学习编程</li><li>第02讲 搭建R环境与基本使用</li><li>第03讲 数据结构（向量、矩阵、多维数组）</li><li>第04讲 数据结构（列表、数据框）</li><li>第05讲 数据结构（因子、字符串、日期时间）</li><li>第06讲 控制结构（分支循环）</li><li>第07讲 函数自定义</li><li>第08讲 数据读写</li><li>第09讲 数据拼接</li><li>第10讲 数据重构</li><li>第11讲 数据操作（选择列修改列）</li><li>第12讲 数据操作（筛选行分组汇总）</li><li>第13讲 数据操作（其它操作）</li><li>第14讲 处理大数据神器<code>data.table</code>包</li><li>第15讲 ggplot2绘图①</li><li>第16讲 ggplot2绘图②</li><li>第17讲 ggplot2图形示例</li><li>第18讲 统计建模</li><li>第19讲 描述统计</li><li>第20讲 参数估计</li><li>第21讲 假设检验</li><li>第22讲 回归分析</li><li>第23讲 数据清洗</li><li>第24讲 机器学习—以随机森林为例</li><li>第25讲 深度学习</li><li>第26讲 转录组数据分析</li><li>第27讲 代谢组数据分析</li><li>第28讲 微生物组数据分析</li><li>第29讲 RMarkdown</li><li>第30讲 R语言开发</li></ol><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HRP鉴定NB-LRR基因所有代码</title>
      <link href="/article/hrptofindnb-lrr/"/>
      <url>/article/hrptofindnb-lrr/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">bash /usr/bin/interproscan.sh -f TSV -app Pfam -i data/proteins.fa -b results/1-interproscan<br>grep NB-ARC results/1-interproscan.tsv | <span class="hljs-built_in">cut</span> -f1,7,8 &gt; results/2-interproscan.bed<br>bedtools getfasta -<span class="hljs-keyword">fi</span> data/proteins.fa -bed results/2-interproscan.bed -fo results/3-extracted.fasta<br>meme results/3-extracted.fasta -protein -o results/4-meme_out -mod zoops -nmotifs 19 -minw 4 -maxw 7 -objfun classic -markov_order 0<br>mast -o results/5-mast_out results/4-meme_out/meme.txt data/proteins.fa<br>bash /usr/bin/interproscan.sh -f TSV -app SUPERFAMILY -i results/3-extracted.fasta -b results/6-lrr_domain.tsv<br>bash code/IPS2fpGs.sh -f -c code/conf1.tsv -d code/conf2.tsv -o results/7.1-full_or_partial.tsv results/1-interproscan.tsv<br>bash code/IPS2fpGs.sh -f -c code/conf1.tsv -d code/conf2.tsv -o results/7.2-full_or_partial.tsv results/6-lrr_domain<br>awk <span class="hljs-string">'{if($2 == "full-length") print $1}'</span> results/7.1-full_or_partial.tsv &gt; results/8-full_length.id<br>perl /usr/bin/get_fa_by_id.pl results/8-full_length.id data/proteins.fa results/9-full_length.fasta<br>/opt/software/genblast/genblastg -q results/9-full_length.fasta -t data/genome.fa -gff -cdna -pro -o results/10-genblastG_out<br>perl /usr/bin/agat_sp_filter_gene_by_length.pl --gff results/10-genblastG_out_1.1c_2.3_s1_0_16_1.gff --size 20000 --<span class="hljs-built_in">test</span> <span class="hljs-string">"&lt;"</span> -o results/10-filtered.length.gff<br>grep transcript results/11-filtered.length.gff | gff2bed | sortBed | clusterBed -s | <span class="hljs-built_in">cut</span> -f4,11 &gt; results/12-clusters<br>awk <span class="hljs-string">'BEGIN{FS="[&gt; ]"} /^&gt;/{val=$2;next}  {print val,length($0);val=""} END{if(val!=""){print val}}'</span> results/*.pro | <span class="hljs-built_in">tr</span> <span class="hljs-string">' '</span> \\t &gt; results/13-estimation<br><span class="hljs-built_in">join</span> -t $<span class="hljs-string">'\t'</span> -1 1 -2 1 -o 1.1,1.2,2.2 &lt;( <span class="hljs-built_in">sort</span> -bk1 results/12-clusters) &lt;(<span class="hljs-built_in">sort</span> -bk1 results/13-estimation) | <span class="hljs-built_in">sort</span> -bk2,2 -bk3,3 -nr | <span class="hljs-built_in">sort</span> -uk1,1 | <span class="hljs-built_in">cut</span> -f1 &gt; results/14-r_gene_id_list<br>Rscript code/get_unique_id.R<br>perl /usr/bin/get_fa_by_id.pl results/15-ubique.r.gene.id data/proteins.fa results/16-candidate.gene.fa<br>bash /usr/bin/interproscan.sh -f TSV,GFF3 -i results/16-candidate.gene.fa -b results/17-annotation.results<br></code></pre></td></tr></tbody></table></figure><hr><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br>data.table<span class="hljs-operator">::</span>fread<span class="hljs-punctuation">(</span><span class="hljs-string">"results/14-r_gene_id_list"</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>id <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span>V1<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>id<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  data.table<span class="hljs-operator">::</span>fwrite<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"results/15-ubique.r.gene.id"</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> col.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/tpj15756-fig-0004-m.jpg" alt="tpj15756-fig-0004-m"></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去除序列中的*号</title>
      <link href="/article/removestarfromfa/"/>
      <url>/article/removestarfromfa/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> subprocess<br><br><br>parser = argparse.ArgumentParser(description=<span class="hljs-string">"You should add those parameters"</span>)<br>parser.add_argument(<span class="hljs-string">"-i"</span>,<span class="hljs-string">"--input"</span>, <span class="hljs-built_in">type</span> = <span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span> = <span class="hljs-string">"The input fasta file"</span>)<br>parser.add_argument(<span class="hljs-string">"-o"</span>,<span class="hljs-string">"--output"</span>, <span class="hljs-built_in">type</span> = <span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span> = <span class="hljs-string">"The output fasta file"</span>)<br><span class="hljs-comment">#args = parser.parse_args()</span><br>args =parser.parse_known_args()[<span class="hljs-number">0</span>]<br><br><span class="hljs-comment"># 输入的fasta文件转换成字典</span><br>file_open = <span class="hljs-built_in">open</span>(args.<span class="hljs-built_in">input</span>,<span class="hljs-string">"r"</span>)<br>file_read = file_open.readlines()<br>file_new = <span class="hljs-built_in">open</span>(args.output,<span class="hljs-string">"w"</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file_read:<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">"*"</span> <span class="hljs-keyword">in</span> line:<br>        line = line.replace(<span class="hljs-string">"*"</span>,<span class="hljs-string">""</span>) + <span class="hljs-string">"\n"</span><br>    <span class="hljs-keyword">else</span>:<br>        line = line<br>    line = line.replace(<span class="hljs-string">"&gt;"</span>,<span class="hljs-string">"\n&gt;"</span>)<br>    file_new.write(line)<br><br><span class="hljs-comment"># 保存文件</span><br>file_new.close()<br><br><span class="hljs-comment"># 去除空行</span><br>comm = <span class="hljs-string">"sed -i '/^$/d' "</span> + args.output<br>subprocess.call(comm,shell=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggsave保存tiff文件报错</title>
      <link href="/article/ggsavetiff/"/>
      <url>/article/ggsavetiff/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">Warning message<span class="hljs-operator">:</span><br>In grDevices<span class="hljs-operator">::</span>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">:</span> agg could not write to the given file<br></code></pre></td></tr></tbody></table></figure><p>是<code>ggplot2</code>版本的问题，3.3.4正常，3.3.5就会报错。安装旧版本解决问题。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCA提取变量的贡献度</title>
      <link href="/article/pcacontribution/"/>
      <url>/article/pcacontribution/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggprism<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>FactoMineR<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>factoextra<span class="hljs-punctuation">)</span><br><br>data<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><br><br>res.pca <span class="hljs-operator">&lt;-</span> PCA<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> graph <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br>contribution <span class="hljs-operator">&lt;-</span> fviz_pca_var<span class="hljs-punctuation">(</span>res.pca<span class="hljs-punctuation">,</span> col.var <span class="hljs-operator">=</span> <span class="hljs-string">"contrib"</span><span class="hljs-punctuation">)</span><br><br>contribution<span class="hljs-operator">$</span>data <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>arrange<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>contrib<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>slice<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>contrib<span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_bar<span class="hljs-punctuation">(</span>stat <span class="hljs-operator">=</span> <span class="hljs-string">"identity"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">0.6</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_prism<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  guides<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"prism_offset_minor"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"prism_offset"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"Contribution"</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">"Variable"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_prism<span class="hljs-punctuation">(</span>base_size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密度分布顶点坐标查找</title>
      <link href="/article/densitypeak/"/>
      <url>/article/densitypeak/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">density<span class="hljs-punctuation">(</span>rht_results<span class="hljs-operator">$</span>RHT<span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>x<span class="hljs-punctuation">[</span>which.max<span class="hljs-punctuation">(</span>density<span class="hljs-punctuation">(</span>rht_results<span class="hljs-operator">$</span>RHT<span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cowplot大小图嵌套</title>
      <link href="/article/cowplotinsert/"/>
      <url>/article/cowplotinsert/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">ggdraw<span class="hljs-punctuation">(</span>p1 <span class="hljs-operator">+</span> theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  draw_plot<span class="hljs-punctuation">(</span>inset<span class="hljs-punctuation">,</span> <span class="hljs-number">.45</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.45</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  draw_plot_label<span class="hljs-punctuation">(</span><br>    <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"A"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"B"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.45</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><br>  <span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu折腾edgeR的安装</title>
      <link href="/article/condainstallesger/"/>
      <url>/article/condainstallesger/</url>
      
        <content type="html"><![CDATA[<p>首先是conda报错：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">Collecting package metadata (current_repodata.json): <span class="hljs-keyword">done</span><br>Solving environment: failed with initial frozen solve. Retrying with flexible solve.<br>Solving environment: failed with repodata from current_repodata.json, will retry with next repodata <span class="hljs-built_in">source</span>.<br>Collecting package metadata (repodata.json): <span class="hljs-keyword">done</span><br>Solving environment: failed with initial frozen solve. Retrying with flexible solve.<br></code></pre></td></tr></tbody></table></figure><p>然后解决这个问题：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">conda config <span class="hljs-operator">-</span><span class="hljs-operator">-</span>set channel_priority flexible<br></code></pre></td></tr></tbody></table></figure><p>然后安装edgeR:</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda install -c bioconda bioconductor-edger<br></code></pre></td></tr></tbody></table></figure><p>然后我考虑把conda环境下的edgeR软链接到系统环境下，没法工作，拷贝了也是没法工作。</p><p>那直接指定这个包的路径吧，写在R的启动文件里面。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>require<span class="hljs-punctuation">(</span>edgeR<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  .libPaths<span class="hljs-punctuation">(</span><span class="hljs-string">"/home/lixiang/miniconda3/envs/Rpackages/lib/R/library/"</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><p>搞定😭</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Conda安装最新版R</title>
      <link href="/article/condainstallr/"/>
      <url>/article/condainstallr/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">conda config <span class="hljs-operator">-</span><span class="hljs-operator">-</span>add channels conda<span class="hljs-operator">-</span>forge<br>conda config <span class="hljs-operator">-</span><span class="hljs-operator">-</span>set channel_priority strict<br>conda search r<span class="hljs-operator">-</span>base<br>conda install <span class="hljs-operator">-</span><span class="hljs-built_in">c</span> conda<span class="hljs-operator">-</span>forge r<span class="hljs-operator">-</span>base<span class="hljs-operator">=</span><span class="hljs-number">4.1</span>.2<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R包安装报错及其解决方法</title>
      <link href="/article/rerrorandresolve/"/>
      <url>/article/rerrorandresolve/</url>
      
        <content type="html"><![CDATA[<hr><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span> arch <span class="hljs-operator">-</span> R ERROR<span class="hljs-operator">:</span> sub<span class="hljs-operator">-</span>architecture <span class="hljs-string">'R'</span> is not installed <br><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span> arch <span class="hljs-operator">-</span> R.dpkg<span class="hljs-operator">-</span>new ERROR<span class="hljs-operator">:</span> sub<span class="hljs-operator">-</span>architecture <span class="hljs-string">'R.dpkg-new'</span> is not installed <br><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span> arch <span class="hljs-operator">-</span> R.dpkg<span class="hljs-operator">-</span>tmp ERROR<span class="hljs-operator">:</span> sub<span class="hljs-operator">-</span>architecture <span class="hljs-string">'R.dpkg-tmp'</span> is not installed<br></code></pre></td></tr></tbody></table></figure><p>解决方法：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"esquisse"</span><span class="hljs-punctuation">,</span> INSTALL_opts <span class="hljs-operator">=</span> <span class="hljs-string">"--no-multiarch"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下使用Aspera上传数据到NCBI</title>
      <link href="/article/asperainwindows/"/>
      <url>/article/asperainwindows/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">C<span class="hljs-operator">:</span><span class="hljs-punctuation">\</span>Users<span class="hljs-punctuation">\</span>Administrator<span class="hljs-punctuation">\</span>AppData<span class="hljs-punctuation">\</span>Local<span class="hljs-punctuation">\</span>Programs<span class="hljs-punctuation">\</span>Aspera<span class="hljs-punctuation">\</span>Aspera Connect<span class="hljs-punctuation">\</span>bin<span class="hljs-operator">&gt;</span> .<span class="hljs-punctuation">\</span>ascp.exe <span class="hljs-operator">-</span>i .<span class="hljs-punctuation">\</span>temp<span class="hljs-punctuation">\</span>chhf.openssh   <span class="hljs-operator">-</span>QT <span class="hljs-operator">-</span>l1000m <span class="hljs-operator">-</span>k1 <span class="hljs-operator">-</span>d <span class="hljs-string">'F:\Raw Data\Figure 6 Raw data for RNA-seq\RNA-seq raw data\Os75a-1r_1.fq.gz'</span> subasp<span class="hljs-operator">@</span>upload.ncbi.nlm.nih.gov<span class="hljs-operator">:</span>uploads<span class="hljs-operator">/</span><span class="hljs-number">1790432735</span>_qq.com_tgjZKiQp<span class="hljs-operator">/</span>upload_data.ncbi.nlm.nih.gov<span class="hljs-operator">:</span>uploads<span class="hljs-operator">/</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span><span class="hljs-operator">*</span>_qq.com_tgjZKiQp<span class="hljs-operator">/</span>upload_dat<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda安装Aspera</title>
      <link href="/article/condainstallaspera/"/>
      <url>/article/condainstallaspera/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda install -c hcc aspera-cli<br></code></pre></td></tr></tbody></table></figure><p>密钥位置：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">~/miniconda3/envs/metagenome/etc/asperaweb_id_dsa.openssh<br></code></pre></td></tr></tbody></table></figure><p>下载<a href="https://www.ncbi.nlm.nih.gov/public/">NCBI nr库</a>的原始数据：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo /usr/bin/ascp -v -k 1 -T -l 400m -i ~/miniconda3/envs/metagenome/etc/asperaweb_id_dsa.openssh anonftp@ftp.ncbi.nlm.nih.gov:/blast/db/FASTA/nr.gz ./<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python传参示例</title>
      <link href="/article/pythonargs/"/>
      <url>/article/pythonargs/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> argparse<br><br>parser = argparse.ArgumentParser(description=<span class="hljs-string">"You should add those parameters"</span>)<br>parser.add_argument(<span class="hljs-string">"-i"</span>,<span class="hljs-string">"--input"</span>, <span class="hljs-built_in">type</span> = <span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span> = <span class="hljs-string">"The input fasta file"</span>)<br>parser.add_argument(<span class="hljs-string">"-min"</span>,<span class="hljs-string">"--min_length"</span>, <span class="hljs-built_in">type</span> = <span class="hljs-built_in">int</span>, <span class="hljs-built_in">help</span> = <span class="hljs-string">"The minimal length of sequences"</span>)<br>parser.add_argument(<span class="hljs-string">"-max"</span>,<span class="hljs-string">"--max_length"</span>, <span class="hljs-built_in">type</span> = <span class="hljs-built_in">int</span>, default = <span class="hljs-number">0</span>, <span class="hljs-built_in">help</span> = <span class="hljs-string">"The maximal length of sequences"</span>)<br>parser.add_argument(<span class="hljs-string">"-o"</span>,<span class="hljs-string">"--output"</span>, <span class="hljs-built_in">type</span> = <span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span> = <span class="hljs-string">"The output fasta file"</span>)<br><span class="hljs-comment">#args = parser.parse_args()</span><br>args =parser.parse_known_args()[<span class="hljs-number">0</span>]<br><br><span class="hljs-comment"># 输入的fasta文件转换成字典</span><br>file_open = <span class="hljs-built_in">open</span>(args.<span class="hljs-built_in">input</span>,<span class="hljs-string">"r"</span>)<br>file_read = file_open.readlines()<br>res_dict = {}<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file_read:<br>    <span class="hljs-keyword">if</span> re.<span class="hljs-keyword">match</span>(<span class="hljs-string">"&gt;"</span>,line):<br>        <span class="hljs-comment">#print(line)</span><br>        res_dict[line] = <span class="hljs-string">""</span><br>        flag = line<br>    <span class="hljs-keyword">else</span>:<br>        res_dict[flag] = res_dict[flag] + line<br><br><span class="hljs-comment"># 根据长度进行筛选</span><br><span class="hljs-comment"># 根据长度进行筛选</span><br>final_results = []<br><span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> res_dict.items():<br>    <span class="hljs-keyword">if</span> args.max_length == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(value) &gt;= args.min_length:<br>            final_results.append(key)<br>            final_results.append(value)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> args.min_length &lt;= <span class="hljs-built_in">len</span>(value) &lt;= args.max_length:<br>            final_results.append(key)<br>            final_results.append(value)<br><br><span class="hljs-comment"># 保存文件</span><br>file_new = <span class="hljs-built_in">open</span>(args.output,<span class="hljs-string">"w"</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> final_results:<br>    file_new.write(i + <span class="hljs-string">"\n"</span>)<br><br>file_new.close()<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mlr3随机森林</title>
      <link href="/article/rfinmlr3/"/>
      <url>/article/rfinmlr3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>mlr3verse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>paradox<span class="hljs-punctuation">)</span><br><br>load<span class="hljs-punctuation">(</span><span class="hljs-string">"/home/lixiang/temp_file/all.data.RData"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 导入数做预处理</span><br>df_sample <span class="hljs-operator">&lt;-</span> data.table<span class="hljs-operator">::</span>fread<span class="hljs-punctuation">(</span><span class="hljs-string">"matedata.txt"</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>sample <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">"s"</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">119</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>df_otu <span class="hljs-operator">&lt;-</span> data.table<span class="hljs-operator">::</span>fread<span class="hljs-punctuation">(</span><span class="hljs-string">"otu_taxon_F.txt"</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"#OTU ID"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  t<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>Name <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df_sample<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Name"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Type"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"Name"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>Name<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tibble<span class="hljs-operator">::</span>column_to_rownames<span class="hljs-punctuation">(</span>var <span class="hljs-operator">=</span> <span class="hljs-string">"sample"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>Type <span class="hljs-operator">!=</span> <span class="hljs-string">"Ck"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-comment"># 剔除CK的样品</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>Type <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>Type<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>Type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>df_colnames <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>Feature <span class="hljs-operator">=</span> colnames<span class="hljs-punctuation">(</span>df_otu<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">=</span> case_when<span class="hljs-punctuation">(</span><br>    Feature <span class="hljs-operator">==</span> <span class="hljs-string">"Type"</span> <span class="hljs-operator">~</span> <span class="hljs-string">"Type"</span><span class="hljs-punctuation">,</span><br>    Feature <span class="hljs-operator">!=</span> <span class="hljs-string">"Type"</span> <span class="hljs-operator">~</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">"M"</span><span class="hljs-punctuation">,</span> rownames<span class="hljs-punctuation">(</span>.<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>df_otu<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span><span class="hljs-string">"M"</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>df_otu<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Type"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 创建任务</span><br>task <span class="hljs-operator">&lt;-</span> as_task_classif<span class="hljs-punctuation">(</span>df_otu<span class="hljs-punctuation">,</span> target <span class="hljs-operator">=</span> <span class="hljs-string">"Type"</span><span class="hljs-punctuation">)</span><br>task<br><br>autoplot<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 选择学习器</span><br>ranger <span class="hljs-operator">&lt;-</span> lrn<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.ranger"</span><span class="hljs-punctuation">,</span> importance <span class="hljs-operator">=</span> <span class="hljs-string">"permutation"</span><span class="hljs-punctuation">)</span><br>ranger<br><br><span class="hljs-comment"># 划分数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">707</span><span class="hljs-punctuation">)</span><br>split <span class="hljs-operator">&lt;-</span> partition<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> ratio <span class="hljs-operator">=</span> <span class="hljs-number">0.7</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 超参数调参</span><br>ranger<span class="hljs-operator">$</span>param_set<br><br>search_space <span class="hljs-operator">&lt;-</span> ps<span class="hljs-punctuation">(</span><br>  num.trees <span class="hljs-operator">=</span> p_int<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">50</span><span class="hljs-punctuation">,</span> trafo <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-number">20</span> <span class="hljs-operator">*</span> x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  min.node.size <span class="hljs-operator">=</span> p_int<span class="hljs-punctuation">(</span>lower <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> upper <span class="hljs-operator">=</span> <span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br>at <span class="hljs-operator">&lt;-</span> auto_tuner<span class="hljs-punctuation">(</span><br>  learner <span class="hljs-operator">=</span> ranger<span class="hljs-punctuation">,</span><br>  resampling <span class="hljs-operator">=</span> rsmp<span class="hljs-punctuation">(</span><span class="hljs-string">"cv"</span><span class="hljs-punctuation">,</span> folds <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  measure <span class="hljs-operator">=</span> msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  search_space <span class="hljs-operator">=</span> search_space<span class="hljs-punctuation">,</span><br>  method <span class="hljs-operator">=</span> <span class="hljs-string">"random_search"</span><span class="hljs-punctuation">,</span><br>  term_evals <span class="hljs-operator">=</span> <span class="hljs-number">10</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 在训练集上启动调参过程</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">1102</span><span class="hljs-punctuation">)</span><br><br>at<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看最优参数</span><br>at<span class="hljs-operator">$</span>tuning_result<br><br><span class="hljs-comment"># 用最优参数训练模型</span><br>ranger<span class="hljs-operator">$</span>param_set<span class="hljs-operator">$</span>values <span class="hljs-operator">&lt;-</span> at<span class="hljs-operator">$</span>tuning_result<span class="hljs-operator">$</span>learner_param_vals<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>ranger<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 用训练好的模型预测测试集合</span><br>predictions <span class="hljs-operator">&lt;-</span> ranger<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span><br>predictions<br>predictions<span class="hljs-operator">$</span>confusion<br><br><span class="hljs-comment"># 提取结果</span><br>predictions <span class="hljs-operator">%&gt;%</span> as.data.table<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 查看预测准确率</span><br>predictions<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 改成百分比样式</span><br>ranger<span class="hljs-operator">$</span>predict_type <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"prob"</span><br>ranger<span class="hljs-operator">$</span>train<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>train<span class="hljs-punctuation">)</span><br>predictions <span class="hljs-operator">&lt;-</span> ranger<span class="hljs-operator">$</span>predict<span class="hljs-punctuation">(</span>task<span class="hljs-punctuation">,</span> row_ids <span class="hljs-operator">=</span> split<span class="hljs-operator">$</span>test<span class="hljs-punctuation">)</span><br>predictions<br><br>predictions<span class="hljs-operator">$</span>score<span class="hljs-punctuation">(</span>msr<span class="hljs-punctuation">(</span><span class="hljs-string">"classif.acc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>autoplot<span class="hljs-punctuation">(</span>predictions<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"roc"</span><span class="hljs-punctuation">)</span><br>autoplot<span class="hljs-punctuation">(</span>predictions<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"prc"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取变量的重要性</span><br>ranger<span class="hljs-operator">$</span>importance<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.table<span class="hljs-punctuation">(</span>keep.rownames <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  stats<span class="hljs-operator">::</span>setNames<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"temp"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Importance"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>left_join<span class="hljs-punctuation">(</span>df_colnames<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"temp"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>temp<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>arrange<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>Importance<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>slice<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> reorder<span class="hljs-punctuation">(</span>Feature<span class="hljs-punctuation">,</span> Importance<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> Importance<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_col<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  coord_flip<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  xlab<span class="hljs-punctuation">(</span><span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu服务器安装R包mlr3verse</title>
      <link href="/article/ubuntuinstallmlr3verse/"/>
      <url>/article/ubuntuinstallmlr3verse/</url>
      
        <content type="html"><![CDATA[<p><code>mlr3verse</code>是R里面机器学习中的集大成者。但是我死活安装不上。把交换内存搞到了120G还是报错。真的是要炸了。突然想到，可以用conda安装啊。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda install -c conda-forge r-mlr3verse<br>sudo <span class="hljs-built_in">ln</span> -s /home/lixiang/miniconda3/lib/R/library/R62S3 /usr/local/lib/R/site-library<br></code></pre></td></tr></tbody></table></figure><p>安装完成了把软件添加到环境变量即可。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的生信之路</title>
      <link href="/article/mybioinfroad/"/>
      <url>/article/mybioinfroad/</url>
      
        <content type="html"><![CDATA[<p>一直想写写自己的生信之路，一直耽误，一直没有完成，今天收完实验室，晚上写写这个，就当放松了。</p><h2 id="我的生信水平"><a href="#我的生信水平" class="headerlink" title="我的生信水平"></a>我的生信水平</h2><p>按照行业的说法，我现在的水平就是Level 0。简单来说就是跑流程。转录组、微生物组、代谢组啥的都能跑跑流程。</p><h2 id="初识生信"><a href="#初识生信" class="headerlink" title="初识生信"></a>初识生信</h2><p>那是我刚刚本科毕业的时候，2018年7月的时候，由于考研考的本校，本科毕业就直接进实验室继续做实验学习。那时候我根本不知道什么是生物信息学，只是听导师偶尔提提。当时手里在做的项目是水稻的群体遗传学，肯定不会让我分析，我干的活是提DNA。大概是800+的DNA样品，工作就是种水稻，提DNA。假期的时候，导师让我去一个师兄的公司学习生物信息学，因为当时是想做那个水稻材料的GWAS，就想着让我去学GWAS。去的前几天，那个师兄让我安装个虚拟机，学学R和perl。然后就是折腾虚拟机的安装，那时候电脑性能一般，虚拟机卡的不行。也没学到个啥。大概是7月15号左右，就去师兄的公司了。去到公司，师兄把我交给另外一个工作人员，让我不懂的问他。那个工作人员随机给我开通了公司服务器的账号，可是我死活都连不上。快到中午的时候实在是没办法了，就请教那个兄弟，他问我连接的是不是公司的网络，我说不是，他告诉我要公司的网络才能连接上服务器。真的是太囧了嘞。师兄告诉我说不建议一上来就学GWAS，建议先从转录组开始。就让我自己从网上下载数据跑转录组流程。怎么说呢，那时候接触Linux不久，对命令行了解真的是小白水平，好多东西都无法解决。我忘不了成功下载NCBI原始数据的喜悦，真的是太开心了，也感叹公司的网络真好，下载速度那么快。然后是原始数据的质控，看到自己跑出来的质控结果，非常开心。最难的一步，是转录本定量吧，我一直没搞定，从网上看了好多方法都没有成功定量到counts值。直到我开学离开公司都没有完成这步。由于要开学，就先离开公司回学校了。这也算是我跟生信的初识吧。我一直记得那个园区的食堂是真的很难吃，每天下午下班我都会走路去吃一家重庆燃面，然后坐公交车回住的地方。郊区的公路是真的很灰，跑步都会搞得灰头土脸的那种。</p><h2 id="R相伴"><a href="#R相伴" class="headerlink" title="R相伴"></a>R相伴</h2><p>在整个过程中，不管是网上的教程还是公司的朋友们，都在说R语言。我压根不知道这东西能干啥。看了网上很多帖子都说R语言很重要，那就学习吧。不知道有多少人跟我一样学R是从《R语言实战2》开始的。首先，感谢这本书教会我R的基础；但是，这本书是真的写得一般。我还记得画个图要先各种设置画布，超级麻烦。直到后来学习ggplot2、tidyverse这些书籍，真的是大开眼界。在学习R以前，我的电脑里面装了各种破解软件，SPSS啊，origin lab啊啥的。现在的新电脑了没有这些软件了。学习R给我带来什么好处呢？</p><ul><li>批量处理数据，解放自己。有个师姐要从一大个EXcel表格中筛选出每个采样点的采样数量，点鼠标好几天了还没有统计完，我说可以试试，写了个循环，</li></ul><h2 id="经验Tips"><a href="#经验Tips" class="headerlink" title="经验Tips"></a>经验Tips</h2><ul><li>学会分享。三年前在简书的博客（<a href="https://www.jianshu.com/p/16d6c22ef71e）被阅读19k+次，其实整个就是我自己学了以后在简书上分享的，不知道我的这个文章帮助了多少人，我一定知道的是我被无数人的文章帮助过。感谢那些无私分享的人。">https://www.jianshu.com/p/16d6c22ef71e）被阅读19k+次，其实整个就是我自己学了以后在简书上分享的，不知道我的这个文章帮助了多少人，我一定知道的是我被无数人的文章帮助过。感谢那些无私分享的人。</a></li><li>学会检索。一路学习过来，我觉得最重要的就是学会检索吧，现在不管遇到啥我都是先上谷歌搜索一番，通常都能找到答案的。</li></ul><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装MCScanX</title>
      <link href="/article/installmcscanx/"/>
      <url>/article/installmcscanx/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.web4xiang.top/posts/software/">点击下载软件压缩包</a></p><p>解压后进入到目录，运行：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">make<br></code></pre></td></tr></tbody></table></figure><p>如果报错<code>g++: fatal error: 已终止 signal terminated program cc1plus</code>，那就需要修改虚拟内存大小，参考文章<a href="https://blog.web4xiang.top/posts/ubuntumemary/">https://blog.web4xiang.top/posts/ubuntumemary/</a>。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu修改虚拟内存大小</title>
      <link href="/article/ubuntumemary/"/>
      <url>/article/ubuntumemary/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> /swap<br><span class="hljs-built_in">cd</span> /swap<br>sudo <span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/zero of=swapfile bs=1024M count=10<br>mkswap swapfile<br>swapon swapfile<br>swapoff swapfile<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo新文章无法更新显示问题的解决办法</title>
      <link href="/article/84dc7820/"/>
      <url>/article/84dc7820/</url>
      
        <content type="html"><![CDATA[<p>千万不要把<code>.deploy_git</code>这个文件夹给隐藏了😂</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>间作系统中的抗性诱导</title>
      <link href="/article/intercropping/"/>
      <url>/article/intercropping/</url>
      
        <content type="html"><![CDATA[<h2 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h2><p><a href="https://academic.oup.com/jxb/article/72/18/6570/6298513">原文链接</a></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317150211032.png" alt="image-20220317150211032"></p><h2 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h2><p>增加栽培系统中的生物多样性能够有效促进农业的可持续发展。间作是增加农田生物多样性的有效手段。间作系统中的植物-植物互作是影响间作系统整体抗性的关键部分（下图）。在植物-植物间作系统中存在多种信号及其传播途径：</p><ul><li>地上部分的挥发物性有机化合物：通过空气传播。</li><li>地下部分的根系分泌物：植物-植物间直接作用，或者是通过微生物等实现间接作用。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317154922880.png" alt="image-20220317154922880"></p><h2 id="提出科学问题"><a href="#提出科学问题" class="headerlink" title="提出科学问题"></a>提出科学问题</h2><p>间作系统中的植株受到病原菌侵染后，邻近的植株会感应到并做出响应。那么，当间作系统中的植株都没有受到病原菌侵染时，其邻近植株的免疫水平会不会受到影响呢？</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317154908340.png" alt="image-20220317154908340"></p><h2 id="研究结果1：筛选间作组合"><a href="#研究结果1：筛选间作组合" class="headerlink" title="研究结果1：筛选间作组合"></a>研究结果1：筛选间作组合</h2><p>共选择了两种试验材料，小麦（下图上排）和水稻（下图下排），小麦以CUL作为Focal Line，水稻以KIT作为Focal Line. 以Focal Line单作为对照，其余9个品种分别与Focal Line间作为处理，接种后调查叶片单位面积病斑数量。结果发现ATO这个小麦品种能够显著影响CUL的抗性，LID和LUX两个水稻品种均能够显著明显KIT的抗性水平。<strong>这个结果表明种内互作能够影响植株的免疫，这种组合比例范围在10%到20%之间</strong>。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317154847273.png" alt="image-20220317154847273"></p><p>进一步验证这种现象是由种内互作引起的，而不是植株的种植密度引起的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317153108494.png" alt="image-20220317153108494"></p><p>以上图的两个纯系组合基序后续的验证。</p><h2 id="间作系统中不同病害的发生情况"><a href="#间作系统中不同病害的发生情况" class="headerlink" title="间作系统中不同病害的发生情况"></a>间作系统中不同病害的发生情况</h2><p>在农田系统中常常伴随着多种病害的同时发生危害，那么种内互作系统对不同的病害的抗性是不是一样的呢？根据上面筛选到的组合，对小麦互作系统接种小麦锈病（下图A）和小麦叶斑病病原菌（下图B），对水稻互作系统接种稻瘟病（下图C）和褐斑病病原菌（下图D）。结果发现对小麦锈病和稻瘟病，种内互作系统能够有效提高对这两种病害的抗性。但是对小麦叶斑病和褐斑病，互作系统的抗性反而是更低的。这个现象是符合田间的真实状况的。这个结果表明种内互作系统对不同的病原菌的抗性不同，在实际生产过程中需要考虑当地的病害发生流行情况选择合适的组合进行互作。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317153412074.png" alt="image-20220317153412074"></p><h2 id="地下部分信号传导验证"><a href="#地下部分信号传导验证" class="headerlink" title="地下部分信号传导验证"></a>地下部分信号传导验证</h2><p>间作系统中的信号传导可以分为地上部分和地下部分。为了验证上述现象是由地下部分信号引起的，设计了如下的试验：不做处理的CK，土壤高温灭菌，土壤用尼龙网间隔，土壤用塑料板间隔。在小麦的互作系统中，当土壤被隔开后间作系统的抗性就没有差异；在水稻互作系统中，只有土壤被塑料板隔开的时候间作系统的抗性没有差异，其余三种情况均有差异。在这个部分已经能够看出植株现象是由地下部分的信号引起的。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317155230542.png" alt="image-20220317155230542"></p><h2 id="地上部分信号传导验证"><a href="#地上部分信号传导验证" class="headerlink" title="地上部分信号传导验证"></a>地上部分信号传导验证</h2><p>为了排除地上部分的影响，设计了如下的试验：CK（单作接种），间作接种，间作Neighbour不接种，接种后把Neighbour用罩子罩起来。结果发现，和CK相比，不管怎么处理，只要有Neighbour的存在，Focal Line的抗性一定受到影响。而且哪怕Neighbour是健康的，也会有同样的现象存在。这个结果结合前面的结果共同表明，在种内间作系统中，系统没有受到病原菌侵染危害的时候Neighbour就能影响Focal Line的免疫水平，当Focal Line受到病原菌侵染危害时，能够激活免疫系统抵抗病原菌的侵染危害。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317155903311.png" alt="image-20220317155903311"></p><h2 id="分子层面的验证：qPCR检测基因表达"><a href="#分子层面的验证：qPCR检测基因表达" class="headerlink" title="分子层面的验证：qPCR检测基因表达"></a>分子层面的验证：qPCR检测基因表达</h2><p>接种前后用qPCR检测免疫相关基因的表达。发现在小麦中，没有接种之前，有些基因的表达与CK相比是持平的，有的是在间作系统中表达量更低。而在水稻中，所检测的三个免疫相关的基因中的两个在间作系统中表达量更高。随着接种时间的变化，这些基因的表达变化也更明显。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317160730042.png" alt="image-20220317160730042"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220317161602387.png" alt="image-20220317161602387"></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Rcpp报错解决方法</title>
      <link href="/article/installrcpp/"/>
      <url>/article/installrcpp/</url>
      
        <content type="html"><![CDATA[<p>安装Rcpp报错<code>installation of package ‘Rcpp’ had non-zero exit status</code>：</p><p>在R的安装目录下启动这个软件：</p><p> <img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220316103135-fh2bph1.png" alt="image-20220316103135-fh2bph1"></p><p>输入代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"Rcpp"</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><p>提示 Do you want to install from sources the package which needs compilation? (Yes/no/cancel) # 选择no</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda安装Bioperl</title>
      <link href="/article/conda2installbioperl/"/>
      <url>/article/conda2installbioperl/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 创建环境</span><br>conda create -n bioperl<br>conda activate bioperl<br>conda install -c bioconda perl-bioperl<br><br><span class="hljs-comment"># 查找Bioperl位置</span><br>find anaconda3/* -name <span class="hljs-string">"Seq.pm"</span><br><br><span class="hljs-comment"># 输出</span><br>/home/lixiang/miniconda3/envs/bioperl/lib/perl5/site_perl/5.22.0/Bio/Seq.pm<br>/home/lixiang/miniconda3/pkgs/perl-bioperl-1.6.924-4/lib/perl5/site_perl/5.22.0/Bio/Seq.pm<br><br><span class="hljs-comment"># 将第二个加入环境变量</span><br><span class="hljs-built_in">export</span> PERL5LIB=/home/lixiang/miniconda3/pkgs/perl-bioperl-1.6.924-4/lib/perl5/site_perl/5.22.0/:<span class="hljs-variable">$PERL5LIB</span><br><br><span class="hljs-comment"># 重新启动终端或者source就ok</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图解开源协议</title>
      <link href="/article/tjkyxu/"/>
      <url>/article/tjkyxu/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/licence-topology.png" alt=""></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiny上传文件报错</title>
      <link href="/article/rshinyuploadfile/"/>
      <url>/article/rshinyuploadfile/</url>
      
        <content type="html"><![CDATA[<p>搭建shiny上传文件报错<code>&lt;html&gt; &lt;head&gt;&lt;title&gt;413 Request</code>。奇怪的是大于1M的无法上传，小于1M的可以上传。一番检索发现是<code>Nginx</code>的问题。</p><p>shiny如果是用<code>Nginx</code>做的<code>http</code>代理和端口转发，那么<code>Nginx</code>默认可以上传文件大小是1M，需要修改<code>Nginx</code>的配置，在配置文件的<code>http</code>模块里面加入下面的代码：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># set client body size to 1024M #</span><br>client_max_body_size 1024M;<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeAFtool计算病斑面积</title>
      <link href="/article/leaftool/"/>
      <url>/article/leaftool/</url>
      
        <content type="html"><![CDATA[<p>网页版地址：</p><p><a href="https://shiny.web4xiang.top/LeAFtool/">https://shiny.web4xiang.top/LeAFtool/</a></p><h2 id="分析流程"><a href="#分析流程" class="headerlink" title="分析流程"></a>分析流程</h2><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>将图片存储在三个文件夹内，压缩成<code>.zip</code>后上传就能进行分析：</p><ul><li>learning：存放用于训练的图片（直接截图即可），包括三个子文件夹：<ul><li>background：背景图片。如叶片是贴在A4纸上的，那么背景就截图A4纸。</li><li>limb：没有被病原菌侵染的健康叶片。</li><li>lesion：病斑截图。</li></ul></li><li>results：用于存放后续的分析结果。</li><li>samples：用于存放等待分析的叶片。</li></ul><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305151957738.png" alt="image-20220305151957738"></p><ul><li>输入用户名是为了创建对应的文件夹存放数据；</li><li>上传上一步准备好的压缩文件；</li><li>点击提交是为了告诉程序文件上传完成，开始创建文件夹并把压缩文件解压缩。</li><li>注意事项：程序默认生成的文件夹格式为<code>输入的用户名-年-月-日</code>，比如我在2022年3月8日进行分析，输入用户名为<code>123</code>，那么创建的文件夹就是<code>123-2021-03-08</code>，所有的文件都会存放在该文件夹下。</li></ul><h3 id="机器学习训练"><a href="#机器学习训练" class="headerlink" title="机器学习训练"></a>机器学习训练</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305152626801.png" alt="image-20220305152626801"></p><p>训练功能只需要选择方法和选择文件夹，默认的方法是<code>LDA</code>。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305152908618.png" alt="image-20220305152908618"></p><p>模型选练结果：通常只需要关注错误率即可。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305153109804.png" alt="image-20220305153109804"></p><h3 id="分析样品图片"><a href="#分析样品图片" class="headerlink" title="分析样品图片"></a>分析样品图片</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305153323703.png" alt="image-20220305153323703"></p><p>完成训练后就可以开始分析样品图片了。只需要选择样品图片文件夹和结果输出文件夹即可。参数的调试通常默认，细节参考项目首页或应用首页。</p><p><code>注意</code>：使用多线程并行运行程序（下图）报错的话就不要勾选多线程。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305153638497.png" alt="image-20220305153638497"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305154613673.png" alt="image-20220305154613673"></p><p>分析结果如上图。鼠标单击每个叶片就可以看到被识别出来的病斑（下图）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305154645005.png" alt="image-20220305154645005"></p><h3 id="手动标注功能"><a href="#手动标注功能" class="headerlink" title="手动标注功能"></a>手动标注功能</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305154801861.png" alt="image-20220305154801861"></p><p>在编辑模块，可以手动把标记错误的<code>病斑</code>去掉，也可以手动添加没有标记上的<code>病斑</code>。</p><p>在这个输出结果中叶片面积或者是病斑面积的单位是像素，我们需要的单位通常是cm$^2$。在咨询Rémi后我在最后的下载程序中加入了单位转换功能，最后下载得到的<code>Excel</code>文件里面的单位是cm$^2$。</p><h3 id="下载结果"><a href="#下载结果" class="headerlink" title="下载结果"></a>下载结果</h3><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305155440909.png" alt="image-20220305155440909"></p><p>只需要输入样品图片的分辨率（dpi）即可，咨询后他们表示600dpi已经足够了的。在下载到的<code>Excel</code>结果表里面，单位是cm$^2$，如果是下载的原始结果的<code>.zip</code>压缩文件，那默认的单位还是像素，注意记得转换。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220305161555182.png" alt="image-20220305161555182"></p><p><code>注意</code>：分析完成后及时下载数据，R shiny有<code>session</code>限制，时间长了会自动切断浏览器与服务器的连接，无法下载文件，需要重新分析。</p><h3 id="公式推导"><a href="#公式推导" class="headerlink" title="公式推导"></a>公式推导</h3><p>dpi表示的是每英寸的像素点，如600dpi就表示每英寸有600个像素点。1英寸=2.54cm，所以 就有$\frac{600}{2.54} = 236.2205$个像素点。转换成平方就是$1cm^2 = 236.2205^2像素$。那么就结果中的面积数值除以$236.2205^2$就可以转换成$cm^2$。通式如下：</p><script type="math/tex; mode=display">\frac{结果中面积数值}{(\frac{dpi}{2.54})^2}</script><hr><p>以下为旧版内容：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/posterLeaftool-JOBIM2019.png" alt="posterLeaftool-JOBIM2019"></p><ul><li><p>项目地址：<a href="https://github.com/sravel/LeAFtool">https://github.com/sravel/LeAFtool</a></p></li><li><p>核心算法</p><ul><li><p>以有监督的分类为基础，颜色类型是RGB颜色类型；</p></li><li><p>训练集：参考图片，三个子文件夹：</p><ul><li>background：背景图片。也就是叶子贴在什么上面</li><li>limb：没有被病原菌侵染的叶片。</li><li>lesion：病斑截图。</li></ul><p><code>上述三个文件夹中的图片最好都用样品截图，这样训练的模型会更准确，计算得到的结果也就更加准确！</code></p></li><li><p>不管用哪种机器学习方法，在<code>分析</code>和<code>训练</code>模块中参数可以一致。</p></li><li><p>支持三种方法：</p><ul><li>LDA</li><li>QDA</li><li>SVM</li></ul></li><li><p>颜色模式可以选择<code>RGB</code>或者是<code>HSV</code>。</p></li></ul></li><li><p>结果</p><ul><li>训练结果展示<ul><li>首先是正确率表格：错误率越低，训练的结果越准确。<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220226210706944.png" alt="image-20220226210706944"></li><li>然后是训练的结果图：<br><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220226210922978.png" alt="image-20220226210922978"></li></ul></li></ul></li></ul><p>训练完成后就可以对样品进行计算了。</p><p>样品分析结果概览图：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220226211146041.png" alt="image-20220226211146041"></p><p>可以利用<code>Edit</code>功能删除识别错误的病斑。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/image-20220226211254414.png" alt="image-20220226211254414"></p><hr><p>最终数字化的结果如下：</p><div class="table-container"><table><thead><tr><th>image</th><th>leaf.number</th><th>leaf.surface</th><th>lesion.nb</th><th>lesion.surface</th><th>pourcent.lesions</th></tr></thead><tbody><tr><td>Snipaste_2022-02-26_20-54-59</td><td>1</td><td>15012</td><td>9</td><td>3353</td><td>22.33546</td></tr><tr><td>Snipaste_2022-02-26_20-54-59</td><td>2</td><td>13124</td><td>4</td><td>2688</td><td>20.48156</td></tr><tr><td>Snipaste_2022-02-26_20-54-59</td><td>3</td><td>11005</td><td>7</td><td>1207</td><td>10.96774</td></tr><tr><td>Snipaste_2022-02-26_20-54-59</td><td>4</td><td>11453</td><td>3</td><td>1180</td><td>10.30298</td></tr><tr><td>Snipaste_2022-02-26_20-55-12</td><td>1</td><td>13714</td><td>3</td><td>2824</td><td>20.5921</td></tr><tr><td>Snipaste_2022-02-26_20-55-12</td><td>2</td><td>13255</td><td>3</td><td>1406</td><td>10.60732</td></tr><tr><td>Snipaste_2022-02-26_20-55-12</td><td>3</td><td>13995</td><td>3</td><td>357</td><td>2.550911</td></tr><tr><td>Snipaste_2022-02-26_20-55-12</td><td>4</td><td>12140</td><td>1</td><td>421</td><td>3.467875</td></tr><tr><td>Snipaste_2022-02-26_20-55-17</td><td>1</td><td>15334</td><td>4</td><td>1816</td><td>11.84296</td></tr><tr><td>Snipaste_2022-02-26_20-55-17</td><td>2</td><td>14583</td><td>6</td><td>2942</td><td>20.17418</td></tr><tr><td>Snipaste_2022-02-26_20-55-17</td><td>3</td><td>15337</td><td>5</td><td>474</td><td>3.090565</td></tr><tr><td>Snipaste_2022-02-26_20-55-17</td><td>4</td><td>13912</td><td>3</td><td>291</td><td>2.091719</td></tr></tbody></table></div><p>结果的单位是像素。</p><p>根据图片的dpi，可以把最后的结果转换成cm$^2$.</p><p>dpi表示的是每英寸的像素点，如600dpi就表示每英寸有600个像素点。1英寸=2.54cm，所以1cm就有$\frac{600}{2.54} = 236.2205$个像素点。转换成平方就是$1cm^2 = 236.2205^2像素$。那么就结果中的面积数值除以$236.2205^2$就可以转换成$cm^2$。通式如下：</p><script type="math/tex; mode=display">\frac{结果中面积数值}{(\frac{dpi}{2.54})^2}</script><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器部署为知笔记</title>
      <link href="/article/wiznote/"/>
      <url>/article/wiznote/</url>
      
        <content type="html"><![CDATA[<p>先安装Docker。</p><ul><li>从Docker Hub下载为知笔记的最新镜像</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull wiznote/wizserver<br></code></pre></td></tr></tbody></table></figure><ul><li>创建文件存放位置</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir wizdata<br></code></pre></td></tr></tbody></table></figure><ul><li>启动为知笔记镜像</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name wiz --restart=always -it -d -v  ~/wizdata:/wiz/storage -v  /etc/localtime:/etc/localtime -p 80:80 -p 9269:9269/udp  wiznote/wizserver<br></code></pre></td></tr></tbody></table></figure><p>如果服务器的80端口被占用，就改成对应的端口。第一个<code>-p</code>改成<code>你的端口:80</code></p><ul><li>重新启动</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker restart wiz<br></code></pre></td></tr></tbody></table></figure><ul><li>管理员账号是admin@wiz.cn，密码是123456.</li></ul><p>客户端登陆时用IP:端口即可登录，登录的时候换成企业服务。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析技巧总结</title>
      <link href="/article/dataanalysisa/"/>
      <url>/article/dataanalysisa/</url>
      
        <content type="html"><![CDATA[<ul><li>根据进化树的距离挖掘新的抗性基因：<a href="https://www.sciencedirect.com/science/article/abs/pii/S0176161706001994">OsWRKY71, a rice transcription factor, is involved in rice defense response - ScienceDirect</a></li><li>PLS-DA用于微生物组数据分析：<a href="https://www.frontiersin.org/articles/10.3389/fcimb.2021.716867/full">Frontiers | Comparison of the Ocular Microbiomes of Dry Eye Patients With and Without Autoimmune Disease | Cellular and Infection Microbiology (frontiersin.org)</a></li><li></li></ul><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装R包proj4</title>
      <link href="/article/ubuntuinstallproj4/"/>
      <url>/article/ubuntuinstallproj4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install libproj-dev libgdal-dev<br>install.packages("proj4", dependencies=TRUE)<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韦恩图</title>
      <link href="/article/plot4venn/"/>
      <url>/article/plot4venn/</url>
      
        <content type="html"><![CDATA[<p>在R语言中绘制韦恩图通常有两种方法，小于<strong>5</strong>个集合的用R包<code>VennDiagram</code>即可完成绘制；超过5个的使用R包<code>UpSetR</code>进行绘制。</p><h1 id="VennDiagram"><a href="#VennDiagram" class="headerlink" title="VennDiagram"></a><code>VennDiagram</code></h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>data.test <span class="hljs-operator">=</span> data.frame<span class="hljs-punctuation">(</span>A <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'a'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'b'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'c'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-number">23</span><span class="hljs-punctuation">,</span><span class="hljs-number">17</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                       B <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'b'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'c'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'e'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><span class="hljs-number">25</span><span class="hljs-punctuation">,</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                       C <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'a'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'c'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'e'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span><span class="hljs-number">20</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                       D <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'a'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'c'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'d'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span><span class="hljs-number">20</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>VennDiagram<span class="hljs-punctuation">)</span>                       <br><span class="hljs-comment"># 计算重叠</span><br><br>venn.diagram<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>A <span class="hljs-operator">=</span> data.test<span class="hljs-operator">$</span>A<span class="hljs-punctuation">,</span><br>                      D <span class="hljs-operator">=</span> data.test<span class="hljs-operator">$</span>D<span class="hljs-punctuation">,</span><br>                      B <span class="hljs-operator">=</span> data.test<span class="hljs-operator">$</span>B<span class="hljs-punctuation">,</span><br>                      C <span class="hljs-operator">=</span> data.test<span class="hljs-operator">$</span>C<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             height <span class="hljs-operator">=</span> <span class="hljs-number">3000</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 高度</span><br>             width <span class="hljs-operator">=</span> <span class="hljs-number">3000</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 宽度</span><br>             resolution <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 分辨率</span><br>             main <span class="hljs-operator">=</span> <span class="hljs-string">'test'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 标题</span><br>             main.cex <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 标题字体大小</span><br>             main.col <span class="hljs-operator">=</span> <span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 标题颜色</span><br>             fill <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'blue'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'green'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'orange'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 填充色</span><br>             col <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span><span class="hljs-comment"># 边框颜色</span><br>             lwd <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 线宽度</span><br>             alpha <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 透明度</span><br>             cat.cex <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 标签字体大小</span><br>             filename <span class="hljs-operator">=</span> <span class="hljs-string">'figures/venn.test.tiff'</span><span class="hljs-comment"># 文件名</span><br>             <span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201202228008.png" alt="1"></p><p><strong>当集合很多的时候怎么办？</strong>下面这个图是2012年<strong><em>Nature</em></strong>上的图$^{[1]}$，看起来真的是好复杂啊！这时候就该<code>UpSet</code>上场了。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201202228016.png" alt="5"></p><h1 id="UpSetR"><a href="#UpSetR" class="headerlink" title="UpSetR"></a><code>UpSetR</code></h1><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201202229533.png" alt="0"></p><p><code>UpSetR</code>有对应的网站：<a href="http://caleydo.org/tools/upset/。还有Shiny">http://caleydo.org/tools/upset/。还有Shiny</a> APP：<a href="https://gehlenborglab.shinyapps.io/upsetr/。R包的使用可以参考对应的GitHub：https://github.com/hms-dbmi/UpSetR。也有开发者使用Python开发了对应的Python应用：https://github.com/ImSoErgodic/py-upset。">https://gehlenborglab.shinyapps.io/upsetr/。R包的使用可以参考对应的GitHub：https://github.com/hms-dbmi/UpSetR。也有开发者使用Python开发了对应的Python应用：https://github.com/ImSoErgodic/py-upset。</a></p><p>其中，Shiny APP的示例视频是YouTube上的，我把它下载上传到腾讯视频了，点击观看即可。</p><p>YouTube观看地址：<a href="https://www.youtube.com/watch?v=-IfF2wGw7Qk&amp;t=188s">https://www.youtube.com/watch?v=-IfF2wGw7Qk&amp;t=188s</a></p><p>腾讯视频观看地址：<a href="https://v.qq.com/x/page/l09525p5h4q.html">https://v.qq.com/x/page/l09525p5h4q.html</a></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>UpSetR<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 直接读取R包示例数据</span><br>movies <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"movies.csv"</span><span class="hljs-punctuation">,</span> <br>                                package <span class="hljs-operator">=</span> <span class="hljs-string">"UpSetR"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> header<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> sep<span class="hljs-operator">=</span><span class="hljs-string">";"</span> <span class="hljs-punctuation">)</span><br>mutations <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"mutations.csv"</span><span class="hljs-punctuation">,</span> <br>                                   package <span class="hljs-operator">=</span> <span class="hljs-string">"UpSetR"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> header<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">","</span><span class="hljs-punctuation">)</span><br><br>upset<span class="hljs-punctuation">(</span>mutations<span class="hljs-punctuation">,</span> <br>      sets <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"PTEN"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"TP53"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"EGFR"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"PIK3R1"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"RB1"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>      sets.bar.color <span class="hljs-operator">=</span> <span class="hljs-string">"#56B4E9"</span><span class="hljs-punctuation">,</span><br>      order.by <span class="hljs-operator">=</span> <span class="hljs-string">"freq"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="D:/%25E6%2597%25A7%25E6%2596%2587%25E4%25BB%25B6/OneDrive%25E6%2597%25A7%25E6%2596%2587%25E4%25BB%25B6/4_GitHub/PLANTOMIX/2020/4/20200427%25E3%2580%2590R%25E8%25AF%25AD%25E8%25A8%2580%25E3%2580%2591%25E9%259F%25A6%25E6%2581%25A9%25E5%259B%25BE%25E7%25BB%2598%25E5%2588%25B6/figures/2.png" alt=""></p><p>下面这段代码可以展示更多内容：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs R">upset<span class="hljs-punctuation">(</span>movies<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 绘图数据集</span><br>      sets.bar.color <span class="hljs-operator">=</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 侧边柱子颜色</span><br>      matrix.color <span class="hljs-operator">=</span> <span class="hljs-string">'blue'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 相互关系连线（点）的颜色</span><br>      main.bar.color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 交互数量柱状图颜色及附图颜色</span><br>      mainbar.y.label <span class="hljs-operator">=</span> <span class="hljs-string">'Intersection Size'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 主柱状图Y轴标题</span><br>      sets.x.label <span class="hljs-operator">=</span> <span class="hljs-string">'这是X轴标题'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 左侧柱状图X轴标题</span><br>      point.size <span class="hljs-operator">=</span> <span class="hljs-number">1.8</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 交互点的大小</span><br>      line.size <span class="hljs-operator">=</span> <span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 交互线的宽度</span><br>      att.pos <span class="hljs-operator">=</span> <span class="hljs-string">'bottom'</span><span class="hljs-punctuation">,</span><br>      att.color <span class="hljs-operator">=</span> <span class="hljs-string">'yellowgreen'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 变量展示图颜色</span><br>      number.angles <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 柱状图上数字旋转角度</span><br>      group.by <span class="hljs-operator">=</span> <span class="hljs-string">'degree'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 数据分组标准可以降序（degree)也可以按数据集（sets)</span><br>      <span class="hljs-comment"># 下面的代码主要是展示感兴趣的变量之间的关系</span><br>      attribute.plots<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>gridrows<span class="hljs-operator">=</span><span class="hljs-number">60</span><span class="hljs-punctuation">,</span><br>                           plots<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>plot<span class="hljs-operator">=</span>scatter_plot<span class="hljs-punctuation">,</span> <br>                                           x<span class="hljs-operator">=</span><span class="hljs-string">"ReleaseDate"</span><span class="hljs-punctuation">,</span> <br>                                           y<span class="hljs-operator">=</span><span class="hljs-string">"AvgRating"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                      <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>plot<span class="hljs-operator">=</span>scatter_plot<span class="hljs-punctuation">,</span> <br>                                           x<span class="hljs-operator">=</span><span class="hljs-string">"ReleaseDate"</span><span class="hljs-punctuation">,</span> <br>                                           y<span class="hljs-operator">=</span><span class="hljs-string">"Watches"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                      <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>plot<span class="hljs-operator">=</span>scatter_plot<span class="hljs-punctuation">,</span> <br>                                           x<span class="hljs-operator">=</span><span class="hljs-string">"Watches"</span><span class="hljs-punctuation">,</span> <br>                                           y<span class="hljs-operator">=</span><span class="hljs-string">"AvgRating"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                      <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>plot<span class="hljs-operator">=</span>histogram<span class="hljs-punctuation">,</span> <br>                                           x<span class="hljs-operator">=</span><span class="hljs-string">"ReleaseDate"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                           ncols <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201202229243.png" alt="3"></p><p>我觉得最酷炫的地方在于可以自定义下方附图函数，展示想要的任何图像：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 构建绘图函数</span><br>plot.test <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>mydata<span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">,</span>y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>        library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>        my.plot <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span>ggplot<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> mydata<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>mydata<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                              y <span class="hljs-operator">=</span> mydata<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>y<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>                                              fill <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>mydata<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>                            geom_boxplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>                            theme_classic<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>                            labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> y<span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>                            theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br><span class="hljs-comment"># 使用绘图函数</span><br>upset<span class="hljs-punctuation">(</span>movies<span class="hljs-punctuation">,</span><br>      sets <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Action"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Adventure"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Children"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"War"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Noir"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      attribute.plots<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>gridrows <span class="hljs-operator">=</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <br>                           ncols <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <br>                           plots <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>plot<span class="hljs-operator">=</span>plot.test<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 使用函数</span><br>                                             x<span class="hljs-operator">=</span><span class="hljs-string">"ReleaseDate"</span><span class="hljs-punctuation">,</span><br>                                             y<span class="hljs-operator">=</span><span class="hljs-string">"Watches"</span><span class="hljs-punctuation">,</span><br>                                             queries<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201202229823.png" alt="4"></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] D’hont, Angélique, et al. “The banana (Musa acuminata) genome and the evolution of monocotyledonous plants.” <em>Nature</em> 488.7410 (2012): 213-217.</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip加速</title>
      <link href="/article/pipacce/"/>
      <url>/article/pipacce/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">-i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KEGGREST用法</title>
      <link href="/article/keggrest/"/>
      <url>/article/keggrest/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>KEGGREST<span class="hljs-punctuation">)</span> <br>kegg <span class="hljs-operator">&lt;-</span> keggGet<span class="hljs-punctuation">(</span><span class="hljs-string">"ko01120"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201181355715.png" alt="image-20220118135539647"></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker部署nextcloud修改配置文件</title>
      <link href="/article/nextcloud/"/>
      <url>/article/nextcloud/</url>
      
        <content type="html"><![CDATA[<p>找到对应的文件修改即可：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">find /var -name <span class="hljs-string">"config.php"</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装rJava</title>
      <link href="/article/ubunturjava/"/>
      <url>/article/ubunturjava/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install -y default-jre<br>sudo apt-get install -y default-jdk<br>sudo R CMD javareconf<br>install.packages(<span class="hljs-string">"rJava"</span>)<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录转录组遇到的一个坑</title>
      <link href="/article/onebug4rnaseq/"/>
      <url>/article/onebug4rnaseq/</url>
      
        <content type="html"><![CDATA[<p>跑水稻的转录组，96个样品。</p><p>前面的所有流程都没有问题，跑到Counts计数的时候，全部都是0！！！不管是HtSeq还是FeatureCounts，计算出来全部都是0。然后我重新下载了别的参考基因组和注释信息，跑出来完全没有问题。一直不知道是哪里出现了问题。我也忘记是怎么排查的了，发现基因组染色体的名称和gtf文件里面的不一样：</p><ul><li>基因组文件的染色体编号：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">&gt;Chr1_IR64<br>&gt;Chr2_IR64<br>&gt;Chr3_IR64<br>&gt;Chr4_IR64<br>&gt;Chr5_IR64<br>&gt;Chr6_IR64<br>&gt;Chr7_IR64<br>&gt;Chr8_IR64<br>&gt;Chr9_IR64<br>&gt;Chr10_IR64<br>&gt;Chr11_IR64<br>&gt;Chr12_IR64<br></code></pre></td></tr></tbody></table></figure><ul><li><code>gtf</code>文件长这样：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">Chr1    IR64    transcript      1870    3544    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T04"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    exon    1870    2207    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T04"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    exon    2293    2555    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T04"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    exon    3296    3544    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T04"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    CDS     2388    2555    .       +       0       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T04"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    CDS     3296    3403    .       +       0       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T04"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    transcript      1870    7601    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T03"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    exon    1870    2207    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T03"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    exon    2293    2555    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T03"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br>Chr1    IR64    exon    3296    3394    .       +       .       transcript_id <span class="hljs-string">"OsIR64G0100000100.01.T03"</span>; gene_id <span class="hljs-string">"OsIR64G0100000100.01"</span>;<br></code></pre></td></tr></tbody></table></figure><p>索性直接把基因组里面的ID换掉，和gtf文件保持一致。</p><p>然后，居然就OK了，真的是万万没想到阿！😄</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu将home目录挂载到新硬盘上</title>
      <link href="/article/ubuntudisk/"/>
      <url>/article/ubuntudisk/</url>
      
        <content type="html"><![CDATA[<ul><li>创建硬盘分区：按提示操作即可（容量大于2T的硬盘用parted命令）</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo parted /dev/sdb<br><span class="hljs-comment"># 需要改成gtp格式的分区</span><br></code></pre></td></tr></tbody></table></figure><ul><li>创建文件系统</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mkfs.ext4 /dev/sdb1<br></code></pre></td></tr></tbody></table></figure><ul><li>查看UUID</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">blkid<br></code></pre></td></tr></tbody></table></figure><ul><li>同步保存原来/home目录下的所有文件</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo mount /dev/sdb1 /mnt/old.home.220111<br>sudo rsync -avx /home  /mnt/old.home.220111/<br></code></pre></td></tr></tbody></table></figure><ul><li>确认同步成功后删除原来的/home目录（一定要确认成功以后才能删除！！！！！！！！！！！！！）</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo <span class="hljs-built_in">rm</span> -rf /home/*<br></code></pre></td></tr></tbody></table></figure><ul><li>卸载挂载</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">umount -l /home<br></code></pre></td></tr></tbody></table></figure><ul><li>重新挂载</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo mount /dev/sdb1 /home<br></code></pre></td></tr></tbody></table></figure><ul><li>编辑/etc/fstab：按照格式加入这样一行</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">UUID=175ab25f-5190-4df7-8795-8a00a0f78fd6 /home           ext4    auto      0       1<br></code></pre></td></tr></tbody></table></figure><ul><li>运行df -h进行检验</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201111337604.png" alt="image-20220111133751535"></p><hr><p>下面是新方法：</p><ul><li>格式化硬盘：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo mkfs -t ext4 /dev/sdb<br></code></pre></td></tr></tbody></table></figure><ul><li>写入文件系统</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo mkfs.ext4 /dev/sdb<br></code></pre></td></tr></tbody></table></figure><ul><li>保存旧的home目录</li></ul><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo mount <span class="hljs-regexp">/dev/</span>sdb <span class="hljs-regexp">/mnt/</span>old.home.<span class="hljs-number">220111</span><br>sudo rsync -avx <span class="hljs-regexp">/home  /m</span>nt<span class="hljs-regexp">/old.home.220111/</span><br></code></pre></td></tr></tbody></table></figure><ul><li>删除旧的挂载</li></ul><figure class="highlight arduino"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">umount -l /home<br></code></pre></td></tr></tbody></table></figure><ul><li>重新挂载</li></ul><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo mount <span class="hljs-regexp">/dev/</span>sdb /home<br></code></pre></td></tr></tbody></table></figure><ul><li>编辑<code>/etc/fstab</code>写入这行</li></ul><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/dev/</span>sdb    <span class="hljs-regexp">/mnt/</span>pan    ext4    defaults    <span class="hljs-number">0</span>    <span class="hljs-number">0</span><br></code></pre></td></tr></tbody></table></figure><hr><p>20230724更新：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 使用lsblk,fdisk,df等命令查看当前分区信息</span><br>lsblk<br>fdisk -l<br><span class="hljs-built_in">df</span> -TH<br><br><span class="hljs-comment"># 使用 /dev/sdb1 为例</span><br>parted /dev/sdb1<br>parted (GNU parted) 3.1<br>Welcome to GNU Parted! Type <span class="hljs-string">'help'</span> to view a list of commands.<br><br><span class="hljs-comment"># 使用help查看帮助</span><br>(parted) <span class="hljs-built_in">help</span><br>  check NUMBER                             <span class="hljs-keyword">do</span> a simple check on the file system<br>  <span class="hljs-built_in">cp</span> [FROM-DEVICE] FROM-NUMBER TO-NUMBER   copy file system to another partition<br>  <span class="hljs-built_in">help</span> [COMMAND]                           prints general <span class="hljs-built_in">help</span>, or <span class="hljs-built_in">help</span> on COMMAND<br>  mklabel,mktable LABEL-TYPE               create a new disklabel (partition table)<br>  mkfs NUMBER FS-TYPE                      make a FS-TYPE file system on partititon NUMBER<br>  mkpart PART-TYPE [FS-TYPE] START END     make a partition<br>  mkpartfs PART-TYPE FS-TYPE START END     make a partition with a file system<br>  move NUMBER START END                    move partition NUMBER<br>  name NUMBER NAME                         name partition NUMBER as NAME<br>  <span class="hljs-built_in">print</span> [free|NUMBER|all]                  display the partition table, a partition, or all devices<br>  quit                                     <span class="hljs-built_in">exit</span> program<br>  rescue START END                         rescue a lost partition near START and END<br>  resize NUMBER START END                  resize partition NUMBER and its file system<br>  <span class="hljs-built_in">rm</span> NUMBER                                delete partition NUMBER<br>  select DEVICE                            choose the device to edit<br>  <span class="hljs-built_in">set</span> NUMBER FLAG STATE                    change the FLAG on partition NUMBER<br>  toggle [NUMBER [FLAG]]                   toggle the state of FLAG on partition NUMBER<br>  unit UNIT                                <span class="hljs-built_in">set</span> the default unit to UNIT<br>  version                                  displays the current version of GNU Parted and copyright information<br><br><span class="hljs-comment"># 建立磁盘标签</span><br>(parted) mklabel GPT<br><span class="hljs-comment"># 如果没有任何分区，它查看磁盘可用空间，当分区后，它会打印出分区情况</span><br>(parted) <span class="hljs-built_in">print</span><br><span class="hljs-comment"># 创建主分区，n 为要分的分区占整个磁盘的百分比</span><br>(parted) mkpart primary 0% 100%<br><span class="hljs-comment">#  分区完后，直接 quit 即可，不像 fdisk 分区的时候，还需要保存一下，这个不用</span><br>(parted) quit<br><br><span class="hljs-comment"># 让内核知道添加新分区</span><br>partprobe<br><br><span class="hljs-comment"># 格式化</span><br>mkfs.ext4 /dev/sdb1<br><br><span class="hljs-comment"># 挂载分区</span><br><span class="hljs-built_in">mkdir</span> /data<br>mount /dev/sdb1 /data<br><br><span class="hljs-comment"># 设置开机自动挂载磁盘</span><br>vim /etc/fstab<br>/dev/sdb1    /data    ext4    defaults    0    0<br><br><span class="hljs-comment"># fdisk命令无法使用可以用parted</span><br>fdisk -l<br>parted -l<br><br><span class="hljs-comment"># parted有2种模式，使用命令行模式方便自动化</span><br>命令行模式: parted [option] device [<span class="hljs-built_in">command</span>]<br>交互模式: parted [option] device<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pfastq-dump使用</title>
      <link href="/article/pfastq-dump/"/>
      <url>/article/pfastq-dump/</url>
      
        <content type="html"><![CDATA[<ul><li>软件地址</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">https://github.com/inutano/pfastq-dump<br></code></pre></td></tr></tbody></table></figure><ul><li>批量处理</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> SRR*; <span class="hljs-keyword">do</span> pfastq-dump -t 50 -s <span class="hljs-variable">$i</span> -O fastq/; <span class="hljs-keyword">done</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
            <tag> pfastq-dump </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R包export安装包</title>
      <link href="/article/exportr/"/>
      <url>/article/exportr/</url>
      
        <content type="html"><![CDATA[<p><a href="export_modified_by_guozi.tar.gz">点击下载</a></p><p>下载后本地安装即可。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小蓝哥的生信专刊</title>
      <link href="/article/bioinf4me/"/>
      <url>/article/bioinf4me/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><ul><li>Ubuntu安装<code>gdtools</code>报错<code>fatal error: cairo-ft.h</code></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt install libcairo2-dev<br></code></pre></td></tr></tbody></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次hexo无法推送的解决方法</title>
      <link href="/article/git4hexo/"/>
      <url>/article/git4hexo/</url>
      
        <content type="html"><![CDATA[<p>突然就不能将博客推送上服务器，重启服务器和电脑都没用，还把软件都重新装了一遍，还是不行。</p><p>最后是把git ssh的公钥重新生成，把服务器上的<code>authorized_keys</code>替换成新的公钥才解决这个问题。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装Bioperl模块</title>
      <link href="/article/bioperlubuntu/"/>
      <url>/article/bioperlubuntu/</url>
      
        <content type="html"><![CDATA[<ul><li>conda安装</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda install -c bioconda perl-bioperl<br></code></pre></td></tr></tbody></table></figure><ul><li>查看bioperl的位置</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">find ~/miniconda3/* -name <span class="hljs-string">"Seq.pm"</span><br></code></pre></td></tr></tbody></table></figure><ul><li>加入环境变量</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> PERL5LIB=/home/lixiang/miniconda3/pkgs/perl-bioperl-1.6.924-4/lib/perl5/site_perl/5.22.0/:<span class="hljs-variable">$PERL5LIB</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行的艺术</title>
      <link href="/article/mlhdys/"/>
      <url>/article/mlhdys/</url>
      
        <content type="html"><![CDATA[<p>以下内容来自：<a href="https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md">https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md</a></p><h2 id="命令行的艺术"><a href="#命令行的艺术" class="headerlink" title="命令行的艺术"></a>命令行的艺术</h2><p><a href="https://gitter.im/jlevy/the-art-of-command-line?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"><img src="https://badges.gitter.im/Join Chat.svg" alt="Join the chat at https://gitter.im/jlevy/the-art-of-command-line"></a></p><ul><li><a href="#前言">前言</a></li><li><a href="#基础">基础</a></li><li><a href="#日常使用">日常使用</a></li><li><a href="#文件及数据处理">文件及数据处理</a></li><li><a href="#系统调试">系统调试</a></li><li><a href="#单行脚本">单行脚本</a></li><li><a href="#冷门但有用">冷门但有用</a></li><li><a href="#仅限-os-x-系统">仅限 OS X 系统</a></li><li><a href="#仅限-windows-系统">仅限 Windows 系统</a></li><li><a href="#更多资源">更多资源</a></li><li><a href="#免责声明">免责声明</a></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051930966.png" alt=""></p><p>熟练使用命令行是一种常常被忽视，或被认为难以掌握的技能，但实际上，它会提高你作为工程师的灵活性以及生产力。本文是一份我在 Linux 上工作时，发现的一些命令行使用技巧的摘要。有些技巧非常基础，而另一些则相当复杂，甚至晦涩难懂。这篇文章并不长，但当你能够熟练掌握这里列出的所有技巧时，你就学会了很多关于命令行的东西了。</p><p>这篇文章是<a href="AUTHORS.md">许多作者和译者</a>共同的成果。这里的部分内容<a href="http://www.quora.com/What-are-some-lesser-known-but-useful-Unix-commands">首次</a> <a href="http://www.quora.com/What-are-the-most-useful-Swiss-army-knife-one-liners-on-Unix">出现</a>于 <a href="http://www.quora.com/What-are-some-time-saving-tips-that-every-Linux-user-should-know">Quora</a>，但已经迁移到了 Github，并由众多高手做出了许多改进。如果你在本文中发现了错误或者存在可以改善的地方，请<a href="/CONTRIBUTING.md"><strong>贡献你的一份力量</strong></a>。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>涵盖范围：</p><ul><li>这篇文章不仅能帮助刚接触命令行的新手，而且对具有经验的人也大有裨益。本文致力于做到<em>覆盖面广</em>（涉及所有重要的内容），<em>具体</em>（给出具体的最常用的例子），以及<em>简洁</em>（避免冗余的内容，或是可以在其他地方轻松查到的细枝末节）。在特定应用场景下，本文的内容属于基本功或者能帮助您节约大量的时间。</li><li>本文主要为 Linux 所写，但在<a href="#仅限-os-x-系统">仅限 OS X 系统</a>章节和<a href="#仅限-windows-系统">仅限 Windows 系统</a>章节中也包含有对应操作系统的内容。除去这两个章节外，其它的内容大部分均可在其他类 Unix 系统或 OS X，甚至 Cygwin 中得到应用。</li><li>本文主要关注于交互式 Bash，但也有很多技巧可以应用于其他 shell 和 Bash 脚本当中。</li><li>除去“标准的”Unix 命令，本文还包括了一些依赖于特定软件包的命令（前提是它们具有足够的价值）。</li></ul><p>注意事项：</p><ul><li>为了能在一页内展示尽量多的东西，一些具体的信息可以在引用的页面中找到。我们相信机智的你知道如何使用 Google 或者其他搜索引擎来查阅到更多的详细信息。文中部分命令需要您使用 <code>apt-get</code>，<code>yum</code>，<code>dnf</code>，<code>pacman</code>，<br><code>pip</code> 或 <code>brew</code>（以及其它合适的包管理器）来安装依赖的程序。</li><li>遇到问题的话，请尝试使用 <a href="http://explainshell.com/">Explainshell</a> 去获取相关命令、参数、管道等内容的解释。</li></ul><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li><p>学习 Bash 的基础知识。具体地，在命令行中输入 <code>man bash</code> 并至少全文浏览一遍; 它理解起来很简单并且不冗长。其他的 shell 可能很好用，但 Bash 的功能已经足够强大并且到几乎总是可用的（ 如果你<em>只</em>学习 zsh，fish 或其他的 shell 的话，在你自己的设备上会显得很方便，但过度依赖这些功能会给您带来不便，例如当你需要在服务器上工作时）。</p></li><li><p>熟悉至少一个基于文本的编辑器。通常而言 Vim （<code>vi</code>） 会是你最好的选择，毕竟在终端中编辑文本时 Vim 是最好用的工具（甚至大部分情况下 Vim 要比 Emacs、大型 IDE 或是炫酷的编辑器更好用）。</p></li><li><p>学会如何使用 <code>man</code> 命令去阅读文档。学会使用 <code>apropos</code> 去查找文档。知道有些命令并不对应可执行文件，而是在 Bash 内置好的，此时可以使用 <code>help</code> 和 <code>help -d</code> 命令获取帮助信息。你可以用 <code>type 命令</code> 来判断这个命令到底是可执行文件、shell 内置命令还是别名。</p></li><li><p>学会使用 <code>&gt;</code> 和 <code>&lt;</code> 来重定向输出和输入，学会使用 <code>|</code> 来重定向管道。明白 <code>&gt;</code> 会覆盖了输出文件而 <code>&gt;&gt;</code> 是在文件末添加。了解标准输出 stdout 和标准错误 stderr。</p></li><li><p>学会使用通配符 <code>*</code> （或许再算上 <code>?</code> 和 <code>[</code>…<code>]</code>） 和引用以及引用中 <code>'</code> 和 <code>"</code> 的区别（后文中有一些具体的例子）。</p></li><li><p>熟悉 Bash 中的任务管理工具：<code>&amp;</code>，<strong>ctrl-z</strong>，<strong>ctrl-c</strong>，<code>jobs</code>，<code>fg</code>，<code>bg</code>，<code>kill</code> 等。</p></li><li><p>学会使用 <code>ssh</code> 进行远程命令行登录，最好知道如何使用 <code>ssh-agent</code>，<code>ssh-add</code> 等命令来实现基础的无密码认证登录。</p></li><li><p>学会基本的文件管理工具：<code>ls</code> 和 <code>ls -l</code> （了解 <code>ls -l</code> 中每一列代表的意义），<code>less</code>，<code>head</code>，<code>tail</code> 和 <code>tail -f</code> （甚至 <code>less +F</code>），<code>ln</code> 和 <code>ln -s</code> （了解硬链接与软链接的区别），<code>chown</code>，<code>chmod</code>，<code>du</code> （硬盘使用情况概述：<code>du -hs *</code>）。 关于文件系统的管理，学习 <code>df</code>，<code>mount</code>，<code>fdisk</code>，<code>mkfs</code>，<code>lsblk</code>。知道 inode 是什么（与 <code>ls -i</code> 和 <code>df -i</code> 等命令相关）。</p></li><li><p>学习基本的网络管理工具：<code>ip</code> 或 <code>ifconfig</code>，<code>dig</code>。</p></li><li><p>学习并使用一种版本控制管理系统，例如 <code>git</code>。</p></li><li><p>熟悉正则表达式，学会使用 <code>grep</code>／<code>egrep</code>，它们的参数中 <code>-i</code>，<code>-o</code>，<code>-v</code>，<code>-A</code>，<code>-B</code> 和 <code>-C</code> 这些是很常用并值得认真学习的。</p></li><li><p>学会使用 <code>apt-get</code>，<code>yum</code>，<code>dnf</code> 或 <code>pacman</code> （具体使用哪个取决于你使用的 Linux 发行版）来查找和安装软件包。并确保你的环境中有 <code>pip</code> 来安装基于 Python 的命令行工具 （接下来提到的部分程序使用 <code>pip</code> 来安装会很方便）。</p></li></ul><h2 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h2><ul><li><p>在 Bash 中，可以通过按 <strong>Tab</strong> 键实现自动补全参数，使用 <strong>ctrl-r</strong> 搜索命令行历史记录（按下按键之后，输入关键字便可以搜索，重复按下 <strong>ctrl-r</strong> 会向后查找匹配项，按下 <strong>Enter</strong> 键会执行当前匹配的命令，而按下右方向键会将匹配项放入当前行中，不会直接执行，以便做出修改）。</p></li><li><p>在 Bash 中，可以按下 <strong>ctrl-w</strong> 删除你键入的最后一个单词，<strong>ctrl-u</strong> 可以删除行内光标所在位置之前的内容，<strong>alt-b</strong> 和 <strong>alt-f</strong> 可以以单词为单位移动光标，<strong>ctrl-a</strong> 可以将光标移至行首，<strong>ctrl-e</strong> 可以将光标移至行尾，<strong>ctrl-k</strong> 可以删除光标至行尾的所有内容，<strong>ctrl-l</strong> 可以清屏。键入 <code>man readline</code> 可以查看 Bash 中的默认快捷键。内容有很多，例如 <strong>alt-.</strong> 循环地移向前一个参数，而 <strong>alt-*</strong> 可以展开通配符。</p></li></ul><ul><li><p>你喜欢的话，可以执行 <code>set -o vi</code> 来使用 vi 风格的快捷键，而执行 <code>set -o emacs</code> 可以把它改回来。</p></li><li><p>为了便于编辑长命令，在设置你的默认编辑器后（例如 <code>export EDITOR=vim</code>），<strong>ctrl-x</strong> <strong>ctrl-e</strong> 会打开一个编辑器来编辑当前输入的命令。在 vi 风格下快捷键则是 <strong>escape-v</strong>。</p></li><li><p>键入 <code>history</code> 查看命令行历史记录，再用 <code>!n</code>（<code>n</code> 是命令编号）就可以再次执行。其中有许多缩写，最有用的大概就是 <code>!$</code>， 它用于指代上次键入的参数，而 <code>!!</code> 可以指代上次键入的命令了（参考 man 页面中的“HISTORY EXPANSION”）。不过这些功能，你也可以通过快捷键 <strong>ctrl-r</strong> 和 <strong>alt-.</strong> 来实现。</p></li><li><p><code>cd</code> 命令可以切换工作路径，输入 <code>cd ~</code> 可以进入 home 目录。要访问你的 home 目录中的文件，可以使用前缀 <code>~</code>（例如 <code>~/.bashrc</code>）。在 <code>sh</code> 脚本里则用环境变量 <code>$HOME</code> 指代 home 目录的路径。</p></li><li><p>回到前一个工作路径：<code>cd -</code>。</p></li><li><p>如果你输入命令的时候中途改了主意，按下 <strong>alt-#</strong> 在行首添加 <code>#</code> 把它当做注释再按下回车执行（或者依次按下 <strong>ctrl-a</strong>， <strong>#</strong>， <strong>enter</strong>）。这样做的话，之后借助命令行历史记录，你可以很方便恢复你刚才输入到一半的命令。</p></li><li><p>使用 <code>xargs</code> （ 或 <code>parallel</code>）。他们非常给力。注意到你可以控制每行参数个数（<code>-L</code>）和最大并行数（<code>-P</code>）。如果你不确定它们是否会按你想的那样工作，先使用 <code>xargs echo</code> 查看一下。此外，使用 <code>-I{}</code> 会很方便。例如：</p></li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">find . -name <span class="hljs-string">'*.py'</span> | xargs grep some_function<br><span class="hljs-built_in">cat</span> hosts | xargs -I{} ssh root@{} hostname<br></code></pre></td></tr></tbody></table></figure><ul><li><p><code>pstree -p</code> 以一种优雅的方式展示进程树。</p></li><li><p>使用 <code>pgrep</code> 和 <code>pkill</code> 根据名字查找进程或发送信号（<code>-f</code> 参数通常有用）。</p></li><li><p>了解你可以发往进程的信号的种类。比如，使用 <code>kill -STOP [pid]</code> 停止一个进程。使用 <code>man 7 signal</code> 查看详细列表。</p></li><li><p>使用 <code>nohup</code> 或 <code>disown</code> 使一个后台进程持续运行。</p></li><li><p>使用 <code>netstat -lntp</code> 或 <code>ss -plat</code> 检查哪些进程在监听端口（默认是检查 TCP 端口; 添加参数 <code>-u</code> 则检查 UDP 端口）或者 <code>lsof -iTCP -sTCP:LISTEN -P -n</code> (这也可以在 OS X 上运行)。</p></li><li><p><code>lsof</code> 来查看开启的套接字和文件。</p></li><li><p>使用 <code>uptime</code> 或 <code>w</code> 来查看系统已经运行多长时间。</p></li><li><p>使用 <code>alias</code> 来创建常用命令的快捷形式。例如：<code>alias ll='ls -latr'</code> 创建了一个新的命令别名 <code>ll</code>。</p></li><li><p>可以把别名、shell 选项和常用函数保存在 <code>~/.bashrc</code>，具体看下这篇<a href="http://superuser.com/a/183980/7106">文章</a>。这样做的话你就可以在所有 shell 会话中使用你的设定。</p></li><li><p>把环境变量的设定以及登陆时要执行的命令保存在 <code>~/.bash_profile</code>。而对于从图形界面启动的 shell 和 <code>cron</code> 启动的 shell，则需要单独配置文件。</p></li><li><p>要想在几台电脑中同步你的配置文件（例如 <code>.bashrc</code> 和 <code>.bash_profile</code>），可以借助 Git。</p></li><li><p>当变量和文件名中包含空格的时候要格外小心。Bash 变量要用引号括起来，比如 <code>"$FOO"</code>。尽量使用 <code>-0</code> 或 <code>-print0</code> 选项以便用 NULL 来分隔文件名，例如 <code>locate -0 pattern | xargs -0 ls -al</code> 或 <code>find / -print0 -type d | xargs -0 ls -al</code>。如果 for 循环中循环访问的文件名含有空字符（空格、tab 等字符），只需用 <code>IFS=$'\n'</code> 把内部字段分隔符设为换行符。</p></li><li><p>在 Bash 脚本中，使用 <code>set -x</code> 去调试输出（或者使用它的变体 <code>set -v</code>，它会记录原始输入，包括多余的参数和注释）。尽可能地使用严格模式：使用 <code>set -e</code> 令脚本在发生错误时退出而不是继续运行；使用 <code>set -u</code> 来检查是否使用了未赋值的变量；试试 <code>set -o pipefail</code>，它可以监测管道中的错误。当牵扯到很多脚本时，使用 <code>trap</code> 来检测 ERR 和 EXIT。一个好的习惯是在脚本文件开头这样写，这会使它能够检测一些错误，并在错误发生时中断程序并输出信息：</p></li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> -euo pipefail<br><span class="hljs-built_in">trap</span> <span class="hljs-string">"echo 'error: Script failed: see failed command above'"</span> ERR<br></code></pre></td></tr></tbody></table></figure><ul><li>在 Bash 脚本中，子 shell（使用括号 <code>(...)</code>）是一种组织参数的便捷方式。一个常见的例子是临时地移动工作路径，代码如下：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># do something in current dir</span><br>(<span class="hljs-built_in">cd</span> /some/other/dir &amp;&amp; other-command)<br><span class="hljs-comment"># continue in original dir</span><br></code></pre></td></tr></tbody></table></figure><ul><li><p>在 Bash 中，变量有许多的扩展方式。<code>${name:?error message}</code> 用于检查变量是否存在。此外，当 Bash 脚本只需要一个参数时，可以使用这样的代码 <code>input_file=${1:?usage: $0 input_file}</code>。在变量为空时使用默认值：<code>${name:-default}</code>。如果你要在之前的例子中再加一个（可选的）参数，可以使用类似这样的代码 <code>output_file=${2:-logfile}</code>，如果省略了 $2，它的值就为空，于是 <code>output_file</code> 就会被设为 <code>logfile</code>。数学表达式：<code>i=$(( (i + 1) % 5 ))</code>。序列：<code>{1..10}</code>。截断字符串：<code>${var%suffix}</code> 和 <code>${var#prefix}</code>。例如，假设 <code>var=foo.pdf</code>，那么 <code>echo ${var%.pdf}.txt</code> 将输出 <code>foo.txt</code>。</p></li><li><p>使用括号扩展（<code>{</code>…<code>}</code>）来减少输入相似文本，并自动化文本组合。这在某些情况下会很有用，例如 <code>mv foo.{txt,pdf} some-dir</code>（同时移动两个文件），<code>cp somefile{,.bak}</code>（会被扩展成 <code>cp somefile somefile.bak</code>）或者 <code>mkdir -p test-{a,b,c}/subtest-{1,2,3}</code>（会被扩展成所有可能的组合，并创建一个目录树）。</p></li><li><p>通过使用 <code>&lt;(some command)</code> 可以将输出视为文件。例如，对比本地文件 <code>/etc/hosts</code> 和一个远程文件：</p></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">diff /etc/hosts &lt;(ssh somehost <span class="hljs-built_in">cat</span> /etc/hosts)<br></code></pre></td></tr></tbody></table></figure><ul><li>编写脚本时，你可能会想要把代码都放在大括号里。缺少右括号的话，代码就会因为语法错误而无法执行。如果你的脚本是要放在网上分享供他人使用的，这样的写法就体现出它的好处了，因为这样可以防止下载不完全代码被执行。</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">{<br>      <span class="hljs-comment"># 在这里写代码</span><br>}<br></code></pre></td></tr></tbody></table></figure><ul><li><p>了解 Bash 中的“here documents”，例如 <code>cat &lt;&lt;EOF ...</code>。</p></li><li><p>在 Bash 中，同时重定向标准输出和标准错误：<code>some-command &gt;logfile 2&gt;&amp;1</code> 或者 <code>some-command &amp;&gt;logfile</code>。通常，为了保证命令不会在标准输入里残留一个未关闭的文件句柄捆绑在你当前所在的终端上，在命令后添加 <code>&lt;/dev/null</code> 是一个好习惯。</p></li><li><p>使用 <code>man ascii</code> 查看具有十六进制和十进制值的ASCII表。<code>man unicode</code>，<code>man utf-8</code>，以及 <code>man latin1</code> 有助于你去了解通用的编码信息。</p></li><li><p>使用 <code>screen</code> 或 <a href="https://tmux.github.io/"><code>tmux</code></a> 来使用多份屏幕，当你在使用 ssh 时（保存 session 信息）将尤为有用。而 <code>byobu</code> 可以为它们提供更多的信息和易用的管理工具。另一个轻量级的 session 持久化解决方案是 <a href="https://github.com/bogner/dtach"><code>dtach</code></a>。</p></li><li><p>ssh 中，了解如何使用 <code>-L</code> 或 <code>-D</code>（偶尔需要用 <code>-R</code>）开启隧道是非常有用的，比如当你需要从一台远程服务器上访问 web 页面。</p></li><li><p>对 ssh 设置做一些小优化可能是很有用的，例如这个 <code>~/.ssh/config</code> 文件包含了防止特定网络环境下连接断开、压缩数据、多通道等选项：</p></li></ul><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">TCPKeepAlive</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">ServerAliveInterval</span>=15<br><span class="hljs-attribute">ServerAliveCountMax</span>=6<br><span class="hljs-attribute">Compression</span>=<span class="hljs-literal">yes</span><br>ControlMaster auto<br>ControlPath /tmp/%r@%h:%p<br>ControlPersist <span class="hljs-literal">yes</span><br></code></pre></td></tr></tbody></table></figure><ul><li><p>一些其他的关于 ssh 的选项是与安全相关的，应当小心翼翼的使用。例如你应当只能在可信任的网络中启用 <code>StrictHostKeyChecking=no</code>，<code>ForwardAgent=yes</code>。</p></li><li><p>考虑使用 <a href="https://mosh.mit.edu/"><code>mosh</code></a> 作为 ssh 的替代品，它使用 UDP 协议。它可以避免连接被中断并且对带宽需求更小，但它需要在服务端做相应的配置。</p></li><li><p>获取八进制形式的文件访问权限（修改系统设置时通常需要，但 <code>ls</code> 的功能不那么好用并且通常会搞砸），可以使用类似如下的代码：</p></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">stat</span> -c <span class="hljs-string">'%A %a %n'</span> /etc/timezone<br></code></pre></td></tr></tbody></table></figure><ul><li><p>使用 <a href="https://github.com/mooz/percol"><code>percol</code></a> 或者 <a href="https://github.com/junegunn/fzf"><code>fzf</code></a> 可以交互式地从另一个命令输出中选取值。</p></li><li><p>使用 <code>fpp</code>（<a href="https://github.com/facebook/PathPicker">PathPicker</a>）可以与基于另一个命令(例如 <code>git</code>）输出的文件交互。</p></li><li><p>将 web 服务器上当前目录下所有的文件（以及子目录）暴露给你所处网络的所有用户，使用：<br><code>python -m SimpleHTTPServer 7777</code> （使用端口 7777 和 Python 2）或<code>python -m http.server 7777</code> （使用端口 7777 和 Python 3）。</p></li><li><p>以其他用户的身份执行命令，使用 <code>sudo</code>。默认以 root 用户的身份执行；使用 <code>-u</code> 来指定其他用户。使用 <code>-i</code> 来以该用户登录（需要输入<em>你自己的</em>密码）。</p></li><li><p>将 shell 切换为其他用户，使用 <code>su username</code> 或者 <code>sudo - username</code>。加入 <code>-</code> 会使得切换后的环境与使用该用户登录后的环境相同。省略用户名则默认为 root。切换到哪个用户，就需要输入<em>哪个用户的</em>密码。</p></li><li><p>了解命令行的 <a href="https://wiki.debian.org/CommonErrorMessages/ArgumentListTooLong">128K 限制</a>。使用通配符匹配大量文件名时，常会遇到“Argument list too long”的错误信息。（这种情况下换用 <code>find</code> 或 <code>xargs</code> 通常可以解决。）</p></li><li><p>当你需要一个基本的计算器时，可以使用 <code>python</code> 解释器（当然你要用 python 的时候也是这样）。例如：</p></li></ul><figure class="highlight python-repl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python-repl"><span class="hljs-meta prompt_">&gt;&gt;&gt;</span> <span class="language-python"><span class="hljs-number">2</span>+<span class="hljs-number">3</span></span><br>5<br></code></pre></td></tr></tbody></table></figure><h2 id="文件及数据处理"><a href="#文件及数据处理" class="headerlink" title="文件及数据处理"></a>文件及数据处理</h2><ul><li><p>在当前目录下通过文件名查找一个文件，使用类似于这样的命令：<code>find . -iname '*something*'</code>。在所有路径下通过文件名查找文件，使用 <code>locate something</code> （但注意到 <code>updatedb</code> 可能没有对最近新建的文件建立索引，所以你可能无法定位到这些未被索引的文件）。</p></li><li><p>使用 <a href="https://github.com/ggreer/the_silver_searcher"><code>ag</code></a> 在源代码或数据文件里检索（<code>grep -r</code> 同样可以做到，但相比之下 <code>ag</code> 更加先进）。</p></li><li><p>将 HTML 转为文本：<code>lynx -dump -stdin</code>。</p></li><li><p>Markdown，HTML，以及所有文档格式之间的转换，试试 <a href="http://pandoc.org/"><code>pandoc</code></a>。</p></li><li><p>当你要处理棘手的 XML 时候，<code>xmlstarlet</code> 算是上古时代流传下来的神器。</p></li><li><p>使用 <a href="http://stedolan.github.io/jq/"><code>jq</code></a> 处理 JSON。</p></li><li><p>使用 <a href="https://github.com/0k/shyaml"><code>shyaml</code></a> 处理 YAML。</p></li><li><p>要处理 Excel 或 CSV 文件的话，<a href="https://github.com/onyxfish/csvkit">csvkit</a> 提供了 <code>in2csv</code>，<code>csvcut</code>，<code>csvjoin</code>，<code>csvgrep</code> 等方便易用的工具。</p></li><li><p>当你要处理 Amazon S3 相关的工作的时候，<a href="https://github.com/s3tools/s3cmd"><code>s3cmd</code></a> 是一个很方便的工具而 <a href="https://github.com/bloomreach/s4cmd"><code>s4cmd</code></a> 的效率更高。Amazon 官方提供的 <a href="https://github.com/aws/aws-cli"><code>aws</code></a> 以及  <a href="https://github.com/donnemartin/saws"><code>saws</code></a> 是其他 AWS 相关工作的基础，值得学习。</p></li><li><p>了解如何使用 <code>sort</code> 和 <code>uniq</code>，包括 uniq 的 <code>-u</code> 参数和 <code>-d</code> 参数，具体内容在后文单行脚本节中。另外可以了解一下 <code>comm</code>。</p></li><li><p>了解如何使用 <code>cut</code>，<code>paste</code> 和 <code>join</code> 来更改文件。很多人都会使用 <code>cut</code>，但遗忘了 <code>join</code>。</p></li><li><p>了解如何运用 <code>wc</code> 去计算新行数（<code>-l</code>），字符数（<code>-m</code>），单词数（<code>-w</code>）以及字节数（<code>-c</code>）。</p></li><li><p>了解如何使用 <code>tee</code> 将标准输入复制到文件甚至标准输出，例如 <code>ls -al | tee file.txt</code>。</p></li><li><p>要进行一些复杂的计算，比如分组、逆序和一些其他的统计分析，可以考虑使用 <a href="https://www.gnu.org/software/datamash/"><code>datamash</code></a>。</p></li><li><p>注意到语言设置（中文或英文等）对许多命令行工具有一些微妙的影响，比如排序的顺序和性能。大多数 Linux 的安装过程会将 <code>LANG</code> 或其他有关的变量设置为符合本地的设置。要意识到当你改变语言设置时，排序的结果可能会改变。明白国际化可能会使 sort 或其他命令运行效率下降<em>许多倍</em>。某些情况下（例如集合运算）你可以放心的使用 <code>export LC_ALL=C</code> 来忽略掉国际化并按照字节来判断顺序。</p></li><li><p>你可以单独指定某一条命令的环境，只需在调用时把环境变量设定放在命令的前面，例如 <code>TZ=Pacific/Fiji date</code> 可以获取斐济的时间。</p></li><li><p>了解如何使用 <code>awk</code> 和 <code>sed</code> 来进行简单的数据处理。 参阅 <a href="#one-liners">One-liners</a> 获取示例。</p></li><li><p>替换一个或多个文件中出现的字符串：</p></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">perl -pi.bak -e <span class="hljs-string">'s/old-string/new-string/g'</span> my-files-*.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>使用 <a href="https://github.com/jlevy/repren"><code>repren</code></a> 来批量重命名文件，或是在多个文件中搜索替换内容。（有些时候 <code>rename</code> 命令也可以批量重命名，但要注意，它在不同 Linux 发行版中的功能并不完全一样。）</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 将文件、目录和内容全部重命名 foo -&gt; bar:</span><br>repren --full --preserve-case --from foo --to bar .<br><span class="hljs-comment"># 还原所有备份文件 whatever.bak -&gt; whatever:</span><br>repren --renames --from <span class="hljs-string">'(.*)\.bak'</span> --to <span class="hljs-string">'\1'</span> *.bak<br><span class="hljs-comment"># 用 rename 实现上述功能（若可用）:</span><br>rename <span class="hljs-string">'s/\.bak$//'</span> *.bak<br></code></pre></td></tr></tbody></table></figure><ul><li>根据 man 页面的描述，<code>rsync</code> 是一个快速且非常灵活的文件复制工具。它闻名于设备之间的文件同步，但其实它在本地情况下也同样有用。在安全设置允许下，用 <code>rsync</code> 代替 <code>scp</code> 可以实现文件续传，而不用重新从头开始。它同时也是删除大量文件的<a href="https://web.archive.org/web/20130929001850/http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html">最快方法</a>之一：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> empty &amp;&amp; rsync -r --delete empty/ some-dir &amp;&amp; <span class="hljs-built_in">rmdir</span> some-dir<br></code></pre></td></tr></tbody></table></figure><ul><li><p>若要在复制文件时获取当前进度，可使用 <code>pv</code>，<a href="https://github.com/dmerejkowsky/pycp"><code>pycp</code></a>，<a href="https://github.com/Xfennec/progress"><code>progress</code></a>，<code>rsync --progress</code>。若所执行的复制为block块拷贝，可以使用 <code>dd status=progress</code>。</p></li><li><p>使用 <code>shuf</code> 可以以行为单位来打乱文件的内容或从一个文件中随机选取多行。</p></li><li><p>了解 <code>sort</code> 的参数。显示数字时，使用 <code>-n</code> 或者 <code>-h</code> 来显示更易读的数（例如 <code>du -h</code> 的输出）。明白排序时关键字的工作原理（<code>-t</code> 和 <code>-k</code>）。例如，注意到你需要 <code>-k1，1</code> 来仅按第一个域来排序，而 <code>-k1</code> 意味着按整行排序。稳定排序（<code>sort -s</code>）在某些情况下很有用。例如，以第二个域为主关键字，第一个域为次关键字进行排序，你可以使用 <code>sort -k1，1 | sort -s -k2，2</code>。</p></li><li><p>如果你想在 Bash 命令行中写 tab 制表符，按下 <strong>ctrl-v</strong> <strong>[Tab]</strong> 或键入 <code>$'\t'</code> （后者可能更好，因为你可以复制粘贴它）。</p></li><li><p>标准的源代码对比及合并工具是 <code>diff</code> 和 <code>patch</code>。使用 <code>diffstat</code> 查看变更总览数据。注意到 <code>diff -r</code> 对整个文件夹有效。使用 <code>diff -r tree1 tree2 | diffstat</code> 查看变更的统计数据。<code>vimdiff</code> 用于比对并编辑文件。</p></li><li><p>对于二进制文件，使用 <code>hd</code>，<code>hexdump</code> 或者 <code>xxd</code> 使其以十六进制显示，使用 <code>bvi</code>，<code>hexedit</code> 或者 <code>biew</code> 来进行二进制编辑。</p></li><li><p>同样对于二进制文件，<code>strings</code>（包括 <code>grep</code> 等工具）可以帮助在二进制文件中查找特定比特。</p></li><li><p>制作二进制差分文件（Delta 压缩），使用 <code>xdelta3</code>。</p></li><li><p>使用 <code>iconv</code> 更改文本编码。需要更高级的功能，可以使用 <code>uconv</code>，它支持一些高级的 Unicode 功能。例如，这条命令移除了所有重音符号：</p></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">uconv -f utf-8 -t utf-8 -x <span class="hljs-string">'::Any-Lower; ::Any-NFD; [:Nonspacing Mark:] &gt;; ::Any-NFC; '</span> &lt; input.txt &gt; output.txt<br></code></pre></td></tr></tbody></table></figure><ul><li><p>拆分文件可以使用 <code>split</code>（按大小拆分）和 <code>csplit</code>（按模式拆分）。</p></li><li><p>操作日期和时间表达式，可以用 <a href="http://www.fresse.org/dateutils/"><code>dateutils</code></a> 中的 <code>dateadd</code>、<code>datediff</code>、<code>strptime</code> 等工具。</p></li><li><p>使用 <code>zless</code>、<code>zmore</code>、<code>zcat</code> 和 <code>zgrep</code> 对压缩过的文件进行操作。</p></li><li><p>文件属性可以通过 <code>chattr</code> 进行设置，它比文件权限更加底层。例如，为了保护文件不被意外删除，可以使用不可修改标记：<code>sudo chattr +i /critical/directory/or/file</code></p></li><li><p>使用 <code>getfacl</code> 和 <code>setfacl</code> 以保存和恢复文件权限。例如：</p></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">getfacl -R /some/path &gt; permissions.txt<br>setfacl --restore=permissions.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>为了高效地创建空文件，请使用 <code>truncate</code>（创建<a href="https://zh.wikipedia.org/wiki/稀疏文件">稀疏文件</a>），<code>fallocate</code>（用于 ext4，xfs，btrf 和 ocfs2 文件系统），<code>xfs_mkfile</code>（适用于几乎所有的文件系统，包含在 xfsprogs 包中），<code>mkfile</code>（用于类 Unix 操作系统，比如 Solaris 和 Mac OS）。</li></ul><h2 id="系统调试"><a href="#系统调试" class="headerlink" title="系统调试"></a>系统调试</h2><ul><li><p><code>curl</code> 和 <code>curl -I</code> 可以被轻松地应用于 web 调试中，它们的好兄弟 <code>wget</code> 也是如此，或者也可以试试更潮的 <a href="https://github.com/jkbrzt/httpie"><code>httpie</code></a>。</p></li><li><p>获取 CPU 和硬盘的使用状态，通常使用使用 <code>top</code>（<code>htop</code> 更佳），<code>iostat</code> 和 <code>iotop</code>。而 <code>iostat -mxz 15</code> 可以让你获悉 CPU 和每个硬盘分区的基本信息和性能表现。</p></li><li><p>使用 <code>netstat</code> 和 <code>ss</code> 查看网络连接的细节。</p></li><li><p><code>dstat</code> 在你想要对系统的现状有一个粗略的认识时是非常有用的。然而若要对系统有一个深度的总体认识，使用 <a href="https://github.com/nicolargo/glances"><code>glances</code></a>，它会在一个终端窗口中向你提供一些系统级的数据。</p></li><li><p>若要了解内存状态，运行并理解 <code>free</code> 和 <code>vmstat</code> 的输出。值得留意的是“cached”的值，它指的是 Linux 内核用来作为文件缓存的内存大小，而与空闲内存无关。</p></li><li><p>Java 系统调试则是一件截然不同的事，一个可以用于 Oracle 的 JVM 或其他 JVM 上的调试的技巧是你可以运行 <code>kill -3 &lt;pid&gt;</code> 同时一个完整的栈轨迹和堆概述（包括 GC 的细节）会被保存到标准错误或是日志文件。JDK 中的 <code>jps</code>，<code>jstat</code>，<code>jstack</code>，<code>jmap</code> 很有用。<a href="https://github.com/aragozin/jvm-tools">SJK tools</a> 更高级。</p></li><li><p>使用 <a href="http://www.bitwizard.nl/mtr/"><code>mtr</code></a> 去跟踪路由，用于确定网络问题。</p></li><li><p>用 <a href="https://dev.yorhel.nl/ncdu"><code>ncdu</code></a> 来查看磁盘使用情况，它比寻常的命令，如 <code>du -sh *</code>，更节省时间。</p></li><li><p>查找正在使用带宽的套接字连接或进程，使用 <a href="http://www.ex-parrot.com/~pdw/iftop/"><code>iftop</code></a> 或 <a href="https://github.com/raboof/nethogs"><code>nethogs</code></a>。</p></li><li><p><code>ab</code> 工具（Apache 中自带）可以简单粗暴地检查 web 服务器的性能。对于更复杂的负载测试，使用 <code>siege</code>。</p></li><li><p><a href="https://wireshark.org/"><code>wireshark</code></a>，<a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html"><code>tshark</code></a> 和 <a href="http://ngrep.sourceforge.net/"><code>ngrep</code></a> 可用于复杂的网络调试。</p></li><li><p>了解 <code>strace</code> 和 <code>ltrace</code>。这俩工具在你的程序运行失败、挂起甚至崩溃，而你却不知道为什么或你想对性能有个总体的认识的时候是非常有用的。注意 profile 参数（<code>-c</code>）和附加到一个运行的进程参数 （<code>-p</code>）。</p></li><li><p>了解使用 <code>ldd</code> 来检查共享库。但是<a href="http://www.catonmat.net/blog/ldd-arbitrary-code-execution/">永远不要在不信任的文件上运行</a>。</p></li><li><p>了解如何运用 <code>gdb</code> 连接到一个运行着的进程并获取它的堆栈轨迹。</p></li><li><p>学会使用 <code>/proc</code>。它在调试正在出现的问题的时候有时会效果惊人。比如：<code>/proc/cpuinfo</code>，<code>/proc/meminfo</code>，<code>/proc/cmdline</code>，<code>/proc/xxx/cwd</code>，<code>/proc/xxx/exe</code>，<code>/proc/xxx/fd/</code>，<code>/proc/xxx/smaps</code>（这里的 <code>xxx</code> 表示进程的 id 或 pid）。</p></li><li><p>当调试一些之前出现的问题的时候，<a href="http://sebastien.godard.pagesperso-orange.fr/"><code>sar</code></a> 非常有用。它展示了 cpu、内存以及网络等的历史数据。</p></li><li><p>关于更深层次的系统分析以及性能分析，看看 <code>stap</code>（<a href="https://sourceware.org/systemtap/wiki">SystemTap</a>），<a href="https://en.wikipedia.org/wiki/Perf_(Linux"><code>perf</code></a>)，以及<a href="https://github.com/draios/sysdig"><code>sysdig</code></a>。</p></li><li><p>查看你当前使用的系统，使用 <code>uname</code>，<code>uname -a</code>（Unix／kernel 信息）或者 <code>lsb_release -a</code>（Linux 发行版信息）。</p></li><li><p>无论什么东西工作得很欢乐（可能是硬件或驱动问题）时可以试试 <code>dmesg</code>。</p></li><li><p>如果你删除了一个文件，但通过 <code>du</code> 发现没有释放预期的磁盘空间，请检查文件是否被进程占用：<br><code>lsof | grep deleted | grep "filename-of-my-big-file"</code></p></li></ul><h2 id="单行脚本"><a href="#单行脚本" class="headerlink" title="单行脚本"></a>单行脚本</h2><p>一些命令组合的例子：</p><ul><li>当你需要对文本文件做集合交、并、差运算时，<code>sort</code> 和 <code>uniq</code> 会是你的好帮手。具体例子请参照代码后面的，此处假设 <code>a</code> 与 <code>b</code> 是两内容不同的文件。这种方式效率很高，并且在小文件和上 G 的文件上都能运用（注意尽管在 <code>/tmp</code> 在一个小的根分区上时你可能需要 <code>-T</code> 参数，但是实际上 <code>sort</code> 并不被内存大小约束），参阅前文中关于 <code>LC_ALL</code> 和 <code>sort</code> 的 <code>-u</code> 参数的部分。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sort</span> a b | <span class="hljs-built_in">uniq</span> &gt; c   <span class="hljs-comment"># c 是 a 并 b</span><br><span class="hljs-built_in">sort</span> a b | <span class="hljs-built_in">uniq</span> -d &gt; c   <span class="hljs-comment"># c 是 a 交 b</span><br><span class="hljs-built_in">sort</span> a b b | <span class="hljs-built_in">uniq</span> -u &gt; c   <span class="hljs-comment"># c 是 a - b</span><br></code></pre></td></tr></tbody></table></figure><ul><li>使用 <code>grep . *</code>（每行都会附上文件名）或者 <code>head -100 *</code>（每个文件有一个标题）来阅读检查目录下所有文件的内容。这在检查一个充满配置文件的目录（如 <code>/sys</code>、<code>/proc</code>、<code>/etc</code>）时特别好用。</li></ul><ul><li>计算文本文件第三列中所有数的和（可能比同等作用的 Python 代码快三倍且代码量少三倍）：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">awk <span class="hljs-string">'{ x += $3 } END { print x }'</span> myfile<br></code></pre></td></tr></tbody></table></figure><ul><li>如果你想在文件树上查看大小/日期，这可能看起来像递归版的 <code>ls -l</code> 但比 <code>ls -lR</code> 更易于理解：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">find . -<span class="hljs-built_in">type</span> f -<span class="hljs-built_in">ls</span><br></code></pre></td></tr></tbody></table></figure><ul><li>假设你有一个类似于 web 服务器日志文件的文本文件，并且一个确定的值只会出现在某些行上，假设一个 <code>acct_id</code> 参数在 URI 中。如果你想计算出每个 <code>acct_id</code> 值有多少次请求，使用如下代码：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">egrep -o <span class="hljs-string">'acct_id=[0-9]+'</span> access.log | <span class="hljs-built_in">cut</span> -d= -f2 | <span class="hljs-built_in">sort</span> | <span class="hljs-built_in">uniq</span> -c | <span class="hljs-built_in">sort</span> -rn<br></code></pre></td></tr></tbody></table></figure><ul><li><p>要持续监测文件改动，可以使用 <code>watch</code>，例如检查某个文件夹中文件的改变，可以用 <code>watch -d -n 2 'ls -rtlh | tail'</code>；或者在排查 WiFi 设置故障时要监测网络设置的更改，可以用 <code>watch -d -n 2 ifconfig</code>。</p></li><li><p>运行这个函数从这篇文档中随机获取一条技巧（解析 Markdown 文件并抽取项目）：</p></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">taocl</span></span>() {<br>  curl -s https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README-zh.md|<br>    pandoc -f markdown -t html |<br>    iconv -f <span class="hljs-string">'utf-8'</span> -t <span class="hljs-string">'unicode'</span> |<br>    xmlstarlet fo --html --dropdtd |<br>    xmlstarlet sel -t -v <span class="hljs-string">"(html/body/ul/li[count(p)&gt;0])[<span class="hljs-variable">$RANDOM</span> mod last()+1]"</span> |<br>    xmlstarlet unesc | <span class="hljs-built_in">fmt</span> -80<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="冷门但有用"><a href="#冷门但有用" class="headerlink" title="冷门但有用"></a>冷门但有用</h2><ul><li><p><code>expr</code>：计算表达式或正则匹配</p></li><li><p><code>m4</code>：简单的宏处理器</p></li><li><p><code>yes</code>：多次打印字符串</p></li><li><p><code>cal</code>：漂亮的日历</p></li><li><p><code>env</code>：执行一个命令（脚本文件中很有用）</p></li><li><p><code>printenv</code>：打印环境变量（调试时或在写脚本文件时很有用）</p></li><li><p><code>look</code>：查找以特定字符串开头的单词或行</p></li><li><p><code>cut</code>，<code>paste</code> 和 <code>join</code>：数据修改</p></li><li><p><code>fmt</code>：格式化文本段落</p></li><li><p><code>pr</code>：将文本格式化成页／列形式</p></li><li><p><code>fold</code>：包裹文本中的几行</p></li><li><p><code>column</code>：将文本格式化成多个对齐、定宽的列或表格</p></li><li><p><code>expand</code> 和 <code>unexpand</code>：制表符与空格之间转换</p></li><li><p><code>nl</code>：添加行号</p></li><li><p><code>seq</code>：打印数字</p></li><li><p><code>bc</code>：计算器</p></li><li><p><code>factor</code>：分解因数</p></li><li><p><a href="https://gnupg.org/"><code>gpg</code></a>：加密并签名文件</p></li><li><p><code>toe</code>：terminfo 入口列表</p></li><li><p><code>nc</code>：网络调试及数据传输</p></li><li><p><code>socat</code>：套接字代理，与 <code>netcat</code> 类似</p></li><li><p><a href="https://github.com/mattthias/slurm"><code>slurm</code></a>：网络流量可视化</p></li><li><p><code>dd</code>：文件或设备间传输数据</p></li><li><p><code>file</code>：确定文件类型</p></li><li><p><code>tree</code>：以树的形式显示路径和文件，类似于递归的 <code>ls</code></p></li><li><p><code>stat</code>：文件信息</p></li><li><p><code>time</code>：执行命令，并计算执行时间</p></li><li><p><code>timeout</code>：在指定时长范围内执行命令，并在规定时间结束后停止进程</p></li><li><p><code>lockfile</code>：使文件只能通过 <code>rm -f</code> 移除</p></li><li><p><code>logrotate</code>： 切换、压缩以及发送日志文件</p></li><li><p><code>watch</code>：重复运行同一个命令，展示结果并／或高亮有更改的部分</p></li><li><p><a href="https://github.com/joh/when-changed"><code>when-changed</code></a>：当检测到文件更改时执行指定命令。参阅 <code>inotifywait</code> 和 <code>entr</code>。</p></li><li><p><code>tac</code>：反向输出文件</p></li><li><p><code>shuf</code>：文件中随机选取几行</p></li><li><p><code>comm</code>：一行一行的比较排序过的文件</p></li><li><p><code>strings</code>：从二进制文件中抽取文本</p></li><li><p><code>tr</code>：转换字母</p></li><li><p><code>iconv</code> 或 <code>uconv</code>：文本编码转换</p></li><li><p><code>split</code> 和 <code>csplit</code>：分割文件</p></li><li><p><code>sponge</code>：在写入前读取所有输入，在读取文件后再向同一文件写入时比较有用，例如 <code>grep -v something some-file | sponge some-file</code></p></li><li><p><code>units</code>：将一种计量单位转换为另一种等效的计量单位（参阅 <code>/usr/share/units/definitions.units</code>）</p></li><li><p><code>apg</code>：随机生成密码</p></li><li><p><code>xz</code>：高比例的文件压缩</p></li><li><p><code>ldd</code>：动态库信息</p></li><li><p><code>nm</code>：提取 obj 文件中的符号</p></li><li><p><code>ab</code> 或 <a href="https://github.com/wg/wrk"><code>wrk</code></a>：web 服务器性能分析</p></li><li><p><code>strace</code>：调试系统调用</p></li><li><p><a href="http://www.bitwizard.nl/mtr/"><code>mtr</code></a>：更好的网络调试跟踪工具</p></li><li><p><code>cssh</code>：可视化的并发 shell</p></li><li><p><code>rsync</code>：通过 ssh 或本地文件系统同步文件和文件夹</p></li><li><p><a href="https://wireshark.org/"><code>wireshark</code></a> 和 <a href="https://www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html"><code>tshark</code></a>：抓包和网络调试工具</p></li><li><p><a href="http://ngrep.sourceforge.net/"><code>ngrep</code></a>：网络层的 grep</p></li><li><p><code>host</code> 和 <code>dig</code>：DNS 查找</p></li><li><p><code>lsof</code>：列出当前系统打开文件的工具以及查看端口信息</p></li><li><p><code>dstat</code>：系统状态查看</p></li><li><p><a href="https://github.com/nicolargo/glances"><code>glances</code></a>：高层次的多子系统总览</p></li><li><p><code>iostat</code>：硬盘使用状态</p></li><li><p><code>mpstat</code>： CPU 使用状态</p></li><li><p><code>vmstat</code>： 内存使用状态</p></li><li><p><code>htop</code>：top 的加强版</p></li><li><p><code>last</code>：登入记录</p></li><li><p><code>w</code>：查看处于登录状态的用户</p></li><li><p><code>id</code>：用户/组 ID 信息</p></li><li><p><a href="http://sebastien.godard.pagesperso-orange.fr/"><code>sar</code></a>：系统历史数据</p></li><li><p><a href="http://www.ex-parrot.com/~pdw/iftop/"><code>iftop</code></a> 或 <a href="https://github.com/raboof/nethogs"><code>nethogs</code></a>：套接字及进程的网络利用情况</p></li><li><p><code>ss</code>：套接字数据</p></li><li><p><code>dmesg</code>：引导及系统错误信息</p></li><li><p><code>sysctl</code>： 在内核运行时动态地查看和修改内核的运行参数</p></li><li><p><code>hdparm</code>：SATA/ATA 磁盘更改及性能分析</p></li><li><p><code>lsblk</code>：列出块设备信息：以树形展示你的磁盘以及磁盘分区信息</p></li><li><p><code>lshw</code>，<code>lscpu</code>，<code>lspci</code>，<code>lsusb</code> 和 <code>dmidecode</code>：查看硬件信息，包括 CPU、BIOS、RAID、显卡、USB设备等</p></li><li><p><code>lsmod</code> 和 <code>modinfo</code>：列出内核模块，并显示其细节</p></li><li><p><code>fortune</code>，<code>ddate</code> 和 <code>sl</code>：额，这主要取决于你是否认为蒸汽火车和莫名其妙的名人名言是否“有用”</p></li></ul><h2 id="仅限-OS-X-系统"><a href="#仅限-OS-X-系统" class="headerlink" title="仅限 OS X 系统"></a>仅限 OS X 系统</h2><p>以下是<em>仅限于</em> OS X 系统的技巧。</p><ul><li><p>用 <code>brew</code> （Homebrew）或者 <code>port</code> （MacPorts）进行包管理。这些可以用来在 OS X 系统上安装以上的大多数命令。</p></li><li><p>用 <code>pbcopy</code> 复制任何命令的输出到桌面应用，用 <code>pbpaste</code> 粘贴输入。</p></li><li><p>若要在 OS X 终端中将 Option 键视为 alt 键（例如在上面介绍的 <strong>alt-b</strong>、<strong>alt-f</strong> 等命令中用到），打开 偏好设置 -&gt; 描述文件 -&gt; 键盘 并勾选“使用 Option 键作为 Meta 键”。</p></li><li><p>用 <code>open</code> 或者 <code>open -a /Applications/Whatever.app</code> 使用桌面应用打开文件。</p></li><li><p>Spotlight：用 <code>mdfind</code> 搜索文件，用 <code>mdls</code> 列出元数据（例如照片的 EXIF 信息）。</p></li><li><p>注意 OS X 系统是基于 BSD UNIX 的，许多命令（例如 <code>ps</code>，<code>ls</code>，<code>tail</code>，<code>awk</code>，<code>sed</code>）都和 Linux 中有微妙的不同（ Linux 很大程度上受到了 System V-style Unix 和 GNU 工具影响）。你可以通过标题为 “BSD General Commands Manual” 的 man 页面发现这些不同。在有些情况下 GNU 版本的命令也可能被安装（例如 <code>gawk</code> 和 <code>gsed</code> 对应 GNU 中的 awk 和 sed ）。如果要写跨平台的 Bash 脚本，避免使用这些命令（例如，考虑 Python 或者 <code>perl</code> ）或者经过仔细的测试。</p></li><li><p>用 <code>sw_vers</code> 获取 OS X 的版本信息。</p></li></ul><h2 id="仅限-Windows-系统"><a href="#仅限-Windows-系统" class="headerlink" title="仅限 Windows 系统"></a>仅限 Windows 系统</h2><p>以下是<em>仅限于</em> Windows 系统的技巧。</p><h3 id="在-Winodws-下获取-Unix-工具"><a href="#在-Winodws-下获取-Unix-工具" class="headerlink" title="在 Winodws 下获取 Unix 工具"></a>在 Winodws 下获取 Unix 工具</h3><ul><li><p>可以安装 <a href="https://cygwin.com/">Cygwin</a> 允许你在 Microsoft Windows 中体验 Unix shell 的威力。这样的话，本文中介绍的大多数内容都将适用。</p></li><li><p>在 Windows 10 上，你可以使用 <a href="https://msdn.microsoft.com/commandline/wsl/about">Bash on Ubuntu on Windows</a>，它提供了一个熟悉的 Bash 环境，包含了不少 Unix 命令行工具。好处是它允许 Linux 上编写的程序在 Windows 上运行，而另一方面，Windows 上编写的程序却无法在 Bash 命令行中运行。</p></li><li><p>如果你在 Windows 上主要想用 GNU 开发者工具（例如 GCC），可以考虑 <a href="http://www.mingw.org/">MinGW</a> 以及它的 <a href="http://www.mingw.org/wiki/msys">MSYS</a> 包，这个包提供了例如 bash，gawk，make 和 grep 的工具。MSYS 并不包含所有可以与 Cygwin 媲美的特性。当制作 Unix 工具的原生 Windows 端口时 MinGW 将特别地有用。</p></li><li><p>另一个在 Windows 下实现接近 Unix 环境外观效果的选项是 <a href="https://github.com/dthree/cash">Cash</a>。注意在此环境下只有很少的 Unix 命令和命令行可用。</p></li></ul><h3 id="实用-Windows-命令行工具"><a href="#实用-Windows-命令行工具" class="headerlink" title="实用 Windows 命令行工具"></a>实用 Windows 命令行工具</h3><ul><li><p>可以使用 <code>wmic</code> 在命令行环境下给大部分 Windows 系统管理任务编写脚本以及执行这些任务。</p></li><li><p>Windows 实用的原生命令行网络工具包括 <code>ping</code>，<code>ipconfig</code>，<code>tracert</code>，和 <code>netstat</code>。</p></li><li><p>可以使用 <code>Rundll32</code> 命令来实现<a href="http://www.thewindowsclub.com/rundll32-shortcut-commands-windows">许多有用的 Windows 任务</a> 。</p></li></ul><h3 id="Cygwin-技巧"><a href="#Cygwin-技巧" class="headerlink" title="Cygwin 技巧"></a>Cygwin 技巧</h3><ul><li><p>通过 Cygwin 的包管理器来安装额外的 Unix 程序。</p></li><li><p>使用 <code>mintty</code> 作为你的命令行窗口。</p></li><li><p>要访问 Windows 剪贴板，可以通过 <code>/dev/clipboard</code>。</p></li><li><p>运行 <code>cygstart</code> 以通过默认程序打开一个文件。</p></li><li><p>要访问 Windows 注册表，可以使用 <code>regtool</code>。</p></li><li><p>注意 Windows 驱动器路径 <code>C:\</code> 在 Cygwin 中用 <code>/cygdrive/c</code> 代表，而 Cygwin 的 <code>/</code> 代表 Windows 中的 <code>C:\cygwin</code>。要转换 Cygwin 和 Windows 风格的路径可以用 <code>cygpath</code>。这在需要调用 Windows 程序的脚本里很有用。</p></li><li><p>学会使用 <code>wmic</code>，你就可以从命令行执行大多数 Windows 系统管理任务，并编成脚本。</p></li><li><p>要在 Windows 下获得 Unix 的界面和体验，另一个办法是使用 <a href="https://github.com/dthree/cash">Cash</a>。需要注意的是，这个环境支持的 Unix 命令和命令行参数非常少。</p></li><li><p>要在 Windows 上获取 GNU 开发者工具（比如 GCC）的另一个办法是使用 <a href="http://www.mingw.org/">MinGW</a> 以及它的 <a href="http://www.mingw.org/wiki/msys">MSYS</a> 软件包，该软件包提供了 bash、gawk、make、grep 等工具。然而 MSYS 提供的功能没有 Cygwin 完善。MinGW 在创建 Unix 工具的 Windows 原生移植方面非常有用。</p></li></ul><h2 id="更多资源"><a href="#更多资源" class="headerlink" title="更多资源"></a>更多资源</h2><ul><li><a href="https://github.com/alebcay/awesome-shell">awesome-shell</a>：一份精心组织的命令行工具及资源的列表。</li><li><a href="https://github.com/herrbischoff/awesome-osx-command-line">awesome-osx-command-line</a>：一份针对 OS X 命令行的更深入的指南。</li><li><a href="http://redsymbol.net/articles/unofficial-bash-strict-mode/">Strict mode</a>：为了编写更好的脚本文件。</li><li><a href="https://github.com/koalaman/shellcheck">shellcheck</a>：一个静态 shell 脚本分析工具，本质上是 bash／sh／zsh 的 lint。</li><li><a href="http://www.dwheeler.com/essays/filenames-in-shell.html">Filenames and Pathnames in Shell</a>：有关如何在 shell 脚本里正确处理文件名的细枝末节。</li><li><a href="http://datascienceatthecommandline.com/#tools">Data Science at the Command Line</a>：用于数据科学的一些命令和工具，摘自同名书籍。</li></ul><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>除去特别小的工作，你编写的代码应当方便他人阅读。能力往往伴随着责任，你 <em>有能力</em> 在 Bash 中玩一些奇技淫巧并不意味着你应该去做！;)</p><h2 id="授权条款"><a href="#授权条款" class="headerlink" title="授权条款"></a>授权条款</h2><p><a href="http://creativecommons.org/licenses/by-sa/4.0/"><img src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" alt="Creative Commons License"></a></p><p>本文使用授权协议 <a href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International License</a>。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QIIME2学习笔记</title>
      <link href="/article/qiimenote/"/>
      <url>/article/qiimenote/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接用Docker安装。</p><p>官方教程：<a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p>QIIME2中的数据：</p><ul><li>测序数据：<code>.qza</code>格式。因此需要先将测序下机的<code>.fasta</code>格式的文件转换成<code>.qza</code>格式的文件。同样，<code>.qza</code>格式文件也可以导出成其他格式。</li><li>样品信息（metadata）</li><li>可视化数据：<code>.qzv</code>格式。这个文件是分析过程中产生的临时文件。这中类型的数据是不能用作其他分析的输入数据的 。</li></ul><h2 id="QIIME工作流程"><a href="#QIIME工作流程" class="headerlink" title="QIIME工作流程"></a>QIIME工作流程</h2><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608197.png" alt="image-20220104165930914"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608403.png" alt="image-20220104170132235"></p><ul><li>拆分</li></ul><p>为什么要拆分样品呢？现代的测序仪在一个lane/run中能够对成百上千个样品进行测序，因此需要按照样品将它们分开。如何区分不同的样品呢？用barcode进行区分，也就是接头序列。q2-demux或者q2-cutadapt。如果序列中含有引物序列的时候用第二个程序。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608513.png" alt="image-20220104172818044"></p><ul><li><p>去噪</p><ul><li>DADA2</li><li>Deblur<ul><li>需要用到<a href="https://www.nature.com/articles/nmeth.2276">basic quality-score-based filtering</a></li></ul></li></ul></li><li><p>聚类</p><p><code>classify-consensus-blast</code> and <code>classify-consensus-vsearch</code> are both alignment-based methods that find a consensus assignment across N top hits. </p><p>如果用机器学习进行分类的话，需要自行训练参考基因集。</p></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201041750055.png" alt="../../_images/clustering.png"></p><ul><li><p>ASV或OTU表</p><ul><li>降低测序错误</li><li>去除重复序列</li></ul></li><li><p>特征表：样品x观测值。几乎参与了所有的分析步骤。</p><ul><li>序列分类，门纲目科属种</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608679.png" alt="../../_images/taxonomy.png"></p><ul><li>$\alpha$多样性（样品内）和$\beta$多样性分析（样品间）</li><li>以系统发育相似度为基础的其他多样性分析，如16sRNA基因为基础的系统发育关系分析</li><li>差异丰度分析</li></ul></li><li><p>代表性序列</p></li></ul><h2 id="单末端数据分析案例"><a href="#单末端数据分析案例" class="headerlink" title="单末端数据分析案例"></a>单末端数据分析案例</h2><p>教程地址：<a href="https://docs.qiime2.org/2021.11/tutorials/atacama-soils/">https://docs.qiime2.org/2021.11/tutorials/atacama-soils/</a></p><ul><li>数据下载</li></ul><p>将barcode和sequences序列放在同一个文件夹下。</p><ul><li>import数据</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime tools import --<span class="hljs-built_in">type</span> EMPSingleEndSequences --input-path data --output-path step1_import/data.qza<br></code></pre></td></tr></tbody></table></figure><p>metadata不能和这两个序列文件放在一起，不然会报错。</p><ul><li>检查数据的类型等</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime tools peek step1_import/data.qza<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">UUID:        5ad2f6a5-cfff-4d1d-a9db-c22ae4763487<br>Type:        EMPSingleEndSequences<br>Data format: EMPSingleEndDirFmt<br></code></pre></td></tr></tbody></table></figure><ul><li>按样品拆分序列</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime demux emp-single --i-seqs step1_import/data.qza --m-barcodes-file sample-metadata.tsv --m-barcodes-column barcode-sequence --o-per-sample-sequences step2_demux/demux.qza --o-error-correction-details step2_demux/demux-details.qza<br></code></pre></td></tr></tbody></table></figure><ul><li>查看序列拆分情况</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime demux summarize --i-data step2_demux/demux.qza --o-visualization step2_demux/demux.qzv<br></code></pre></td></tr></tbody></table></figure><p>生成的文件需要浏览器才能打开。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608122.png" alt="image-20220104193100900" style="zoom:50%;"></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608660.png" alt="image-20220104195210030" style="zoom: 67%;"></p><ul><li><p>序列质控</p><ul><li><p>DADA2：两个参数</p><ul><li><code>--p-trunc-len n</code> 在位置n的地方截断序列</li><li><code>--p-trim-left m</code> 切除最开始的m个碱基</li></ul><p>从上面的图可以看出的是，起始序列的质量是很OK的，在120bp位置左右，序列的质量出现明显的下降。因此就不对起始序列进行裁剪，然后在120bp位置进行裁剪。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime dada2 denoise-single \<br>--i-demultiplexed-seqs step2_demux/demux.qza \<br>--p-trim-left 0 \<br>--p-trunc-len 120 \<br>--o-representative-sequences step3_dada2/rep-seqs-dada2.qza \<br>--o-table step3_dada2/table-dada2.qza \<br>--o-denoising-stats step3_dada2/stats-dada2.qza<br><br>qiime metadata tabulate \<br>--m-input-file step3_dada2/stats-dada2.qza \<br>--o-visualization step3_dada2/stats-dada2.qzv<br></code></pre></td></tr></tbody></table></figure><p>生成的<code>.qzv</code>文件直接拖入到QIIME2官网即可查看。</p></li><li><p>Deblur</p><ul><li><p>质量控制</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime quality-filter q-score --i-demux step2_demux/demux.qza --o-filtered-sequences step4_deblur/demux-filtered.qza --o-filter-stats step4_deblur/demux-filter-stats.qza<br></code></pre></td></tr></tbody></table></figure></li><li><p>正式程序</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">/data<span class="hljs-comment"># qiime deblur denoise-16S \</span><br>&gt; --i-demultiplexed-seqs step4_deblur/demux-filtered.qza \<br>&gt; --p-trim-length 120 \<br>&gt; --o-representative-sequences step4_deblur/rep-seqs-deblus.qza \<br>&gt; --o-table step4_deblur/table-deblur.qza \<br>&gt; --p-sample-stats \<br>&gt; --o-stats step4_deblur/deblur-stats.qza<br></code></pre></td></tr></tbody></table></figure></li><li><p>可视化结果</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime metadata tabulate \<br>--m-input-file step4_deblur/demux-filter-stats.qza \<br>--o-visualization step4_deblur/demux-filter-stats.qzv<br><br>qiime deblur  visualize-stats \<br>--i-deblur-stats step4_deblur/deblur-stats.qza \<br>--o-visualization step4_deblur/deblur-stats.qzv<br></code></pre></td></tr></tbody></table></figure></li></ul></li></ul></li><li><p>特征表和特征序列</p><ul><li><p>DADA2</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime feature-table summarize \<br>--i-table step3_dada2/table-dada2.qza \<br>--o-visualization step5_feature_counts_and_seqs/table_dada2.qzv \<br>--m-sample-metadata-file sample-metadata.tsv<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608958.png" alt="image-20220104203046481"></p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime feature-table tabulate-seqs \<br>--i-data step3_dada2/rep-seqs-dada2.qza \<br>--o-visualization step5_feature_counts_and_seqs/rep-seqs-dada2.qzv<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608994.png" alt="image-20220104203012726"></p></li></ul></li><li><p>进化树构建</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime phylogeny align-to-tree-mafft-fasttree \<br>--i-sequences step3_dada2/rep-seqs-dada2.qza \<br>--o-alignment step6_tree/aligned-rep-seqs.qza \<br>--o-masked-alignment step6_tree/masked-aligned-rep-seqs.qza \<br>--o-tree step6_tree/unrooted-tree.qza \<br>--o-rooted-tree step6_tree/rooted-tree.qza<br></code></pre></td></tr></tbody></table></figure></li><li><p>多样性</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime diversity core-metrics-phylogenetic --i-phylogeny step6_tree/rooted-tree.qza --i-table step3_dada2/table-dada2.qza --p-sampling-depth 1103 --m-metadata-file sample-metadata.tsv --output-dir step7_diversity<br></code></pre></td></tr></tbody></table></figure><p>参数1103选择的原因。</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Here we <span class="hljs-built_in">set</span> the --p-sampling-depth parameter to 1103. This value was chosen based on the number of sequences <span class="hljs-keyword">in</span> the L3S313 sample because it’s close to the number of sequences <span class="hljs-keyword">in</span> the next few samples that have higher sequence counts, and because it is considerably higher (relatively) than the number of sequences <span class="hljs-keyword">in</span> the samples that have fewer sequences.<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608065.png" alt="image-20220104205104251"></p></li><li><p>分组计算多样性</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime diversity alpha-group-significance \<br>  --i-alpha-diversity core-metrics-results/faith_pd_vector.qza \<br>  --m-metadata-file sample-metadata.tsv \<br>  --o-visualization core-metrics-results/faith-pd-group-significance.qzv<br><br>qiime diversity alpha-group-significance \<br>  --i-alpha-diversity core-metrics-results/evenness_vector.qza \<br>  --m-metadata-file sample-metadata.tsv \<br>  --o-visualization core-metrics-results/evenness-group-significance.qzv<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime diversity beta-group-significance \<br>  --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \<br>  --m-metadata-file sample-metadata.tsv \<br>  --m-metadata-column body-site \<br>  --o-visualization core-metrics-results/unweighted-unifrac-body-site-significance.qzv \<br>  --p-pairwise<br><br>qiime diversity beta-group-significance \<br>  --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \<br>  --m-metadata-file sample-metadata.tsv \<br>  --m-metadata-column subject \<br>  --o-visualization core-metrics-results/unweighted-unifrac-subject-group-significance.qzv \<br>  --p-pairwise<br></code></pre></td></tr></tbody></table></figure></li><li><p>PCoA</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime emperor plot \<br>  --i-pcoa core-metrics-results/unweighted_unifrac_pcoa_results.qza \<br>  --m-metadata-file sample-metadata.tsv \<br>  --p-custom-axes days-since-experiment-start \<br>  --o-visualization core-metrics-results/unweighted-unifrac-emperor-days-since-experiment-start.qzv<br><br>qiime emperor plot \<br>  --i-pcoa core-metrics-results/bray_curtis_pcoa_results.qza \<br>  --m-metadata-file sample-metadata.tsv \<br>  --p-custom-axes days-since-experiment-start \<br>  --o-visualization core-metrics-results/bray-curtis-emperor-days-since-experiment-start.qzv<br></code></pre></td></tr></tbody></table></figure></li><li><p>$\alpha$稀释曲线</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime diversity alpha-rarefaction \<br>  --i-table table.qza \<br>  --i-phylogeny rooted-tree.qza \<br>  --p-max-depth 4000 \<br>  --m-metadata-file sample-metadata.tsv \<br>  --o-visualization alpha-rarefaction.qzv<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201051608338.png" alt="image-20220104210144896" style="zoom: 50%;"></p></li><li><p>分类</p><ul><li><p>下载分类器</p></li><li><p>分类</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">qiime feature-classifier classify-sklearn --i-classifier classifier_db/gg-13-8-99-515-806-nb-classifier.qza --i-reads step3_dada2/rep-seqs-dada2.qza --o-classification step8_classify/taxonomy.qza<br><br>qiime metadata tabulate --m-input-file step8_classify/taxonomy.qza --o-visualization step8_classify/taxonomy.qzv<br></code></pre></td></tr></tbody></table></figure></li></ul></li></ul><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> QIIME2 </tag>
            
            <tag> 微生物组学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu服务器配置静态IP</title>
      <link href="/article/ubuntuip/"/>
      <url>/article/ubuntuip/</url>
      
        <content type="html"><![CDATA[<p>实验室的服务器需要配置静态IP，折腾了一天都没有搞定。今早上在去实验室的路上突然想到，“我没有重启网络管理器啊😂”</p><ul><li>配置IP</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">auto lo<br>iface lo inet loopback<br>auto eno1np0 <span class="hljs-comment"># 需要设定的网络端口</span><br>address x.x.x.x <span class="hljs-comment"># 固定IP地址</span><br>netmask x.x.x.x <span class="hljs-comment"># 掩码</span><br>gateway x.x.x.x <span class="hljs-comment"># 网关</span><br>dns-nameserver x.x.x.x <span class="hljs-comment"># DNS</span><br>dns-nameserver 8.8.8.8 <span class="hljs-comment"># DNS</span><br>dns-nameserver 9.9.9.x <span class="hljs-comment"># DNS</span><br></code></pre></td></tr></tbody></table></figure><ul><li>重启网络管理器</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo service network-manager restart<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> swxxx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell终端美化配置</title>
      <link href="/article/shellmeihua/"/>
      <url>/article/shellmeihua/</url>
      
        <content type="html"><![CDATA[<ul><li>安装官方版本</li></ul><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/ohmyzsh/</span>ohmyzsh<span class="hljs-regexp">/master/</span>tools/install.sh <br>sh install.sh<br><br>sudo apt install powerline fonts-powerline <span class="hljs-comment">#安装字体</span><br>sudo apt install zsh-syntax-highlighting <span class="hljs-comment"># 安装语法并启用高亮插件</span><br>echo <span class="hljs-string">"source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"</span> &gt;&gt; ~/.zshrc<br><br>vim ~ /.zshrc   <span class="hljs-comment"># 打开 .zshrc</span><br>ZSH_THEME=<span class="hljs-string">"crunch"</span>   <span class="hljs-comment"># 自定义主题</span><br><br><span class="hljs-comment"># 更多主题可以从 https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins 获取</span><br></code></pre></td></tr></tbody></table></figure><ul><li>安装<strong><a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a></strong></li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git ~/powerlevel10k<br><span class="hljs-built_in">echo</span> <span class="hljs-string">'source ~/powerlevel10k/powerlevel10k.zsh-theme'</span> &gt;&gt;~/.zshrc<br></code></pre></td></tr></tbody></table></figure><p>剩下的按照步骤选择自己喜欢的即可。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp内网穿透</title>
      <link href="/article/frps2net/"/>
      <url>/article/frps2net/</url>
      
        <content type="html"><![CDATA[<ul><li>项目地址：<a href="https://github.com/fatedier/frp/">https://github.com/fatedier/frp/</a></li><li>服务端配置</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">[common]<br><span class="hljs-comment"># frp监听的端口，默认是7000，可以改成其他的</span><br>bind_addr = 0.0.0.0<br>bind_port = 70000<br><span class="hljs-comment"># 授权码，请改成更复杂的</span><br>token = pl00000000000<br><br><span class="hljs-comment"># frp管理后台端口，请按自己需求更改</span><br>dashboard_port = 700000<br><span class="hljs-comment"># frp管理后台用户名和密码，请改成自己的</span><br>dashboard_user = pl0000000000000000000000<br>dashboard_pwd = p000000000000000000000000000<br>enable_prometheus = <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># frp日志配置</span><br>log_file = /var/log/frps.log<br>log_level = info<br>log_max_days = 30<br></code></pre></td></tr></tbody></table></figure><ul><li>启动服务</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> -p /etc/frp<br><span class="hljs-built_in">cp</span> frps.ini /etc/frp<br><span class="hljs-built_in">cp</span> frps /usr/bin<br><span class="hljs-built_in">cp</span> systemd/frps.service /usr/lib/systemd/system/<br>systemctl <span class="hljs-built_in">enable</span> frps<br>systemctl start frps<br></code></pre></td></tr></tbody></table></figure><ul><li>客户端配置</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 服务端配置</span><br>[common]<br>server_addr = 106.xx.xx.x<br>server_port = 70xx<br>token = plxxxxxxxxxxxxxxxxx<br><br>[ssh]<br><span class="hljs-built_in">type</span> = tcp<br>local_ip = 127.0.0.1<br>local_port = 22<br>remote_port = 6000<br></code></pre></td></tr></tbody></table></figure><ul><li>客户端运行</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">./frpc -c frpc.ini<br></code></pre></td></tr></tbody></table></figure><ul><li>服务器远程连接</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ssh -oPort=22 <span class="hljs-built_in">test</span>@x.x.x.x<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>featurecounts使用</title>
      <link href="/article/featurecounts/"/>
      <url>/article/featurecounts/</url>
      
        <content type="html"><![CDATA[<ul><li>下载</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://jaist.dl.sourceforge.net/project/subread/subread-2.0.2/subread-2.0.2-Linux-x86_64.tar.gz<br></code></pre></td></tr></tbody></table></figure><p>将bin目录加入到环境变量即可。</p><ul><li>使用案列</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me0dcount.featurecounts.txt bam/Me0d.sorted.bam<br>/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me2d_1count.featurecounts.txt bam/Me2d_1.sorted.bam<br>/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me2d_2count.featurecounts.txt bam/Me2d_2.sorted.bam<br>/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me2d_3count.featurecounts.txt bam/Me2d_3.sorted.bam<br>/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me6d_1count.featurecounts.txt bam/Me6d_1.sorted.bam<br>/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me6d_2count.featurecounts.txt bam/Me6d_2.sorted.bam<br>/srv/software/subread/bin/featureCounts -p -t exon -g transcript_id -a genome/new/genome.gtf -o counts/Me6d_3count.featurecounts.txt bam/Me6d_3.sorted.bam<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> featurecounts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学中的文件格式</title>
      <link href="/article/fileformat/"/>
      <url>/article/fileformat/</url>
      
        <content type="html"><![CDATA[<h2 id="bam文件"><a href="#bam文件" class="headerlink" title="bam文件"></a>bam文件</h2><ul><li>第一列：QNAME: 比对序列的名称。</li><li>第二列：FLAG: 比对的类型。paring、strand、 mate strand 等等。不同的数值代表不一样的比对类型。</li><li>第三列：RNAME：表示 read 比对的那条序列的序列名称。如果第三列是”*“，则说明这条 read 没有比对上。</li><li>第四列：POS。表示 read 比对到 RNAME 这条序列最左边的位置。</li><li>第五列：mapping 的质量值。</li><li>第六列：CIGAR。比对的具体情况。</li><li>第七列：MRNM。mate 序列所在参考序列的名称。mate 一般指大的片段序列。</li><li>第八列：MPOS。mate 序列在参考序列上的位置</li><li>第九列：ISIZE。文库插入片段长度。</li><li>第十列：reads sequence。</li><li>第十一列：reads 对应的 ASCII 码格式的碱基质量值</li><li>第十二列：可选的区域。</li></ul><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从bam文件中提取比对上与否的序列</title>
      <link href="/article/bamfileseq/"/>
      <url>/article/bamfileseq/</url>
      
        <content type="html"><![CDATA[<figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">samtools view -f <span class="hljs-number">4</span> file<span class="hljs-selector-class">.bam</span> &gt; unmapped<span class="hljs-selector-class">.sam</span><br>samtools view -<span class="hljs-selector-tag">b</span> -f <span class="hljs-number">4</span> file<span class="hljs-selector-class">.bam</span> &gt; unmapped<span class="hljs-selector-class">.bam</span><br>samtools view -<span class="hljs-selector-tag">b</span> -F <span class="hljs-number">4</span> file<span class="hljs-selector-class">.bam</span> &gt; mapped.bam<br></code></pre></td></tr></tbody></table></figure><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">samtools view x.bam | awk <span class="hljs-string">'$3=="*" {print "&gt;"$1"\n"$10}'</span> &gt;x_no_mapped_reads.txt<br></code></pre></td></tr></tbody></table></figure><figure class="highlight mipsasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">bamToFastq </span>-<span class="hljs-keyword">bam </span>file_unmapped.<span class="hljs-keyword">bam </span>-fq1 unmappedR1.fastq -fq2 unmappedR2.fastq<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DualRNA-Seq分析流程</title>
      <link href="/article/dualrnaseq/"/>
      <url>/article/dualrnaseq/</url>
      
        <content type="html"><![CDATA[<p>参考流程：<a href="https://nf-co.re/dualrnaseq/1.0.0/usage">https://nf-co.re/dualrnaseq/1.0.0/usage</a></p><blockquote><p>Ewels P A, Peltzer A, Fillinger S, et al. The nf-core framework for community-curated bioinformatics pipelines[J]. Nature biotechnology, 2020, 38(3): 276-278.</p></blockquote><ul><li>软件安装</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># Make sure that Java v8+ is installed:</span><br>java -version<br><br><span class="hljs-comment"># Install Nextflow</span><br>curl -fsSL get.nextflow.io | bash<br><br><span class="hljs-comment"># Add Nextflow binary to your user's PATH:</span><br><span class="hljs-built_in">mv</span> nextflow ~/bin/<br><span class="hljs-comment"># OR system-wide installation:</span><br><span class="hljs-comment"># sudo mv nextflow /usr/local/bin</span><br></code></pre></td></tr></tbody></table></figure><ul><li>conda安装</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda create -n dualrnaseq<br>conda activate dualrnaseq<br>conda install nextflow<br></code></pre></td></tr></tbody></table></figure><ul><li>下载pipeline</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">nextflow run nf-core/dualrnaseq -profile <span class="hljs-built_in">test</span>,&lt;docker/singularity/conda/institute&gt;<br></code></pre></td></tr></tbody></table></figure><ul><li>基本的运行方式</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">nextflow run nf-core/dualrnaseq/<span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.nf</span> -profile docker \<br><span class="hljs-attr">--input</span> <span class="hljs-string">"/folder_to_reads/*_R{1,2}.fq.gz"</span> \<br><span class="hljs-attr">--fasta_host</span> host<span class="hljs-selector-class">.fa</span> \<br><span class="hljs-attr">--fasta_pathogen</span> pathogen<span class="hljs-selector-class">.fa</span> \<br><span class="hljs-attr">--gff_host</span> host<span class="hljs-selector-class">.gff</span> \<br><span class="hljs-attr">--gff_pathogen</span> pathogen<span class="hljs-selector-class">.gff</span> \<br><span class="hljs-attr">--run_star</span> \<br><span class="hljs-attr">--outdir</span> results<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Julia学习笔记</title>
      <link href="/article/julianote/"/>
      <url>/article/julianote/</url>
      
        <content type="html"><![CDATA[<h2 id="软件安装等"><a href="#软件安装等" class="headerlink" title="软件安装等"></a>软件安装等</h2><ul><li>安装GLmakie报错</li></ul><figure class="highlight julia"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs julia">]add StatsFuns@<span class="hljs-number">0.9</span><span class="hljs-number">.3</span><br></code></pre></td></tr></tbody></table></figure><h2 id="数据导入导出"><a href="#数据导入导出" class="headerlink" title="数据导入导出"></a>数据导入导出</h2><p><a href="https://jupyterlab.web4xiang.top/files/Julia%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Youtube%E6%95%99%E7%A8%8B%EF%BC%9AJulia%20for%20Data%20Science/1-Data.ipynb?_xsrf=2%7Ca8e4283f%7Cb5b743f59108ab9f2ad94f61b9082481%7C1640744291">点击下载JupyterLab笔记</a></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> Julia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器安装JupyterLab</title>
      <link href="/article/jupyterlab/"/>
      <url>/article/jupyterlab/</url>
      
        <content type="html"><![CDATA[<ul><li>安装conda</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh<br><br>bash Miniconda2-latest-Linux-x86_64.sh<br></code></pre></td></tr></tbody></table></figure><ul><li>修改文件~/.condarc</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">auto_activate_base: <span class="hljs-literal">false</span><br>channels:<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/<br>  - defaults<br>show_channel_urls: <span class="hljs-literal">true</span><br>ssl_verify: <span class="hljs-literal">false</span><br>report_errors: <span class="hljs-literal">false</span><br></code></pre></td></tr></tbody></table></figure><ul><li>安装JupyterLab</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">conda install jupyterlab<br></code></pre></td></tr></tbody></table></figure><ul><li>生成配置文件</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">jupyter lab --generate-config<br></code></pre></td></tr></tbody></table></figure><ul><li>生成登录密码</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">jupyter lab password<br><span class="hljs-comment"># jupyter_server_config.json</span><br><br></code></pre></td></tr></tbody></table></figure><ul><li>在配置文件中找到哈希值。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">{<br>  <span class="hljs-string">"ServerApp"</span>: {<br>    <span class="hljs-string">"password"</span>: <span class="hljs-string">"sha1:****************91db429e"</span><br>  }<br>}<span class="hljs-comment"># </span><br></code></pre></td></tr></tbody></table></figure><p>有可能哈希值长下面这样，一样的可以用的。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-string">"password"</span><span class="hljs-operator">:</span> <span class="hljs-string">"argon2:$argon2id$v=19$m=10240,t=10,p=8$X/O4IXwqqvVVjPAJi</span><br></code></pre></td></tr></tbody></table></figure><ul><li>设置配置文件</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 编辑文件</span><br>vim ~/.jupyter/jupyter_lab_config.py<br><br>c.NotebookApp.ip = <span class="hljs-string">'*'</span> <span class="hljs-comment">#哪些IP可以访问</span><br>c.NotebookApp.allow_root = True <span class="hljs-comment"># root用户启动</span><br>c.NotebookApp.open_browser = False <span class="hljs-comment"># 不开启浏览器</span><br>c.NotebookApp.port = 9999 <span class="hljs-comment"># 端口</span><br>c.NotebookApp.password = u<span class="hljs-string">'sha1:****************b429e'</span> <span class="hljs-comment"># 上一步的哈希值</span><br>c.ContentsManager.root_dir = <span class="hljs-string">'/srv/jupyterlab/'</span>  <span class="hljs-comment"># 文件存放的位置</span><br>c.ServerApp.allow_remote_access = True<br></code></pre></td></tr></tbody></table></figure><ul><li>后台启动jupyterlab</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">nohup</span> jupyter lab --allow-root &gt; jupyter.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></tbody></table></figure><ul><li>设置开机自动启动Jupyterlab</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建文件/etc/systemd/system/jupyterlab.service，写入下面的内容</span><br>[Unit]<br>Description=Jupyter Notebook<br>After=network.target<br>[Service]<br>Type=simple<br>ExecStart=/home/lixiang/miniconda3/bin/jupyter-lab --config=/home/lixiang/.jupyter/jupyter_lab_config.py --no-browser<br>User=lixiang<br>Group=lixiang<br>WorkingDirectory=/home/lixiang/jupyterlab/<br>Restart=always<br>RestartSec=10<br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></tbody></table></figure><ul><li>安装Julia</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install julia<br></code></pre></td></tr></tbody></table></figure><ul><li>安装JupyterLab中的julia内核</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">using Pkg<br>Pkg.add(<span class="hljs-string">"IJulia"</span>)<br>Pkg.build(<span class="hljs-string">"IJulia"</span>)<br></code></pre></td></tr></tbody></table></figure><ul><li>Nginx端口转发</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># jupyterlab</span><br>server {<br>    server_name xxxx;<br>    listen 443 ssl;<br><br>    ssl_certificate /etc/nginx/sites-available/cert/xxxx_bundle.crt;  <span class="hljs-comment"># 腾讯云给出的证书(名字要改成自己的）</span><br>    ssl_certificate_key /etc/nginx/sites-available/cert/xxxx.key;   <span class="hljs-comment"># 腾讯云给出的私钥(名字要改成自己的）</span><br>    ssl_session_timeout 5m;<br>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; <br>    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; <br>    ssl_prefer_server_ciphers on;<br><br>    location / {<br>        proxy_pass http://localhost:9999;<br>        proxy_redirect http://localhost:9999/ <span class="hljs-variable">$scheme</span>://<span class="hljs-variable">$host</span>/;<br>        proxy_http_version 1.1;<br>        proxy_set_header Host <span class="hljs-variable">$host</span>;<br>        proxy_set_header X-Forwarded-Host <span class="hljs-variable">$host</span>;<br>        proxy_set_header X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>        proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        proxy_ssl_verify off;<br>        proxy_set_header Upgrade <span class="hljs-variable">$http_upgrade</span>;<br>        proxy_set_header Connection <span class="hljs-string">"upgrade"</span>;<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><ul><li>安装R内核</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'repr'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'IRdisplay'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'evaluate'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'crayon'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'pbdZMQ'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'devtools'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'uuid'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'digest'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">'IRkernel'</span><span class="hljs-punctuation">)</span><br><br>IRkernel<span class="hljs-operator">::</span>installspec<span class="hljs-punctuation">(</span>user <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><ul><li>升级Nodejs</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -<br><br>sudo apt-get install -y nodejs<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> JupyterLab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo添加RSS订阅按钮</title>
      <link href="/article/hexo-rss/"/>
      <url>/article/hexo-rss/</url>
      
        <content type="html"><![CDATA[<ul><li>下载插件</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install --save hexo-generator-feed<br></code></pre></td></tr></tbody></table></figure><ul><li>配置Hexo的 <code>{% label _config.yml %}</code> 文件</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Extensions</span><br>plugins:<br>  hexo-generator-feed<br><span class="hljs-meta prompt_">#</span><span class="language-bash">Feed Atom</span><br>feed:<br>  type: atom<br>  path: atom.xml<br>  limit: 20<br></code></pre></td></tr></tbody></table></figure><ul><li>hexo根目录下配置<code>{% label _config.yml %}</code></li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># Extensions</span><br>plugins:<br>  hexo-generator-feed<br></code></pre></td></tr></tbody></table></figure><ul><li>主题目录下配置文件<code>{% label _config.yml %}</code>添加</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">RSS订阅</span><br>rss: /atom.xml<br></code></pre></td></tr></tbody></table></figure><ul><li>主题目录下配置文件<code>{% label _config.yml %}</code>添加这样一行</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112261221448.png" alt="image-20211226122118392"></p><ul><li>生成部署即可</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo g -d<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用 </tag>
            
            <tag> hexo </tag>
            
            <tag> RSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建中遇到的问题及解决方法</title>
      <link href="/article/hexoall/"/>
      <url>/article/hexoall/</url>
      
        <content type="html"><![CDATA[<ul><li>公式渲染问题</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-kramed --save<br></code></pre></td></tr></tbody></table></figure><p>找到<code>node_modules\kramed\lib\rules\inline.js</code>这个文件，修改对应位置：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">//  escape: /^\\([\\`*{}\[\]()<span class="hljs-comment">#$+\-.!_&gt;])/,</span><br>  escape: /^\\([`*\[\]()<span class="hljs-comment">#$+\-.!_&gt;])/</span><br>  <br>//  em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,<br>  em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/<br></code></pre></td></tr></tbody></table></figure><p>修改配置文件：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># MathJax Support</span><br>mathjax:<br>  <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>  per_page: <span class="hljs-literal">true</span><br></code></pre></td></tr></tbody></table></figure><ul><li>一级标题无法点击</li></ul><p>在经过一天的排查后，发现是我的公式里面的<code>{% label \frac purple %}</code>导致的。不知道为啥，调了几次就OK了。</p><p>排除到最后，我猜测是这两个文件的问题：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112211133510.png" alt="image-20211221113335459"></p><p>我也不敢<code>{% label hexo-clean purple %}</code>了。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绘制圆堆积图</title>
      <link href="/article/yuanduijitu/"/>
      <url>/article/yuanduijitu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>ggraph<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>igraph<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>viridis<span class="hljs-punctuation">)</span><br><br>df.abun <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  df <span class="hljs-operator">&lt;-</span> readxl<span class="hljs-operator">::</span>read_excel<span class="hljs-punctuation">(</span><span class="hljs-string">"test.xlsx"</span><span class="hljs-punctuation">,</span> sheet <span class="hljs-operator">=</span> i<span class="hljs-punctuation">)</span><br><br>  <span class="hljs-comment"># 构造from to矩阵</span><br>  df.ft <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br>  df.1 <span class="hljs-operator">&lt;-</span> df <span class="hljs-operator">%&gt;%</span> dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-string">"K"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"P"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"C"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"O"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"F"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"G"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>k <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>df.1<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    df.temp <span class="hljs-operator">&lt;-</span> df.1<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>k<span class="hljs-punctuation">,</span> k <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>    colnames<span class="hljs-punctuation">(</span>df.temp<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"from"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"to"</span><span class="hljs-punctuation">)</span><br>    df.ft <span class="hljs-operator">&lt;-</span> rbind<span class="hljs-punctuation">(</span>df.ft<span class="hljs-punctuation">,</span> df.temp<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><br>  df.ft <span class="hljs-operator">&lt;-</span> df.ft <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><br>      from <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span>from<span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> nchar<span class="hljs-punctuation">(</span>from<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      to <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span>to<span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> nchar<span class="hljs-punctuation">(</span>to<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>from <span class="hljs-operator">!=</span> <span class="hljs-string">""</span> <span class="hljs-operator">&amp;</span> to <span class="hljs-operator">!=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><br><br><br>  df.size <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>j <span class="hljs-keyword">in</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"K"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"P"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"C"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"O"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"F"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"G"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    df.1 <span class="hljs-operator">&lt;-</span> df <span class="hljs-operator">%&gt;%</span> dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>average_abundance<span class="hljs-punctuation">,</span> `j`<span class="hljs-punctuation">)</span><br>    colnames<span class="hljs-punctuation">(</span>df.1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"cat"</span><br>    df.1 <span class="hljs-operator">&lt;-</span> df.1 <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>cat<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>average_abundance<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>      dplyr<span class="hljs-operator">::</span>distinct_all<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>    colnames<span class="hljs-punctuation">(</span>df.1<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"name"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"size"</span><span class="hljs-punctuation">)</span><br>    df.size <span class="hljs-operator">&lt;-</span> rbind<span class="hljs-punctuation">(</span>df.size<span class="hljs-punctuation">,</span> df.1<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><br><br>  df.size <span class="hljs-operator">&lt;-</span> df.size <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>name <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> nchar<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>name <span class="hljs-operator">!=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>group_by<span class="hljs-punctuation">(</span>name<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>n <span class="hljs-operator">=</span> n<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>n <span class="hljs-operator">&lt;=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> ifelse<span class="hljs-punctuation">(</span>i <span class="hljs-operator">==</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"接种后"</span><span class="hljs-punctuation">,</span><br>      ifelse<span class="hljs-punctuation">(</span>i <span class="hljs-operator">==</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Air"</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  df.abun <span class="hljs-operator">&lt;-</span> rbind<span class="hljs-punctuation">(</span>df.abun<span class="hljs-punctuation">,</span> df.size<span class="hljs-punctuation">)</span><br><br>  df.ft <span class="hljs-operator">&lt;-</span> df.ft <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>from <span class="hljs-operator">%in%</span> df.size<span class="hljs-operator">$</span>name<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>to <span class="hljs-operator">%in%</span> df.size<span class="hljs-operator">$</span>name<span class="hljs-punctuation">)</span><br><br>  mygraph <span class="hljs-operator">&lt;-</span> graph_from_data_frame<span class="hljs-punctuation">(</span>df.ft<span class="hljs-punctuation">,</span> vertices <span class="hljs-operator">=</span> df.size<span class="hljs-punctuation">)</span><br><br>  group <span class="hljs-operator">&lt;-</span> ifelse<span class="hljs-punctuation">(</span>i <span class="hljs-operator">==</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"接种后"</span><span class="hljs-punctuation">,</span><br>    ifelse<span class="hljs-punctuation">(</span>i <span class="hljs-operator">==</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CK"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Air"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br>  set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>  ggraph<span class="hljs-punctuation">(</span>mygraph<span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">"circlepack"</span><span class="hljs-punctuation">,</span> weight <span class="hljs-operator">=</span> size<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_node_circle<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> depth<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_node_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> name<span class="hljs-punctuation">,</span> filter <span class="hljs-operator">=</span> leaf<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> depth<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> size<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme_void<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    coord_fixed<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"FALSE"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_viridis<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> p1<br><br>  export<span class="hljs-operator">::</span>graph2ppt<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span><br>    file <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> <span class="hljs-string">"(有标签).pptx"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    width <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">10</span><br>  <span class="hljs-punctuation">)</span><br><br>  set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>  ggraph<span class="hljs-punctuation">(</span>mygraph<span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">"circlepack"</span><span class="hljs-punctuation">,</span> weight <span class="hljs-operator">=</span> size<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_node_circle<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> depth<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme_void<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    coord_fixed<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"FALSE"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_viridis<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> p2<br>  export<span class="hljs-operator">::</span>graph2ppt<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span><br>    file <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> <span class="hljs-string">"(无标签).pptx"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    width <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">10</span><br>  <span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br>df.size <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  xlsx<span class="hljs-operator">::</span>write.xlsx<span class="hljs-punctuation">(</span><br>    file <span class="hljs-operator">=</span> <span class="hljs-string">"丰度数据.xlsx"</span><span class="hljs-punctuation">,</span><br>    row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><br>  <span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112201947466.png" alt=""></p><p><a href="test.xlsx">点击下载示例数据</a></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nature系列文章图表配色</title>
      <link href="/article/naturecolor/"/>
      <url>/article/naturecolor/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191556475.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191558925.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191558736.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191558957.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191558058.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191558205.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191558134.png" alt=""></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尿囊素在植物响应非生物胁迫中的作用</title>
      <link href="/article/allantoin/"/>
      <url>/article/allantoin/</url>
      
        <content type="html"><![CDATA[<p><a href="1.pdf">点击下载文献PDF版本</a></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>尿囊素是植物氮素移动相关的嘌呤分解代谢通路中的中间产物，其广泛地存在于植物中，是植物中重要的氮素形态。近些年的研究表明尿囊素能够有效增强植物对干旱胁迫、盐胁迫、冷害胁迫、重金属胁迫及辐射胁迫等非生物胁迫的耐受性。尿囊素含量的积累会诱导ABA生物合成相关基因的表达，从而激活下游胁迫相关基因的表达。当尿囊素作为信号物质进行外源施用时，会导致ABA和JA通路的串扰，从而增强植物对胁迫的耐受性。最近的研究发现尿囊素可以作为亲缘识别的信号物质，这一研究结果再次说明尿囊素是植物中重要的信号物质。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112182130639.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112182142660.png" alt=""></p><h1 id="前言部分"><a href="#前言部分" class="headerlink" title="前言部分"></a>前言部分</h1><ul><li><p>尿囊素在植物的发现可以追溯到100多年前，但是在80多年后才发现其在尿囊素转运中的重要作用。</p></li><li><p>尿囊素的化学名称1 - (  2,5 -二氧代咪唑啉 -4 -基 )尿素。</p></li><li>尿囊素及其直接水解形式的尿囊酸盐统称为脲化物。</li><li>在豆科植物中，脲化物占了90%，非豆科植物中占了15%。</li></ul><h1 id="尿囊素代谢和转运"><a href="#尿囊素代谢和转运" class="headerlink" title="尿囊素代谢和转运"></a>尿囊素代谢和转运</h1><p>植物中脲代谢包含了尿囊素和尿酸的生物合成。植物中尿囊素的代谢是以嘌呤核苷酸作为前体物质，代谢的细胞途径有两个$^{[1]}$：</p><ul><li>从头合成：主要存在于豆科植物中。豆科植物中存在大量的氮化物，如甘氨酸、谷氨酰胺、天冬氨酸和四氢叶酸。</li><li>片段化合成：非豆科植物中的含氮化合物较少，通常是以核苷酸片段进行合成。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112182214870.png" alt=""></p><p>在黄嘌呤脱氢酶（xanthine dehydrogenase）存在时，黄嘌呤在细胞质内被转换成尿酸。接下来尿酸会被尿酸氧化酶（urate oxidase）氧化成不稳定的过氧化物酶体—羟基异酸酯（HIU）。在HIU水解酶的作用下，HIU被水解成L-2 - Oxo-4 -羟基-4 -羧基-5 -脲基咪唑啉（OHCU）。OHCU同样是不问稳定的产物，会被立即水解成稳定的产物S-尿囊素。HIU水解酶和OHCU脱羧酶作为单一的双功能酶发挥功能，它们被称为尿囊素合成酶。但通过尿酸氧化酶没有完全氧化尿酸的时候生成的产物是R-尿囊素，但是在植物中发挥生物学功能的主要形态还是S-尿囊素。S-尿囊素会被尿囊酸酶转化成尿囊酸（allantoate），尿囊素存储在内质网中。尿囊素合成酶作用位点上的氨基酸残基异亮氨酸、丙氨酸、组氨酸、谷氨酸和精氨酸在底物水解和脱羧生成S-尿囊素的过程中扮演着重要的作用。但是尿囊素是否存储在过氧化物酶体或者是内质网中，还需要进一步证实。此外，驱动尿囊素转换成尿囊酸的因素还有待探究。</p><h1 id="非生物胁迫中尿囊素的积累与调控"><a href="#非生物胁迫中尿囊素的积累与调控" class="headerlink" title="非生物胁迫中尿囊素的积累与调控"></a>非生物胁迫中尿囊素的积累与调控</h1><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191422820.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191422868.png" alt="6"></p><p>尿囊素在氮代谢和转运中功能研究已有数十年。近些年的研究发现植物在面临非生物胁迫时，其体内尿囊素的含量会升高。在拟南芥、黑麦、大麦、豌豆和大豆中都有这种现象。其中研究较多的是豆科植物环境发生变化时尿囊素的积累情况。随着嘌呤代谢通路中相关基因突变体的获得 与利用，尿囊素在拟南芥中的研究也有较大的进展。利用这些突变体开展的反向遗传学的研究发现在盐胁迫、干旱胁迫、重金属胁迫及辐射胁迫条件下，尿囊素积累量更多的植株的耐受性更好。</p><h2 id="干旱胁迫"><a href="#干旱胁迫" class="headerlink" title="干旱胁迫"></a>干旱胁迫</h2><p>菜豆在干旱胁迫下其体内尿囊素的含量会升高。尿酸氧化酶活性越高则尿囊素的含量越高。在豆科植物中，对干旱胁迫敏感的植株体内的脲化物浓度更高。耐干旱的水稻品种叶子内尿囊素的含量也更高。代谢组学研究也发现在缺水状态下，尿囊素的含量比其他代代谢物的氨含量更高。拟南芥如果将黄嘌呤突变以后，ROS解毒降低。外援施用尿囊素前体物质尿酸盐能够增强黄嘌呤突变体的存活率。因此，尿囊素饥饿或者浓度降低会降低植株对干旱的耐受性。</p><h2 id="盐胁迫"><a href="#盐胁迫" class="headerlink" title="盐胁迫"></a>盐胁迫</h2><p>在水稻中，尿囊素含量升高是植株对盐胁迫耐受的标志。在对盐胁迫敏感的水稻品种IR64中，ABA处理后，尿囊素的含量升高。盐胁迫和甘露醇胁迫拟南芥4天后，尿囊素的含量升高。这表明尿囊素参与了植株对盐胁迫的长期耐受性。水稻盐胁迫处理1小时内尿囊素含量会升高1.25倍，在4天时含量依然很高。苗期1天的拟南芥幼苗施加0.1mM的尿囊素能够增强拟南芥植株对盐胁迫的耐受性。</p><h1 id="尿囊素与其他胁迫信号通路的串扰"><a href="#尿囊素与其他胁迫信号通路的串扰" class="headerlink" title="尿囊素与其他胁迫信号通路的串扰"></a>尿囊素与其他胁迫信号通路的串扰</h1><ul><li>尿囊素能够诱导ABA的生物合成；</li><li>尿囊素能够刺激JA相关的响应。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112191420381.png" alt=""></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>[1] Schubert K R. Products of biological nitrogen fixation in higher plants: synthesis, transport, and metabolism[J]. Annual Review of Plant Physiology, 1986, 37(1): 539-574.</p></blockquote><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
            <tag> 尿囊素 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从gff3文件提取基因长度</title>
      <link href="/article/gff3genelength/"/>
      <url>/article/gff3genelength/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>GenomicFeatures<span class="hljs-punctuation">)</span><br>txdb <span class="hljs-operator">&lt;-</span> makeTxDbFromGFF<span class="hljs-punctuation">(</span><span class="hljs-string">"../genome/me.gff3"</span><span class="hljs-punctuation">,</span>format<span class="hljs-operator">=</span><span class="hljs-string">"auto"</span><span class="hljs-punctuation">)</span><br>exons_gene <span class="hljs-operator">&lt;-</span> exonsBy<span class="hljs-punctuation">(</span>txdb<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">"gene"</span><span class="hljs-punctuation">)</span><br>exons_gene_lens <span class="hljs-operator">&lt;-</span> lapply<span class="hljs-punctuation">(</span>exons_gene<span class="hljs-punctuation">,</span><span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>width<span class="hljs-punctuation">(</span>reduce<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>t<span class="hljs-punctuation">(</span>as.data.frame<span class="hljs-punctuation">(</span>exons_gene_lens<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>write.table<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">,</span><span class="hljs-string">'../genome/gene_length.txt'</span><span class="hljs-punctuation">,</span>col.names<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span>row.names<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">quote</span><span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span>sep<span class="hljs-operator">=</span><span class="hljs-string">'\t'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用gffread从基因组提取序列</title>
      <link href="/article/gffread/"/>
      <url>/article/gffread/</url>
      
        <content type="html"><![CDATA[<p>软件地址：<a href="https://github.com/gpertea/gffread">https://github.com/gpertea/gffread</a></p><ul><li>提取转录本序列</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">gffread YLG<span class="hljs-selector-class">.gff3</span> -g YLG<span class="hljs-selector-class">.sort</span><span class="hljs-selector-class">.fasta</span> -w ylg<span class="hljs-selector-class">.trans</span>.fa<br></code></pre></td></tr></tbody></table></figure><ul><li>提取CDS序列</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">gffread YLG<span class="hljs-selector-class">.gff3</span> -g YLG<span class="hljs-selector-class">.sort</span><span class="hljs-selector-class">.fasta</span> -x ylg<span class="hljs-selector-class">.cds</span>.fa<br></code></pre></td></tr></tbody></table></figure><ul><li>提取蛋白序列</li></ul><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">gffread YLG<span class="hljs-selector-class">.gff3</span> -g YLG<span class="hljs-selector-class">.sort</span><span class="hljs-selector-class">.fasta</span> -y ylg<span class="hljs-selector-class">.protein</span>.fa<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 基因组 </tag>
            
            <tag> GFF3 </tag>
            
            <tag> gffread </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学学习笔记-Willy出版社第四版</title>
      <link href="/article/bioinf4e/"/>
      <url>/article/bioinf4e/</url>
      
        <content type="html"><![CDATA[<h1 id="第九章-Molecular-Evolution-and-Phylogenetic-Analysis"><a href="#第九章-Molecular-Evolution-and-Phylogenetic-Analysis" class="headerlink" title="第九章-Molecular Evolution and Phylogenetic Analysis"></a>第九章-Molecular Evolution and Phylogenetic Analysis</h1><p>在挑选序列构建系统发育树的时候不能只看序列的名字，更应该看序列之间的相似度。最常用的方法就是BLAST。</p><p>怎么看一个系统发育树：</p><p>在a中，分支长度是不重要的，支长并不代表分化程度，展示的仅仅只是分支顺序。但是在b图中分支的长度就代表了分化程度。1+2+3表示的是Fly和Mouse之间的分化程度，1+2+4表示的是Fly和Human之间的分化程度。在b图中，只有水平的分支长度才有意义，垂直的分支只是为了好看。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A64%E7%89%88%E6%9C%AC-9-1.png" alt=""></p><p>区分两个概念：</p><ul><li>序列一致性：完全对的上的序列；</li><li>序列相似性：在序列一致性的基础上加上在化学性质上具有相似性的序列。同系物就是具有相似序列的两个或多个序列。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/9-2.png" alt=""></p><p>出现基因加倍的情况的时候，选择过程会对同一个基因的不同拷贝施加不同的选择压，这样会导致同一个基因不同的拷贝出现不同的功能。</p><p>与基因加倍相关的序列叫做旁系同源（paralogs）。</p><p>什么叫水平基因转移呢？一个物种从另外一个物种中获得一个基因的过程。这时候不同的拷贝就叫xenologs。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112111654810.png" alt=""></p><p>没有比对上的区域叫做系统发育噪音，应该剔除。大部分都比对上的区域才会含有更多的系统发育信号。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112111707155.png" alt=""></p><p>几种模型：</p><ul><li>替代（取代）模型：估计一个序列变成另外一个序列的可能性；同时也序列中不同位点全局变化的相对速率。</li></ul><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git同时管理GitHub与Gitee</title>
      <link href="/article/githubee/"/>
      <url>/article/githubee/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">1. 查看远程仓库地址<br>git remote -v<br><br>2. 重命名远程仓库<br>git remote rename origin github<br><br>3. 添加新的远程仓库<br>git remote add gitee https://gitee.com/gozhuyinglong/blog-demos.git<br><br>4. 多个远程仓库推拉<br>git push github main<br>git pull github main<br>git push gitee main<br>git pull gitee main<br><br>5. 将本地分支与远程分支进行关联<br>git push --set-upstream gitee main<br><br>6. 直接推送不指定分支<br>git push github<br>git pull github<br>git push gitee<br>git pull gitee<br><br>7. 移除远程仓库<br>git remote remove gitee<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fasta文件加标签</title>
      <link href="/article/fastalab/"/>
      <url>/article/fastalab/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>files = os.listdir(<span class="hljs-string">"G:\\33Pan_download\\下载数据\\unzip\\"</span>)<br><br>all_genome = <span class="hljs-built_in">open</span>(<span class="hljs-string">"G:\\33Pan_download\\下载数据\\all_genome.fa"</span>,<span class="hljs-string">"w"</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> files:<br>    <span class="hljs-built_in">print</span>(i)<br>    file_genome = <span class="hljs-string">"G:\\33Pan_download\\下载数据\\unzip\\"</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">"\\"</span> + <span class="hljs-built_in">str</span>(i) +  <span class="hljs-string">".genome"</span><br>    new_genome = file_genome + <span class="hljs-string">".fa"</span><br>    f_rewrite = <span class="hljs-built_in">open</span>(new_genome, <span class="hljs-string">"w"</span>)<br>    f = <span class="hljs-built_in">open</span>(file_genome,<span class="hljs-string">"r"</span>)<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines():<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>] == <span class="hljs-string">"&gt;"</span>:<br>            line_2 = line.replace(<span class="hljs-string">"\n"</span>,<span class="hljs-string">""</span>) + <span class="hljs-string">"_"</span> + i + <span class="hljs-string">"\n"</span><br>            <span class="hljs-comment">#print(line_2)</span><br>            f_rewrite.write(line_2)<br>            all_genome.write(line_2)<br>        <span class="hljs-keyword">else</span>:<br>            f_rewrite.write(line)<br>            all_genome.write(line)<br>        <br>        <span class="hljs-comment">#print(line.strip()) # 把末尾的'\n'删掉</span><br>    f_rewrite.close()<br>all_genome.close()<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> Python </tag>
            
            <tag> fasta文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zotero删除重复文献条目</title>
      <link href="/article/zoteroqc/"/>
      <url>/article/zoteroqc/</url>
      
        <content type="html"><![CDATA[<p>在左侧的<code>{% label 重复条目 purple %}</code>里面选中所有重复的文献条目，以此点击Tools-Developer-Run JavaScript，复制粘贴下方的代码运行：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> <span class="hljs-title class_">DupPane</span> = <span class="hljs-title class_">Zotero</span>.<span class="hljs-title function_">getZoteroPanes</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1000</span>; i++) {<br><span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function"><span class="hljs-params">r</span> =&gt;</span> <span class="hljs-built_in">setTimeout</span>(r, <span class="hljs-number">1000</span>));<br><span class="hljs-title class_">DupPane</span>[<span class="hljs-number">0</span>].<span class="hljs-title function_">mergeSelectedItems</span>();<br><span class="hljs-title class_">Zotero</span>_Duplicates_Pane.<span class="hljs-title function_">merge</span>();<br>}<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码子表</title>
      <link href="/article/fig4mmz/"/>
      <url>/article/fig4mmz/</url>
      
        <content type="html"><![CDATA[<hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 分子生物学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 分子生物学 </tag>
            
            <tag> 遗传学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL安装运行docker</title>
      <link href="/article/wsl4docker/"/>
      <url>/article/wsl4docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker的安装"><a href="#Docker的安装" class="headerlink" title="Docker的安装"></a><code>Docker</code>的安装</h1><p>参考的安装教程：<a href="https://yeasy.gitbook.io/docker_practice/install/ubuntu">Docker-从入门到实践</a>。关键的代码如下：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -fsSL test.docker.com -o get-docker.sh<br>curl -fsSL get.docker.com -o get-docker.sh<br>sudo sh get-docker.sh --mirror Aliyun<br>sudo sh get-docker.sh --mirror AzureChinaCloud<br></code></pre></td></tr></tbody></table></figure><h1 id="Docker的使用"><a href="#Docker的使用" class="headerlink" title="Docker的使用"></a><code>Docker</code>的使用</h1><p><code>Docker</code>默认是需要<code>root</code>用户才能使用的，在<code>Windows上</code>我习惯于进入<code>Powershell</code>后执行下面的命令启动<code>Docker</code>：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl --shutdown # 先关闭wsl<br>wsl # 启动WSL<br>sudo su # 进入root<br>sudo service docker start # 启动Docker<br>su xiang # 切换会用户（非root权限）<br></code></pre></td></tr></tbody></table></figure><h1 id="如何从WSL1切换到WSL2"><a href="#如何从WSL1切换到WSL2" class="headerlink" title="如何从WSL1切换到WSL2"></a>如何从<code>WSL1</code>切换到<code>WSL2</code></h1><p>我在<code>Windows</code>上使用<code>Docker</code>遇到的一个很奇怪的问题是，我之前的版本是<code>WSL1</code>,<code>Docker</code>无论如何都无法使用，搜索半天也没有找到解决方法，索性将<code>WSL1</code>升级成<code>WSL2</code>，没想到问题就那样解决了。参考教程：<a href="https://zhuanlan.zhihu.com/p/356397851">知乎：WSL1 升级为WSL2</a>。下面是升级的过程：</p><ul><li><p>下载对应的内核更新包：<a href="https://link.zhihu.com/?target=https%3A//wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">点击下载</a></p></li><li><p><code>CMD</code>中管理员身份运行代码：</p></li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart<br></code></pre></td></tr></tbody></table></figure><ul><li>设置版本</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl --set-version Ubuntu-20.04 2<br></code></pre></td></tr></tbody></table></figure><p>  其中的<code>Ubuntu-20.04</code>是通过代码<code>wsl -l -v</code>查看到的。</p><p>  然后再次重启<code>WSL</code>即可。</p><h1 id="下载Docker镜像"><a href="#下载Docker镜像" class="headerlink" title="下载Docker镜像"></a>下载<code>Docker</code>镜像</h1><p>在<a href="https://hub.docker.com/">Docker Hub</a>中检索下载需要的镜像。</p><h1 id="Docker的使用-1"><a href="#Docker的使用-1" class="headerlink" title="Docker的使用"></a><code>Docker</code>的使用</h1><p>进入<code>WSL</code>后运行下方代码运行<code>Docker</code>：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo service --status-all <br>sudo service docker start<br>sudo service docker start<br>docker run -v /mnt/:/work -it omicsclass/rnaseq<br></code></pre></td></tr></tbody></table></figure><p>其中的<code>work</code>是不一定的，需要看镜像给的路径是啥。</p><h1 id="如何创建自己的镜像"><a href="#如何创建自己的镜像" class="headerlink" title="如何创建自己的镜像"></a>如何创建自己的镜像</h1><p>先从<a href="https://hub.docker.com/">Docker Hub</a>下载<code>Ubuntu</code>的官方镜像，然后在镜像中安装需要的软件。<br>PS：如何加速<code>pip</code>的下载：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install django -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></tbody></table></figure><p>加速的<code>R</code>包的下载安装：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))<br>options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")<br></code></pre></td></tr></tbody></table></figure><p>在安装完成需要的软件后，先运行<code>exit</code>退出<code>Docker</code>，然后运行下面的代码生成新的镜像：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker commit -m " add some softwares for RNA-Seq" -a "xiangli" 21bfa810c811 lixiang117423/rnaseq:v1<br></code></pre></td></tr></tbody></table></figure><p>然后登陆自己的<code>Docker</code>，登录以后把新的镜像推送到<code>Docker Hub</code>即可：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker push lixiang117423/rnaseq:v1<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件安装 </tag>
            
            <tag> WSL </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiny4qPCR-qPCR数据处理一站式解决方案</title>
      <link href="/article/qpcrall1/"/>
      <url>/article/qpcrall1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/qPCR%E6%89%A9%E5%A2%9E%E6%9B%B2%E7%BA%BF.jpg" alt="qPCR扩增曲线"></p><h2 id="为什么做shiny4qPCR"><a href="#为什么做shiny4qPCR" class="headerlink" title="为什么做shiny4qPCR"></a>为什么做shiny4qPCR</h2><p>qPCR是现代分子生物学基础，其基本过程涉及引物设计、RNA（DNA）提取、qPCR实验、qPCR数据处理等。从研究生阶段到现在的博士阶段，我需要做大量的qPCR实验，每次数据处理都比较麻烦，虽然已经基本实现流程化了，但还是比较麻烦，因此，以RStudio的shiny-server为基础，写了个shiny app，专门用于处理qPCR相关数据。 注：目前软件源代码尚未开源，因为其中某个算法的部分代码来自其他文献，正在和作者沟通中。</p><p>shiny4qPCR 地址：<a href="https://shiny.web4xiang.top/shiny4qPCR/">https://shiny.web4xiang.top/shiny4qPCR/</a></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091245009.png" alt=""></p><h2 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h2><p>shiny4qPCR包含如下几大功能模块：</p><ul><li>引物设计</li><li>反转录计算</li><li>相对标曲计算</li><li>表达量计算<ul><li>相对标曲法</li><li>2$^{-\delta\delta C_t}$法</li><li>RqPCR法</li></ul></li><li>差异表达统计</li></ul><p>下面针对每个模块进行详细使用说明。</p><h2 id="引物设计"><a href="#引物设计" class="headerlink" title="引物设计"></a>引物设计</h2><p>shiny4qPCR内置的引物设计程序是Primer3$^{[1]}$。目前该软件的引用次数已超过7000次，已经有数十个引物设计软件以该软件为基础$^{[1]}$。该软件在最新版中已经对引物的二级结构、发卡结构等进行优化，而且其还有命令行版本，方便内嵌在shiny server中，因此我们也选择利用<code>{% label Primer3 purple %}</code>作为我们引物设计的底层软件。</p><p>参数设置：</p><ul><li>数据上传<ul><li>单条序列：直接复制粘贴序列即可；</li><li>多条序列：将序列存在一个<code>{% label fasta purple %}</code>格式的文件中，上传该文件。</li></ul></li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091248658.png" alt=""></p><ul><li>引物最佳长度：默认是18</li><li>引物长度范围：默认18-22</li><li>引物产物大小范围：默认75-150</li></ul><p>参数设置完成后点击<code>{% label Submit purple %}</code>即可，点击<code>{% label 下载表格 purple %}</code>得到的就是输入的序列的所有引物的Excel表。引物适用与否则需要利用PCR进行进一步验证。</p><h2 id="反转录计算"><a href="#反转录计算" class="headerlink" title="反转录计算"></a>反转录计算</h2><p>这个功能的应用面比较狭窄，因为是以全式金的反转录试剂盒的说明书（下图）为基础的，目前这个功能只适用于这种试剂盒做反转录的计算。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249258.png" alt=""></p><p>目前支持的输入数据为NanoDrop 2000的输出数据（下图），我们建议对每个样品至少进行3次平行浓度测定，这样可以保证浓度的稳定性和准确性。如果样品多次测量的浓度差异较大，建议重新涡旋离心后进行测量。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249502.png" alt=""></p><hr><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091250767.png" alt=""></p><p>软件当前没有自动删除异常值的功能，因此在上传数据之前需要将每个样品中不需要的值删除（一整行）。</p><h2 id="标曲计算"><a href="#标曲计算" class="headerlink" title="标曲计算"></a>标曲计算</h2><p>2$^{-\delta \delta C_T}$法是最常用的计算qPCR基因表达量的方法，但是这个方法的一大前提条件是目标基因引物和内参基因引物的扩增效率必须要一致（至少基本一致）。在实际实验过程中是很难达到扩增效率一致的，尤其是当需要检测大量基因时。因此，相对定量就更加适合。该方法不用考虑引物的扩增效率是否一致，每个引物作为独立的扩增对象，对其建立相应的Cq—相对浓度回归曲线，根据曲线去计算某个处理下该基因的相对含量，再进行后续的统计分析。</p><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>需要准备三个表格（下图）：</p><ul><li>qPCR下机数据：最重要的是<code>{%  label Position purple %}</code>和<code>{%  label Cq purple %}</code>这两列，软件会自动识别提取这两列的内容进行后续的计算。</li><li>基因布局图：简单来说就是96孔板的每个孔里面分别是那个基因，这个需要严格区分大小写，因为后续进行表达量计算的时候是根据基因进行匹配的。</li><li>浓度布局图：简单来说就是96孔板的每个孔里面底物的浓度（相对浓度）。稀释倍数要严格一致，最低浓度为1，倒数第二的浓度应该就是1×稀释倍数，以此类推。如果系数倍数是4，那浓度从低到高应该是1，4，46，64，256 ……；如果稀释倍数是10，那浓度从低到高应该是1，10，100，1000，10000 ……</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091250137.png" alt=""></p><h3 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h3><ul><li>上传数据：上传上一步准备好的数据即可；</li><li>是否剔除空值：在qPCR检测的过程中很多原因会导致某个孔无法进行扩增，在导出结果的时候其Cq值就是<code>{%  label - purple %}</code> 。这个时候就需要对这种值进行剔除。软件默认的是剔除这类值，如果不进行剔除，软件无法进行计算。</li><li>空值填充方法：软件考虑到完全剔除空值后对应的重复数量就减少了，因此选择对空值进行填充，默认的填充方式是均值填充，也就是利用某个基因在某个浓度下的非空值的均值去填充该基因在该浓度下的空值。</li><li>最低浓度：选择用于标曲计算的最高浓度，默认的是<code>{%  label 4096 purple %}</code>（4倍稀释时候的第二个最高的浓度）。</li><li>最高浓度：选择用于标曲计算的最低浓度，默认的是<code>{%  label 4 purple %}</code>（4倍稀释时候的倒数第二个最高的浓度）。</li><li>图片格式：程序默认绘制对应的回归曲线图，点击<code>{%  label 下载图片 purple %}</code>即可进行下载。</li></ul><p>数据上传完成、参数设置完成后点击<code>{%  label Submit purple %}</code>便开始进行计算。回归方程相关信息展示在右面，点击<code>{%  label 下载表格 purple %}</code>即可下载Excel格式的回归方程结果。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><p>返回的结果中的<code>{%  label Eff purple %}</code>指的是该引物的扩增效率，正常来说引物的扩增效率的范围是[0,1]之间，结果中的引物扩增效率是计算的引物的扩增效率+1后的结果，这样做是为了后续计算表达量取对数的时候得到无穷大值。</p></li><li><p>上传的数据必须是Excel格式的数据，三个表格的顺序不能错；</p></li><li>基因布局图和浓度布局图必须要有A-H和1-12以及左上角的<code>{%  label N purple %}</code>。</li></ul><h3 id="引物扩增效率公式推导"><a href="#引物扩增效率公式推导" class="headerlink" title="引物扩增效率公式推导"></a>引物扩增效率公式推导</h3><p>引物质量是<code>{% label qPCR purple %}</code>实验中至关重要的一步，网上的教程大多是以10倍稀释为例子讲解如何求引物的扩增效率。但是在实际实验中，不一定都是10倍稀释的。因此，我就把引物扩增效率的通用计算公式推导了一遍。</p><p>PCR扩增的通用公式：</p><script type="math/tex; mode=display">X_n=X_0 × (1 + E_x)^n</script><p>其中$X_n$是最终的拷贝数，$X_0$是起始拷贝数，$E_x$是该基因引物的扩增效率，$n$是循环数。理想状态下扩增效率为1。</p><hr><p>现在假设我们有如下浓度梯度及其$C_q$值：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249864.png" alt=""></p><p>然后我们用图画出来：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091248882.png" alt=""></p><hr><p>假设现在某个基因我需要扩增到$X_n$个拷贝，我现在有两个浓度的模板cDNA，分别是$D^4$和$D^3$。则有：</p><script type="math/tex; mode=display">X_n=D^4 × (1 + E_x)^d</script><script type="math/tex; mode=display">X_n=D^3 × (1 + E_x)^e</script><p>也就是分别经过<code>d</code>次和<code>e</code>次扩增后，最终达到$X_n$个拷贝，那么也就有：</p><script type="math/tex; mode=display">D^4 × (1 + E_x)^d = D^3 × (1 + E_x)^e</script><p>等式两边交叉相除：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112211022638.png" alt="image-20211221102252583"></p><p>那么，最左边相除以后得到的<code>{% label D purple %}</code>刚好是稀释倍数的<code>D</code>，右边的$e-d$刚好是两条扩增曲线的$C_q$值的差值。</p><p>那么当引物的扩增效率的等于1的时候：</p><script type="math/tex; mode=display">2^{C_q差值} = 稀释倍数</script><p>当稀释倍数为10时：</p><script type="math/tex; mode=display">2^{C_q差值} = 10</script><p>可以计算出$C_q差值 = 3.321928$。也就是10倍稀释的时候相邻两条扩增曲线之间的$C_q$值的差值应该是3.321928。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091248531.jpg" alt=""></p><hr><p>现在我们假设稀释倍数为$D$，也就有：</p><script type="math/tex; mode=display">D = (1+E_x)^{e-d}</script><hr><p>从上面的图我们可以看到的是，$e - d$ 刚好就是这条直线的斜率（slope）$\frac {d-e}{4-3} = d-e$ 的相反数，那就有：</p><script type="math/tex; mode=display">D = (1+E_x)^{-slope}</script><p>等号两边同时以$D$为底数取对数：</p><script type="math/tex; mode=display">1 = -slope . log_D{(1+E_x)}</script><script type="math/tex; mode=display">\frac {-1}{slope} = log_D{(1+E_x)}</script><script type="math/tex; mode=display">log_DD^{\frac{-1}{slope}} = log_D{(1+E_x)}</script><script type="math/tex; mode=display">D^{\frac {-1}{slope}} = 1+E_x</script><p>所以：</p><script type="math/tex; mode=display">E_x = D^{\frac {-1}{slope}} - 1</script><p>也就是当知道稀释倍数和斜率的时候就可以计算引物的扩增效率了。</p><h2 id="表达量计算"><a href="#表达量计算" class="headerlink" title="表达量计算"></a>表达量计算</h2><h3 id="标曲法"><a href="#标曲法" class="headerlink" title="标曲法"></a>标曲法</h3><h4 id="数据准备-1"><a href="#数据准备-1" class="headerlink" title="数据准备"></a>数据准备</h4><p>需要4个数据，4个数据存放在一个Excel文件种：</p><ol><li>qPCR下机数据：比较重要的三列数据：<ol><li><code>{%  label Batch purple %}</code>：可以理解成第几板qPCR，因为在实际操作过程中很可能不止有一板qPCR，有很多板的情况下加上<code>{%  label Batch purple %}</code>这个参数就能一次完成计算。</li><li><code>{%  label Position  purple %}</code>：告诉程序分别是哪个孔。</li><li><code>{%  label Cq purple %}</code>：每个孔对应的Cq值。</li></ol></li><li>处理布局图：每个孔内的样品来自什么处理。</li><li>基因布局图：每个孔内的基因叫什么。</li><li>标曲：前一步计算的标曲（不能做任何修改，直接复制粘贴）。</li></ol><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249849.png" alt=""></p><h4 id="参数设置-1"><a href="#参数设置-1" class="headerlink" title="参数设置"></a>参数设置</h4><p>比较重要的两个参数：</p><ol><li>是否用内参进行校正：标曲法计算得到的相对向量通常需要用内参基因的表达量进行校正，程序默认使用内参进行校正。</li><li>内参基因名称：输入的基因名称必须和基因布局图以及标曲表对应起来。</li></ol><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091248647.png" alt=""></p><h4 id="结果解读"><a href="#结果解读" class="headerlink" title="结果解读"></a>结果解读</h4><p>下载得到的表格是个Excel表，含有两个Sheet：</p><ul><li>第一个Sheet是均值表达量，也就是对不同处理的不同基因的表达量求均值后输出；</li><li>第二个Sheet是每个孔的表达量，也就是输入的数据有多少个孔，返回的数据与其一一对应。</li></ul><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>4个文件必须放在一个Excel文件中，且顺序不能乱；</li><li>前三个表必须含有<code>{%  label Batch purple %}</code>这一列，哪怕是只有1板qPCR，也得把<code>{%  label Batch purple %}</code>这一列加上；</li><li>基因布局表和标曲表的基因名称必须完全对应，严格区分大小写。</li></ul><h3 id="RqPCR法"><a href="#RqPCR法" class="headerlink" title="RqPCR法"></a>RqPCR法</h3><p><code>{%  label RqPCR法 purple %}</code>是根据Frédérique Hilliou等$^{[2,3]}$的算法进行开发的。</p><p>注：如果您使用这种方法计算表达量，请引用他们的文章：</p><blockquote><ol><li>Rancurel C, Van Tran T, Elie C, et al. SATQPCR: Website for statistical analysis of real-time quantitative PCR data[J]. Molecular and cellular probes, 2019, 46: 101418.</li><li>Hilliou F, Tran T. RqPCRAnalysis: Analysis of Quantitative Real-time PCR Data[C]//Bioinformatics. 2013: 202-211.</li></ol></blockquote><h4 id="算法特点"><a href="#算法特点" class="headerlink" title="算法特点"></a>算法特点</h4><p>该方法的特点在于不用提供参考基因，而是由软件计算完后自动寻找该批次数据中的参考基因。该算法默认至少选择两个基因作为参考基因，因此至少需要检测3+的基因才能用这种方法。</p><h4 id="数据准备-2"><a href="#数据准备-2" class="headerlink" title="数据准备"></a>数据准备</h4><p>由于该算法以根据不同处理的不同生物学重复进行分批计算的，因此共需要6个数据，将6个数据按顺序存放在一个Excel文件中。下载示例数据讲对应的数据替换成自己的数据即可。</p><ul><li>下机数据：主要包含3行信息：<ul><li>Batch：第几批次（第几版qPCR下机数据）</li><li>Position：对应哪个孔。</li><li>Cq：Cq值。</li></ul></li><li>处理布局：每个孔对应的是哪个处理。</li><li>基因布局：每个孔对应的是哪个基因。</li><li>生物学重复布局：每个孔对应的是哪个生物学重复。</li><li>技术重复布局：每个孔对应的是哪个技术重复。</li><li>引物扩增效率：每个基因的引物的扩增效率。此处的扩增效率是<code>{%  label 扩增效率+1 purple %}</code>的结果。也就是前一步计算标曲的时候得到的扩增效率。</li></ul><h4 id="参数设置-2"><a href="#参数设置-2" class="headerlink" title="参数设置"></a>参数设置</h4><ul><li>是否指定参考基因：默认不指定参考基因，程序自动计算参考基因，默认是2个参考基因；如果指定参考基因，那程序就会以输入的参考基因作为计算基础；</li><li>是否用某个样品校正表达量：程序默认的是用同一个基因下不同处理间最小的表达量作为校正因子校正该基因在不同处理中的表达量；如果指定了用于校正的样品，那么就会以该样品的表达量去校正其他样品的表达量。</li></ul><h4 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>该算法推荐程序自动计算参考基因，默认的参考基因数量是2个，不能少于2个；如果指定参考基因，也可以，不过不推荐。</li><li>基因的扩增效率需要提前计算好，而且第六个表<code>{%  label 引物扩增效率 purple %}</code>里面的扩增效率必须是<code>{%  label 1+引物扩增效率 purple %}</code>。如果没有测定扩增效率，就全部写为2，默认扩增效率为1。扩增效率大小会影响最后的表达量。</li><li>程序默认最后的表达量是用所有处理中最小的表达量进行校正的，如果选择用某个处理进行校正，就会以该处理的表达量对其他表达量进行校正。</li><li>进行<code>{%  label t-检验 purple %}</code>的时候将结果中的<code>{%  label Exore4Stat purple %}</code>取对数<code>{%  label log2() purple %}</code>后再进行统计分析。</li></ul><h3 id="2-🔺🔺Ct-法"><a href="#2-🔺🔺Ct-法" class="headerlink" title="2(-🔺🔺Ct )法"></a>2(-🔺🔺Ct )法</h3><p>qPCR表达量计算使用最广泛的方法毫无疑问是$2^{-\delta \delta C_t}$法$^{[4]}$。但是该方法的前提条件是目的基因和参考基因的扩增效率必须一致（接近1）才行，文章里面多次提到这个关键之处：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249000.png" alt=""></p><p>为什么要扩增效率一致才能这样计算呢？根据前面我们推导的扩增效率的可知：</p><script type="math/tex; mode=display">扩增效率^{C_q差值} = 稀释倍数</script><p>那么就有：</p><script type="math/tex; mode=display">C_q差值 = log_{扩增效率}稀释倍数</script><p>当稀释倍数一致的时候，扩增效率的大小严重影响$C_q$值，很小的$C_q$值差异在经过2的次幂以后，会变得较大，有可能夸大了生物学处理之间的真正差异。因此，在使用这个方法之前，最好是先跑个标曲看看引物的扩增效率是否一致且接近于1。</p><h4 id="数据准备-3"><a href="#数据准备-3" class="headerlink" title="数据准备"></a>数据准备</h4><p>数据准备和标曲法是一致的，唯一的差别在于不需要标曲文件。</p><h4 id="参数设置-3"><a href="#参数设置-3" class="headerlink" title="参数设置"></a>参数设置</h4><p>由于2$^{-ΔΔC_t}$法需要对照处理（CK）和内参基因，因此需要在参数设置时指定对照处理的名称和内参基因的名称，注意严格区分大小写。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249142.png" alt=""></p><h2 id="差异表达统计"><a href="#差异表达统计" class="headerlink" title="差异表达统计"></a>差异表达统计</h2><h3 id="数据准备-4"><a href="#数据准备-4" class="headerlink" title="数据准备"></a>数据准备</h3><p>默认使用的数据类型是前面计算表达量得到的结果，主要是三列：</p><ul><li><code>{% label Treatment purple %}</code>：处理名称</li><li><code>{% label Gene purple %}</code>：基因名称</li><li><code>{% label Expression purple %}</code>：表达量</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091249653.png" alt=""></p><p>注意：如果表达量计算使用的方法是<code>{% label RqPCR法 purple %}</code>的话，需要将<code>{% label ExpressionStat purple %}</code>改成<code>{% label Expression purple %}</code>才行，而且需要将原来的<code>{% label Expression purple %}</code>删掉才行（或者重命名）。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091248334.png" alt=""></p><h3 id="参数设置-4"><a href="#参数设置-4" class="headerlink" title="参数设置"></a>参数设置</h3><ul><li><code>{% label 第几个Sheet purple %}</code>：由于前面计算表达量输出的结果的第二个Sheet才是原始表达量，因此程序默认表达量是在第二个Sheet，可以根据自己的数据进行修改。如果是自己的数据，那改成对应的Sheet即可。</li><li><code>{% label 统计检验方法 purple %}</code>：目前程序内置了t-test和Anova（with Tukey），如果只是有一个处理+一个对照，那推荐选择<code>{% label t-test purple %}</code>，多个处理时推荐使用<code>{% label Anova purple %}</code>。</li><li><code>{% label 统计检验水平 purple %}</code>：默认统计检验水平为0.95，可以自行设置。</li></ul><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202112091248796.png" alt=""></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p>[1] <a href="https://academic.oup.com/nar/article-abstract/40/15/e115/1223759">Untergasser A, Cutcutache I, Koressaar T, et al. Primer3—new capabilities and interfaces[J]. Nucleic acids research, 2012, 40(15): e115-e115.</a></p><p>[2] <a href="https://www.scitepress.org/Papers/2013/43120/43120.pdf">Hilliou F, Tran T. RqPCRAnalysis: Analysis of Quantitative Real-time PCR Data[C]//Bioinformatics. 2013: 202-211.</a></p><p>[3] <a href="https://www.sciencedirect.com/science/article/abs/pii/S0890850819301604">Rancurel C, Van Tran T, Elie C, et al. SATQPCR: Website for statistical analysis of real-time quantitative PCR data[J]. Molecular and cellular probes, 2019, 46: 101418.</a></p><p>[4] <a href="https://www.sciencedirect.com/science/article/abs/pii/S1046202301912629">Livak K J, Schmittgen T D. Analysis of relative gene expression data using real-time quantitative PCR and the 2− ΔΔCT method[J]. methods, 2001, 25(4): 402-408.</a></p></blockquote><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 分子生物学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 分子生物学 </tag>
            
            <tag> qPCR </tag>
            
            <tag> shiny4qPCR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qPCR注意事项</title>
      <link href="/article/qpcrzysx/"/>
      <url>/article/qpcrzysx/</url>
      
        <content type="html"><![CDATA[<p>参考文献：</p><blockquote><p>Bustin S A, Beaulieu J F, Huggett J, et al. MIQE precis: Practical implementation of minimum standard guidelines for fluorescence-based quantitative real-time PCR experiments[J]. 2010.</p></blockquote><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 分子生物学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 分子生物学 </tag>
            
            <tag> qPCR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于t检验-正态性和方差齐性</title>
      <link href="/article/ttest123/"/>
      <url>/article/ttest123/</url>
      
        <content type="html"><![CDATA[<p>在公众号看到的<a href="https://mp.weixin.qq.com/s/6tQWo8AV-UaawJPmGQg1sg">推文</a>里面的图：</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 统计学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 统计学 </tag>
            
            <tag> T检验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口转发+SSL证书部署</title>
      <link href="/article/ssldkzf/"/>
      <url>/article/ssldkzf/</url>
      
        <content type="html"><![CDATA[<figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> {<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span>  blog.blog4xiang.world shiny.blog4xiang.world book.blog4xiang.world; <span class="hljs-comment">#请求域名</span><br>    <span class="hljs-attribute">return</span>      <span class="hljs-number">301</span> https://<span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span>; <span class="hljs-comment">#重定向至https访问。</span><br>}<br><br><span class="hljs-comment"># blog</span><br><span class="hljs-section">server</span> {<br><span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl ;<br>              <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/sites-available/1_blog.blog4xiang.world_bundle.crt;  <span class="hljs-comment"># 腾讯云给出的证书(名字要改成自己的）</span><br>              <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/sites-available/2_blog.blog4xiang.world.key;   <span class="hljs-comment"># 腾讯云给出的私钥(名字要改成自己的）</span><br>              <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>              <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>; <br>              <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; <br>              <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><span class="hljs-attribute">root</span> /home/hexo/blog;<br><span class="hljs-attribute">index</span> index.html index.htm index.nginx-debian.html;<br><span class="hljs-attribute">server_name</span> _;<br><span class="hljs-section">location</span> / {<br><span class="hljs-comment"># First attempt to serve request as file, then</span><br><span class="hljs-comment"># as directory, then fall back to displaying a 404.</span><br><span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =<span class="hljs-number">404</span>;<br>}<br>}<br><br><span class="hljs-comment"># shiny-server</span><br><span class="hljs-section">server</span> {<br>    <span class="hljs-attribute">server_name</span> shiny.blog4xiang.world;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br><br>    <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/sites-available/1_shiny.blog4xiang.world_bundle.crt;  <span class="hljs-comment"># 腾讯云给出的证书(名字要改成自己的）</span><br>    <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/sites-available/2_shiny.blog4xiang.world.key;   <span class="hljs-comment"># 腾讯云给出的私钥(名字要改成自己的）</span><br>    <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>; <br>    <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; <br>    <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br>    <span class="hljs-section">location</span> / {<br>        <span class="hljs-attribute">proxy_pass</span> http://localhost:3838;<br>        <span class="hljs-attribute">proxy_redirect</span> http://localhost:3838/ <span class="hljs-variable">$scheme</span>://<span class="hljs-variable">$host</span>/;<br>        <span class="hljs-attribute">proxy_http_version</span> <span class="hljs-number">1</span>.<span class="hljs-number">1</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> Upgrade <span class="hljs-variable">$http_upgrade</span>;<br>    }<br>}<br><br><span class="hljs-comment"># book-down</span><br><span class="hljs-section">server</span> {<br>    <span class="hljs-attribute">server_name</span> book.blog4xiang.world; <br><br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl ;<br>    <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/sites-available/1_book.blog4xiang.world_bundle.crt;  <span class="hljs-comment"># 腾讯云给出的证书(名字要改成自己的）</span><br>    <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/sites-available/2_book.blog4xiang.world.key;   <span class="hljs-comment"># 腾讯云给出的私钥(名字要改成自己的）</span><br>    <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>    <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>; <br>    <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; <br>    <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>    <br>    <span class="hljs-attribute">root</span> /srv/bookdown/book4xiang; <br><br>    <span class="hljs-attribute">index</span> index.html; <br>    <span class="hljs-section">location</span> <span class="hljs-regexp">~* ^.+\.(jpg|jpeg|gif|png|ico|css|js|pdf|txt)</span>{<br>      <span class="hljs-attribute">root</span> /srv/bookdown/book4xiang;<br>    } <br>}<br><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> Shiny </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Bookdown </tag>
            
            <tag> SSL </tag>
            
            <tag> Nginx端口转发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相关性分析和回归分析</title>
      <link href="/article/corandreggre/"/>
      <url>/article/corandreggre/</url>
      
        <content type="html"><![CDATA[<p>一直把相关性分析和回归计算搞混，某次组会下定决心把这两个东西分清楚。</p><div class="table-container"><table><thead><tr><th style="text-align:center">Items</th><th style="text-align:center">相关性</th><th style="text-align:center">简单回归</th></tr></thead><tbody><tr><td style="text-align:center">量化关系方向</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">量化关系强度</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">展示因果和效应</td><td style="text-align:center">×</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">是否能够进行预测</td><td style="text-align:center">×</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">变量之间的位置是否能够互换</td><td style="text-align:center">√</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">表达方式</td><td style="text-align:center">一个数值</td><td style="text-align:center">一个等式</td></tr></tbody></table></div><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 统计学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 统计学 </tag>
            
            <tag> 相关性 </tag>
            
            <tag> 回归分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基因家族分析</title>
      <link href="/article/genefamily/"/>
      <url>/article/genefamily/</url>
      
        <content type="html"><![CDATA[<p>基因家族分析是一种常见的生物信息学分析套路，也是生物信息学数据挖掘发表小文章常用的分析方法，和GEO挖掘等类似。基因家族的分析鉴定可以用<a href="http://pfam.xfam.org/">pfam</a>上的<code>hmm</code>文件进行基因家族的检索鉴定，也可以用<code>blast</code>的方法进行比对鉴定，通常是适用拟南芥对应的基因家族进行比对鉴定。<br>植物转录因子数据库，<a href="http://planttfdb.gao-lab.org/">点击访问</a>。</p><h1 id="基因家族分析思路及文章撰写思路"><a href="#基因家族分析思路及文章撰写思路" class="headerlink" title="基因家族分析思路及文章撰写思路"></a>基因家族分析思路及文章撰写思路</h1><p>基因家族分析是继GEO数据挖掘后，一种新的生物信息学挖掘策略。</p><p>如何做基因家族研究，可以参考这个帖子：<a href="http://www.planttech.com.cn/blog/58882464a46。">http://www.planttech.com.cn/blog/58882464a46。</a></p><h1 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h1><p>需要准备的数据主要是参考基因组数据，包括<code>fasta</code>格式的序列文件、<code>gff</code>或<code>gtf</code>格式的基因组注释文件、蛋白质序列文件（通常是每个转录本的蛋白序列）、<code>cDNA</code>序列等文件。如果有转录组数据的话进行对应的转录组分析即可。除开上述这些文件外，还需要适用的文件还有<code>.hmm</code>格式的文件。</p><h1 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h1><p>只需要会使用Linux系统，会安装Docker即可，然后下载<code>组学大讲堂</code>的镜像即可。<a href="https://hub.docker.com/r/omicsclass/gene-family">点击浏览</a>镜像地址。Docker的安装适用方法参考\@ref(WSL4Docker)。</p><h1 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h1><ul><li>mRNA_ID与基因ID的提取<br>由于一个基因会对应多个转录本，因此一个基因下会对应多个mRNA的编号。在后续的分析中，每个基因只需要选择一个转录本的编号进行分析即可，因为每个基因不同的转录本的序列差异是较小的。提取的代码：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/mRNAid_to_geneid.pl data/unzip_data/*.gff* results/step.1.get.mRNA.and.gene.ID/mRNA2geneID.txt<br>perl code/script/geneid_to_mRNAid.pl data/unzip_data/*.gff* results/step.1.get.mRNA.and.gene.ID/geneID2mRNAid.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>检索结构域<br>这一步主要是以<code>.hmm</code>文件为基础检索该物种蛋白序列中含有该结构域的序列。输入文件包括<code>.hmm</code>文件和蛋白文件，输出<code>hmmsearch</code>的检索结果。其中用于后续筛选的是<code>evalue</code>这个参数，部分文章以0.001为阈值。<code>of</code>那一列表示的是某个基因对应的这个结构域有几个。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hmmsearch --domtblout results/step.2.domain.search/hmm.txt --cut_tc data/unzip_data/*.hmm data/unzip_data/*.pep*<br></code></pre></td></tr></tbody></table></figure><ul><li>选择结构域<br>由于一个基因的单个转录本可能会比对到多个结构域，因此需要对比对到的结构域进行选择。默认选择的是第一个结构域。下面代码的最后一个参数是<code>hmmsearch</code>输出文件里面的<code>E-value</code>,如果需要全部的第一个结构域，将阈值设置为1即可。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/domain_xulie.pl results/step.2.domain.search/hmm.txt data/unzip_data/*.pep* results/step.2.domain.search/domain.fa 1.2e-28<br></code></pre></td></tr></tbody></table></figure><ul><li>多序列比对<br>之所以要进行多序列比对，是因为下载的<code>.hmm</code>文件是来自很多物种的这个结构域组成的隐马尔科夫模型，进行多序列比对后将该物种检索到的结构域序列进行比对，再次构建该物种该基因家族的隐马尔科夫模型，会更加准确。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -e '1\nresults/step.2.domain.search/domain.fa\n2\n1\nresults/step.2.domain.search/out.aln\nr.domain.search/out.dnd\nX\n\n\nX\n' |clustalw<br></code></pre></td></tr></tbody></table></figure><ul><li>重构隐马尔科夫模型</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hmmbuild results/step.2.domain.search/new.hmm results/step.2.domain.search/out.aln<br></code></pre></td></tr></tbody></table></figure><ul><li>重新进行检索<br>利用构建得到的新的隐马尔科夫模型重新进行检索结构域。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hmmsearch --domtblout results/step.2.domain.search/new.out.txt --cut_tc results/step.2.domain.search/new.hmm data/unzip_data/*.pep*<br></code></pre></td></tr></tbody></table></figure><ul><li>筛选输出结果<br>对重新检索后的结果进行筛选，也是对<code>E-value</code>进行筛选。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -v "^#" results/step.2.domain.search/new.out.txt|awk '$7&lt;0.001 {print}' &gt; results/step.2.domain.search/domain.new.out.selected.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>去除重复的ID<br>上一步筛选得到的是该种中哪些基因是潜在的目标基因家族成员，而一个基因对应了多个mRNA，因此，只需要在筛选后的每个基因中选择一个具有代表性的mRNA进行后续的分析即可。这个提取唯一ID的步骤需要手动完成（PS：手动完成也很快）。手动挑选完mRNA的ID放在第一列，另存为文件<code>uniqueID.txt</code>。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/select_redundant_mRNA.pl results/step.1.get.mRNA.and.gene.ID/mRNA2geneID.txt results/step.2.domain.search/domain.new.out.selected.txt results/step.2.domain.search/remove_redundant_IDlist.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>提取蛋白序列<br>在得到基因ID后需要提取蛋白序列进行后续的分析。在<a href="http://smart.embl.de/">SMART</a>或者<a href="http://pfam.xfam.org/search">Pfam</a>或<a href="https://www.ncbi.nlm.nih.gov/cdd/">NCBI CDD</a>确认这些基因是真真正正含有该结构域，没有的基因要剔除！在<code>SMART</code>中没有检索到结构域的基因在<code>gene.not.in.SMART.txt</code>中；在<code>Pfam</code>中全都是<code>WRKY</code>结构域，对应文件为<code>Pfam.results.txt</code>。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/get_fa_by_id.pl results/step.2.domain.search/uniqueID.txt data/unzip_data/*.pep* results/step<br>.2.domain.search/pep.need.confirm.fa<br></code></pre></td></tr></tbody></table></figure><ul><li>计算蛋白质分子量等</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/stat_protein_fa.pl results/step.2.domain.search/pep.need.confirm.fa results/step.2.domain.search/pep.MW.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>构建进化树<br>选择利用软件<code>CLUSTALW</code>进行多序列比对，然后利用<code>MEGA</code>构建进化树。<code>CLUSTALW</code>输出结果转换成<code>.fasta</code>格式的方法参考\@ref(pac4xiang)。</li><li>Motif分析</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">meme results/step.3.seq.and.tree/pep_confirmed.fa -protein -oc results/step.4.motif/ -nostatus -time 18000 -maxsize 6000000 -mod anr -nmotifs 10 -minw 6 -maxw 100<br></code></pre></td></tr></tbody></table></figure><ul><li>基因结构分析</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/get_gene_exon_from_gff.pl -in1 results/step.2.domain.search/uniqueID.txt -in2 data/unzip_data/*.gff* -out results/step.5.gene.structure/gene_exon_info.gff<br></code></pre></td></tr></tbody></table></figure><ul><li>基因在染色体上的定位</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">samtools faidx data/unzip_data/*.dna*<br>cp data/unzip_data/*.fai results/step.5.gene.structure/<br>perl code/script/get_gene_weizhi.pl -in1 results/step.2.domain.search/uniqueID.txt -in2 data/unzip_data/*.gff* -out results/step.5.gene.structure/mrna_location.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>顺式作用元件分析<br>脚本默认的启动子长度是1500bp。将提取得到的启动子序列上传到<a href="https://bioinformatics.psb.ugent.be/webtools/plantcare/html/">Plane CARE</a>进行分析。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl code/script/get_promoter.pl data/unzip_data/*dna.top* results/step.5.gene.structure/mrna_location.txt results/step.6.cis.acting.element/promoter.txt<br></code></pre></td></tr></tbody></table></figure><ul><li>基因家族成员的亚细胞定位分析<br>两个网站：<a href="https://wolfpsort.hgc.jp/">WolfPsort</a>和<a href="http://cello.life.nctu.edu.tw/">Cello</a>。</li></ul><h1 id="基因组共线性分析"><a href="#基因组共线性分析" class="headerlink" title="基因组共线性分析"></a>基因组共线性分析</h1><ul><li><p>从geneid2mRNAid.txt文件中每个基因挑一个转录本ID存储到allmRNAID.txt，也就是每个基因挑选一个转录本。</p></li><li><p>创建文件夹：</p></li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir MCScanX<br>cd MCScanX<br><br>mkdir mcscan<br></code></pre></td></tr></tbody></table></figure><ul><li>获取转录本的位置信息：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl ../script/get_mRNA_position.pl allmRNAID.txt ../Arabidopsis_thaliana.TAIR10.41.gff3 AT.gff<br></code></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">分别是染色体位置，转录本ID，起始位置和终止位置</span><br>1       Pno01G013682.t2 7993891 8000167<br>1       Pno01G011207.t1 6521081 6522022<br>1       Pno01G002381.t1 15982661        15984634<br>1       Pno01G006728.t1 32747373        32748586<br>1       Pno01G001298.t1 134750756       134753812<br>1       Pno01G000565.t1 11549686        11558266<br>1       Pno01G005598.t1 23981500        23984173<br>1       Pno01G012140.t1 707333  718266<br>1       Pno01G006114.t1 27812391        27816942<br>1       Pno01G001551.t1 14123991        14125021<br></code></pre></td></tr></tbody></table></figure><ul><li>获取挑选的转录本的蛋白序列：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl ../script/get_fa_by_id.pl allmRNAID.txt ../Arabidopsis_thaliana.TAIR10.pep.all.fa pep.fa<br></code></pre></td></tr></tbody></table></figure><ul><li>对所有蛋白进行建库：</li></ul><figure class="highlight elm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">makeblastdb</span> -<span class="hljs-keyword">in</span> pep.fa  -db<span class="hljs-keyword">type</span> prot -title pep.fa<br></code></pre></td></tr></tbody></table></figure><ul><li>blast比对：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">blastall -i pep.fa -d pep.fa -e 1e-10  -p blastp  -b 5 -v 5 -m 8 -o mcscan/AT.blast<br>cp AT.gff mcscan/AT.gff<br></code></pre></td></tr></tbody></table></figure><ul><li>MCScanX查找共线性：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">MCScanX mcscan/AT<br></code></pre></td></tr></tbody></table></figure><p>得到的结果是整个基因组的结果：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">-rwxrwxrwx 1 xiang xiang  17M Dec  6 23:59 sanqi.blast<br>-rwxrwxrwx 1 xiang xiang 339K Dec  7 10:48 sanqi.collinearity # 基因组的所有大片段复制<br>-rwxrwxrwx 1 xiang xiang 1.7M Dec  7 10:47 sanqi.gff<br>drwxrwxrwx 1 xiang xiang 4.0K Dec  7 10:48 sanqi.html<br>-rwxrwxrwx 1 xiang xiang  39K Dec  7 10:48 sanqi.tandem # 基因组的所有串联重复<br></code></pre></td></tr></tbody></table></figure><ul><li><p>结果解读：</p><ul><li>串联重复：当一行里面的两个基因都是感兴趣的基因家族基因的时候，就是需要的串联重复基因。</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">Pno01G001040.t1,Pno01G001042.t1<br>Pno01G001410.t1,Pno01G001412.t1<br>Pno01G001524.t1,Pno01G001525.t1<br>Pno01G001558.t1,Pno01G001560.t1<br>Pno01G001628.t1,Pno01G001629.t1<br></code></pre></td></tr></tbody></table></figure><ul><li>大片段复制：当一行里面的两个基因都是感兴趣的基因家族基因的时候，就是需要的大片段复制基因。</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">############### Parameters ###############</span><br><span class="hljs-comment"># MATCH_SCORE: 50</span><br><span class="hljs-comment"># MATCH_SIZE: 5</span><br><span class="hljs-comment"># GAP_PENALTY: -1</span><br><span class="hljs-comment"># OVERLAP_WINDOW: 5</span><br><span class="hljs-comment"># E_VALUE: 1e-05</span><br><span class="hljs-comment"># MAX GAPS: 25</span><br><span class="hljs-comment">############### Statistics ###############</span><br><span class="hljs-comment"># Number of collinear genes: 10371, Percentage: 21.66</span><br><span class="hljs-comment"># Number of all genes: 47870</span><br><span class="hljs-comment">##########################################</span><br><span class="hljs-comment">## Alignment 0: score=269.0 e_value=4.6e-10 N=6 1&amp;1 plus</span><br>  0-  0:        Pno01G005483.t1 Pno01G005033.t2   8e-54<br>  0-  1:        Pno01G005544.t1 Pno01G005040.t3  7e-159<br>  0-  2:        Pno01G005828.t1 Pno01G005055.t1  2e-103<br>  0-  3:        Pno01G005829.t1 Pno01G005058.t1       0<br>  0-  4:        Pno01G005897.t1 Pno01G005088.t1  1e-164<br>  0-  5:        Pno01G006072.t2 Pno01G005092.t1   1e-80<br><span class="hljs-comment">## Alignment 1: score=362.0 e_value=2.8e-14 N=8 1&amp;1 minus</span><br>  1-  0:        Pno01G000527.t2 Pno01G004765.t1   2e-75<br>  1-  1:        Pno01G000535.t1 Pno01G004763.t1       0<br>  1-  2:        Pno01G000542.t2 Pno01G004760.t2  4e-152<br>  1-  3:        Pno01G000545.t2 Pno01G004757.t1   7e-68<br>  1-  4:        Pno01G000558.t1 Pno01G004741.t6   8e-20<br>  1-  5:        Pno01G000568.t2 Pno01G004737.t2  4e-144<br>  1-  6:        Pno01G000599.t1 Pno01G004735.t1   2e-68<br>  1-  7:        Pno01G000636.t1 Pno01G004716.t1  1e-144<br><span class="hljs-comment">## Alignment 2: score=290.0 e_value=3.9e-11 N=7 1&amp;1 minus</span><br>  2-  0:        Pno01G006165.t1 Pno01G002002.t1   1e-23<br>  2-  1:        Pno01G006238.t1 Pno01G001895.t1       0<br>  2-  2:        Pno01G006400.t1 Pno01G001832.t2   3e-87<br>  2-  3:        Pno01G006416.t2 Pno01G001818.t1   3e-48<br>  2-  4:        Pno01G006555.t1 Pno01G001725.t1  2e-130<br>  2-  5:        Pno01G006745.t1 Pno01G001684.t1   2e-46<br>  2-  6:        Pno01G006864.t1 Pno01G001662.t1       0<br></code></pre></td></tr></tbody></table></figure></li><li><p>找打目标基因家族中存在串联重复的基因：</p></li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl /biosoft/MCScanX/MCScanX/downstream_analyses/detect_collinearity_within_gene_families.pl -i WRKY_family.txt -d mcscan/AT.collinearity -o WRKY.collinear.pairs<br><br>perl ../script/get_tandem_gene.pl -id gene_list.txt -tandem mcscan/AT.tandem -od ./ -name WRKY<br></code></pre></td></tr></tbody></table></figure><ul><li>基因加倍绘图：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir circos<br>cd circos<br><br>cp ../MCScanX/mcscan/AT.collinearity .   <br>cp ../MCScanX/WRKY.collinear.pairs .<br><br>perl ../script/colline_v3.pl -gff ../MCScanX/AT.gff -list WRKY.collinear.pairs -colline AT.collinearity -od data -name WRKY<br><br>cd data<br><br>circos -conf config3.txt -outputdir ./ -outputfile WRKY<br></code></pre></td></tr></tbody></table></figure><p>配置文件：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><code class="hljs shell">chromosomes_units=1000000    #刻度单位Mb<br>karyotype=./chr.info  #染色体信息配置文件<br>show_tick_labels=yes<br>show_ticks=yes<br>spacing=10u<br>&lt;ticks&gt;  #设置染色体刻度<br>    color=black<br>    format=%d<br>    multiplier=1e-6<br>    radius=1r<br>    thickness=2p<br>    &lt;tick&gt;<br>        size=10p<br>        spacing=5u<br>    &lt;/tick&gt;<br>    &lt;tick&gt;<br>        color=black<br>        format=%d<br>        label_offset=10p<br>        label_size=25p<br>        show_label=yes<br>        size=15p<br>        spacing=25u<br>        thickness=4p<br>    &lt;/tick&gt;<br>&lt;/ticks&gt;<br><br>&lt;ideogram&gt; #染色体绘制设置<br>    fill=yes   #是否填充颜色<br>    label_font=default<br>    label_parallel=yes<br>    label_radius=dims(image,radius)-60p<br>    label_size=45<br>    radius=0.8r  #设置半径，以免基因名称过长超出显示范围<br>    show_label=yes<br>    &lt;spacing&gt;<br>        default=0.005r<br>    &lt;/spacing&gt;<br>    stroke_color=dgrey<br>    stroke_thickness=2p<br>    thickness=0.03r<br>&lt;/ideogram&gt;<br><br>&lt;links&gt;  #设置连线<br>    bezier_radius=0r<br>    bezier_radius_purity=0.75<br>    color=black<br>    crest=0.5<br>    &lt;link&gt;  #基因家族共线性<br>        bezier_radius=0r<br>        bezier_radius_purity=0.75<br>        color=set2-8-qual-1<br>        crest=0.5<br>        file=./nlr.link.txt    #输入文件<br>        radius=0.98r<br>        &lt;rules&gt;<br>            &lt;rule&gt;<br>                color=red<br>                condition=var(intrachr)<br>            &lt;/rule&gt;<br>            &lt;rule&gt;<br>                color=red<br>                condition=var(interchr)<br>            &lt;/rule&gt;<br>        &lt;/rules&gt;<br>        thickness=8<br>        z=20   #层数<br>    &lt;/link&gt;<br>    &lt;link&gt;  #全基因组共线性<br>        bezier_radius=0r<br>        bezier_radius_purity=0.75<br>        color=230,230,230,0.2<br>        crest=0.5<br>        ribbon=yes<br>        file=./genome.blocklink.txt   #输入文件<br>        radius=0.98r<br>        thickness=1<br>        z=15<br>    &lt;/link&gt;<br>    radius=0.40r<br>    thickness=1<br>&lt;/links&gt;<br>&lt;plots&gt;<br>    &lt;plot&gt;<br>       color=black<br>   label_snuggle=yes  #如多个文本文字距离过近，避免重叠  参考：https://www.omicsclass.com/article/678<br>        file=./nlr.text.txt  #输入文件<br>        label_font=condensed<br>        label_size=24p<br>        link_color=red<br>link_dims=10p,10p,50p,20p,10p<br>        link_thickness=2p<br>        r0=1r<br>        r1=1r+500p<br>        rpadding=0p<br>        padding=0p<br>        show_links=yes<br>        type=text<br>    &lt;/plot&gt;<br>    type=histogram<br>&lt;/plots&gt;<br><br><br>&lt;colors&gt;<br>&lt;&lt;include etc/colors.conf&gt;&gt;<br>&lt;&lt;include etc/brewer.conf&gt;&gt;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">&lt;&lt;<span class="hljs-string">include etc/colors_fonts_patterns.conf&gt;&gt;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-string">&lt;&lt;include</span> colors.ucsc.conf&gt;&gt;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">&lt;&lt;<span class="hljs-string">include colors.hsv.conf&gt;&gt;</span></span><br>&lt;/colors&gt;<br><br>&lt;fonts&gt;<br>&lt;&lt;include etc/fonts.conf&gt;&gt;<br>&lt;/fonts&gt;<br><br>&lt;image&gt;<br>&lt;&lt;include etc/image.conf&gt;&gt;<br>&lt;/image&gt;<br>&lt;&lt;include etc/housekeeping.conf&gt;&gt;<br></code></pre></td></tr></tbody></table></figure><p>软件JCVI：<a href="https://github.com/lixiang117423/jcvi">https://github.com/lixiang117423/jcvi</a></p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 分子生物学 </tag>
            
            <tag> 基因家族 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学数据库</title>
      <link href="/article/bioinfdatabase/"/>
      <url>/article/bioinfdatabase/</url>
      
        <content type="html"><![CDATA[<ul><li><p><a href="https://busco.ezlab.org/">BUSCO</a>：基因组组装质量评估软件。</p><ul><li>使用教程：<a href="https://www.jianshu.com/p/5041460f7a5d">简书链接</a></li></ul></li><li><p><a href="https://www.addgene.org/">Addgene</a>：非营利性的质粒库</p></li><li><a href="https://www.primer3plus.com/">Primer3Plus</a>：引物设计</li><li><a href="https://transcriptionfactor.org/">DBD</a>：转录因子预测数据库</li><li><a href="Plant Transcription Factor Database">Plant Transcription Factor Database</a>：植物转录因子数据库</li><li><a href="https://bis.zju.edu.cn/ricenetdb/"><em>RiceNetDB</em></a>：水稻基因互作数据库（浙大）</li><li><a href="https://cgm.sjtu.edu.cn/3kricedb/">RPAN: Rice Pan-genome Browser</a>：水稻泛基因组数据库（上海交大）</li><li><a href="https://ftp.ncbi.nih.gov/blast/db/">NCBI blast数据库</a></li><li><a href="https://nmdc.cn/datadownload">国家微生物数据科学中心数据下载</a></li><li><a href="http://systbio.cau.edu.cn/plad/index.php">PlaD</a>：植物对病原体防御反应的转录组学数据库</li><li><a href="http://ipf.sustech.edu.cn/pub/ricerna/">植物转录组表达数据库</a></li><li><a href="https://jaspar.genereg.net/">JASPAR：预测转录因子结合位点的网站</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 分子生物学 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggmotif的使用</title>
      <link href="/article/ggmotif/"/>
      <url>/article/ggmotif/</url>
      
        <content type="html"><![CDATA[<p>激发我开发这个R包的原因是在许做基因家族分析中的<code>motif</code>分析的时候总是找不到趁手的工具去可视化相关的结果，要么是在线网站，要么是别人开发的工具，网页版工具怕哪天就跑路了，别人的工具想要个性化比较困难。那，就自己写一个吧。</p><p>R包下载安装：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"ggmotif"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 或者</span><br>devtools<span class="hljs-operator">::</span>install_github<span class="hljs-punctuation">(</span><span class="hljs-string">"lixiang117423/ggmotif"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><code>meme</code>输出的结果主要是<code>XML</code>格式和<code>txt</code>格式的文件，需要的结果就在这两个文件里面。</p><h3 id="从XML文件提取结果并绘图"><a href="#从XML文件提取结果并绘图" class="headerlink" title="从XML文件提取结果并绘图"></a>从XML文件提取结果并绘图</h3><p><code>motif</code>在序列上的位置结果存放在<code>XML</code>格式的文件中，运行下面的代码便可以将结果转换成数据框格式并进行可视化。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">filepath <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"meme.xml"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggmotif"</span><span class="hljs-punctuation">)</span><br>motif_extract <span class="hljs-operator">&lt;-</span> getMotifFromXML<span class="hljs-punctuation">(</span>XMLfile <span class="hljs-operator">=</span> filepath<span class="hljs-punctuation">)</span><br>motif_plot <span class="hljs-operator">&lt;-</span> motif_location<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> motif_extract<span class="hljs-punctuation">)</span><br>motif_plot<br></code></pre></td></tr></tbody></table></figure><h3 id="从txt文件提取结果并进行可视化"><a href="#从txt文件提取结果并进行可视化" class="headerlink" title="从txt文件提取结果并进行可视化"></a>从txt文件提取结果并进行可视化</h3><p>每个<code>motif</code>的序列是存放在<code>txt</code>文件中的，运行下方的代码便能结果转换成数据框格式并进行绘图。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br>filepath <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"meme.txt"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"ggmotif"</span><span class="hljs-punctuation">)</span><br>motif_extract <span class="hljs-operator">&lt;-</span> getMotifFromTxt<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> filepath<span class="hljs-punctuation">)</span><br><br>motif_extract <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>motif.num <span class="hljs-operator">==</span> <span class="hljs-string">'Motif.1'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>input.seq.motif<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ggseqlogo<span class="hljs-operator">::</span>ggseqlogo<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_classic<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure><h3 id="与ggtree联用"><a href="#与ggtree联用" class="headerlink" title="与ggtree联用"></a>与<code>ggtree</code>联用</h3><p>有时候会对序列构建进化树展示进化关系，<code>ggmotif</code>中的函数能够以输入的进化树文件为基础，把输出的<code>motif</code>在序列上的位置与进化树上的位置进行匹配，便能够与<code>ggtree</code>联用在一个图上展示进化树和<code>motif</code>在序列上的位置。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">filepath <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"meme.xml"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggmotif"</span><span class="hljs-punctuation">)</span><br>treepath <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"tree.nwk"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggmotif"</span><span class="hljs-punctuation">)</span><br>motif_extract <span class="hljs-operator">&lt;-</span> getMotifFromXML<span class="hljs-punctuation">(</span>XMLfile <span class="hljs-operator">=</span> filepath<span class="hljs-punctuation">)</span><br>motif_plot_with_tree <span class="hljs-operator">&lt;-</span> motif_with_tree<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> motif_extract<span class="hljs-punctuation">,</span> tree <span class="hljs-operator">=</span> treepath<span class="hljs-punctuation">)</span><br><br>p.tree <span class="hljs-operator">=</span> ape<span class="hljs-operator">::</span>read.tree<span class="hljs-punctuation">(</span>treepath<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  ggtree<span class="hljs-operator">::</span>ggtree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtree<span class="hljs-operator">::</span>geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>p.tree  <span class="hljs-operator">%&gt;%</span> <br>  aplot<span class="hljs-operator">::</span>insert_right<span class="hljs-punctuation">(</span>motif_plot_with_tree<span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu搭建shiny-server</title>
      <link href="/article/ubuntushiny/"/>
      <url>/article/ubuntushiny/</url>
      
        <content type="html"><![CDATA[<p>从这里开始写正文</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">root 权限进入</span><br>sudo su<br>useradd shiny # 添加shiny用户<br>passwd shiny # 修改shiny用户的密码<br><br>chmod +w /etc/sudoers # 修改权限<br>sudo vim /etc/sudoers # 编辑<br><span class="hljs-meta prompt_"># </span><span class="language-bash">root ALL=(ALL) ALL 该行，在下面添加 shiny ALL=(ALL:ALL) ALL</span><br>chmod -w /etc/sudoers # 收回权限<br><br>su - shiny # 切换到shiny用户<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装R</span><br>sudo apt-get update<br>sudo apt-get install r-base<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装shiny包</span><br>sudo su -c "R -e \"install.packages('shiny',repos='https://cran.rstudio.com/')\""<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装shiny server</span><br>sudo apt-get install gdebi-core<br>wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.17.973-amd64.deb<br>sudo gdebi shiny-server-1.5.17.973-amd64.deb<br></code></pre></td></tr></tbody></table></figure><p>安装 shiny-server 的时候参考官方最新的指导页面，<a href="https://www.rstudio.com/products/shiny/download-server/ubuntu/">点击访问</a>。</p><p>日志所在目录为：<code>/var/log/shiny-server</code>。需要修改配置文件，保证记录运行日志，否则可能找不到报错提示。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/shiny-server/shiny-server.conf<br>preserve_logs true; # 在最上面添加这行<br></code></pre></td></tr></tbody></table></figure><p>软件所在目录为：<code>/srv/shiny-server</code></p><p>安装完成后在浏览器输入 <code>IP:3838</code> 就能访问到示例界面了。默认的端口是 <code>3838</code> 端口，需要其他端口的需要自行调整。</p><p>基本管理：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 重启</span></span><br>sudo systemctl restart shiny-server<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#查看状态</span></span> <br>sudo systemctl status shiny-server <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#开启</span></span> <br>sudo systemctl start shiny-server <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#停止</span></span> <br>sudo systemctl stop shiny-server <br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>科研的正确打开方式-GOHREP</title>
      <link href="/article/gohrepbbq/"/>
      <url>/article/gohrepbbq/</url>
      
        <content type="html"><![CDATA[<h1 id="GOHREP—GOal-Hypothesis-Rationale-Experimental-Plan"><a href="#GOHREP—GOal-Hypothesis-Rationale-Experimental-Plan" class="headerlink" title="GOHREP—GOal, Hypothesis, Rationale, Experimental Plan"></a>GOHREP—GOal, Hypothesis, Rationale, Experimental Plan</h1><ul><li>GOal<ul><li>主要目的</li><li>在项目中想实现什么目的</li></ul></li><li>Hypothesis<ul><li>基于事实的猜想</li><li>熟悉相关概念</li></ul></li><li>Rationale<ul><li>描述支撑假设的发现或现象</li><li>通常是基于初步的数据</li><li>可以分为scientific和strategic<ul><li>scientific</li><li>strategic<ul><li>设备</li><li>资金</li><li>生物资源</li><li>其他</li></ul></li></ul></li></ul></li><li>Experimental Plan<ul><li>实验计划</li><li>方法和特定的实验验证假设</li><li>科学研究中典型的方法是设计实验对假设进行证伪</li><li>及时更细数据后更新假设</li></ul></li></ul><h1 id="BBQ—the-Big-Biological-Question"><a href="#BBQ—the-Big-Biological-Question" class="headerlink" title="BBQ—the Big Biological Question"></a>BBQ—the Big Biological Question</h1><h1 id="PLESI：the-four-independent-steps-of-experimental-research"><a href="#PLESI：the-four-independent-steps-of-experimental-research" class="headerlink" title="PLESI：the four independent steps of experimental research"></a>PLESI：the four independent steps of experimental research</h1><ul><li>PLanning：坐在电脑前想出来的</li><li>Execution：撸起袖子去干</li><li>Scoring：不放过实验结果中的每个细节，即使是相反的结果，也是有意义的。</li><li>Interpretation：统计分析+绘图解释观察到的结果。</li></ul><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 科研 </tag>
            
            <tag> 科研思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nature文章-PTI影响ETI</title>
      <link href="/article/ptiandeti/"/>
      <url>/article/ptiandeti/</url>
      
        <content type="html"><![CDATA[<p>CNS顶刊的文章，光看就很费劲，顶刊就是顶刊。</p><p>这是特殊的一段时间，答辩+拍照+聚餐+其他=毕业。在这个特殊的时间段，总是不能收心好好学习，一篇<strong>Nature</strong>的文章看几天都看不完。研究生三年，断断续续看了一些文献，都不成章法，就用这篇文章来总结一下自己看文献的思路和流程吧。</p><h1 id="阅读顺序"><a href="#阅读顺序" class="headerlink" title="阅读顺序"></a>阅读顺序</h1><p>我现在阅读文献的顺序基本是固定的，拿到文章先看标题，然后是摘要，要是看完摘要觉得有用的话再扫一眼图表，要是觉得都很OK，那就精读。精读的文献我会关注如下的内容：</p><p>每篇文献阅读完成呢我会关注如下的一些东西，包括文章内容有何不足之处、背景方面的积累、有什么新的研究方法、写作手法等。除此之外呢我还会关注文章中用到的软件、算法及特别吸引人的图表等。除了这些之外，文末的参考文献也是很值得关注的，从参考文献就能挖掘到不少东西。</p><h1 id="如何get最新文献"><a href="#如何get最新文献" class="headerlink" title="如何get最新文献"></a>如何get最新文献</h1><p>现在对我来说就两个途径：微信公众号和Stork。微信公众号推送的文献会很及时，也会有关键的解读，文章质量也是结果筛选的；Stork推送的文献就很新，我通常是浏览标题，看到感兴趣的看看摘要，要是看了摘要还很OK的话就下载下来精读。</p><h1 id="我是这样看文献的"><a href="#我是这样看文献的" class="headerlink" title="我是这样看文献的"></a>我是这样看文献的</h1><p>下面就以<strong>Pattern-recognition receptors are required for NLR-mediated plant immunity</strong>为例，简单说说我的阅读过程。</p><p>这个文献的最初是从微信公众号看到的，毕竟是<strong><em>Nature</em></strong>上的文章，而且还是经典之作。</p><p>首先看标题，文章的标题其实就是文章的主要内容：NLR介导的植物免疫需要模式识别受体的参与。然后顺便扫一眼作者：</p><blockquote><ul><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Minhang-Yuan">Minhang Yuan</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Zeyu-Jiang">Zeyu Jiang</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Guozhi-Bi">Guozhi Bi</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Kinya-Nomura">Kinya Nomura</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Menghui-Liu">Menghui Liu</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Yiping-Wang">Yiping Wang</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Boying-Cai">Boying Cai</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Jian_Min-Zhou">Jian-Min Zhou</a>, </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Sheng_Yang-He">Sheng Yang He</a> &amp; </li><li><a href="https://www.nature.com/articles/s41586-021-03316-6#auth-Xiu_Fang-Xin">Xiu-Fang Xin</a> </li></ul></blockquote><p>至少看到了几个植物免疫领域的杰出科学家：周俭民老师和何胜洋老师。（PS：有时候看看作者就知道往后应该多关注哪些研究者/研究机构）。</p><p>接下来是看摘要：</p><p>首先说了植物免疫对作物生产的重要性，然后阐述植物免疫由PTI和ETI两部分组成，紧接着就说PTI和ETI是由什么诱导激发的，最后引用文献说明PTI和ETI的激发机制和信号级联途径是不一样的。在说完这些背景后，就开始阐述研究结果，最后下结论：这个研究结果有什么用。</p><p>既然是精读的文章，那就从前言开始吧（PS：每个研究都是一个完整的故事，如果是跳跃阅读，那很可能无法把整个故事线串起来。）。</p><blockquote><p>PRRs是具有胞外配体结合阈的类受体激酶和蛋白（RLKs和RLPs）。PRRs能够感知多类微生物保守的分子模式。与PRRs相反的是，NLRs（主要）是胞内的蛋白，能够识别病原物释放进入细胞内的效应子。这些NLRs可以根据其N端结构阈分成CC型、TIR型及CC$_R$型。PRRs和NLRs信号激发的下游细胞响应大部分是重叠的，如防御相关基因表达、ROS产生及胼胝质沉积等。但是呢细胞表面和内部感知系统之间潜在的信号合作机制还不清楚。</p></blockquote><p>顶刊的前言是真的短。从前言部分就能看出这个研究要解决的就是PTI和ETI之间的关系。</p><p>选用拟南芥-丁香假单胞菌互作系统为整个研究的研究系统。</p><p>先是选用一个无毒且能够激发野生型植株发生ETI的菌株DC3000(<em>avrRpt2</em>)。但是用这个菌侵染两个PRR/共受体突变体植株（不能有效识别细菌相关的分子模式）时，并没有激发有效的ETI（下图a）。这个图a怎么看呢？横坐标表示的是不同的植株，第一个是野生型，另外两个是突变体，不同颜色表示的是不同菌株。可以看出DC3000(<em>avrRpt2</em>)激发寄主的ETI后，侵染部位的菌量显著减少。但是在突变体中，DC3000(<em>avrRpt2</em>)侵染后侵染部位的菌量比野生型多很多。虽然和DC3000侵染后形成的菌量有显著差异，但是比野生型多很多。从这个结果能得到什么结论呢？是“PRR/共受体调控ETI”还是“PRR/共受体参与ETI”呢？似乎还只能说PRR/共受体可能参与了ETI。为了进一步说明这个结果，还做了更多的处理（下图b）。ETI期间的超敏反应会导致寄主细胞的快速死亡。从表型（下图c）可以看到的是，在野生型植株中，DC3000(<em>avrRpt2</em>)侵染后几乎所有的叶片都“塌陷”（tissue collapse）了；但是两个突变体植株的叶片的“塌陷”情况缓解了很多。</p><p>那上面这些结果是想要表达什么呢？其实就是想说PRR/共受体影响ETI。到这里下一步该怎么办呢？是不是应该拿到更多更细的数据说明PRR/共受体确实影响了ETI呢？DC3000是研究拟南芥-细菌互作的模式菌株，研究其激发拟南芥ETI的机制。单是之前的研究发现野生型DC3000体内的36个效应子基因的效应子会干扰拟南芥的PTI和ETI。那就需要找一个完美的菌，也就是找个只能激发PTI和只能激发ETI的菌。选用的菌是D36E，这个菌没有DC3000的36个效应子基因，也没有冠菌素生物合成基因，只能激发寄主的PTI响应；而D36E(avrRpt2)只能合成分泌一个效应子AvrRpt2，不但能激发PTI，还能激发ETI。D36E毒性比DC3000若很多，但是D36E(avrRpt2)还是能显著地激发ETI（最左边的两个柱子）。但是在两个突变体中，D36E(avrRpt2)释放的效应子AvrRpt2激发的ETI几乎检测不到。其实这也再次说明当寄主没有PRR/共受体的时候，效应子激发的ETI是很弱的。</p><p>PTI和ETI过程都会有大量ROS生成，ROS可以直接杀菌，也能作为信号物质激发下游更多的免疫响应。植物病原互作基本都会选择ROS作指标。这个研究也对ROS进行检测了。使用的植物材料很特殊，是<em>Dex:avrRpt2</em>，这个是啥意思呢？表示的是<em>avrRpt2</em>这个基因的表达会被一个由地塞米松诱导的启动子驱动表达，也就是说地塞米松能够诱导<em>avrRpt2</em>这个基因表达，从而激发ETI。用不同的激发子处理拟南芥叶片。从下图c可以看到的是flg22和flg22+地塞米松都能能够有效地激发ROS的生成，大概在35min的时候达到第一个峰值。地塞米松单独激发的情况下，第一个时间段并没有出现ROS峰值。flg22单独诱导的时候会出现第二个峰至，但是明显比flg+22激发的ROS少。这表明flg22激发的ROS（PTI$^{ROS}$）是在35min内生成的。flg22+地塞米松诱导生成的ROS简写为ETI$^{ROS}$。ETI$^{ROS}$大概在处理后2-3h发生，并且持续较长时间。比较有趣的是，单独地塞米松诱导激发的时候第二阶段产生的ROS很少，还没有 flg22激发的PTI在第二阶段产生的ROS多，但是flg22+地塞米松联合处理后，第二阶段产生的ROS超级多。那flg22+地塞米松诱导激发的ROS是不是被flg22激发的PTI的信号影响了呢？</p><p>为了解决上述这个疑问，作者先用flg22+地塞米松处理叶片，然后在第35分钟的时候用双蒸水洗掉溶液中的是flg22和地塞米松，然后再分别加入双蒸水、flg22、地塞米松及flg22+地塞米松。在第二阶段，双蒸水处理和地塞米松处理长生的ROS的量及持续时间差不多，这说明当flg22被冲洗掉以后。但是单独flg22激发的ROS和flg22+地塞米松激发的ROS的量及持续时间类似。这个结果表明ETI$^{ROS}$的产生需要flg22的加入才能完成。</p><p>除此之外，还利用突变体进行验证。在<em>bbc</em>突变体（没有PRR/共受体）中，flg22在第一阶段并没有激发ROS的爆发，而且也几乎没有ETI$^{ROS}$生成。</p><p>上述这些结果要说明啥呢？主要就是说明ETI$^{ROS}$的生成需要PRR/共受体的参与。为什么呢？我的理解是，如果ETI$^{ROS}$的生成不需要PRR/共受体的参与，那地塞米松单独的诱导就应该能够激发ETI$^{ROS}$的生成，但是呢并没有；反而flg22+地塞米松共同诱导时，ETI$^{ROS}$才大量生成爆发。</p><p>从上面这些结果，我能感受到的是，为了说明白一个现象，应该从多方面入手。首先要选择合适的材料，也就是要选择合适的突变体材料，不同的目的选择不同的材料。另外呢，不仅仅要从表型入手，还要从一定的衡量指标入手，比如ROS的爆发这个指标。</p><p>似乎，到这里就卡住了。要是我，到这里就完全卡住了。作者下一步是去探究PTI、ETI相关的ROS在胞内爆发的位置是不是同一个位置。</p><p>用荧光染料H$_2$DCFDA进行染色。发现D36E(<em>avrRpt2</em>)在侵染野生型植株5h后，在质外体空间有大量的ROS，在两个突变体中ROS的量都很少。这个结果就这样一句话。然后阐述的是两类酶：NADPH氧化酶和过氧化物酶。这类个酶有啥用呢？这两类酶参与了病原相关质外体ROS生成。然后呢是探究这两类酶中的哪一类和ETI$^{ROS}$的生成相关。</p><p>怎么验证呢？那当然是使用化学抑制剂。选用的化学抑制剂是NADPH氧化酶抑制剂DPI（二苯基碘），过氧化物酶抑制剂SHAM（水杨基氧肟酸）和叠氮化钠（$NaN_3$）。从下图a看可以看出的是，DPI处理后第二阶段ROS的爆发显著减少，几乎没有。</p><p>为了进一步确认DPI抑制了第二阶段ROS的爆发，在前处理的第40分钟加入这三个抑制剂。为什么要选择第40分钟呢？因为这个时间点刚好在PTI$^{ROS}$之后，在ETI$^{ROS}$之前。同样只有DPI处理后第二阶段的ROS爆发才被明显抑制。这两个结果就说明ETI$^{ROS}$是由NADPH氧化酶介导的。</p><p>NADPH氧化酶不止一种，那研究哪种呢？在这个研究中选择的是RESPIRATORY BURST OXIDASE HOMOLOGUE D（RBOHD，呼吸爆发氧化酶同系物D）。D36E(<em>avrRpt2</em>)能够引起野生型植株质外体空间大量的ROS爆发，但是在<em>rbohd</em>突变体植株中几乎没有ROS的爆发。作者再找个地方的结论是RBOHD是连接PTI和ETI的关键分子节点。</p><p>先梳理下前面的思路和流程。先是通过比较细菌的量发现ETI成功激活需要PRR/核心受体的参与。再用只能激发PTI的菌D36E和能够激发PTI+ETI的菌D36E(<em>avrRpt2</em>)，以野生型和突变体（没有PRR/共受体）为寄主材料，进一步探究细菌的菌量，在再一次验证的基础上又对ROS进行衡量，在确定ETI$^{ROS}$的爆发需要PTI信号参与后，再对影响ETI$^{ROS}$的酶进行探究（PS：个人觉得从这里开始就是机制探究了，前面的都属于“表型”确证）。探究的方法是通过使用化学抑制剂。通过化学抑制剂发现NADPH氧化酶是影响的ETI$^{ROS}$的关键酶，NADPH酶不止一个，那先哪个呢？作者选的是RBOHD这个酶（我猜他们做了很多酶，发现这个还好，就选这个进行后续的验证）。</p><p>既然发现RBOHD是连接PTI和ETI的关键节点，那就应该对RBOHD进行更深入的研究。管它呢，转录组先安排上😂。从转录组（下图d）可以看到的是，野生型植株在被D36E和D36E(<em>avrRpt2</em>)侵染后，<em>RBOHD</em>的表达量都比CK的提高了，但是呢D36E(<em>avrRpt2</em>)侵染后<em>RBOHD</em>表达量更高。我们可以看到的是，在突变体<em>bbc</em>中，D36E几乎没有诱导<em>RBOHD</em>的表达，但是D36E(<em>avrRpt2</em>)侵染后，<em>bbc</em>这个突变体中<em>RBOHD</em>的表达量显著增强。这个地方就有点奇怪了。按理说在野生型植株中，D36E(<em>avrRpt2</em>)能够激发PTI+ETI，<em>RBOHD</em>的表达量确实会很高。但是在<em>bbc</em>突变体植株中，是没有PRR/共受体的，也就是没有PTI的发生的，但是<em>RBOHD</em>的表达量却比野生型的还高。作者从这个地方看出来的是在ETI过程中，PRR信号会导致<em>RBOHD</em>出现翻译后调控（修饰）。到这个地方这个结果就没有更多的解释了。下一步作者谈到的是ROS产生的过程中CPKs和BIK1等激酶会参与磷酸化RBOHD（PS：我觉得，蛋白质翻译后修饰的方式有很多种，磷酸化是最常见的，因此关注磷酸化）。</p><p>下一步呢就对这两个激酶的功能进行验证，看看是谁在磷酸化RBOHD，从而影响ROS的合成。还是利用突变体进行染色，发现在突变体<em>bik1</em>中，ROS的生成明显减少，但是在<em>cpk</em>的突变体中ROS的生成和野生型差不多（下图）。</p><p>在确定是BIK1在起作用后，就去看看在PTI和ETI的过程中，RBOHD磷酸化水平是不是有差异（下图）。可以看到的是，在野生型植株中，单独的地塞米松能够引起RNOHD轻微的磷酸化，flg22+地塞米松会引起RBOHD更强烈的磷酸化。但是在<em>bbc</em>突变体中没有观察到磷酸化。这也就说明PTI信号对RBOHD的磷酸化是重要的。<em>bbc</em>突变体没有PRR/共受体，那也就不能产生PTI信号，没有PTI信号刺激，没有发生磷酸化，那也就是说PTI信号影响RBOHD的磷酸化。如果RBOHD的磷酸化不需要PTI信号，那在<em>bbc</em>突变体中，地塞米松或者flg22+地塞米松处理下应该能够看到RBOHD的磷酸化。这个结果再次说明ETI过程中RBOHD磷酸化的发生需要PRR/共受体的参与才能完成。</p><p>除此之外呢，还发现RBOHD的磷酸化需要BIK1的参与才能完成（下图）。</p><p>从上面这几个结果得到一个结论：PTI和ETI都在影响RBOHD生成ROS，其中NLR信号影响了RBOHD的丰度，PRR-BIK1信号影响了RBOHD的全活性。其实也就是ETI信号影响RBOHD的多少，而PTI信号+ETI信号则影响着RBOHD的功能。</p><p>RBOHD的激活需要PTI信号，而且在ETI期间，RBOHD的表达有限制的提高，这是不是意味着ETI不仅仅选择PTI通路中的某些成分作为其机制，还选择RBOHD作为其机制呢？说简单点就是ETI的过程中是不是PTI成分和RBOHD都参与了呢？</p><p>怎么解决上面这个问题呢？还是转录组！</p><p>从上图c可以看到的是，在D36E(<em>avrRpt2</em>)侵染后3小时，就已经有大量的基因的转录表达发生了变化。怎么看呢？D36E侵染后3小时，只有3820个基因发生变化；D36E(<em>avrRpt2</em>)侵染后3小时，有7967个基因发生变化。这也就说明3个小时内，c的效应子AvrRpt2就能够进入信号内激发ETI。值得注意的是，不管是在野生型还是突变体中，D36E(<em>avrRpt2</em>)侵染后，差异基因的表达模式类似（下图d最右边）。这个就很奇怪了啊，在<em>bbc</em>突变体中，按理说是没有PTI响应的，只有ETI，那PTI相关的那部分基因的表达就应该有表现出差异，但是并没有，反而是和ETI相关的基因的表达模式类似。这说明啥呢？这表明ETI在被激发后，能够重新影响PTI相关基因的全局表达。水杨酸、茉莉酸及乙烯相关的差异基因的表达模式也类似（下图e-g）。</p><p>在这些差异基因中，从<em>bbc</em>这个突变体被D36E(<em>avrRpt2</em>)侵染后有272个差异基因。其中一些<em>WRKY</em>相关的基因表达下调，还有一个基因—<em>FRK1</em>（flg22激发的PTI过程中冠菌素的marker基因）的表达也下调（下图）了。这个结果能说明啥呢？说明WRKY-FRK1是免疫系统中一个独立的分支。</p><p>从转录组的数据中他们还发现BIK1影响了<em>WRKY22</em>及<em>WRKY29</em>等相关基因的表达（下图）。这说明了啥呢？说明BIK1是ETI$^{ROS}$爆发的一个整合点，也是ETI过程中表达的一个基因集。</p><p>再进一步对基因表达进行分析发现ETI确实增强了免疫相关基因的表达（下图）。</p><p>似乎还不够😂。进一步对PTI信号西瓜基因进行分析。发现D36E能够诱导PTI相关基因的表达轻微上调（下图），但D36E(<em>avrRpt2</em>)的诱导效应更强。也就是说这些本来是和PTI相关的基因，却受到ETI的诱导调控（这就是另外一篇文章了😁）。</p><p>不仅仅是对基因的转录水平进行比较，还对蛋白水平进行了比较：</p><p>总的来说就是PTI信号能够很快地诱导PTI相关基因的表达。</p><p>这篇文章主要的内容就是这些了。</p><h1 id="一句话总结"><a href="#一句话总结" class="headerlink" title="一句话总结"></a>一句话总结</h1><p>有效的ETI激发需要PRR及其共受体的参与才能完成。</p><h1 id="阅读收获"><a href="#阅读收获" class="headerlink" title="阅读收获"></a>阅读收获</h1><p>阅读文献必须要有收获才行，不然就白读了。我精读晚这篇文献，有如下这些收获：</p><ul><li>完善对植物免疫系统的认识；</li><li>对突变体有了新认识，随着技术的发展，完全可以获得特定需求的突变体，尤其是地塞米松诱导ETI这个突变体，实在是太赞了，和flg22一样让我好奇；</li><li>数据分析思路，包括生物学数据和转录组数据等等的分析，要从图中看到更多的信息，而不是简单的“谁高谁低，有没有差异”。</li></ul><p>阅读顶刊就是很累，需要不断查阅资料，下面这些是我在看这个文献时查阅的资料，还不包括浏览器浏览的。阅读顶刊是挑战，也是对自己的知识体系的更新和梳理。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>水稻-稻瘟病互作转录组分析</title>
      <link href="/article/riceblast/"/>
      <url>/article/riceblast/</url>
      
        <content type="html"><![CDATA[<p>看到这样一篇文献$^{[1]}$，利用转录组研究水稻-稻瘟病互作过程中的核心基因。想着水稻-稻瘟病互作中转录组研究还有啥好做的呢，结果仔细一看，直呼精彩，尤其是转录组数据分析思路何技巧，让我受益匪浅。</p><h1 id="试验设计"><a href="#试验设计" class="headerlink" title="试验设计"></a>试验设计</h1><p>首先是试验设计很巧妙，利用一个感病品种Nipponbare和抗性品种Hui1586为材料，在温室进行稻瘟病接种，然后12h、24h、36h及48h进行采样。每个时间点都设置了对照。对叶片进行转录组分析。</p><ul><li>间隔12h可以把生物钟的影响考虑进去；</li><li>抗感品种可以探究在防御稻瘟病菌过程中亲和/非亲和响应之间的差异；</li><li>每个时间点都设置对照，可以进一步探究生物钟的影响。</li></ul><h1 id="结果解读"><a href="#结果解读" class="headerlink" title="结果解读"></a>结果解读</h1><p>从PCA和层次聚类可以看出不同时间段的处理是分开的，不管是接种还是没接种，也就说时间变化是最大的影响因素。尤其是从层次聚类可以看出的是，CK（$H_2O$）和处理是明显分开的，每个时间段都是这样。这表明稻瘟病菌的侵染对水稻基因的转录表达影响明显。但是值得注意的是，基因的转录表达并不是随着时间变化的梯度变化的，12个小时之后并不是24小时，而是36小时。但是很明显的可以看出接种稻瘟病菌12小时后水稻基因的转录表达和其余三个时间段完全不一样。</p><p>进一步分析基因表达上调下调的情况，发现不管是抗性品种还是感病品种，在接种12小时后基因的转录表达变化最大，这个就和之前的研究不一样，之前的研究发现稻瘟病菌侵染24小时的时候基因的变化最明显。作者人为稻瘟病侵染后水稻基因表达变化最显著的时间点还在12小时之前，需要更多的时间点来证明（注：我猜测他们正在做这个）。比较抗感品种差异基因，发现全部差异表达基因中有8211个是共有的，也就说明水稻在响应稻瘟病菌侵染的过程中大量基因的转录表达发生了变化。抗感品种中特异性表达以响应稻瘟病侵染的基因数量差不多。这也说明抗感水稻品种在响应稻瘟病侵染的过程中，部分基因是特异性的。</p><p>为了进一步证明抗感品种响应稻瘟病过程中具有差异，还做了染色，36小时和48小时的结果差异是很明显的。</p><p>抗感品种之间的差异很可能是由基础免疫差异导致的，对CK处理下两个水稻品种进行比较（下图）：很有趣是，即使没有稻瘟病菌的侵染，两个水稻品种的差异表达基因在12h的时候也是最多的，而且差异基因数量随着时间变化在逐渐减少。通过韦恩图分析发现有1331个基因在48小时内的转录表达均有差异。而且对这些差异基因进行KEGG和GO富集分析，发现这些差异基因多和防御相关。通常分析到这里就结束了，但是作者还研究了差异基因中类受体激酶和NLR受体相关基因的比例，发现在这1331个差异基因中，类受体激酶及NLR相关基因所占的比例远比基因组中的比列高，也就是说抗感差异品种的基础免疫差异是很明显的，基础免疫响应过程中富集到的与类受体激酶及NLR受体相关的基因的数量有明显差异的。</p><p>在证明抗感品种的基础免疫具有差异以后，紧接着就应该看稻瘟病菌侵染对水稻基因转录表达的影响。首先是常规的韦恩图分析，首先可以看出在稻瘟病菌侵染后，转录表达发生变化的基因中上调的占多数。还是和之前的结果一样，12小时时发生变化的基因是最多的。然后就对12小时的差异基因进行分析，也就是说稻瘟病菌侵染后的12小时内，水稻植株基因的转录表达发生了急剧变化。KEGG和GO富集发现，12小时的差异基因多和蛋白合成相关，如KEGG中的“Ribosome”及GO中的“translation”。从这个结果作者人为水稻对稻瘟病菌响应的过程中，蛋白质合成发生了明显的变化。将蛋白合成相关的基因进行进一步的研究，进一步证明了该结果。整个部分的结果说明水稻在响应稻瘟病菌侵染的过程中蛋白质相关的机制是很重要的影响因素，其次也可以看出抗性品种中这种蛋白相关基因的变化更为明显。</p><p>这个文章的主要目的是找到核心基因，怎么找呢？直接对抗感品种中差异基因的核心部分基因再找核心，也就是先找每个品种中随之时间变化都显著变化的基因，然后再从这些持续变化的核心基因中找交集，这样就能找到抗感品种中都被稻瘟病菌明显诱导转录表达的基因（353个）。然后将这353个基因绘制热图，发现这353个基因可以分成两类，一类是在稻瘟病菌侵染后表达明显上调的基因，另外一部分是表达下调的基因。然后对表达上调的321个基因进行KEGG富集分析，发现这些基因和植物免疫相关，如二萜化合物的生物合成、黄酮的生物合成、植物-病原互作及MAPK信号通路等。这个结果表明在稻瘟病菌侵染的过程中，这321个基因一直都在做出响应，也就把这321个基因定义为“核心基因”。</p><p>现在有个问题是，“你以为你以为的就是你以为的么？”。你说这些是核心基因就一定是吗？为了进一步证明这些记忆是核心基因，作者从NCBI的GEO数据库中找了2308个基因探针数据和305个转录组数据，探究这些基因在这些研究中的转录表达情况。结果发现这321个基因在水稻抵御水稻白叶枯病、稻曲病及干旱胁迫中都有明显作用，尤其是免疫响应，都显著地上调了。进一步的还对这321个基因中的转录因子进行了研究。</p><p>似乎到这里就结束了，毕竟核心基因（集）已经找到了，还做了转录因子探究。但是测了那么多样品，不找几个基因敲一下，都好像不完整。然后就根据FPKM值找了三个基因进行敲除验证。其中<em>Perox</em>负向调控水稻对稻瘟病抗性，<em>OsMT1a</em>和<em>OsMT1b</em>正向调控水稻对稻瘟病的抗性。</p><h1 id="文献收获"><a href="#文献收获" class="headerlink" title="文献收获"></a>文献收获</h1><ul><li>首先是get到生长-免疫平衡的文献，之前找了好久一直没有找到；</li><li>转录组分析策略：<ul><li>不要盯着一个KEGG结果或者是GO结果分析；</li><li>KEGG和GO结果相互验证；</li><li>某些很大的KEGG通路或者GO term也是有意义的，需要足够的背景知识做支撑。</li></ul></li><li>利用公共数据库验证自己的分析结果；</li><li>利用FPKM值得筛选关键基因；</li><li>植物转录因子预测：<ul><li>发表在MP上的iTAK:<a href="https://doi.org/10.1016/j.molp.2016.09.014">https://doi.org/10.1016/j.molp.2016.09.014</a></li><li>植物转录因子数据库:<a href="http://plntfdb.bio.uni-potsdam.de/v3.0/">http://plntfdb.bio.uni-potsdam.de/v3.0/</a> (暂时打不开了)</li></ul></li></ul><p>更多内容详见笔记:<a href="https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light">https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light</a></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>Yang, D., Li, S., Xiao, Y., Lu, L., Zheng, Z., Tang, D. and Cui, H. (2021), Transcriptome analysis of rice response to blast fungus identified core genes involved in immunity. <strong><em>Plant Cell Environ</em></strong>. . <a href="https://doi.org/10.1111/pce.14098">https://doi.org/10.1111/pce.14098</a></p></blockquote><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分子生物学 </tag>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL设置内存和线程数</title>
      <link href="/article/wslncs25/"/>
      <url>/article/wslncs25/</url>
      
        <content type="html"><![CDATA[<p>从这里开始写正文</p><ul><li><code>Windows + R</code> 键，输入 <strong>%UserProfile%</strong> 并运行进入用户文件夹；</li><li>新建一个 <code>{%  label .wslconfig purple %}</code> 文件，写入下面的内容：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">[wsl2]<br>memory=30G<br>swap=12G<br>processors=12<br></code></pre></td></tr></tbody></table></figure><ul><li>先关闭WSL：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wsl --shutdown<br></code></pre></td></tr></tbody></table></figure><ul><li>再开启即可：</li></ul><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wsl<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>放弃柱状图吧</title>
      <link href="/article/fqbar233/"/>
      <url>/article/fqbar233/</url>
      
        <content type="html"><![CDATA[<h1 id="文献图表"><a href="#文献图表" class="headerlink" title="文献图表"></a>文献图表</h1><p>直接是刷新了我的认知：</p><h1 id="文献总结"><a href="#文献总结" class="headerlink" title="文献总结"></a>文献总结</h1><ul><li>不同的分布可以得到相同的柱状图和误差线；</li></ul><ul><li>两个group的标准误相同的时候样品量越大的组的标准差越大：</li></ul><script type="math/tex; mode=display">SE = \frac{SD}{\sqrt{N}}</script><ul><li>成对样品的柱状图相同的情况下可以有多种实际分布情况：</li></ul><ul><li>T-test和Anova是在服从正态分布且没有离群值的时候才适用；</li><li>非参数检验，如Wilcox秩和检验是不考虑数据的分布的；</li><li>样品量足够小或者数据是分段的时候最好选择非参数检验；</li><li>使用非参数检验的时候最好的展示中位数，而不是均值；</li><li>数据量足够小的时候最好的把所有数据点都进行展示。</li></ul><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>Weissgerber T L, Milic N M, Winham S J, et al. Beyond bar and line graphs: time for a new data presentation paradigm[J]. PLoS biology, 2015, 13(4): e1002128.</p></blockquote><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu部署bookdown</title>
      <link href="/article/85985tgy/"/>
      <url>/article/85985tgy/</url>
      
        <content type="html"><![CDATA[<ol><li>安装Nginx：</li></ol><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install nginx<br></code></pre></td></tr></tbody></table></figure><ol><li><p>找个位置存放<code>{% label bookdown purple %}</code>编译好的文件夹，里面包含了整个的静态文件，如我的是<code>{% label book4xiang purple %}</code>。</p></li><li><p>修改配置文件：</p></li></ol><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /etc/nginx/conf.d/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建一个bookdown.conf,输入下方内容</span><br><br><br>server {<br>  server_name static.naice.me; # 你的域名或者IP <br>  root /www/static-web/static-web; # 第2步文件路径，使用绝对路径<br>  index index.html; <br>  location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|js|pdf|txt){<br>    root /www/static-web/static-web;# 第2步文件路径，使用绝对路径<br>  } <br>}<br></code></pre></td></tr></tbody></table></figure><ol><li>重启Nginx：</li></ol><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart nginx<br></code></pre></td></tr></tbody></table></figure><p>现在就可以通过域名或者IP访问你的<code>{%  label bookdown purple %}</code>书籍了。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> R </tag>
            
            <tag> Nginx </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> bookdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx端口转发实现80端口访问shiny-server</title>
      <link href="/article/157884gh/"/>
      <url>/article/157884gh/</url>
      
        <content type="html"><![CDATA[<p>在<code>{%  label /etc/nginx/sites-enabled/ purple %}</code>下的<code>{%  label default purple %}</code>文件种添加如下内容：</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> {<br>    <span class="hljs-attribute">server_name</span> www.test.com <span class="hljs-comment"># 你的shiny的域名</span><br>    listen <span class="hljs-number">80</span>;<br><br>    <span class="hljs-section">location</span> / {<br>        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8080;<br>        <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$host</span>:<span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><p>然后重启<code>{%  label Nginx purple %}</code>，输入<code>{%  label 你的shiny的域名/shiny名称 purple %}</code>即可访问。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> Shiny </tag>
            
            <tag> Nginx </tag>
            
            <tag> 端口转发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转录组Htseq流程</title>
      <link href="/article/1589gh89/"/>
      <url>/article/1589gh89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> subprocess<br><br><span class="hljs-comment">#os.chdir('G:\\33Pan-genome-RNA-Seq\\fastqc')</span><br><br>files = os.listdir(<span class="hljs-string">'data/fastq/'</span>)<br><br>samples = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> files:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>.endswith(i,<span class="hljs-string">'fastq'</span>):<br>        samples.append(<span class="hljs-built_in">str</span>.split(i,<span class="hljs-string">'_'</span>)[<span class="hljs-number">0</span>])<br><br>samples = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(samples))<br><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">'run-this-code.sh'</span>,<span class="hljs-string">'w'</span>)<br><br><span class="hljs-comment"># 创建文件夹</span><br>mkdir = <span class="hljs-string">'mkdir fastqc\n'</span><br>f.write(mkdir)<br>mkdir = <span class="hljs-string">'mkdir mapping\n'</span><br>f.write(mkdir)<br>mkdir = <span class="hljs-string">'mkdir counts\n'</span><br>f.write(mkdir)<br>mkdir = <span class="hljs-string">'mkdir bam\n'</span><br>f.write(mkdir)<br>mkdir = <span class="hljs-string">'mkdir bam.stat\n'</span><br>f.write(mkdir)<br><br><span class="hljs-comment"># 构建基因组索引等</span><br><span class="hljs-comment"># gff2gtf = 'gffread data/genome/*.gff* -T -o data/genome/genome.gtf'</span><br><span class="hljs-comment"># f.write(gff2gtf)</span><br><span class="hljs-comment"># extract_exons = 'hisat2_extract_exons.py data/genome/genome.gtf &gt; data/genome/exon.txt'</span><br><span class="hljs-comment"># f.write(extract_exons)</span><br><span class="hljs-comment"># extract_splice_sites = 'hisat2_extract_splice_sites.py data/genome/genome.gtf &gt; data/genome/ss.txt'</span><br><span class="hljs-comment"># f.write(extract_splice_sites)</span><br><span class="hljs-comment"># mkdir = 'mkdir data/index'</span><br><span class="hljs-comment"># f.write(mkdir)</span><br><span class="hljs-comment"># build_index = 'hisat2-build -p 10 data/genome/*.fasta --ss data/genome/ss.txt --exon data/genome/exon.txt data/index/index'</span><br><span class="hljs-comment"># f.write(build_index)</span><br><br>fastqc = <span class="hljs-string">'fastqc -t 20 data/fastq/*.fastq -o fastqc/\n'</span><br>f.write(fastqc)<br><br>down = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> samples:<br>    <span class="hljs-comment"># alignment</span><br>    down += <span class="hljs-number">1</span><br><br>    print_info  =<span class="hljs-string">'echo 开始运行：'</span> + i + <span class="hljs-string">'\n'</span><br>    f.write(print_info)<br><br>    par_0 = <span class="hljs-string">'hisat2 -p 10 -x data/index/sanqi.index'</span><br>    par_1 = <span class="hljs-string">' -1 data/fastq/'</span> + i + <span class="hljs-string">'_1.fastq'</span><br>    par_2 = <span class="hljs-string">' -2 data/fastq/'</span> + i + <span class="hljs-string">'_2.fastq'</span><br>    par_3 = <span class="hljs-string">' -S mapping/'</span> + i + <span class="hljs-string">'.sam\n'</span><br><br>    hisat2 = par_0 + par_1 + par_2 + par_3<br>    f.write(hisat2)<br><br>    par_4 = <span class="hljs-string">'samtools sort -@ 10 -o bam/'</span> + i + <span class="hljs-string">'.sorted.bam mapping/'</span> + i + <span class="hljs-string">'.sam\n'</span><br><br>    f.write(par_4)<br><br>    del_sam = <span class="hljs-string">'rm '</span> + <span class="hljs-string">'mapping/'</span> + i + <span class="hljs-string">'.sam\n'</span><br>    f.write(del_sam)<br><br>    <span class="hljs-comment"># bam stat</span><br>    flagstat = <span class="hljs-string">'samtools flagstat -@ 20 '</span> + <span class="hljs-string">'bam/'</span> + i + <span class="hljs-string">'.sorted.bam &gt; bam.stat/'</span> + i + <span class="hljs-string">'.bam.stat.txt\n'</span><br><br>    f.write(flagstat)<br><br>    par_8 = <span class="hljs-string">'samtools index bam/'</span> + i + <span class="hljs-string">'.sorted.bam\n'</span><br><br>    f.write(par_8)<br><br>    par_1 = <span class="hljs-string">'htseq-count -f bam -r name -i gene_id -s yes -t exon -m union '</span><br>    par_2 = <span class="hljs-string">'bam/'</span> + i + <span class="hljs-string">'.sorted.bam'</span> + <span class="hljs-string">' data/genome/genome.gtf'</span><br>    par_3 = <span class="hljs-string">' &gt; '</span> +  <span class="hljs-string">'counts/'</span> +  i + <span class="hljs-string">'.count.txt\n'</span><br>    htseq = par_1 + par_2 + par_3<br>    f.write(htseq)<br><br>    <br>    print_info  =<span class="hljs-string">'echo 已完成：'</span> + i + <span class="hljs-string">'\n'</span><br>    f.write(print_info)<br>    print_info  =<span class="hljs-string">'echo 已完成'</span> + <span class="hljs-built_in">str</span>(down) + <span class="hljs-string">'/'</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(samples)) + <span class="hljs-string">'\n'</span><br>    f.write(print_info)<br>    print_info  =<span class="hljs-string">'echo =============================================\n'</span><br>    f.write(print_info)<br><br>    <span class="hljs-keyword">if</span> down == <span class="hljs-built_in">len</span>(samples):<br>        merge_counts = <span class="hljs-string">'python merge.counts.py\n'</span><br>        f.write(merge_counts)<br>        print_info  =<span class="hljs-string">'echo Counts矩阵合并完成！'</span> + <span class="hljs-string">'\n'</span><br>        f.write(print_info)<br>        getTPMandFPKM = <span class="hljs-string">'Rscript getTPMandFPKM.R\n'</span><br>        f.write(getTPMandFPKM)<br>        print_info  =<span class="hljs-string">'echo TPM与FPKM提取完成！'</span> + <span class="hljs-string">'\n'</span><br>        f.write(print_info)<br><br>f.close()<br><br>subprocess.call(<span class="hljs-string">'sh run-this-code.sh'</span>,shell=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件使用 </tag>
            
            <tag> RNA-Seq </tag>
            
            <tag> Htseq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转录组Ballgown流程</title>
      <link href="/article/12358ght/"/>
      <url>/article/12358ght/</url>
      
        <content type="html"><![CDATA[<h1 id="前处理："><a href="#前处理：" class="headerlink" title="前处理："></a>前处理：</h1><ul><li><p><code>gff</code>转换成<code>gtf</code>：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gffread Oryza_sativa.IRGSP-1.0.51.gff3 -T -o rice.gtf<br></code></pre></td></tr></tbody></table></figure></li><li><p>提取外显子和可变剪切：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hisat2_extract_exons.py IRGSP-1.0_representative_transcript_exon_2021-05-10.gtf &gt;IRGSP-1.0.exon<br><br> hisat2_extract_splice_sites.py IRGSP-1.0_representative_transcript_exon_2021-05-10.gtf &gt;IRGSP-1.0.ss<br></code></pre></td></tr></tbody></table></figure></li><li><p>构建基因组索引：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hisat2-build -p 10 IRGSP-1.0_genome.fasta --ss rice.ss --exon rice.exon ./index/rice.index<br></code></pre></td></tr></tbody></table></figure></li></ul><h1 id="在分析目录下创建文件夹"><a href="#在分析目录下创建文件夹" class="headerlink" title="在分析目录下创建文件夹"></a>在分析目录下创建文件夹</h1><ul><li><code>data</code>：存放原始的<code>fastq</code>数据；</li><li><code>fastqc</code>：用于存放原始文件质控的结果；</li><li><code>mapping</code>：用于存放原始数据mapping到参考基因组的结果；</li><li><code>bam</code>：用于存放<code>sam</code>转换后的<code>bam</code>文件；</li><li><code>bam.stat</code>：用于存放<code>bam</code>统计结果；</li><li><code>stringtie</code>：用于存放转录本拼接结果；</li><li><code>ballgown</code>：用于存放ballgown的结果。</li></ul><h1 id="批量比对并将sam文件转换成bam文件后输出比对的统计结果："><a href="#批量比对并将sam文件转换成bam文件后输出比对的统计结果：" class="headerlink" title="批量比对并将sam文件转换成bam文件后输出比对的统计结果："></a>批量比对并将<code>sam</code>文件转换成<code>bam</code>文件后输出比对的统计结果：</h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> subprocess<br><br><span class="hljs-comment">#os.chdir('G:\\33Pan-genome-RNA-Seq\\fastqc')</span><br><br>files = os.listdir(<span class="hljs-string">'data/'</span>)<br><br>samples = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> files:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>.endswith(i,<span class="hljs-string">'fastq'</span>):<br>        samples.append(<span class="hljs-built_in">str</span>.split(i,<span class="hljs-string">'.'</span>)[<span class="hljs-number">0</span>])<br><br>samples = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(samples))<br><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">'step4.hisat2.alignment.stringtie.sh'</span>,<span class="hljs-string">'w'</span>)<br><br>down = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> samples:<br><br>    <span class="hljs-comment"># alignment</span><br><br>​    down += <span class="hljs-number">1</span><br><br>​    print_info  =<span class="hljs-string">'echo 开始运行：'</span> + i + <span class="hljs-string">'\n'</span><br>​    f.write(print_info)<br><br>​    par_0 = <span class="hljs-string">'hisat2 -p 20 -x /mnt/d/Docker/genefamily/sanqi_WRKY/results/RNA-Seq/data/index/sanqi.index'</span><br>​    par_1 = <span class="hljs-string">' -U data/'</span> + i + <span class="hljs-string">'.fastq'</span><br>​    par_2 = <span class="hljs-string">' -S mapping/'</span> + i + <span class="hljs-string">'.sam\n'</span><br><br>​    hisat2 = par_0 + par_1 + par_2<br>​    f.write(hisat2)<br><br>​    par_4 = <span class="hljs-string">'samtools sort -@ 20 -o bam/'</span> + i + <span class="hljs-string">'.sorted.bam mapping/'</span> + i + <span class="hljs-string">'.sam\n'</span><br><br>​    f.write(par_4)<br><br>​    del_sam = <span class="hljs-string">'rm '</span> + <span class="hljs-string">'mapping/'</span> + i + <span class="hljs-string">'.sam\n'</span><br>​    f.write(del_sam)<br><br>    <span class="hljs-comment"># bam stat</span><br><br>​    flagstat = <span class="hljs-string">'samtools flagstat -@ 20 '</span> + <span class="hljs-string">'bam/'</span> + i + <span class="hljs-string">'.sorted.bam &gt; bam.stat/'</span> + i + <span class="hljs-string">'.bam.stat.txt\n'</span><br><br>​    f.write(flagstat)<br><br>​    par_8 = <span class="hljs-string">'stringtie  -p 20 -G /mnt/d/Docker/genefamily/sanqi_WRKY/results/RNA-Seq/data/raw/sanqi.gtf'</span><br>​    par_9 = <span class="hljs-string">' -B -o stringtie/'</span> + i + <span class="hljs-string">'.gtf'</span><br>​    par_10 = <span class="hljs-string">' -l '</span> + i + <span class="hljs-string">' bam/'</span> + i + <span class="hljs-string">'.sorted.bam\n'</span><br><br>​    stringtie = par_8 + par_9 + par_10<br>​    f.write(stringtie)<br>​    <br>​    print_info  =<span class="hljs-string">'echo 已完成：'</span> + i + <span class="hljs-string">'\n'</span><br>​    f.write(print_info)<br>​    print_info  =<span class="hljs-string">'echo 已完成'</span> + <span class="hljs-built_in">str</span>(down) + <span class="hljs-string">'/'</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(samples)) + <span class="hljs-string">'\n'</span><br>​    f.write(print_info)<br>​    print_info  =<span class="hljs-string">'echo =============================================\n'</span><br>​    f.write(print_info)<br>f.close()<br><br>subprocess.call(<span class="hljs-string">'sh step4.hisat2.alignment.stringtie.sh'</span>,shell=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></tbody></table></figure><h1 id="合并转录本："><a href="#合并转录本：" class="headerlink" title="合并转录本："></a>合并转录本：</h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>files = os.listdir(<span class="hljs-string">'stringtie/'</span>)<br><br>samples = []<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> files:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>.endswith(i,<span class="hljs-string">'.gtf'</span>):<br>        samples.append(<span class="hljs-built_in">str</span>.split(i,<span class="hljs-string">'.'</span>)[<span class="hljs-number">0</span>])<br><br>samples = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(samples))<br><br>f_1 = <span class="hljs-built_in">open</span>(<span class="hljs-string">'stringtie.gtf.merge.list.txt'</span>,<span class="hljs-string">'w'</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> samples:<br>    gtf = i + <span class="hljs-string">'.gtf\n'</span><br>    f_1.write(gtf)<br>f_1.close()<br><br>f_2= <span class="hljs-built_in">open</span>(<span class="hljs-string">'merge.gtf.sh'</span>)<br><br>par = <span class="hljs-string">'stringtie --merge -p 20 -G /mnt/d/Docker/genefamily/sanqi_WRKY/results/RNA-Seq/data/index/raw/sanqi.gtf -o merged.gtf stringtie.gtf.merge.list.txt'</span><br>f_2.write(par)<br>f_2.close()<br><br>subprocess.call(<span class="hljs-string">'sh merge.gtf.sh'</span>,shell=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></tbody></table></figure><h1 id="ballgown"><a href="#ballgown" class="headerlink" title="ballgown"></a><code>ballgown</code></h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> functools<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br><span class="hljs-comment">#os.chdir('G:\\33Pan-genome-RNA-Seq\\fastqc')</span><br><br>files = pd.read_table(<span class="hljs-string">'stringtie.gtf.merge.list.txt'</span>,header=<span class="hljs-literal">None</span>)<br><br>samples = []<br><br>num = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> files[<span class="hljs-number">0</span>]:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>.endswith(i,<span class="hljs-string">'.gtf'</span>):<br>        samples.append(<span class="hljs-built_in">str</span>.split(i,<span class="hljs-string">'.'</span>)[<span class="hljs-number">0</span>])<br><br>samples = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(samples))<br><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">'step6.ballgown.sh'</span>,<span class="hljs-string">'w'</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> samples:<br><br>    num += <span class="hljs-number">1</span><br><br>    print_info  =<span class="hljs-string">'echo 开始运行：'</span> + i + <span class="hljs-string">'\n'</span><br>    f.write(print_info)<br><br>    par_0 = <span class="hljs-string">'mkdir ballgown/'</span> + i + <span class="hljs-string">'\n'</span><br>    par_1 = <span class="hljs-string">'stringtie -e -B -p 20 -G merged.gtf'</span><br>    par_2 = <span class="hljs-string">' -o ballgown/'</span> + i + <span class="hljs-string">'/'</span> + i + <span class="hljs-string">'.gtf'</span><br>    par_3 = <span class="hljs-string">' bam/'</span> + i + <span class="hljs-string">'.sorted.bam'</span> + <span class="hljs-string">'\n'</span><br><br>    ballgown = par_0 + par_1 + par_2 + par_3<br><br>    f.write(ballgown)<br><br>    print_info  =<span class="hljs-string">'echo 已完成：'</span> + i + <span class="hljs-string">'\n'</span><br>    f.write(print_info)<br>    print_info  =<span class="hljs-string">'echo 已完成'</span> + <span class="hljs-built_in">str</span>(num) + <span class="hljs-string">'/'</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(samples)) + <span class="hljs-string">'\n'</span><br>    f.write(print_info)<br>    print_info  =<span class="hljs-string">'echo =============================================\n'</span><br>    f.write(print_info)<br>f.close()<br><br>subprocess.call(<span class="hljs-string">'sh step6.ballgown.sh'</span>,shell=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></tbody></table></figure><h1 id="提取FPKM值"><a href="#提取FPKM值" class="headerlink" title="提取FPKM值"></a>提取<code>FPKM</code>值</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>ballgown<span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># 提取FPKM</span><br><br>bg <span class="hljs-operator">=</span> ballgown<span class="hljs-operator">::</span>ballgown<span class="hljs-punctuation">(</span>dataDir <span class="hljs-operator">=</span> <span class="hljs-string">'ballgown/'</span><span class="hljs-punctuation">,</span> samplePattern <span class="hljs-operator">=</span> <span class="hljs-string">'SRR'</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#save(bg, file = '../step11-ballgown/all.ballgown.RData')</span><br><br>df.fpkm <span class="hljs-operator">=</span> bg<span class="hljs-operator">@</span>expr<span class="hljs-punctuation">[[</span><span class="hljs-string">"trans"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span>gene_id<span class="hljs-punctuation">,</span> starts_with<span class="hljs-punctuation">(</span><span class="hljs-string">'FPKM'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_sub<span class="hljs-punctuation">(</span>gene_id<span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>temp <span class="hljs-operator">==</span> <span class="hljs-string">'Pno'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  dplyr<span class="hljs-operator">::</span>select<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>temp<span class="hljs-punctuation">)</span><br><br>colnames<span class="hljs-punctuation">(</span>df.fpkm<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> stringr<span class="hljs-operator">::</span>str_replace<span class="hljs-punctuation">(</span>colnames<span class="hljs-punctuation">(</span>df.fpkm<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">'FPKM.'</span><span class="hljs-punctuation">,</span><span class="hljs-string">''</span><span class="hljs-punctuation">)</span><br><br>rownames<span class="hljs-punctuation">(</span>df.fpkm<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> df.fpkm<span class="hljs-operator">$</span>gene_id<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件安装 </tag>
            
            <tag> RNA-Seq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装Aspera</title>
      <link href="/article/hg52gt98/"/>
      <url>/article/hg52gt98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://ak-delivery04-mul.dhe.ibm.com/sar/CMA/OSA/09cne/0/ibm-aspera-connect-3.11.0.5-linux-g2.12-64.tar.gz<br><br>tar -zxvf ibm-aspera-connect-3.11.0.5-linux-g2.12-64.tar.gz<br><br>./ibm-aspera-connect-3.11.0.5-linux-g2.12-64.sh<br><br>echo """export PATH=\"/home/xiang/.aspera/connect/bin:\$PATH\" """ &gt;&gt; ~/.bashrc<br><br>source ~/.bashrc<br><br>ascp -h<br></code></pre></td></tr></tbody></table></figure><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钙离子介导的水稻免疫机制</title>
      <link href="/article/45g8weg6/"/>
      <url>/article/45g8weg6/</url>
      
        <content type="html"><![CDATA[<p>这是一篇让人读完以后叹为观止的文章，精彩，实在是精彩！</p><p>故事是这样开始的，在TP309（粳稻）育种群体中，发现一个很特殊的变种，这个变种携带了一个叫做<em><code>rod1</code></em>的基因，这个基因有什么特别的地方呢？通过田间试验和室内试验发现，携带了<em><code>rod1</code></em>基因的植株对水稻纹枯病、水稻稻瘟病和水稻白叶枯病这三种严重影响水稻生产的病害都具有广谱抗性（下图ABC）；而且，其植株体内的SA和JA的含量也比TP309的高很多（下图D）。</p><p>为了验证<em><code>rod1</code></em>的广谱抗性，利用常规的RNA-Seq对TP309和携带<em><code>rod1</code></em>的植株进行转录组测序，测序的结果可以说是非常明显了，但从热图上看是完全分开的（下图E），然后呢对这些差异基因进行GO富集分析，发现有几个很特殊的GO term在<em><code>rod1</code></em>里面没有，这几个通路分别是内肽酶、钙结合及DNA结合（下图F紫色的字）。<em><code>rod1</code></em>中显著富集到的GO term有离子结合、氧化酶等。于是，作者他们认为<em><code>rod1</code></em>中Ca$^{2+}$与ROS两者之间存在某种关系，导致其免疫上调。然后在田间观察TP309和<em><code>rod1</code></em>对水稻产量的影响，发现在自然田间条件下的话，<em><code>rod1</code></em>植株的单株产量远低于TP309的；但是在天然的稻瘟病苗圃中，<em><code>rod1</code></em>的单株产量远高于TP309。这个结果能说明啥呢？这个结果说明如果有病害侵染的话，<em><code>rod1</code></em>植株会表现得更好，也就是产量更高。</p><p>下一步要做的，肯定是把这个基因克隆出来，只有克隆出来，才能做进一步的深入研究。利用图位克隆技术在水稻的6号染色体附近大概53kb的一个区域定位到该基因（下图A），命名为<em><code>ROD1</code></em>；进一步比较了水稻参考基因组水稻品种Nippionbare、TP309及<em><code>rod1</code></em>在该区域的序列差异，发现<em><code>rod1</code></em>存在一个核苷酸的缺失，也就是TP309里面的是<code>ATGGG</code>，在<em><code>rod1</code></em>里面是<code>AT-GG</code>，中间少了个<code>G</code>（下图B）。为了确定他们鉴定的这个基因，利用遗传互补（也就是利用野生型基因补偿突变型基因使其恢复正常的表型）确认了该基因的功能（下图C）。</p><p>这个基因的蛋白长度大概是225个氨基酸长度，并且含有一个C2结构域（蛋白质激酶C保守结构域2，承担信号转导和细胞膜转运功能），这个结构域上还含有4个天冬氨酸残基（下图A）。然后利用玉米泛素启动子将<em><code>ROD1</code></em>过表达，过表达以后呢制作对水稻上的三种病害的抗性都降低了（下图DEFGH）。这个结果说明<em><code>ROD1</code></em>是水稻免疫抑制子，也就是它越表达，水稻的抗性越低。</p><p>不同的基因在植株体内表达的位点是不一样的，有的基因在根系表达多，有的基因在叶片中表达更旺盛。那<em><code>ROD1</code></em>主要是水稻植株的那个部位表达呢？通过原位杂交（<em><code>In situ hybridization</code></em>），发现<em><code>ROD1</code></em> 主要是在叶片上进行表达（下图B），而叶片更好是更多病原菌侵染的部位。而且在水稻植株被水稻白叶枯病菌侵染后，<em><code>ROD1</code></em> 的表达会被诱导上调（下图C）。<em><code>rod1</code></em>在田间生长的时候穗子比TP309短，穗子上的分支也更少（下图K），但是在过表达<em><code>ROD1</code></em> 后，穗子更长，产量也更高（下图KL）。这个结果表明<code>ROD1</code>在水稻的抗性和生长适应性两方面具有不同的作用。也就是<em><code>rod1</code></em>的抗性高，但是产量低；<em><code>ROD1</code></em> 的抗性低，但是产量高。这也符合植物生长-免疫平衡的基本原则。</p><p>再下一步是探究<code>ROD1</code>的同系物的分布情况，在开花植物中都有其同系物的存在，但是在苔藓等低等植物中没有其同系物的踪迹（下图AB）。这个结果表明ROD1这一类C2结构域蛋白出现在植物进化的较晚期。ROD1类蛋白在单子叶作物中有着极高的序列保守性，但是在拟南芥等十字花科的植物中却有着较高的多样性（下图B）。要是我分析，肯定是到这里就结束了，但是作者团队在这个地方提出的问题是“ROD1类蛋白在谷物类作物的免疫过程中是否有保守作用呢？”。于是呢，就用CRISPR/Cas9技术在玉米上搞了个突变体，结果发现突变体中<em><code>PR</code></em>基因的表达量更高，而且突变体对<em>R.solani</em> 的抗性更强（下图CDE）。这个结果加上前面的结果表明<em><code>ROD1</code></em>及其同系物在谷物中是一类特别的感病基因，在谷物免疫的过程中扮演者保守的功能。</p><p>前面提到<em><code>ROD1</code></em>蛋白结构含有1个C2结构域，那这个有什么用呢？C2结构域通常是Ca$^{2+}$感受器，这类结构域依赖Ca$^{2+}$与磷脂结合，从而将蛋白质靶向到特定的膜区域。那ROD1这个蛋白到底能不能和Ca$^{2+}$结合呢？能不能结合那肯定是要有个参照，怎么获得有效的参照呢？对这个蛋白的4个氨基酸残基进（因为C2结构域的氨基酸残基影响其和Ca$^{2+}$的结合）行突变，有单突变、双重突变、三重突变及四重突变（下图C）。利用微量热泳动方法来探究ROD1这个蛋白和Ca$^{2+}$的结合特性（下图D），图中的KD值的大小表示的是分子间的亲和性，越亲和的，其KD值越小。没有突变的ROD1和Ca$^{2+}$的KD值很小，而单位点突变和四重突变的KD值都很大，整整大了3个数量级。Ca$^{2+}$能够改变C2结构域的电位，使得C2结构与能够与磷脂进行结合。那下一步就是探究ROD1与不同脂质结合的能力与特异性（下图A）。从图中可以看到的是，ROD和PI(3,5)P2、PI(4)P及PI(5)P结合较好，但是Ca$^{2+}$螯合剂EGTA存在的时候，ROD1就不能与这些脂质进行结合。也就是说当没有Ca$^{2+}$的时候，ROD1是不能与磷脂进行结合的。</p><p>ROD1这个蛋白在哪里发挥功能呢？这也就需要对其进行定位。通过定位发现这个蛋白位于质膜周围的细胞外围空间（下图B）。但是将其4个氨基酸残基进行突变后都不同程度地出现了蛋白的降解（下图DE$_上$）。用<code>flg22</code>处理后，ROD1在质膜上的积累量更多（下图EF），这说明免疫激活促进了ROD1在质膜上的分布。</p><p>除了利用突变体看突变氨基酸残基后蛋白的定位，还检测突变不同的氨基酸位点后其抗性的变化，也就是过表达这些基因，不同程度的突变都导致对应植株的抗性降低，对三种病害的响应出奇一致（下图FGH）。不同位点的突变对植株的构型也有一定的影响（下图I）。</p><p>上述这些结果表明ROD1和Ca$^{2+}$结合后，进一步与磷脂结合，最后在质膜上“定居”。其实在这个部分已经能够看出，要是没有Ca$^{2+}$，那ROD1就“手足无措”了。</p><p>有了材料，有了表型，克隆到了基因，纯化到了蛋白，也知道这个基因能够影响植株的免疫，那下一步就是探究其免疫的机制。利用的方法是酵母双杂（Y2H）。首先是  以水稻稻瘟病互作的叶片建立一个cDNA文库，然后以ROD1为“鱼饵”去钓这个文库中与ROD1互作的蛋白。成功得到两个RING E3泛素连接酶，分别是RIP1和APIP6（下图）。进行更多试验后发现ROD1被RIP1和APIP6这两个蛋白泛素化（泛素化就是某个蛋白被加上一段标签，被加上标签的蛋白会被其他的细胞器所识别，大多被泛素化的蛋白的最终命运是降解）。</p><p>为了进一步验证RIP1和APIP6的功能，分别构建了敲除系和过表达系。果然不出意外，敲除系的植株的抗性都降低了，而过表达系植株的抗性都提高了。怎么理解呢？将这两个蛋白敲除后，ROD1就不能被泛素化，那它就不会降解，表达量较高，因此植株的抗性被抑制；将这两个蛋白过表达后，含量增加，ROD1被“疯狂”泛素化，也就是被疯狂降解，那植株的免疫就不会受到抑制，从而表现出较强的抗性。</p><p>除了RIP1和APIP6以外，酵母双杂还找到一个和ROD1互作的过氧化氢酶CatB。通过分裂荧光素酶互补试验和coIP发现ROD1和CatB是能够互作的（下图左AB）。过氧化氢酶能够清除ROS从而降低寄主的免疫水平。用CRISPR/Cas9将CatB敲除后，水稻植株体内<em><code>PR</code></em>基因的表达上调，植株对病害的抗性增强（下图右ABCD）。这说明CatB负向调控水稻对病害的免疫响应。</p><p>那ROD1和CatB是如何互作的呢？先用不同浓度的ROD1和CatB共同清除活性氧，可以发现的随着ROD1浓度的提高，CatB的活性增强，也就是说ROD1浓度越高，那CatB清楚的活性氧也就越多（下图C）；但是将基因<em><code>ROD1</code></em>进行突变后，蛋白ROD1介导的CatB清除活性氧的能力没有变化（下图D），也就是ROD1只有和Ca$^{2+}$结合后才能正常和CatB互作，从而清除ROS。怎么理解呢？前面说到，如果突变<em><code>ROD1</code></em>C1结构域上的4个氨基酸残基，那ROD1和Ca$^{2+}$结合的能力就降低了，没有Ca$^{2+}$结合，ROD1就不能正常介导CatB对ROS的清除。进一步提取活体植株体内的ROD1，发现TP309中CatB的活性都更搞（下图EF）。与之对应的是，TP309植株中H$_2$O$_2$的含量更低（下图GHI）。这些结果说明了啥呢？说明ROD1是通过介导ROS的清除来影响植株的免疫的。CatB这个蛋白主要定位在过氧化物酶体上，但是呢在质膜上也检测到了CatB的存在，当有ROD1存在的时候CatB在质膜上积累的量更多（下图JL），这样就说明了ROD1促进CatB在质膜上的定位。进一步利用本氏烟验证发现CatB能够在一定程度上清除由MLA10介导的过敏反应，当ROD1和CatB共同作用的时候这种过敏反应几乎完全消失了。上面这些结果表明ROD1首先将CatB募集到质膜能赶上，然后再激发CatB去清除活性氧。</p><p>找到这样一个基因，做完上述这些研究，其实已经很完美了。作者他们进一步探究这个基因在水稻群体中的变异情况。通过群体遗传分析发现<em>ROD1</em>这个位点上的核苷酸多态性很低，也就意味着这个位点在进化过程中发生了选择扫描事件（下图左A）。在约3000个水稻品种中，只有<em>indica</em> 这个亚种的<code>Tajima’s D</code>值是负值，也就意味着在<em>indica</em> 这个亚种中<em>ROD1</em>经历了不同的选择作用（下图B）。在这个基因的编码区发现了两个SNP，分别是SNP1$^{A/C}$和SNP2$^{G/C}$。第一个SNP是一个非同义的突变，在这个位点上脯氨酸变成了苏氨酸；第二个SNP是一个同义突变，编码的氨基酸没有发生改变。基于这两种SNP分类，可以将其分为三种单倍型（下图右A）。</p><p>随机选了178个含有这三种单倍型的水稻品种，调查其在田间对纹枯病的抗性（因为纹枯病还没有主效抗病基因），发现含有SNP1$^{A/C}$的水稻品种对纹枯病的抗性更强（下图D）。将这两种SNP导入到<em>rod1</em>中后发现SNP1$^{C}$的抗性基本和TP309持平，SNP1$^{A}$植株的抗性比<em>rod1</em>的弱一些（下图F），这个结果再次表明SNP1$^{A/C}$确实影响植株的基础免疫。为了进一步验证SNP1$^{A}$和SNP1$^{C}$的功能差异，他们构建了染色体片段替换系，发现携带SNP1$^{C}$的植株的抗性更弱（下图G），也就意味着携带SNP1$^{A}$的抗性更强，但是在产量上是没有差异的。进一步探究发现这两种单倍型对CatB的影响也不一样，SNP1$^{C}$对CatB的影响更大，也就意味着<em>ROD1</em>上单核苷酸的变异影响其与CatB的互作。为了探明SNP1$^{A/C}$的进化差异，比较了44个野生稻中<em>ROD1</em>的序列差异，发现只有4个野生稻携带了SNP1$^{C}$，剩下的40个都携带的是SNP1$^{C}$。SNP1$^{A}$主要存在于籼稻中，而SNP1$^{C}$主要存在于野生稻和粳稻中，而籼稻主要分布在热带和亚热带，而粳稻主要分布在温带，也就是说SNP1$^{C}$和SNP1$^{C}$的分布是有明显的分布差异的（下图H）。总之，这些结果表明<em>ROD1</em>等位基因的变化导致其清除ROS的能力有差异，也就导致了品种特异性的抗性差异。</p><p>之前鉴定到的与ROD1互作的蛋白APIP6有报道它能够和稻瘟病菌的效应子AvrPiz-t互作并将其降解，RIP1和APIP6高度相似，那RIP1能不能与AvrPiz-t互作呢？通过一波试验发现这两个蛋白确实能够互作。也就是说ROD1与AvrPiz-t都与RIP1和APIP6互作，而且ROD1和AvrPiz-t都能抑制寄主免疫，那AvrPiz-t抑制寄主免疫的机制是不是和ROD1一样呢？一波试验过后发现AvrPiz-t和ROD1一样，与同样的E3泛素连接酶互作，参与同样的降解通路，同样促进了过氧化物酶介导的ROS清除来抑制寄主植物的免疫。利用ROD1的启动子在<em>rod1</em>中过表达AvrPiz-t，发现过表达后，<em>rod1</em>原先的抗性基本全部丧失（下图BC）。然后呢利用两个不同的水稻品种ZH11和TP309进行进一步验证，其中ZH11含有AvrPiz-t的抗性基因，而TP309没有这个对应的基因，两个水稻品种都接种稻瘟病菌TH12（没有效应子<em>AvrPiz-t</em>）。发现ROD1能够在一定程度上恢复TH12的致病力（下图D）。再比较ROD1和AvrPiz-t的蛋白结构后发现这两个蛋白的结构极其相似，也就意味着它们有着一样的的免疫抑制机制。</p><hr><p>参考文献：</p><blockquote><p>Gao M, He Y, Yin X, et al. Ca2+ sensor-mediated ROS scavenging suppresses rice immunity and is exploited by a fungal effector[J]. <strong><em>Cell</em></strong>, 2021.</p></blockquote><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu部署Hexo</title>
      <link href="/article/594585ty/"/>
      <url>/article/594585ty/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">添加用户</span><br>adduser hexo<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">切回用户目录</span><br>su hexo<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">新建目录存放blog</span><br>mkdir blog<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化裸git</span><br>git init --bare hexo.git<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"></span><br><span class="language-bash">vim hexo.git/hooks/post-receive</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>git --work-tree=/home/hexo/blog --git-dir=/home/hexo/hexo.git checkout -f<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改权限</span><br>chmod +x blog.git/hooks/post-receive<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改nginx默认目录</span><br>sudo vim /etc/nginx/sites-available/default<br>root /var/www/html; <br>root /home/hexo/blog;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改hexo配置</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Deployment</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># Docs: https://hexo.io/docs/one-command-deployment</span></span><br>deploy:<br>  type: git<br>  repo: hexo@xxx.xx.xx.x:/home/hexo/blog.git<br>  branch: master                           <br>  message: '站点更新:{{now("YYYY-MM-DD HH:mm:ss")}}'<br></code></pre></td></tr></tbody></table></figure><p>将本地hexo推送到服务器端即可。刷新Nginx即可访问。</p><p>如果发现部署不上，先把本地文件<code>known_hosts</code>里面对应的ssh记录先删除。然后把对应的文件拷贝上去：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">scp ~/.ssh/id_rsa.pub hexo@xxxxxx:/home/hexo/.ssh/Jking.pub<br></code></pre></td></tr></tbody></table></figure><p>将本地的<code>id_rsa.pub</code>添加到用户目录下的<code>.ssh/authorized_keys</code>里面，就不用每次都输入密码才能推送了。</p><hr><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NCBI-blast-本地比对</title>
      <link href="/article/8955ljki/"/>
      <url>/article/8955ljki/</url>
      
        <content type="html"><![CDATA[<h1 id="安装-Blast"><a href="#安装-Blast" class="headerlink" title="安装 Blast +"></a>安装 Blast +</h1><p>将下载的<a href="https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/">安装包</a>解压缩后安装对应的<code>.exe</code>文件即可，安装完成后将安装目录下的<code>bin</code>文件夹的路径添加到环境变量中的<code>Path</code>中。</p><p><a href="ftp://ftp.ncbi.nlm.nih.gov/blast/db/">ftp://ftp.ncbi.nlm.nih.gov/blast/db/</a></p><h1 id="构建比对数据库"><a href="#构建比对数据库" class="headerlink" title="构建比对数据库"></a>构建比对数据库</h1><p>可以利用自带的函数下载数据库：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup perl update_blastdb.pl --decompress nt &amp;&gt; update.log &amp;<br></code></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">makeblastdb -in swissprot -dbtype prot -out swissprot.blast<br></code></pre></td></tr></tbody></table></figure><blockquote><ul><li>-in: 待格式化的序列文件     </li><li>-dbtype: 数据库类型，nucl 为核酸，prot 为蛋白  </li><li>-out: 输出数据库名，可用于后续 -db 参数设置</li></ul></blockquote><h1 id="比对"><a href="#比对" class="headerlink" title="比对"></a>比对</h1><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">blastn -query AE014075.fasta -db /e/Blast+/database/test/res_genome.blast -out 20210421test.txt -evalue 1e-5 -outfmt 6<br></code></pre></td></tr></tbody></table></figure><blockquote><ul><li>-query: 输入文件路径及文件名</li><li>-out: 输出文件路径及文件名</li><li>-db: 格式化了的数据库路径及数据库名</li><li>-outfmt: 输出文件格式，共 12 种，6 是 tabular 格式对应 BLAST 的 m8 格式</li><li>-evalue: 设置输出结果的 e-value 值，e 值越小最后结果可信度越</li></ul></blockquote><h1 id="结果解读"><a href="#结果解读" class="headerlink" title="结果解读"></a>结果解读</h1><p>[1] Query id：已知的序列 ID</p><p>[2] Subject id: 比对到数据库中的序列 ID</p><p>[3] % identity : 相似度(在氨基酸水平上，相似度可以设置为 30，严格一些可以设置为 70；在核苷酸水上，可以设置 70 或 90。没有统一的标准，还是以特定研究的参考文献为准。)</p><p>[4] alignment length：比对长度</p><p>[5] mismatches ：错配数目</p><p>[6] gap openings：gap 的数目</p><p>[7] q. Start：已知的序列比对起始位置</p><p>[8] q. End：已知的序列比对终止位置</p><p>[9] s. Start：数据库中序列比对起始位置</p><p>[10] s. End；数据库中序列比对终止位置</p><p>[11] E value；比对的 E 值</p><p>[12] score；比对的得分</p><p>注意比对到的序列长度。评价一个 blast 结果的标准主要有三项，E 值（Expect)，一致性 (Identities)，缺失或插入（Gaps）。加上比对长度的话，就有四个标准了。</p><p><strong>E 值（Expect)</strong>：表示随机匹配的可能性，例如，E=1，表示在目前大小的数据库中，完全由机会搜到对象数的平均值为 1.E 值越大，随机匹配的可能性也越大。E 值接近零或为零时，具本上就是完全匹配了。通常来讲，我们认为 E 值小于 10-5 就是比较可性的 S 值结果。我们可以想象，相同的数据库，E=0.001 时如果有 1000 条都有机会 S 值比现在这个要高的话，那么不 E 设置为 10-6 时可能就会只得到一条结果，就是 S 值最可靠的那个。但是 E 值也不是万能的。它在以下几个情况下有局限性：</p><p>1）当目标序列过小时，E 值会偏大，因为无法得到较高的 S 值。</p><p>2）当两序列同源性虽然高，但有较大的 gap（空隙）时，S 值会下降。这个时候 gap scores 就非常有用。</p><p>3）有些序列的非功能区有较低的随机性时，可能会造成两序列较高的同源性。</p><p>E 值总结：</p><p>E 值适合于有一定长度，而且复杂度不能太低的序列。当 E 值小于 10-5</p><p>时，表明两序列有较高的同源性，而不是因为计算错误。当 E 值小于 10-6 时，表时两序列的同源性非常高，几乎没有必要再做确认。</p><p><strong>一致性 (Identities)</strong>：或相似性。匹配上的碱基数占总序列长的百分数。</p><p><strong>Score</strong> 得分值越高说明同源性越好；Expect 期望值越小比对结果越好，说明因某些原因而引起的误差越小；Identities 是同源性（相似性），例中所示比对的 1299 个碱基中只有 35 个不配，其他 97％相同；</p><p><strong>Gaps</strong> 是指多出或少的碱基或缺失的碱基数；缺失或插入（Gaps）：插入或缺失。用 “—“ 来表示。</p><p>此外比对的 <strong>Strand</strong> 则通 s. Start：和 s. End 判断，如上述结果的第三行. Star 值大于 s. End，则表示负链。</p><h1 id="Blast与Blast-的差异"><a href="#Blast与Blast-的差异" class="headerlink" title="Blast与Blast+的差异"></a>Blast与Blast+的差异</h1><div class="table-container"><table><thead><tr><th><strong>参数</strong></th><th><strong>Blast</strong></th><th><strong>Blast+</strong></th></tr></thead><tbody><tr><td>数据库格式化函数</td><td>formatdb</td><td>makeblastdb</td></tr><tr><td>输入 / 输出</td><td>-i / -o</td><td>-query / -out</td></tr><tr><td>格式化了的数据库路径及数据库名</td><td>-d</td><td>-db</td></tr><tr><td>输出结果的 e-value 值</td><td>-e</td><td>-evalue</td></tr><tr><td>输出文件格式</td><td>-m</td><td>-outfmt</td></tr><tr><td>最大目标的数目</td><td>-v / -b</td><td>-max_target_seqs</td></tr></tbody></table></div><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重测序分析脚本</title>
      <link href="/article/5269tghy/"/>
      <url>/article/5269tghy/</url>
      
        <content type="html"><![CDATA[<center><font face="arial" bold="" size="10" color="black">重测序与群体遗传学</font></center><center><font size="4" color="red">云南农业大学  云南生物资源保护与利用国家重点实验室</font></center><center><font size="4" color="red">（李详  2019年12月31日）</font></center><hr><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p>该部分软件很难用<code>conda</code>直接安装，安装步骤比较特殊。</p><span id="more"></span><h2 id="lumpy-sv"><a href="#lumpy-sv" class="headerlink" title="lumpy-sv"></a>lumpy-sv</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">lumpy-sv 依赖 Python2.7，切换到py27环境下进行安装。<br>conda activate py27<br>git clone --recursive https://github.com/arq5x/lumpy-sv.git<br>cd lumpy-sv<br>make<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装svtyper</span></span><br>conda install svtyper<br></code></pre></td></tr></tbody></table></figure><h2 id="cnvnator"><a href="#cnvnator" class="headerlink" title="cnvnator"></a>cnvnator</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">cnvnator依赖于root软件包及samtools软件包(包含HTSlib)，因此先安装Samtools及root软件包。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装samtools</span></span><br>wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2<br>tar -xvf samtools-1.9.tar.bz2<br>cd samtools-1.9/<br>./configure<br>make<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装root软件, 直接下载后解压即可</span></span><br>wget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz<br>tar -zxvf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装cnvnator</span></span><br>git clone https://github.com/abyzovlab/CNVnator.git<br>cd CNVnator<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 链接samtools软件目录到cnvnator目录</span></span><br>ln -s ../samtools-1.9 ./samtools<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 加载root软件到环境变量</span></span><br>export ROOTSYS=/pub/software/root<br>export PATH=/pub/software/root/bin:$PATH<br>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装cnvnator</span></span><br>make LIBS="-lcrypto" <br><br>less ../data/sample.list | awk '{ print "bwa mem -t 2 -R '\''@RG\\tID:"$1"\\tSM:"$1"\\tPL:illumina'\'' ../01.ref/genome.fasta  ../data/"$1"_1.fq.gz ../data/"$1"_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o "$1".sort.bam -" }'<br></code></pre></td></tr></tbody></table></figure><h1 id="变异检测"><a href="#变异检测" class="headerlink" title="变异检测"></a>变异检测</h1><h2 id="构建基因组index"><a href="#构建基因组index" class="headerlink" title="构建基因组index"></a>构建基因组index</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">create <span class="hljs-built_in">link</span></span><br>ln -s  ../data/genome.fasta  ./genome.fasta<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">for</span> gatk</span><br>samtools faidx genome.fasta <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">for</span> bwa</span><br>bwa index  genome.fasta  <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">for</span> picard</span><br>picard CreateSequenceDictionary R=genome.fasta<br></code></pre></td></tr></tbody></table></figure><h2 id="比对排序去重"><a href="#比对排序去重" class="headerlink" title="比对排序去重"></a>比对排序去重</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">比对排序</span><br>bwa mem -t 2 -R '@RG\tID:S1\tSM:S1\tPL:illumina' ../01.ref/genome.fasta  ../data/S1_1.fq.gz ../data/S1_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S1.sort.bam -<br>bwa mem -t 2 -R '@RG\tID:S2\tSM:S2\tPL:illumina' ../01.ref/genome.fasta  ../data/S2_1.fq.gz ../data/S2_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S2.sort.bam -<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">去除重复</span><br>picard -Xmx4g  MarkDuplicates I=S1.sort.bam O=S1.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S1.marked_dup_metrics.txt<br>picard -Xmx4g  MarkDuplicates I=S2.sort.bam O=S2.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S2.marked_dup_metrics.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">比对率统计</span><br>/pub/software/samtools/samtools  flagstat  S1.sort.bam &gt; S1.sort.bam.flagstat<br>/pub/software/samtools/samtools  flagstat  S2.sort.bam &gt; S2.sort.bam.flagstat<br></code></pre></td></tr></tbody></table></figure><h2 id="SNP、Indel检测"><a href="#SNP、Indel检测" class="headerlink" title="SNP、Indel检测"></a>SNP、Indel检测</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.HaplotypeCaller</span><br>gatk --java-options "-Xmx10g -Djava.io.tmpdir=./tmp" HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S1.sort.rmdup.bam  -ERC GVCF -O S1.g.vcf 1&gt;S1.HC.log   2&gt;&amp;1<br>gatk --java-options "-Xmx10g -Djava.io.tmpdir=./tmp" HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S2.sort.rmdup.bam  -ERC GVCF -O S2.g.vcf 1&gt;S2.HC.log   2&gt;&amp;1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.CombineGVCFs</span><br>ls ./S*.g.vcf &gt; gvcf.list<br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"    CombineGVCFs -R ../01.ref/genome.fasta -V gvcf.list  -O all.merge.g.vcf <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step3.GenotypeGVCFs</span><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"   GenotypeGVCFs -R ../01.ref/genome.fasta --variant all.merge.g.vcf -O all.merge_raw.vcf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step4.SNP</span><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type SNP -O all.raw.snp.vcf<br><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.snp.vcf --filter-expression "QD &lt; 2.0 || MQ &lt; 40.0 || FS &gt; 60.0 || SOR &gt; 3.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0" --filter-name 'SNP_filter' -O all.filter.snp.vcf<br><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.snp.vcf --exclude-filtered  -O all.filtered.snp.vcf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step5.InDel</span><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type INDEL -O all.raw.indel.vcf<br><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.indel.vcf --filter-expression "QD &lt; 2.0 || FS &gt; 200.0 || SOR &gt; 10.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0" --filter-name 'INDEL_filter' -O all.filter.indel.vcf<br><br>gatk  --java-options "-Xmx4g -Djava.io.tmpdir=./tmp"  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.indel.vcf  --exclude-filtered   -O all.filtered.indel.vcf<br></code></pre></td></tr></tbody></table></figure><h2 id="SV检测"><a href="#SV检测" class="headerlink" title="SV检测"></a>SV检测</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.discordants_bam</span><br>/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S1.sort.rmdup.bam &gt; S1.discordants.bam<br>/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S2.sort.rmdup.bam &gt; S2.discordants.bam<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.splitters_bam</span><br>/pub/software/samtools/samtools view -h ../02.mapping/S1.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   &gt; S1.splitters.bam<br>/pub/software/samtools/samtools view -h ../02.mapping/S2.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   &gt; S2.splitters.bam<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step3.lumpy</span><br>/pub/software/lumpy-sv/bin/lumpyexpress -B ../02.mapping/S1.sort.rmdup.bam,../02.mapping/S2.sort.rmdup.bam  -S S1.splitters.bam,S2.splitters.bam   -D S1.discordants.bam,S2.discordants.bam -o all.sv.lumpy.vcf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step4.ind_genotype</span><br>vcftools --vcf all.sv.lumpy.vcf --indv S1 --recode --recode-INFO-all --out S1 &amp;&amp; svtyper -i S1.recode.vcf -B ../02.mapping/S1.sort.rmdup.bam  -o S1.genotype.vcf<br>vcftools --vcf all.sv.lumpy.vcf --indv S2 --recode --recode-INFO-all --out S2 &amp;&amp; svtyper -i S2.recode.vcf -B ../02.mapping/S2.sort.rmdup.bam  -o S2.genotype.vcf<br></code></pre></td></tr></tbody></table></figure><h2 id="CNV检测"><a href="#CNV检测" class="headerlink" title="CNV检测"></a>CNV检测</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.prepare_genome</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># split genome into single sequence</span></span><br><br> ln -s  ../data/genome.fasta ./genome.fa<br><br> seqkit split -i ./genome.fa  -O split<br><br> ls ./split/genome.id_*.fa |sed 's/\.\/split\/genome\.id_//' |awk '{print "mv ./split/genome.id_"$aa"  ./split/"$aa}' &gt; mv_name.sh<br><br> sh mv_name.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.cnvnator</span><br>export ROOTSYS=/pub/software/root<br>export PATH=/pub/software/root/bin:$PATH<br>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 链接文件到当前目录</span></span><br>ln -s ../02.mapping/S1.sort.rmdup.bam <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 提取比对结果</span></span><br>/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -tree S1.sort.rmdup.bam<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#生成深度分布</span></span><br>/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -his 500  -d split<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 进行统计计算</span></span><br>/pub/software/CNVnator/cnvnator -root S1.root -stat 500<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 检查bin size是否合适</span></span><br>/pub/software/CNVnator/cnvnator -root S1.root -eval 500  &gt; S1.eval.ratio <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># RD信号分割</span></span><br>/pub/software/CNVnator/cnvnator -root S1.root -partition 500<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 进行CNV检测</span></span><br>/pub/software/CNVnator/cnvnator -root S1.root  -call 500 &gt; S1.cnv<br></code></pre></td></tr></tbody></table></figure><h2 id="SNP-INDEL注释"><a href="#SNP-INDEL注释" class="headerlink" title="SNP INDEL注释"></a>SNP INDEL注释</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.prepare_genome</span><br>ln -s ../data/genome.gtf <br>ln -s ../data/genome.fasta<br><br>gtfToGenePred  -genePredExt genome.gtf genome_refGene.txt<br>/pub/software/annovar/retrieve_seq_from_fasta.pl --format refGene --seqfile genome.fasta genome_refGene.txt --out genome_refGeneMrna.fa<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">step2.ann_vcf</span><br>ln -s  ../03.SNP_indel/all.filtered.snp.vcf <br><br>/pub/software/annovar/convert2annovar.pl -format vcf4old all.filtered.snp.vcf  &gt;all.snp.vcf.annovar.input<br><br>/pub/software/annovar/annotate_variation.pl -geneanno --neargene 2000 -buildver genome -dbtype refGene -outfile all.anno -exonsort all.snp.vcf.annovar.input ./<br></code></pre></td></tr></tbody></table></figure><h2 id="CNV和SV注释"><a href="#CNV和SV注释" class="headerlink" title="CNV和SV注释"></a>CNV和SV注释</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">less -S ../04.SV/all.sv.lumpy.vcf|awk -F ";" '{ if($1!~/#/){print $1"\t"$2"\t"$3"\t"$4} }'|awk '{print $1"\t"$2"\t"$11"\t"$3"\t"$8}'|sed 's/END=//' |sed 's/SVTYPE=//'| awk '$3&lt;$2' &gt; SV.bed<br>less -S ../04.SV/all.sv.lumpy.vcf|awk -F ";" '{ if($1!~/#/){print $1"\t"$2"\t"$3"\t"$4} }'|awk '{print $1"\t"$2"\t"$11"\t"$3"\t"$8}'|sed 's/END=//' |sed 's/SVTYPE=//'  &gt; SV.bed<br>awk '$5 !~ /BND/' SV.bed &gt;  SV_filter.bed<br>bedtools  intersect -wo  -a SV_filter.bed -b gene.gtf  &gt; SV_filter.Anno<br>less -S ../05.CNV/S1.cnv | awk '{print $2 "\t" $1}'|sed 's/:/\t/'|sed 's/-/\t/' &gt; CNV.bed<br>bedtools  intersect -wo  -a  CNV.bed  -b gene.gtf &gt; CNV.Anno<br><br></code></pre></td></tr></tbody></table></figure><h1 id="群体结构"><a href="#群体结构" class="headerlink" title="群体结构"></a>群体结构</h1><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">vcf=../data/all.vcf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># filter missing and maf</span></span><br>plink --vcf  $vcf --geno 0.1 --maf 0.01 --out all.missing_maf --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:# --keep-allele-order<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># filter LD</span></span> <br>plink --vcf  all.missing_maf.vcf  --indep-pairwise 50 10 0.2 --out tmp.ld   --allow-extra-chr --set-missing-var-ids @:# <br>plink --vcf  all.missing_maf.vcf  --make-bed --extract tmp.ld.prune.in  --out all.LDfilter --recode vcf-iid  --keep-allele-order  --allow-extra-chr --set-missing-var-ids @:#  <br><br></code></pre></td></tr></tbody></table></figure><h2 id="建树"><a href="#建树" class="headerlink" title="建树"></a>建树</h2><h3 id="NJ"><a href="#NJ" class="headerlink" title="NJ"></a>NJ</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">perl  ../../script/vcf2phy.pl  ../../00.filter/all.LDfilter.vcf  &gt; sequences.dat<br><br>echo -e "sequences.dat\nY" &gt; dnadist.cfg<br><br>dnadist &lt; dnadist.cfg  &gt;dnadist.log<br><br>mv outfile infile.dist<br><br>echo -e "infile.dist\nY"  &gt; neighbor.cfg<br><br>neighbor  &lt;  neighbor.cfg  &gt;nj.log<br><br>less infile.dist | tr '\n' '|'| sed 's/| / /g' | tr '|' '\n' &gt;infile.dist.table<br>less outtree | tr '\n' ' '|sed 's/ //g' &gt; outtree.nwk<br><br></code></pre></td></tr></tbody></table></figure><h3 id="tree-snphylo"><a href="#tree-snphylo" class="headerlink" title="tree_snphylo"></a>tree_snphylo</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">/pub/software/SNPhylo/snphylo.sh -v ../../00.filter/all.LDfilter.vcf -r -l 1 -m 0.01 -o GA0001 -b -B 2 -P tree_snphylo <br><br></code></pre></td></tr></tbody></table></figure><h2 id="PCA"><a href="#PCA" class="headerlink" title="PCA"></a>PCA</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">plink --vcf  ../00.filter/all.LDfilter.vcf --pca 10 --out  PCA_out   --allow-extra-chr --set-missing-var-ids @:# <br><br>Rscript ../script/draw_PCA.R  PCA_out.eigenvec 1 2  ../data/sample.pop  PCA_out_figure<br><br></code></pre></td></tr></tbody></table></figure><h2 id="群体结构-1"><a href="#群体结构-1" class="headerlink" title="群体结构"></a>群体结构</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step0.vcf2bed</span><br>plink --vcf  ../00.filter/all.LDfilter.vcf  --make-bed --out all  --allow-extra-chr --keep-allele-order --set-missing-var-ids @:#<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.get_Admix_shell</span><br>seq 2 4 | awk '{print "admixture --cv -j2 all.bed "$1" 1&gt;admix."$1".log 2&gt;&amp;1"}' &gt; admixture.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.run_admix</span><br>sh admixture.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step3.draw_structure</span><br>mkdir result<br>cp  ./*.Q result/<br>Rscript  ../script/draw_admixture.R result all.nosex  structure <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">admixture</span><br>admixture --cv -j2 all.bed 2 1&gt;admix.2.log 2&gt;&amp;1<br>admixture --cv -j2 all.bed 3 1&gt;admix.3.log 2&gt;&amp;1<br>admixture --cv -j2 all.bed 4 1&gt;admix.4.log 2&gt;&amp;1<br><br></code></pre></td></tr></tbody></table></figure><h2 id="遗传衰减"><a href="#遗传衰减" class="headerlink" title="遗传衰减"></a>遗传衰减</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.LD_calcu</span><br>/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop  ../data/pop.SC.table -MaxDist 500 -OutStat pop.SC.stat<br>/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop ../data/pop.YZR.table -MaxDist 500 -OutStat pop.YZR.stat<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.draw_singlePlot</span><br>perl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.SC.stat.gz -output pop.SC.ld<br>perl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.YZR.stat.gz -output pop.YZR.ld<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step3.draw_multiPlotare/PopLDdecay/bin/Plot_MultiPop.pl -inList ld_stat.list -output ld_stat.multi</span><br><br></code></pre></td></tr></tbody></table></figure><h2 id="选择分析"><a href="#选择分析" class="headerlink" title="选择分析"></a>选择分析</h2><h3 id="i-ROD"><a href="#i-ROD" class="headerlink" title="i_ROD"></a>i_ROD</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.pi</span><br>vcf=../../data/all.vcf<br>window=20000<br>step=2000<br>vcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.SC.table   --out ./Pi.pop1<br>vcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.YZR.table  --out ./Pi.pop2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.ROD</span><br>pi1=Pi.pop1.windowed.pi<br>pi2=Pi.pop2.windowed.pi<br>perl ../../script/merge2pi_ROD.pl $pi1 $pi2  &gt;Pi.ROD <br><br></code></pre></td></tr></tbody></table></figure><h3 id="tajimaD"><a href="#tajimaD" class="headerlink" title="tajimaD"></a>tajimaD</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">vcf=../../data/all.vcf<br>window=20000<br><br>vcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.SC.table  --out TajimaD.pop1<br>vcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.YZR.table --out   TajimaD.pop2<br><br></code></pre></td></tr></tbody></table></figure><h3 id="Fst"><a href="#Fst" class="headerlink" title="Fst"></a>Fst</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">vcf=../../data/all.vcf<br>window=20000<br>step=2000<br>vcftools  --vcf $vcf --fst-window-size $window --fst-window-step $step  --weir-fst-pop  ../../data/pop.SC.table --weir-fst-pop ../../data/pop.YZR.table --out  ./Fst.pop1.pop2<br><br></code></pre></td></tr></tbody></table></figure><h3 id="ROD-Fst"><a href="#ROD-Fst" class="headerlink" title="ROD_Fst"></a>ROD_Fst</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">fst=../03.Fst/Fst.pop1.pop2.windowed.weir.fst<br>ROD=../01.pi_ROD/Pi.ROD<br>gff=../../data/genome.gff<br><br>perl ../../script/top_Fst_ROD_S.pl  $fst $ROD 0.05 0.05  Fst_ROD.table Fst_ROD.stat<br><br>awk '$NF=="top"' Fst_ROD.table  &gt; Fst_ROD.table.top<br><br><br>awk '$3=="gene"' $gff &gt; gene.gff<br><br>bedtools  intersect -wo -F 0.1  -a  Fst_ROD.table.top -b gene.gff | awk -F "\t"  '{print $7"\t"$10"\t"$11"\t"$13"\t"$15}' | sort -u  &gt; Fst_ROD.table.top.gene<br><br></code></pre></td></tr></tbody></table></figure><h1 id="GWAS"><a href="#GWAS" class="headerlink" title="GWAS"></a>GWAS</h1><h2 id="mpute"><a href="#mpute" class="headerlink" title="mpute"></a>mpute</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">beagle -Xmx4g  -Djava.io.tmpdir=./TMP  gt=../data/all.vcf   out=all.impute impute=true window=10 nthreads=2<br><br></code></pre></td></tr></tbody></table></figure><h2 id="GWAS-1"><a href="#GWAS-1" class="headerlink" title="GWAS"></a>GWAS</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step1.prepare</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># prepare vcf</span></span><br>plink --vcf ../data/all.vcf --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># prepare phenotype</span></span><br><br>perl ../script/sort_pheno.pl snp_filter.tfam ../data/trait.table &gt; trait.sort.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step2.kinship</span><br>/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step3.gwas</span><br>/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1&gt; emmax.log 2&gt;emmax.err<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">draw_manhattan</span><br>paste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print "SNP\tCHR\tBP\tP"}{if($2==$5){print $2"\t"$1"\t"$4"\t"$NF}}'  &gt; emmax.out.ps.manht_input<br>Rscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure<br><br></code></pre></td></tr></tbody></table></figure><h2 id="GWAS-Q"><a href="#GWAS-Q" class="headerlink" title="GWAS-Q"></a>GWAS-Q</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">step3.gwas</span><br>ln -s ../01.GWAS/snp_filter.tped<br>ln -s ../01.GWAS/snp_filter.tfam<br>ln -s ../01.GWAS/snp_filter.nosex<br>ln -s ../01.GWAS/snp_filter.map<br><br>ln -s ../01.GWAS/trait.sort.txt<br>ln -s ../../02.population_genetics/03.structure/all.3.Q<br><br>paste snp_filter.nosex all.3.Q |awk '{print $1" "$1" 1 "$3" "$4}'  &gt; pop.Qmatrix<br><br>/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship -c pop.Qmatrix   -o emmax.out 1&gt; emmax.log 2&gt;emmax.err<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">step4.draw_manhattan</span><br>paste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print "SNP\tCHR\tBP\tP"}{if($2==$5){print $2"\t"$1"\t"$4"\t"$NF}}'  &gt; emmax.out.ps.manht_input<br>Rscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_Q<br><br></code></pre></td></tr></tbody></table></figure><h2 id="GWAS-realData"><a href="#GWAS-realData" class="headerlink" title="GWAS_realData"></a>GWAS_realData</h2><figure class="highlight less"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs less"># <span class="hljs-selector-tag">step1</span><span class="hljs-selector-class">.prepare</span><br>## <span class="hljs-selector-tag">prepare</span> <span class="hljs-selector-tag">vcf</span><br><span class="hljs-selector-tag">plink</span> <span class="hljs-selector-tag">--vcf</span>  ../<span class="hljs-selector-tag">data_real</span>/<span class="hljs-selector-tag">Sample215</span><span class="hljs-selector-class">.M5M8H3</span><span class="hljs-selector-class">.2allel</span><span class="hljs-selector-class">.vcf</span>  <span class="hljs-selector-tag">--maf</span> <span class="hljs-number">0.05</span> <span class="hljs-selector-tag">--geno</span> <span class="hljs-number">0.1</span>  <span class="hljs-selector-tag">--recode12</span>  <span class="hljs-selector-tag">--output-missing-genotype</span> <span class="hljs-number">0</span> <span class="hljs-selector-tag">--transpose</span> <span class="hljs-selector-tag">--out</span> <span class="hljs-selector-tag">snp_filter</span>   <span class="hljs-selector-tag">--set-missing-var-ids</span> @:#  <span class="hljs-selector-tag">--allow-extra-chr</span><br><br><br>## <span class="hljs-selector-tag">prepare</span> <span class="hljs-selector-tag">phenotype</span><br><br><span class="hljs-selector-tag">perl</span> ../<span class="hljs-selector-tag">script</span>/<span class="hljs-selector-tag">sort_pheno</span><span class="hljs-selector-class">.pl</span> <span class="hljs-selector-tag">snp_filter</span><span class="hljs-selector-class">.tfam</span>  ../<span class="hljs-selector-tag">data_real</span>/<span class="hljs-selector-tag">trait</span><span class="hljs-selector-class">.C16_0</span><span class="hljs-selector-class">.table</span>  &gt; <span class="hljs-selector-tag">trait</span><span class="hljs-selector-class">.sort</span><span class="hljs-selector-class">.txt</span><br><br># <span class="hljs-selector-tag">step2</span><span class="hljs-selector-class">.kinship</span><br>/<span class="hljs-selector-tag">pub</span>/<span class="hljs-selector-tag">software</span>/<span class="hljs-selector-tag">emmax</span>/<span class="hljs-selector-tag">emmax-kin-intel64</span> <span class="hljs-selector-tag">-v</span> <span class="hljs-selector-tag">-d</span> <span class="hljs-number">10</span>  <span class="hljs-selector-tag">-o</span> ./<span class="hljs-selector-tag">pop</span><span class="hljs-selector-class">.kinship</span>  <span class="hljs-selector-tag">snp_filter</span><br><br># <span class="hljs-selector-tag">step3</span><span class="hljs-selector-class">.gwas</span><br>/<span class="hljs-selector-tag">pub</span>/<span class="hljs-selector-tag">software</span>/<span class="hljs-selector-tag">emmax</span>/<span class="hljs-selector-tag">emmax-intel64</span> <span class="hljs-selector-tag">-v</span> <span class="hljs-selector-tag">-d</span> <span class="hljs-number">10</span> <span class="hljs-selector-tag">-t</span> <span class="hljs-selector-tag">snp_filter</span>  <span class="hljs-selector-tag">-p</span> <span class="hljs-selector-tag">trait</span><span class="hljs-selector-class">.sort</span><span class="hljs-selector-class">.txt</span> <span class="hljs-selector-tag">-k</span> <span class="hljs-selector-tag">pop</span><span class="hljs-selector-class">.kinship</span>   <span class="hljs-selector-tag">-o</span> <span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.out</span> <span class="hljs-number">1</span>&gt; <span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.log</span> <span class="hljs-number">2</span>&gt;<span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.err</span><br><br># <span class="hljs-selector-tag">step4</span><span class="hljs-selector-class">.draw_manhattan</span><br><span class="hljs-selector-tag">paste</span>  <span class="hljs-selector-tag">snp_filter</span><span class="hljs-selector-class">.map</span>  <span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.ps</span> | <span class="hljs-selector-tag">awk</span>  '<span class="hljs-selector-tag">BEGIN</span>{<span class="hljs-selector-tag">print</span> "<span class="hljs-selector-tag">SNP</span>\<span class="hljs-selector-tag">tCHR</span>\<span class="hljs-selector-tag">tBP</span>\<span class="hljs-selector-tag">tP</span>"}{<span class="hljs-selector-tag">if</span>($<span class="hljs-number">2</span>==$<span class="hljs-number">5</span>){<span class="hljs-selector-tag">print</span> $<span class="hljs-number">2</span>"\<span class="hljs-selector-tag">t</span>"$<span class="hljs-number">1</span>"\<span class="hljs-selector-tag">t</span>"$<span class="hljs-number">4</span>"\<span class="hljs-selector-tag">t</span>"$<span class="hljs-selector-tag">NF</span>}}'  &gt; <span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.ps</span><span class="hljs-selector-class">.manht_input</span><br><span class="hljs-selector-tag">Rscript</span> ../<span class="hljs-selector-tag">script</span>/<span class="hljs-selector-tag">manhattan</span><span class="hljs-selector-class">.R</span> <span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.ps</span><span class="hljs-selector-class">.manht_input</span>  <span class="hljs-selector-tag">emmax</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.ps</span><span class="hljs-selector-class">.manht_figure_readData</span><br><br></code></pre></td></tr></tbody></table></figure><h1 id="QTL-seq"><a href="#QTL-seq" class="headerlink" title="QTL-seq"></a>QTL-seq</h1><h2 id="change-VCF2Table"><a href="#change-VCF2Table" class="headerlink" title="change_VCF2Table"></a>change_VCF2Table</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">ref=<br>vcf=<br>outfile=<br>gatk  VariantsToTable -R  $ref -V $vcf -F CHROM -F POS -F REF -F ALT -GF AD -GF DP -GF GQ -GF PL -O  $outfile<br><br></code></pre></td></tr></tbody></table></figure><h2 id="QTLSeq-Analysis"><a href="#QTLSeq-Analysis" class="headerlink" title="QTLSeq_Analysis"></a>QTLSeq_Analysis</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>QTLseqr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span><span class="hljs-string">"ggplot2"</span><span class="hljs-punctuation">)</span><br><br><br>HighBulk <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"SRR834931"</span> <span class="hljs-comment">## 高值混池名称</span><br>LowBulk <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"SRR834927"</span>  <span class="hljs-comment">## 低值混池名称</span><br>Chroms <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Chr"</span><span class="hljs-punctuation">,</span> <span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">## 染色体列表</span><br><br><span class="hljs-comment">## SNP数据读取</span><br>df <span class="hljs-operator">&lt;-</span> importFromGATK<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">"../data/Yang_et_al_2013.table"</span> <span class="hljs-punctuation">,</span><br>    highBulk <span class="hljs-operator">=</span> HighBulk<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 指定高值混池</span><br>    lowBulk <span class="hljs-operator">=</span> LowBulk<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 指定低至混池</span><br>    chromList <span class="hljs-operator">=</span> Chroms <span class="hljs-comment"># 指定分析用染色体列表</span><br>    <span class="hljs-punctuation">)</span> <br><br><br><span class="hljs-comment">## 绘制深度分布图 </span><br><br>p1 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_histogram<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> DP.HIGH <span class="hljs-operator">+</span> DP.LOW<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">800</span><span class="hljs-punctuation">)</span><br>  <br>pdf<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"SNP_depth.pdf"</span><span class="hljs-punctuation">)</span><br>p1<br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 绘制ref等位基因频率分布图</span><br>p2 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_histogram<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> REF_FRQ<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <br>pdf<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"ref_allele_frequency.pdf"</span><span class="hljs-punctuation">)</span><br>p2<br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment">## 绘制高值混池SNP-index分布</span><br>p3 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_histogram<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> SNPindex.HIGH<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>pdf<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"SNPindex.HIGH.dis.pdf"</span><span class="hljs-punctuation">)</span><br>p3<br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 绘制低值混池SNP-index分布</span><br>p4 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> df<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_histogram<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> SNPindex.LOW<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>pdf<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"SNPindex.LOW.dis.pdf"</span><span class="hljs-punctuation">)</span><br>p4<br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## SNP过滤</span><br><br>df_filt <span class="hljs-operator">&lt;-</span> filterSNPs<span class="hljs-punctuation">(</span><br>    SNPset <span class="hljs-operator">=</span> df<span class="hljs-punctuation">,</span><br>    refAlleleFreq <span class="hljs-operator">=</span> <span class="hljs-number">0.20</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## ref allele频率过滤，0.2表示0.2~0.8之间</span><br>    minTotalDepth <span class="hljs-operator">=</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## 最小深度过滤</span><br>    maxTotalDepth <span class="hljs-operator">=</span> <span class="hljs-number">400</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## 最大深度过滤</span><br>    minSampleDepth <span class="hljs-operator">=</span> <span class="hljs-number">40</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## 单个样品最小深度</span><br>    minGQ <span class="hljs-operator">=</span> <span class="hljs-number">99</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## genotype quality 过滤</span><br>    verbose <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span>  <span class="hljs-comment">## 输出日志</span><br>  <span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 进行deltaSNPindex 计算</span><br>df_filt <span class="hljs-operator">&lt;-</span> runQTLseqAnalysis<span class="hljs-punctuation">(</span>df_filt<span class="hljs-punctuation">,</span><br>    windowSize <span class="hljs-operator">=</span> <span class="hljs-number">1e6</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## 窗口大小</span><br>    popStruc <span class="hljs-operator">=</span> <span class="hljs-string">"F2"</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">## 群体类型，F2 或者RIL</span><br>    bulkSize <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">385</span><span class="hljs-punctuation">,</span> <span class="hljs-number">430</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## 混样个数，第一个高值组</span><br>    replications <span class="hljs-operator">=</span> <span class="hljs-number">10000</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">## bootstrap次数</span><br>    intervals <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">95</span><span class="hljs-punctuation">,</span> <span class="hljs-number">99</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">## 置信区间</span><br><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment">## SNP 沿染色体分布图</span><br>p5 <span class="hljs-operator">&lt;-</span> plotQTLStats<span class="hljs-punctuation">(</span>SNPset <span class="hljs-operator">=</span> df_filt<span class="hljs-punctuation">,</span> var <span class="hljs-operator">=</span> <span class="hljs-string">"nSNPs"</span><span class="hljs-punctuation">)</span><br>pdf<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"SNP_filter.window.pdf"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>p5<br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## deltaSNPindex沿染色体分布</span><br>p6 <span class="hljs-operator">&lt;-</span> plotQTLStats<span class="hljs-punctuation">(</span>SNPset <span class="hljs-operator">=</span> df_filt<span class="hljs-punctuation">,</span> var <span class="hljs-operator">=</span> <span class="hljs-string">"deltaSNP"</span><span class="hljs-punctuation">,</span> plotIntervals <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>pdf<span class="hljs-punctuation">(</span>file<span class="hljs-operator">=</span><span class="hljs-string">"deltaSNPindex.pdf"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>p6<br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 提取显著性区域</span><br>QTL <span class="hljs-operator">&lt;-</span> getSigRegions<span class="hljs-punctuation">(</span>SNPset <span class="hljs-operator">=</span> df_filt<span class="hljs-punctuation">,</span> <br>    method <span class="hljs-operator">=</span> <span class="hljs-string">"QTLseq"</span><span class="hljs-punctuation">,</span> interval <span class="hljs-operator">=</span> <span class="hljs-number">95</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 输出到文件</span><br>write.table<span class="hljs-punctuation">(</span>QTL<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">"QTLseq_result.SigRegions.table"</span><span class="hljs-punctuation">,</span><br>    sep<span class="hljs-operator">=</span><span class="hljs-string">"\t"</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">quote</span><span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 提取QTLseq结果</span><br>results99 <span class="hljs-operator">&lt;-</span> getQTLTable<span class="hljs-punctuation">(</span><br>  SNPset <span class="hljs-operator">=</span> df_filt<span class="hljs-punctuation">,</span>  <br>  method <span class="hljs-operator">=</span> <span class="hljs-string">"QTLseq"</span><span class="hljs-punctuation">,</span> <br>  interval <span class="hljs-operator">=</span> <span class="hljs-number">99</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">## 结果阈值</span><br>  export <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 输出到文件</span><br>write.table<span class="hljs-punctuation">(</span>results99<span class="hljs-punctuation">,</span><br>    file<span class="hljs-operator">=</span><span class="hljs-string">"QTLseq_result_deltaSNPindex_CI99.table"</span> <span class="hljs-punctuation">,</span><br>    sep<span class="hljs-operator">=</span><span class="hljs-string">"\t"</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">quote</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 - 群体遗传学 - Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GENIE3构建基因调控网络</title>
      <link href="/article/10120676/"/>
      <url>/article/10120676/</url>
      
        <content type="html"><![CDATA[<p>最近一直寻思着构建基因共表达网络，之前了解到的方法是根据相关性构建互作网络。想着看看有没有新的方法，找到了这样一篇文献：</p><span id="more"></span><p>谷歌学术显示该文章已经被引用940余次，引用的期刊不乏<strong><em>Nature</em></strong>等。</p><p>具体的算法实现过程看不懂，那就应用吧。</p><p>检索发现官方教程：<a href="https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html">https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html</a></p><h1 id="输入数据"><a href="#输入数据" class="headerlink" title="输入数据"></a>输入数据</h1><p>需要输入的数据是个表达矩阵，矩阵的行是基因，列是样本：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">##       Sample1 Sample2 Sample3 Sample4 Sample5</span><br><span class="hljs-comment">## Gene1       9       9       6       4       6</span><br><span class="hljs-comment">## Gene2       7       1       1       9       2</span><br><span class="hljs-comment">## Gene3      10       6       6       7       9</span><br><span class="hljs-comment">## Gene4       6       2      10       5       7</span><br><span class="hljs-comment">## Gene5       6       3      10       2      10</span><br><span class="hljs-comment">## Gene6       7       1       4      10       8</span><br></code></pre></td></tr></tbody></table></figure><p>需要注意的是，作者在教程中提到输入的基因表达矩阵不能进行任何的处理，包括标准化、筛选及log转换等。</p><h1 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">GENIE3<span class="hljs-punctuation">(</span><br>  exprMatrix<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 表达矩阵</span><br>  regulators <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 指定潜在的调控因子，比如转录因子等</span><br>  targets <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 潜在的被调控的靶标基因</span><br>  treeMethod <span class="hljs-operator">=</span> <span class="hljs-string">"RF"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 选择方法，默认的是“RF"（随机森林），还可以选择“ET”（Extra-Trees）</span><br>  K <span class="hljs-operator">=</span> <span class="hljs-string">"sqrt"</span><span class="hljs-punctuation">,</span> <br>  nTrees <span class="hljs-operator">=</span> <span class="hljs-number">1000</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 树的量，默认是1000</span><br>  nCores <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 用于并行计算的核数，表达矩阵较大时选择并行，运算速度更快。</span><br>  returnMatrix <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 结果返回形式是矩阵还是list，选择"TRUE"就返回矩阵，否则就返回list</span><br>  verbose <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span> <span class="hljs-comment"># 是否展示计算进度，默认是FALSE，即不展示计算进度</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> head<span class="hljs-punctuation">(</span>linkList<span class="hljs-punctuation">)</span><br>  regulatoryGene targetGene    weight<br><span class="hljs-number">1</span>          Gene8      Gene4 <span class="hljs-number">0.2056790</span><br><span class="hljs-number">2</span>         Gene13      Gene3 <span class="hljs-number">0.1918921</span><br><span class="hljs-number">3</span>         Gene12      Gene3 <span class="hljs-number">0.1822270</span><br><span class="hljs-number">4</span>          Gene7      Gene1 <span class="hljs-number">0.1801217</span><br><span class="hljs-number">5</span>         Gene17      Gene9 <span class="hljs-number">0.1781883</span><br><span class="hljs-number">6</span>          Gene5      Gene6 <span class="hljs-number">0.1750425</span><br></code></pre></td></tr></tbody></table></figure><p>输出的结果有三列，分别是调控基因和被调控基因及权重weight。</p><h1 id="结果提取"><a href="#结果提取" class="headerlink" title="结果提取"></a>结果提取</h1><p>如果选择参数<code>returnMatrix = TRUE</code>的话，返回的就是矩阵，否则返回的是list，需要进行提取。</p><p>提取方式有两种：</p><ul><li>提取前多少个</li><li>按照阈值进行提取</li></ul><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"># 提取前几位top调控连接<br>linkList &lt;- get<span class="hljs-constructor">LinkList(<span class="hljs-params">weightMat</span>, <span class="hljs-params">reportMax</span>=5)</span><br><br># 按阈值提取<br>linkList &lt;- get<span class="hljs-constructor">LinkList(<span class="hljs-params">weightMat</span>, <span class="hljs-params">threshold</span>=0.1)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>输出结果中的<code>weight</code>是没有统计学意义的，阈值的选择需要按照自己的经验进行选择。</p><h1 id="结果可视化"><a href="#结果可视化" class="headerlink" title="结果可视化"></a>结果可视化</h1><p>最后的结果可以用Gephi或者是Cytoscape等软件进行可视化。</p><p>Gephi安装参考教程：<a href="https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ">https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ</a></p><p>Gephi使用简明教程：<a href="https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw">https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw</a></p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水稻Pan-genome</title>
      <link href="/article/10d84760/"/>
      <url>/article/10d84760/</url>
      
        <content type="html"><![CDATA[<p>5月28日凌晨，<strong><em>Cell</em></strong>在线发表了四川农业大学和遗传发育所合作的文章Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations。<span id="more"></span>到实验室就开始研究文献。很巧的是，5月30日博士面试时有个老师问水稻研究的最新进展，刚好把这个文章内容给讲述一下。刚好在今天（6月1日），文章一作钦鹏教授做了一个线上讲座，认真聆听完以后收获颇丰，受益匪浅。结合文章和讲座内容，对文章进行简单梳理。</p><p>关于Pan-genome，上一个比较经典的工作是遗传发育所田志喜老师主持完成的大豆的Pan-genome，也是通过那篇文章首次了解到“图形基因组”这个概念。在水稻上已经有大量群体重测序的文章，比如经典的Rice 3K项目，以及14个野生稻重测序项目，其他零零散散的项目还有很多。这些之前开展的项目主要是基于二代测序完成的，二代测序在读长上有限制，单个read长度差不多在100bp到300bp之间，这种长度的数据对SNP的检测是没有问题的，但是很难检测到基因组上的结构变异。结构变异包括插入突变、缺失突变、倒位等。关于结构变异的长度，不同的文章的定义不同，通常是1kb-3Mb。随着三代测序的发展，能够实现长读长测序，数M长度的read极大地增加了结构变异检测的准确度。这篇文章里面的很多分析方法和思路很值得学习，还有图表制作也很值得学习。</p><h1 id="材料选择"><a href="#材料选择" class="headerlink" title="材料选择"></a>材料选择</h1><p>水稻种质材料千千万，改如何选择呢？这个研究选择的是32个具有代表性的亚洲栽培稻和1个非洲栽培稻。这些水稻品种在株高、穗型、穗粒数、粒宽和粒长等方面具有明显的差异。更重要的是这33个水稻品种都是各个亚群中具有代表性的品种。为什么要选一个非洲栽培稻呢？文章里面说这个非洲栽培稻是用来做外群的，便于检测亚洲栽培稻中的结构变异。之前的大量研究都是以Nipponbare作为参考的，这样的话呢就不能很好地区分那些结构变异到底是从哪来的，比如以Nipponbare为参考的话，某个结构变异在A这个品种中可能是插入突变，反过来想在Nipponbare中就是缺失突变，那到底是插入突变还是缺失突变呢？这时候就得有个外群做参考。选非洲栽培稻的另外一个原因是亚洲栽培稻和非洲栽培稻之间是独立驯化的，没有基因渗入。所以，好的项目是以好的材料为基础的。</p><h1 id="结果解读"><a href="#结果解读" class="headerlink" title="结果解读"></a>结果解读</h1><p>文章内容太多了，光讲座就是一个多小时，下面我选择性挑选一些我觉得比较有意思的结果进行简单的解读。</p><p>从下面这个图可以看到的是，在几种类型的结构变异中，插入变异的类型更多，这也就意味着亚洲栽培稻在进化和驯化的过程中，为了适应环境等意因素，会在基因组的特定位置上插入一些DNA片段，以此增强适应性。</p><p>之前水稻GWAS研究都基本是基于SNP的，这个研究中直接用结构变异做GWAS，检测到了两个之前用SNP没有检测到的位点。</p><p>下面这个图比较吸引我的地方在于，把转录组中FPKM按表达量进行划分，这样也能展示出基因转录表达变化的情况。当然，这个图主要表示的是那些附近存在结构变异的基因的转录表达对环境更敏感。</p><p>看到这个图的时候是很震惊的，具有有那么多基因存在拷贝数变异。基因拷贝数变异会直接影响该基因的转录表达。</p><p>其实这篇文章对我最有用的是他们开发的网站：</p><p>这个网站上暂时集成了文章中33个水稻品种的基因组序列、基因组注释文章、基因序列、蛋白序列、GO注释、KEGG注释等超级有用的信息。这些信息都是他们结果严格的注释得到的，我完全可以用在自己的数据分析上。我已经把33个品种的蛋白序列下载好，一共2822792条蛋白序列。现在正在把“月亮谷”蛋白序列Blast到这些序列上，下一步就可以把比对的结果和GO、KEGG等注释信息进一步完善，这样的话在后续分析转录组的时候就很方便了。</p><h1 id="启发和体会"><a href="#启发和体会" class="headerlink" title="启发和体会"></a>启发和体会</h1><p>大数据时代，新的测序技术、分析手段、分析软件层出不穷，即使做不了开发着，也应该及时跟上步伐，了解新事物、新手段，不断完善自我框架。</p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTAK简明教程</title>
      <link href="/article/375f91cd/"/>
      <url>/article/375f91cd/</url>
      
        <content type="html"><![CDATA[<p>iTAK是植物转录因子、转录调节子及转录激酶预测的工具，使用简单。</p><span id="more"></span><p>打开网站<a href="http://itak.feilab.net/cgi-bin/itak/index.cgi"><strong>iTAK</strong> - Plant Transcription factor &amp; Protein Kinase Identifier and Classifier</a>。iTAK提供了网页版在线工具和离线版，离线版只支持64位Linux。在线版基本够用了，如果序列条数大于5万条或文件大小超过100M，就只能使用离线版。使用流程很简单，如下图：</p><p>运行结束后会邮件提示，点击邮件中的链接就能下载结果了。</p><p>结果中会有6个文件，“shiu”开头的是蛋白激酶的结果，“tf”开头的是转录因子的结果。</p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基因or蛋白序列文件处理常用Python代码</title>
      <link href="/article/c13c3eb8/"/>
      <url>/article/c13c3eb8/</url>
      
        <content type="html"><![CDATA[<p>序列转换成fasta文件及后续的SwissProt数据库爬虫代码。<span id="more"></span></p><p>Excel格式序列转换成fasta格式文件：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br>os.chdir(<span class="hljs-string">'C:/Users/Administrator/Desktop/'</span>)<br><br>res = <span class="hljs-built_in">open</span>(<span class="hljs-string">'植物病原互作通路基因fasta文件.fasta'</span>,<span class="hljs-string">'w+'</span>)<br><br>original_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">'植物病原互作通路_查询结果.txt'</span>,<span class="hljs-string">'r'</span>)<br><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> original_file.readlines()[<span class="hljs-number">1</span>:]:<br>    gene = <span class="hljs-string">'&gt;'</span> + line.split(<span class="hljs-string">' '</span>)[<span class="hljs-number">0</span>]<br>    pro = line.split(<span class="hljs-string">' '</span>)[<span class="hljs-number">5</span>].split(<span class="hljs-string">'\n'</span>)[<span class="hljs-number">0</span>]<br>    res.writelines([gene,<span class="hljs-string">'\n'</span>,pro,<span class="hljs-string">'\n'</span>])<br><br>res.close()<br></code></pre></td></tr></tbody></table></figure><p>将比对到SwissProt数据库的结果进行爬虫：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> openpyxl<br><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> re<br><br>os.chdir(<span class="hljs-string">'C:/Users/Administrator/Desktop'</span>)<br><br>res = <span class="hljs-built_in">open</span>(<span class="hljs-string">'植物病原互作通路基因蛋白爬取swiss数据库结果.txt'</span>,<span class="hljs-string">'w+'</span>,encoding = <span class="hljs-string">"utf-8"</span>)<br><br>original_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">'植物病原互作通路基因蛋白swiss数据库blast结果.txt'</span>,<span class="hljs-string">'r'</span>)<br><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> original_file.readlines()[<span class="hljs-number">0</span>:]:<br>    gene = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">0</span>]<br>    pro = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">1</span>]<br>    pro_id = pro.split(<span class="hljs-string">'.'</span>)[<span class="hljs-number">0</span>]<br>    similarity = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">2</span>]<br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(similarity) &gt;= <span class="hljs-number">70</span>:<br>        evalue = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">10</span>]<br>        score = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">11</span>].replace(<span class="hljs-string">'\n'</span>,<span class="hljs-string">''</span>)<br><br>        spider_link = <span class="hljs-string">'https://www.uniprot.org/uniprot/'</span> + pro_id<br><br>        res_spider = requests.get(spider_link)<br><br>        soup = BeautifulSoup(res_spider.text,<span class="hljs-string">'html.parser'</span>)<br><br>        organism = soup.find(<span class="hljs-string">'div'</span>,<span class="hljs-built_in">id</span> = <span class="hljs-string">'content-organism'</span>, class_ = <span class="hljs-string">'entry-overview-content'</span>).get_text()<br>        gene_1 = soup.find(<span class="hljs-string">'div'</span>,<span class="hljs-built_in">id</span> = <span class="hljs-string">'content-gene'</span>, class_ = <span class="hljs-string">'entry-overview-content'</span>).get_text()<br>        protein = soup.find(<span class="hljs-string">'div'</span>,<span class="hljs-built_in">id</span> = <span class="hljs-string">'content-protein'</span>, class_ = <span class="hljs-string">'entry-overview-content'</span>).get_text()<br>        <br>        status = soup.find(<span class="hljs-string">'div'</span>, <span class="hljs-built_in">id</span> = <span class="hljs-string">'content-status'</span>,class_ = <span class="hljs-string">'entry-overview-content'</span>).find(<span class="hljs-string">'span'</span>, class_ = <span class="hljs-string">'context-help tooltipped-click'</span>).get_text()<br>        res_str = re.findall(<span class="hljs-string">'&lt;p&gt;(.*?)&lt;/p&gt;'</span>,status)<br>        status = status.replace(res_str[<span class="hljs-number">0</span>],<span class="hljs-string">''</span>).replace(<span class="hljs-string">'\n'</span>,<span class="hljs-string">'.'</span>).replace(<span class="hljs-string">'                                    &lt;p&gt;&lt;/p&gt;'</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-string">'-'</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-string">'leveli'</span>,<span class="hljs-string">'level'</span>)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-literal">False</span>:<br>            <span class="hljs-keyword">try</span>:<br>                function = soup.find(<span class="hljs-string">'div'</span>, class_ = <span class="hljs-string">'annotation'</span>).find(<span class="hljs-string">'span'</span>).get_text().replace(<span class="hljs-string">'By similarity'</span>,<span class="hljs-string">''</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                function = <span class="hljs-string">'None'</span><br><br>        res.writelines([gene,<span class="hljs-string">'\t'</span>,pro,<span class="hljs-string">'\t'</span>,similarity,<span class="hljs-string">'\t'</span>,evalue,<span class="hljs-string">'\t'</span>,score,<span class="hljs-string">'\t'</span>,organism,<span class="hljs-string">'\t'</span>,gene_1,<span class="hljs-string">'\t'</span>,protein,<span class="hljs-string">'\t'</span>,status,<span class="hljs-string">'\n'</span>])<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">next</span><br><br>res.close()<br></code></pre></td></tr></tbody></table></figure><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UniProt数据库爬虫获取相关信息</title>
      <link href="/article/41af5d00/"/>
      <url>/article/41af5d00/</url>
      
        <content type="html"><![CDATA[<p>最近在分析转录组，基因组是自己组装的，好多基因注释不到KEGG和GO这两个数据库，就索性先把基因蛋白blast到SwissProt数据库，然后得到比对的蛋白的ID，再经过筛选后再去看蛋白相关的GO term。但是，这么多基因我也不可能一个一个查啊，那就Python爬虫吧。</p><span id="more"></span><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> openpyxl<br><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> re<br><br>os.chdir(<span class="hljs-string">'C:/Users/Administrator/Desktop'</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'temp.txt'</span>,<span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>        acuce_gene_id = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">'.'</span>)[<span class="hljs-number">0</span>]<br>        acuce_prot_id = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">1</span>]<br>        match_uniprot_id = line.split(<span class="hljs-string">'\t'</span>)[<span class="hljs-number">2</span>]<br>        uniprot_link = <span class="hljs-string">'https://www.uniprot.org/uniprot/'</span> + match_uniprot_id.split(<span class="hljs-string">'.'</span>)[<span class="hljs-number">0</span>]<br><br>        <span class="hljs-comment">#print(acuce_gene_id)</span><br>        <span class="hljs-comment">#print(acuce_prot_id)</span><br>        <span class="hljs-comment">#print(match_uniprot_id)</span><br>        <span class="hljs-comment">#print(uniprot_link)</span><br>        <span class="hljs-comment">#print('----------------------------------------------------')</span><br><br>        res = requests.get(uniprot_link)<br><br>        soup = BeautifulSoup(res.text,<span class="hljs-string">'html.parser'</span>)<br><br>        organism = soup.find(<span class="hljs-string">'div'</span>,<span class="hljs-built_in">id</span> = <span class="hljs-string">'content-organism'</span>, class_ = <span class="hljs-string">'entry-overview-content'</span>).get_text()<br>        gene = soup.find(<span class="hljs-string">'div'</span>,<span class="hljs-built_in">id</span> = <span class="hljs-string">'content-gene'</span>, class_ = <span class="hljs-string">'entry-overview-content'</span>).get_text()<br>        protein = soup.find(<span class="hljs-string">'div'</span>,<span class="hljs-built_in">id</span> = <span class="hljs-string">'content-protein'</span>, class_ = <span class="hljs-string">'entry-overview-content'</span>).get_text()<br>        res_temp = {<span class="hljs-string">'Q9UUH7'</span>:[organism,gene,protein]}<br><br>        function = soup.find(<span class="hljs-string">'div'</span>, class_ = <span class="hljs-string">'annotation'</span>).find(<span class="hljs-string">'span'</span>).get_text().replace(<span class="hljs-string">'By similarity'</span>,<span class="hljs-string">''</span>)<br><br>        go_mol = soup.find(<span class="hljs-string">'ul'</span>, class_ = <span class="hljs-string">'noNumbering molecular_function'</span>) <br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>(go_mol)) != <span class="hljs-string">"&lt;class 'NoneType'&gt;"</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> go_mol.find_all(<span class="hljs-string">'a'</span>):<br>                link = i[<span class="hljs-string">'href'</span>]<br>                link_split = link.split(<span class="hljs-string">'/'</span>)<br>                go_item_id = link_split[<span class="hljs-built_in">len</span>(link_split)-<span class="hljs-number">1</span>]<br>                <span class="hljs-keyword">if</span> go_item_id.split(<span class="hljs-string">':'</span>)[<span class="hljs-number">0</span>] != <span class="hljs-string">'GO'</span>:<br>                    <span class="hljs-keyword">continue</span><br>                <span class="hljs-keyword">else</span>:<br>                    go_item = i.get_text()<br><br>                    res_excel = openpyxl.Workbook()<br>                    sheet = res_excel.active<br>                    sheet.title = <span class="hljs-string">'爬虫结果'</span><br>                    col_name = [<span class="hljs-string">'月亮谷基因编号'</span>,<span class="hljs-string">'月亮谷转录本编号'</span>,<span class="hljs-string">'匹配的UniProt编号'</span>,<span class="hljs-string">'蛋白名称'</span>,<span class="hljs-string">'物种'</span>,<span class="hljs-string">'基因'</span>,<span class="hljs-string">'功能'</span>,<span class="hljs-string">'GO ID'</span>,<span class="hljs-string">'GO Description'</span>,<span class="hljs-string">'Link'</span>]<br>                    sheet.append(col_name)<br>                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item_id,link]<br>                    <span class="hljs-comment">#print(res_new)</span><br>                    sheet.append(res_new)<br>                    file_name = os.getcwd() + <span class="hljs-string">'/results/'</span> + <span class="hljs-string">'GO_Biological_process_'</span> + acuce_prot_id + <span class="hljs-string">'_'</span> + match_uniprot_id + <span class="hljs-string">'_'</span> +go_item_id.replace(<span class="hljs-string">':'</span>,<span class="hljs-string">'_'</span>) + <span class="hljs-string">'.xlsx'</span><br>                    res_excel.save(file_name)<br><br>        go_bio = soup.find(<span class="hljs-string">'ul'</span>, class_ = <span class="hljs-string">'noNumbering biological_process'</span>) <br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(<span class="hljs-built_in">type</span>(go_bio)) != <span class="hljs-string">"&lt;class 'NoneType'&gt;"</span>:<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> go_bio.find_all(<span class="hljs-string">'li'</span>):<br>                link = i.find(<span class="hljs-string">'a'</span>)[<span class="hljs-string">'href'</span>]<br>                link_split = link.split(<span class="hljs-string">'/'</span>)<br>                go_item_id = link_split[<span class="hljs-built_in">len</span>(link_split)-<span class="hljs-number">1</span>]<br>                <br>                <span class="hljs-keyword">if</span> go_item_id.split(<span class="hljs-string">':'</span>)[<span class="hljs-number">0</span>] != <span class="hljs-string">'GO'</span>:<br>                    <span class="hljs-keyword">continue</span><br>                <span class="hljs-keyword">else</span>:<br>                    go_item = i.find(<span class="hljs-string">'a'</span>).get_text()<br><br>                    res_excel = openpyxl.Workbook()<br>                    sheet = res_excel.active<br>                    sheet.title = <span class="hljs-string">'爬虫结果'</span><br>                    col_name = [<span class="hljs-string">'月亮谷基因编号'</span>,<span class="hljs-string">'月亮谷转录本编号'</span>,<span class="hljs-string">'匹配的UniProt编号'</span>,<span class="hljs-string">'蛋白名称'</span>,<span class="hljs-string">'物种'</span>,<span class="hljs-string">'基因'</span>,<span class="hljs-string">'功能'</span>,<span class="hljs-string">'GO ID'</span>,<span class="hljs-string">'GO Description'</span>,<span class="hljs-string">'Link'</span>]<br>                    sheet.append(col_name)<br>                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item,link]<br>                    <span class="hljs-comment">#print(res_new)</span><br>                    sheet.append(res_new)<br>                    file_name = os.getcwd() + <span class="hljs-string">'/results/'</span> + <span class="hljs-string">'GO_Biological_process_'</span> + acuce_prot_id + <span class="hljs-string">'_'</span> + match_uniprot_id + <span class="hljs-string">'_'</span> +go_item_id.replace(<span class="hljs-string">':'</span>,<span class="hljs-string">'_'</span>) + <span class="hljs-string">'.xlsx'</span><br>                    res_excel.save(file_name)<br></code></pre></td></tr></tbody></table></figure><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>合并基因组文件</title>
      <link href="/article/6a3c6c2a/"/>
      <url>/article/6a3c6c2a/</url>
      
        <content type="html"><![CDATA[<p>将基因组<code>fasta</code>文件合并成一行：<span id="more"></span></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><br>start = time.time()<br><br>os.chdir(<span class="hljs-string">'C:/Users/Administrator/Desktop/'</span>)<br><span class="hljs-built_in">print</span>(os.getcwd())<br><br>res_dict = {}<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'YLG.sort.fasta'</span>,<span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> pep:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> pep:<br>        <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">'&gt;'</span>):<br>            name = line.strip().split()[<span class="hljs-number">0</span>]<br>            res_dict[name] = <span class="hljs-string">''</span><br>        <span class="hljs-keyword">else</span>:<br>            res_dict[name] += line.replace(<span class="hljs-string">'\n'</span>,<span class="hljs-string">''</span>)<br><br>gen = <span class="hljs-string">''</span><br><span class="hljs-keyword">for</span> cds_id, sequence <span class="hljs-keyword">in</span> res_dict.items():<br>    <span class="hljs-comment">#print(sequence)</span><br>    gen = gen + sequence<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'genome.txt'</span>, <span class="hljs-string">'a'</span>) <span class="hljs-keyword">as</span> file:<br>        file.write(gen)<br><br>end = time.time()<br><span class="hljs-built_in">print</span>(end - start)<br></code></pre></td></tr></tbody></table></figure><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python提取fasta文件成单行文件</title>
      <link href="/article/7136a0b7/"/>
      <url>/article/7136a0b7/</url>
      
        <content type="html"><![CDATA[<p><code>R</code>语言对<code>fasta</code>这种超大的字符文件进行处理真的是太慢了，<code>Python</code>是真的香啊！<span id="more"></span></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><br>start = time.time()<br><br>os.chdir(<span class="hljs-string">'C:/Users/Administrator/Desktop/'</span>)<br><span class="hljs-built_in">print</span>(os.getcwd())<br><br>res_dict = {}<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'ylg.protein.pep'</span>,<span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> pep:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> pep:<br>        <span class="hljs-keyword">if</span> line.startswith(<span class="hljs-string">'&gt;'</span>):<br>            name = line.strip().split()[<span class="hljs-number">0</span>]<br>            res_dict[name] = <span class="hljs-string">''</span><br>        <span class="hljs-keyword">else</span>:<br>            res_dict[name] += line.replace(<span class="hljs-string">'\n'</span>,<span class="hljs-string">''</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(res_dict))<br><br><span class="hljs-keyword">for</span> cds_id, sequence <span class="hljs-keyword">in</span> res_dict.items():<br>    <span class="hljs-comment">#print(cds_id)</span><br>    <span class="hljs-comment">#print(sequence)</span><br>    <span class="hljs-comment">#time.sleep(2)</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'pep.seq.txt'</span>, <span class="hljs-string">'a'</span>) <span class="hljs-keyword">as</span> file:<br>        file.write(cds_id.replace(<span class="hljs-string">'&gt;'</span>,<span class="hljs-string">''</span>) + <span class="hljs-string">"\t"</span> + sequence + <span class="hljs-string">"\n"</span>)<br><br>end = time.time()<br><span class="hljs-built_in">print</span>(end - start)<br></code></pre></td></tr></tbody></table></figure><p>4万多个基于32万多行，耗时5.12s。和<code>R</code>相比真的是很快了。</p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分子生物常用网站</title>
      <link href="/article/b14004b4/"/>
      <url>/article/b14004b4/</url>
      
        <content type="html"><![CDATA[<ol><li>引物设计网站：<a href="https://www.ncbi.nlm.nih.gov/tools/primer-blast/">https://www.ncbi.nlm.nih.gov/tools/primer-blast/</a><span id="more"></span></li><li>引物质量检测网站：<a href="http://biotools.nubic.northwestern.edu/OligoCalc.html">http://biotools.nubic.northwestern.edu/OligoCalc.html</a></li><li>NCBI常用库下载：<a href="https://ftp.ncbi.nih.gov/blast/db/FASTA/">https://ftp.ncbi.nih.gov/blast/db/FASTA/</a></li><li>Blast+下载：<a href="https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/">https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/</a></li><li>KEGG蛋白富集分析网站：<a href="https://www.kegg.jp/blastkoala/">https://www.kegg.jp/blastkoala/</a></li><li>KEGG功能注释：<a href="https://www.genome.jp/tools/kaas/">https://www.genome.jp/tools/kaas/</a></li><li>蛋白质结构预测：<a href="https://swissmodel.expasy.org/">https://swissmodel.expasy.org/</a></li></ol><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Tips</title>
      <link href="/article/2f176420/"/>
      <url>/article/2f176420/</url>
      
        <content type="html"><![CDATA[<ol><li><p>统计某个特定字符串出现的次数：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grep -c '&gt;' filename<br></code></pre></td></tr></tbody></table></figure></li><li><p>查看某个特定字符出现的行数：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">grep <span class="hljs-operator">-</span>n <span class="hljs-string">'&gt;'</span> filename<br></code></pre></td></tr></tbody></table></figure></li><li><p>根据<code>gff</code>文件提取基因序列：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">awk '{if ($3=="gene") print}' ylg.gff3 &gt; ylg.gene.gff3<br>bedtools getfasta -fi your_fasta.file -bed your_gff3.file &gt; your_output.name<br></code></pre></td></tr></tbody></table></figure></li><li><p>统计文件行数：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wc -l your_file<br></code></pre></td></tr></tbody></table></figure></li><li><p>修改<code>atp</code>源：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">备份源</span><br>sudo cp /etc/apt/sources.list  /etc/apt/sources.list_backup<br><span class="hljs-meta prompt_"># </span><span class="language-bash">编辑源</span><br>sudo vi /etc/apt/sources.list<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br></code></pre></td></tr></tbody></table></figure></li><li><p><code>conda</code>安装：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh<br><br>bash Miniconda2-latest-Linux-x86_64.sh<br><br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --set show_channel_urls yes<br><br>conda create -n rna<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建一个小环境名为rna</span><br><br>conda install python=2<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装python 2版本</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">以上两句话可以等同于一句命令：conda create -n rna python=2</span><br><br>conda info -e<br>conda info --envs<br>conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">都是来查看已经存在小环境名的</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行后如下：rna即为刚刚建立成功的小环境名</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda info -e</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">base                  *  /home/you/miniconda2</span><br>rna                      /home/you/miniconda2/envs/rna<br><br>source activate rna<br></code></pre></td></tr></tbody></table></figure></li><li><p>安装<code>htop</code>：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install htop<br></code></pre></td></tr></tbody></table></figure></li><li><p><code>wget</code>后台运行+断点续传：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -b -c your_link<br></code></pre></td></tr></tbody></table></figure></li><li><p>查看某个文件夹的大小：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">du -h youdir<br></code></pre></td></tr></tbody></table></figure></li><li><p><code>wegt</code>批量下载：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -c -b -t 0 -T 6000 -i yourlinkesfiles<br></code></pre></td></tr></tbody></table></figure></li><li><p>服务器之间传输文件：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">scp -r ./thisfolder username@192.168.212.212:/home/user $ 目标服务器<br></code></pre></td></tr></tbody></table></figure></li><li><p>md5值检验：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">md5sum yourfile<br></code></pre></td></tr></tbody></table></figure></li><li><p>添加用户</p></li></ol><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo adduser username<br><br><span class="hljs-comment"># 赋予用户管权限</span><br>sudo usermod -aG sudo username<br><br><span class="hljs-comment"># 删除用户但是保留文件</span><br>sudo deluser username<br><br><span class="hljs-comment"># 删除用户和文件</span><br>sudo deluser --remove-home username<br></code></pre></td></tr></tbody></table></figure><ol><li>所有用户都可以使用的软件</li></ol><p>把软件的环境变量写到/etc/profile里面。</p><ol><li>Ubuntu修改R镜像</li></ol><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo vi /etc/R/Rprofile.site<br></code></pre></td></tr></tbody></table></figure><ol><li>lb报错</li></ol><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">/usr/bin/ld: 找不到 -lblas<br>sudo apt-get install libblas-dev<br></code></pre></td></tr></tbody></table></figure><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clusterProfiler做富集分析</title>
      <link href="/article/97c73a9e/"/>
      <url>/article/97c73a9e/</url>
      
        <content type="html"><![CDATA[<p>最近在分析水稻的转录组数据，用的参考基因组是我们小组自己组装的，没有用常见的那几个参考基因组做比对，这就导致一个问题，<span id="more"></span>得到的基因ID是我们参考基因组上的，而不是常见的水稻基因ID，也就无法转换成ENTREZID，想要用<code>clusterProfiler$$^{[1]}做$$GO</code>或者<code>KEGG</code>富集分析就很困难。难道就用公司返回的数据么？肯定不行啊，想要自己探索数据都不方便。怎么办呢？</p><p>仔细观察公司返回的数据，发现他们注释的信息里面是有GO和KEGG信息的：<br></p><p>那我把这些信息整合一下就可以用<code>clusterProfiler</code>包的函数<code>enricher</code>进行富集分析。</p><h1 id="构建富集分析的背景文件"><a href="#构建富集分析的背景文件" class="headerlink" title="构建富集分析的背景文件"></a>构建富集分析的背景文件</h1><p>通过一些列的代码将公司返回的数据里面的相关信息进行整理：</p><p>第一列是基因ID，第二列是GO term的ID，第三列是GO term的描述，第四列是GO term的分类。</p><p>这个文件就是富集分析里面用到背景文件，背景文件里面的基因数量越多，后面富集到的也就越多。</p><h1 id="开始富集分析"><a href="#开始富集分析" class="headerlink" title="开始富集分析"></a>开始富集分析</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">go.rich.1 <span class="hljs-operator">=</span> enricher<span class="hljs-punctuation">(</span>gene <span class="hljs-operator">=</span> df.1<span class="hljs-operator">$</span>id<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 输入的差异基因的ID</span><br>                     TERM2GENE <span class="hljs-operator">=</span> go.anno<span class="hljs-punctuation">[</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'ID'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'gene.id'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 指定背景文件中的基因ID</span><br>                     TERM2NAME <span class="hljs-operator">=</span> go.anno<span class="hljs-punctuation">[</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'ID'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'Description'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 指定背景文件中的GO term的描述</span><br>                     pvalueCutoff <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># p值阈值</span><br>                     pAdjustMethod <span class="hljs-operator">=</span> <span class="hljs-string">'BH'</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># p值校正方法</span><br>                     maxGSSize <span class="hljs-operator">=</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>df.1<span class="hljs-operator">$</span>id<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 最大基因数量</span><br></code></pre></td></tr></tbody></table></figure><p>运行完了以后，就得到对应的富集分析结果。</p><h1 id="富集分析结果可视化"><a href="#富集分析结果可视化" class="headerlink" title="富集分析结果可视化"></a>富集分析结果可视化</h1><p>可视化我没有选择<code>clusterProfiler</code>默认的绘图函数，而是先把数据稍加整理，然后用<code>ggplot2</code>进行可视化。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">ggplot<span class="hljs-punctuation">(</span>df.plot<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>GeneRatio<span class="hljs-punctuation">,</span>Description<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> Count<span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> Ontology<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> pvalue<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_gradient<span class="hljs-punctuation">(</span>low <span class="hljs-operator">=</span> <span class="hljs-string">'navy'</span><span class="hljs-punctuation">,</span>high <span class="hljs-operator">=</span> <span class="hljs-string">'firebrick3'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'GO term'</span><span class="hljs-punctuation">,</span> title <span class="hljs-operator">=</span> <span class="hljs-string">'15(15||15) VS 87(87||87)'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h1><blockquote><p>[1] Yu G, Wang L G, Han Y, et al. clusterProfiler: an R package for comparing biological themes among gene clusters[J]. Omics: a journal of integrative biology, 2012, 16(5): 284-287.</p><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取水稻基因的Entrez ID</title>
      <link href="/article/61374b33/"/>
      <url>/article/61374b33/</url>
      
        <content type="html"><![CDATA[<p>海外服务器爬NCBI是真的香！！！<span id="more"></span></p><p>大概有25000个基因，用R包做KEGG和GO的时候需要把基因ID转换成ENTREZID，显然一个一个查找是不现实的，那就爬虫吧。</p><p>国内网络的话单次爬取500个左右就会断，索性部署到阿里云新加坡的服务器上去，爬取12000+了依旧没有断线，继续分析数据等它爬完。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs R">import os<br>import random<br>import openpyxl<br>import csv<br>import time<br>import requests<br>from bs4 import BeautifulSoup<br>import re<br><br><span class="hljs-comment"># os.chdir('C:/Users/Administrator/Desktop')</span><br>os.chdir<span class="hljs-punctuation">(</span>os.getcwd<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>symbol_id <span class="hljs-operator">=</span> open<span class="hljs-punctuation">(</span><span class="hljs-string">'rice.SYMBOL.csv'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'r'</span><span class="hljs-punctuation">)</span><br>read_id <span class="hljs-operator">=</span> csv.reader<span class="hljs-punctuation">(</span>symbol_id<span class="hljs-punctuation">)</span><br><br>url_list <span class="hljs-operator">=</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> read_id<span class="hljs-operator">:</span><br>    order <span class="hljs-operator">=</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span><br>    symbol <span class="hljs-operator">=</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>    url <span class="hljs-operator">=</span> <span class="hljs-string">'https://www.ncbi.nlm.nih.gov/gene/?term='</span> <span class="hljs-operator">+</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br><br>    url_temp <span class="hljs-operator">=</span> <span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">,</span> symbol<span class="hljs-punctuation">,</span> url<span class="hljs-punctuation">]</span><br><br>    url_list.append<span class="hljs-punctuation">(</span>url_temp<span class="hljs-punctuation">)</span><br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> url_list<span class="hljs-punctuation">[</span><span class="hljs-number">10388</span><span class="hljs-operator">:</span>len<span class="hljs-punctuation">(</span>url_list<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-operator">:</span><br>    <span class="hljs-comment">#print(i[0] + '---' + i[1])</span><br>    <span class="hljs-comment">#print(i[1])</span><br>    <br>    res <span class="hljs-operator">=</span> requests.get<span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-comment">#print(res.status_code)</span><br><br>    <span class="hljs-keyword">if</span> res.status_code <span class="hljs-operator">==</span> <span class="hljs-number">200</span><span class="hljs-operator">:</span><br>        soup <span class="hljs-operator">=</span> BeautifulSoup<span class="hljs-punctuation">(</span>res.text<span class="hljs-punctuation">,</span><span class="hljs-string">'html.parser'</span><span class="hljs-punctuation">)</span><br>        entrezid <span class="hljs-operator">=</span> soup.find_all<span class="hljs-punctuation">(</span><span class="hljs-string">'span'</span><span class="hljs-punctuation">,</span>class_ <span class="hljs-operator">=</span> <span class="hljs-string">'geneid'</span><span class="hljs-punctuation">)</span><br><br>        <span class="hljs-keyword">if</span> len<span class="hljs-punctuation">(</span>entrezid<span class="hljs-punctuation">)</span> <span class="hljs-operator">!=</span> <span class="hljs-number">0</span><span class="hljs-operator">:</span><br>            entrezid <span class="hljs-operator">=</span> soup.find_all<span class="hljs-punctuation">(</span><span class="hljs-string">'span'</span><span class="hljs-punctuation">,</span>class_ <span class="hljs-operator">=</span> <span class="hljs-string">'geneid'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span>.get_text<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>.split<span class="hljs-punctuation">(</span><span class="hljs-string">','</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span>.split<span class="hljs-punctuation">(</span><span class="hljs-string">': '</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>            res_excel <span class="hljs-operator">=</span> openpyxl.Workbook<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>            sheet <span class="hljs-operator">=</span> res_excel.active<br>            sheet.title <span class="hljs-operator">=</span> <span class="hljs-string">'rice gene ENTREZID'</span><br>            col_name <span class="hljs-operator">=</span> <span class="hljs-punctuation">[</span><span class="hljs-string">'SYMBOL'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'ENTREZID'</span><span class="hljs-punctuation">]</span><br>            sheet.append<span class="hljs-punctuation">(</span>col_name<span class="hljs-punctuation">)</span><br>            res_now <span class="hljs-operator">=</span> <span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>entrezid<span class="hljs-punctuation">]</span><br>            sheet.append<span class="hljs-punctuation">(</span>res_now<span class="hljs-punctuation">)</span><br><br>            file_name <span class="hljs-operator">=</span> os.getcwd<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <span class="hljs-string">'/results/'</span> <span class="hljs-operator">+</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'-entrezid.xlsx'</span><br>            res_excel.save<span class="hljs-punctuation">(</span>file_name<span class="hljs-punctuation">)</span><br><br>            print<span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'---'</span> <span class="hljs-operator">+</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'---'</span> <span class="hljs-operator">+</span> entrezid<span class="hljs-punctuation">)</span><br><br>        <span class="hljs-keyword">else</span><span class="hljs-operator">:</span><br>            print<span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'---'</span> <span class="hljs-operator">+</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'---'</span> <span class="hljs-operator">+</span> <span class="hljs-string">'NO entrezid'</span><span class="hljs-punctuation">)</span><br>            continue<br>    <span class="hljs-keyword">else</span><span class="hljs-operator">:</span><br>        print<span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'---'</span> <span class="hljs-operator">+</span> i<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">+</span> <span class="hljs-string">'---'</span> <span class="hljs-operator">+</span> <span class="hljs-string">'Failed'</span><span class="hljs-punctuation">)</span><br>        continue<br><br>    time.sleep<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>酚酸是不是水稻中的化感物质</title>
      <link href="/article/5e42ca27/"/>
      <url>/article/5e42ca27/</url>
      
        <content type="html"><![CDATA[<p><strong>酚酸是不是水稻中的化感物质？</strong></p><p>为什么会有这个问题呢？<span id="more"></span>毕业季写论文查文献看到一篇综述：<a href="https://www.sciencedirect.com/science/article/pii/S0065229616301203">Allelopathy and the role of allelochemicals in plant defence</a>$^{[1]}$，在这片文章中作者将化感物质分为了三类：酚类、萜类及生物碱。因为做了代谢组，所以就比较关注这些物质在根系分泌物中的浓度情况。结果，看到这样一篇文献：</p><p>这篇文章截止到现在，Google Scholar上显示已经被引用了153次。</p><p>文章说酚酸不太可能是水稻中的化感物质的理由如下：</p><ul><li>如果酚酸是水稻中的化感活性物质，那不同的水稻品种对酚酸的耐受性应该是有差异的；</li><li>淹水的稻田中酚酸的含量比有氧的土壤的高，但是生长在淹水稻田中的水稻对<em>p</em>-hydroxybenzoic acid的耐受性并没有比生长在含氧土壤中的水稻强；</li><li>传统水稻品种对酚酸的耐受性并没有比改良品种强；</li><li>两种<em>Echinochloa</em> 杂草（分别厌氧和好氧）对<em>p</em>-hydroxybenzoic acid 的耐受性没有差异；</li><li>因此，可以看出的是不管是水稻品种还是杂草，对酚酸的耐受性都不同，但水稻品种对<em>p</em>-hydroxybenzoic acid的耐受性比杂草强；</li><li>田间试验发现水稻在生长的第一个月中酚酸的分泌量大概是10μg/株/天；</li><li>常规种植密度下，酚酸的分泌速率能够达到1mg/m$^{2}$/天，这个浓度是达不到作用浓度的；</li><li>如果酚酸要具有植物毒性，那此时的浓度已经远远超出在自然条件下检测到的浓度（Gotoh etal 1971和Niranjan Rao etal 1976这两篇文献也说到水稻分泌的酚酸浓度太低了，不能引起水稻植株发生自毒作用）；</li><li>作者认为水稻植株比杂草对酚酸具有更强的耐受性是因为水稻生长过程中要承受来自水稻植株残体降解的物质，此时酚酸的浓度就是植株残体降解产生的浓度加上水稻植株正常分泌的浓度。</li></ul><hr><p>找到另外一篇会议摘要，是福建农林大学的：</p><p>这篇会议摘要的主要内容是：</p><ul><li>酚酸被很多研究者认为是植物中的化感物质，但是在水稻中有一些争论；</li><li>之前的研究发现具有化感活性的水稻品种和不具有化感活性的水稻品种分泌的酚酸的含量没有差异；</li><li>使用不同的方法检测水稻培养液中酚酸的浓度，发现比之前文献报道的浓度高了7倍左右；</li><li>其他胁迫条件下酚酸的生物合成被上调。</li><li>酚酸能够增加<em>Myxococcus xanthus</em> 这种菌的含量，而这种菌会刺激稗草基因表达；</li><li>阿魏酸+<em>Myxococcus xanthus</em> 对稗草具有强烈的抑制作用。</li></ul><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>[1]. Latif S, Chiapusio G, Weston L A. Allelopathy and the role of allelochemicals in plant defence[J]. Advances in botanical research, 2017, 82: 19-54.</p><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MiKTeX安装报错解决办法</title>
      <link href="/article/89753032/"/>
      <url>/article/89753032/</url>
      
        <content type="html"><![CDATA[<p>最近打算用<code>bookdown</code>记实验记录，实在是受不了<code>Word</code>了。<span id="more"></span>使用<code>bookdown</code>需要使用<code>MiKTeX</code>，安装的时候我选择的是一路默认，使用的时候还是会报错，尝试了几次，找到了解决办法：</p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2柱状图相关</title>
      <link href="/article/c005101c/"/>
      <url>/article/c005101c/</url>
      
        <content type="html"><![CDATA[<p>之前在公众号上的文章，查看不方便，搬到个人博客好了。<span id="more"></span></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>reshape2<span class="hljs-punctuation">)</span><br><br>data <span class="hljs-operator">=</span> melt<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">,</span> id.vars <span class="hljs-operator">=</span> ncol<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 普通柱状图</span><br>p0 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>Species<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_bar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> variable<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                 stat <span class="hljs-operator">=</span> <span class="hljs-string">'identity'</span><span class="hljs-punctuation">,</span><br>                 position <span class="hljs-operator">=</span> <span class="hljs-string">'dodge'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>p0<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'普通柱状图.pdf'</span><span class="hljs-punctuation">,</span>width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 堆叠柱状图</span><br>p1 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>Species<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_bar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> variable<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                 stat <span class="hljs-operator">=</span> <span class="hljs-string">'identity'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>ggsave<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'堆叠柱状图.pdf'</span><span class="hljs-punctuation">,</span>width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 百分比柱状图</span><br>p2 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>Species<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_bar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> variable<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                 stat <span class="hljs-operator">=</span> <span class="hljs-string">'identity'</span><span class="hljs-punctuation">,</span><br>                 position <span class="hljs-operator">=</span> <span class="hljs-string">'fill'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_y_continuous<span class="hljs-punctuation">(</span>labels <span class="hljs-operator">=</span> scales<span class="hljs-operator">::</span>percent<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'百分比柱状图.pdf'</span><span class="hljs-punctuation">,</span>width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 带百分比标签的堆积柱状图</span><br>data.2 <span class="hljs-operator">=</span> data <span class="hljs-operator">%&gt;%</span><br>        mutate<span class="hljs-punctuation">(</span>cat <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span>data<span class="hljs-operator">$</span>variable<span class="hljs-punctuation">,</span> data<span class="hljs-operator">$</span>Species<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">'_'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>data.2 <span class="hljs-operator">=</span> aggregate<span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>Species<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                                          <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>variable<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>data.2<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'Species'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'variable'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'value'</span><span class="hljs-punctuation">)</span><br><br>sum.temp <span class="hljs-operator">=</span> aggregate<span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>Species<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br><br>data.2<span class="hljs-operator">$</span>per <span class="hljs-operator">=</span> ifelse<span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>Species <span class="hljs-operator">==</span> <span class="hljs-string">'setosa'</span><span class="hljs-punctuation">,</span> <br>                    data.2<span class="hljs-operator">$</span>value <span class="hljs-operator">/</span> sum.temp<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                    ifelse<span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>Species <span class="hljs-operator">==</span> <span class="hljs-string">'versicolor'</span><span class="hljs-punctuation">,</span> <br>                           data.2<span class="hljs-operator">$</span>value <span class="hljs-operator">/</span> sum.temp<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                           data.2<span class="hljs-operator">$</span>value <span class="hljs-operator">/</span> sum.temp<span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>data.2<span class="hljs-operator">$</span>per2 <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>per <span class="hljs-operator">*</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'%'</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><br>data.2<span class="hljs-operator">$</span>variable <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>variable<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>data.2<span class="hljs-operator">$</span>variable<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><br>p3 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>data.2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>Species<span class="hljs-punctuation">,</span> per<span class="hljs-punctuation">,</span> <br>                     fill <span class="hljs-operator">=</span> variable<span class="hljs-punctuation">,</span><br>                     label <span class="hljs-operator">=</span> per2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_col<span class="hljs-punctuation">(</span>position <span class="hljs-operator">=</span> position_stack<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_text<span class="hljs-punctuation">(</span>position <span class="hljs-operator">=</span> position_stack<span class="hljs-punctuation">(</span>vjust <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  size <span class="hljs-operator">=</span> <span class="hljs-number">2.5</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_y_continuous<span class="hljs-punctuation">(</span>labels <span class="hljs-operator">=</span> scales<span class="hljs-operator">::</span>percent<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme<span class="hljs-punctuation">(</span>axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>ggsave<span class="hljs-punctuation">(</span>p3<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'带百分比标签的堆积柱状图.pdf'</span><span class="hljs-punctuation">,</span>width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WGS学习笔记</title>
      <link href="/article/258e55c8/"/>
      <url>/article/258e55c8/</url>
      
        <content type="html"><![CDATA[<h1 id="FASTA和FASTQ文件格式"><a href="#FASTA和FASTQ文件格式" class="headerlink" title="FASTA和FASTQ文件格式"></a>FASTA和FASTQ文件格式</h1><h2 id="FASTA"><a href="#FASTA" class="headerlink" title="FASTA"></a>FASTA</h2><p><code>FASTA</code>是已知序列的存储文件，以<code>&gt;</code>开头，<span id="more"></span>紧接着<code>&gt;</code>的是该序列的名称，如果是基因名称，那通常是统一的。后面是其他附加信息。第二行才是真真正正的序列，可以是一行，也可以是多行，软件识别<code>FASTA</code>文件的时候默认将两个<code>&gt;</code>之间的内容识别为一条序列。<code>FASTA</code>文件的缩写可以是<code>.fa</code>或者<code>.fa.gz</code>，前一种是没有压缩的格式，后面一种是压缩格式。</p><blockquote><p>&gt;ENSMUSG00000020122|ENSMUST00000138518<br>CCCTCCTATCATGCTGTCAGTGTATCTCTAAATAGCACTCTCAACCCCCGTGAACTTGGT<br>TATTAAAAACATGCCCAAAGTCTGGGAGCCAGGGCTGCAGGGAAATACCACAGCCTCAGT<br>TCATCAAAACAGTTCATTGCCCAAAATGTTCTCAGCTGCAGCTTTCATGAGGTAACTCCA<br>GGGCCCACCTGTTCTCTGGT<br>&gt;ENSMUSG00000020122|ENSMUST00000125984<br>GAGTCAGGTTGAAGCTGCCCTGAACACTACAGAGAAGAGAGGCCTTGGTGTCCTGTTGTC<br>TCCAGAACCCCAATATGTCTTGTGAAGGGCACACAACCCCTCAAAGGGGTGTCACTTCTT<br>CTGATCACTTTTGTTACTGTTTACTAACTGATCCTATGAATCACTGTGTCTTCTCAGAGG<br>CCGTGAACCACGTCTGCAAT</p><p>&gt;gene_00284728 length=231;type=dna<br>GAGAACTGATTCTGTTACCGCAGGGCATTCGGATGTGCTAAGGTAGTAATCCATTATAAGTAACATG<br>CGCGGAATATCCGGGAGGTCATAGTCGTAATGCATAATTATTCCCTCCCTCAGAAGGACTCCCTTGC<br>GAGACGCCAATACCAAAGACTTTCGTAAGCTGGAACGATTGGACGGCCCAACCGGGGGGAGTCGGCT<br>ATACGTCTGATTGCTACGCCTGGACTTCTCTT</p></blockquote><h2 id="FASTQ"><a href="#FASTQ" class="headerlink" title="FASTQ"></a>FASTQ</h2><p><code>FASTQ</code>则是我们常说的下机数据，长得像这样：</p><blockquote><p>@DJB775P1:248:D0MDGACXX:7:1202:12362:49613<br>TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA<br>+<br>JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA<br>@DJB775P1:248:D0MDGACXX:7:1202:12782:49716<br>CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG<br>+<br>IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC</p></blockquote><p>以<code>@</code>开头的每4行就是我们常说的<code>read</code>。</p><p>第一行是每条<code>read</code>的标识符，在一个<code>FASTQ</code>文件中是不可能重复的，甚至在多个<code>FASTQ</code>文件中也是不可能出现重复的。</p><p>第二行就是序列了，包含了A、T、C、G及N这5种情况，N表示的是测序仪器无法识别的序列号。</p><p>第三行在很老的版本里面是有信息的，通常是重复第一行的信息，现在基本都是只有一个<code>+</code>。</p><p>第四行是每个剑戟对应的质量值，用<code>ASCII</code>进行编码，计算公式为：</p><p>$Q = -10log(p_error)$</p><p>现在常用的衡量指标是Q20和Q30，分别表示的是100个碱基中出现一个碱基测错的概率和1000个碱基中出现一个碱基测错的概率，对应的正确率分别是99%和99.9%，以此类推，Q40下的正确率应该是99.99%。</p><h2 id="查看测序所用的质量体系"><a href="#查看测序所用的质量体系" class="headerlink" title="查看测序所用的质量体系"></a>查看测序所用的质量体系</h2><h3 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a><code>shell</code>脚本</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">less $1 | head -n 1000 | awk '{if(NR%4==0) printf("%s",$0);}' \<br>| od -A n -t u1 -v \<br>| awk 'BEGIN{min=100;max=0;} \<br>{for(i=1;i&lt;=NF;i++) {if($i&gt;max) max=$i; if($i&lt;min) min=$i;}}END \<br>{if(max&lt;=126 &amp;&amp; min&lt;59) print "Phred33"; \<br>else if(max&gt;73 &amp;&amp; min&gt;=64) print "Phred64"; \<br>else if(min&gt;=59 &amp;&amp; min&lt;64 &amp;&amp; max&gt;73) print "Solexa64"; \<br>else print "Unknown score encoding"; \<br>print "( " min ", " max, ")";}'<br></code></pre></td></tr></tbody></table></figure><h3 id="python"><a href="#python" class="headerlink" title="python"></a><code>python</code></h3><p><code>ord ()</code>函数会将字符转换为 <code>ASCII</code> 对应的数字，减掉 33 后就得到了该碱基最后的质量值（即，<code>Phred quality score</code>）</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">In [<span class="hljs-number">1</span>]: qual=<span class="hljs-string">'JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD'</span><br>In [<span class="hljs-number">2</span>]: [<span class="hljs-built_in">ord</span>(q)-<span class="hljs-number">33</span> <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> qual]<br>Out[<span class="hljs-number">2</span>]:<br>[<span class="hljs-number">35</span>, <span class="hljs-number">20</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">24</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">29</span>, <span class="hljs-number">29</span>, <span class="hljs-number">32</span>, <span class="hljs-number">32</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">33</span>, <br><span class="hljs-number">29</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">32</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <br><span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-number">34</span>, <span class="hljs-number">33</span>, <span class="hljs-number">33</span>, <span class="hljs-number">30</span>, <span class="hljs-number">33</span>, <span class="hljs-number">24</span>, <span class="hljs-number">27</span>]<br></code></pre></td></tr></tbody></table></figure><h1 id="WGS分析流程"><a href="#WGS分析流程" class="headerlink" title="WGS分析流程"></a>WGS分析流程</h1><p>可以将WGS分成一下及部分：</p><ol><li>原始测序数据的质控</li><li>read 比对，排序和去除重复序列</li><li>Indel 区域重（“重新” 的 “重”）比对</li><li>碱基质量值重校正</li><li>变异检测</li><li>变异结果质控和过滤</li></ol><h1 id="数据质控"><a href="#数据质控" class="headerlink" title="数据质控"></a>数据质控</h1><p>为什么要进行数据质控呢？illumina测序的策略是“边合成边测序”，在合成的过程中随着链的增长，DNA聚合酶的效率会降低，于是越到后面的碱基的错误率就会越高。下机数据的质量严重影响着后续的下游分析的结果。</p><p>软件是<code>fastqc</code>，利用<code>conda</code>安装简单：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda install fastqc<br></code></pre></td></tr></tbody></table></figure><p>软件的使用也很简单：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">fastqc untreated.fq -o fastqc_out_dir/<br></code></pre></td></tr></tbody></table></figure><p><code>-o</code>表示的是结果输出目录，如果没有指定目录，就会输出到和输入文件一个文件夹。</p><p>输入多个文件：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">fastqc /path_to_fq/*.fq -o fastqc_out_dir/<br></code></pre></td></tr></tbody></table></figure><p>质控后数据不好的话需要对数据进行处理，如切除低质量的<code>reads</code>及接头序列等。</p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>稻壳酮（momilactones）在水稻化感中的角色</title>
      <link href="/article/c831a1f2/"/>
      <url>/article/c831a1f2/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>来自众多国家的研究者们通过田间试验和室内实验证明了水稻是具有化感活性的，具有化感活性的水稻品种会向周围的环境中释放化感物质<span id="more"></span>。酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻中潜在的化感活性物质。这篇综述认为半日花烷相关的二萜物质稻壳酮（momilactones）是这些化感物质中最重要的一类物质，尤其是稻壳酮B（momilactones B, 以下简称MB）。水稻在其整个生命周期都能够通过根系向周围的环境中释放MB，MB也是水稻化感作用的主要贡献者。遗传学实验发现如果从水稻根系分泌物复合物中将MB去除的话，水稻根系分泌物的化感活性会大大降低，这个结果表明稻壳酮是具有化感活性的物质。此外，稻壳酮相关的基因在水稻基因组上总是成簇存在的。</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>什么是化感？可以理解成不同植物之间的化学拮抗作用。关于化感研究的文献越来越多。这些文献表明特定的植物会向其周围的环境中释放化感物质，这些化感物质会影响周围植物的生长和发育。如高粱就能通过其根尖释放浓度范围在10-100μM的奎宁高粱油酮。高粱油酮具有潜在的化感活性，其浓度在10μM时便能抑制杂草的出芽生长。具有化感活性的小麦分泌的苯并嗪类物质在植物中以糖苷结合物的形式不断被合成。因此，化感互作在自然植物生态系统中可能有着重要的作用。</p><p>一些田间试验和室内实验发现水稻能够抑制一些植物的生长，这些发现表明水稻具有化感活性。化感在水稻的进化中可能扮演着重要的角色。</p><p>考虑到水稻在农业上的重要性，其化感活性被大量研究，这些研究从水稻植株提取物、根系分泌物及植株降解残体中鉴定到了大量潜在的化感活性物质。</p><h1 id="田间条件下水稻的化感活性"><a href="#田间条件下水稻的化感活性" class="headerlink" title="田间条件下水稻的化感活性"></a>田间条件下水稻的化感活性</h1><p>第一次发现水稻的化感活性的实验地是在美国，研究人员发现5000个水稻品种中的191个左右能够抑制水生杂草鸭沙拉的生长。这个发现直接导致了后续大量的类似的田间实验。研究人员共研究了来自99个国家的16000个水稻品种在田间的化感活性，其中412个能够抑制鸭沙拉的生长，145能够抑制水苋属杂草的生长。后续大量的研究发现特定的水稻品种能够抑制某些种类植物的生长。</p><h1 id="控制条件下的水稻化感活性"><a href="#控制条件下的水稻化感活性" class="headerlink" title="控制条件下的水稻化感活性"></a>控制条件下的水稻化感活性</h1><p>植物-植物间的干扰是资源竞争（如光、水分、营养）与化感互作的复杂结果。因此，需要设计实验来排除资源竞争的影响，以此来说明化感作用在植物-植物干扰中的作用。因此，需要格外注意某些实验条件，如培养基的pH和渗透压等。</p><p>位于菲律宾的国际水稻研究所就设计过水稻整株 bioassay 的方法来研究水稻化感作用。在这个实验中排除了资源竞争对实验的影响，在一定程度上证明了水稻的化感活性。利用这种方法鉴定到了几种具有强烈化感作用的水稻。</p><p>后续大量的研究表明大约3-4%的水稻品种具有强烈的化感效应。</p><p>2001年的一个实验利用8个水稻栽培种来研究水稻的化感作用，发现这8个栽培稻都能抑制苜蓿、水芹及生菜的出芽及生长（下图）。其中Koshihikari这个水稻品种的化感活性最强。这个实验的巧妙之处在于研究阶段中这些植株的营养物质都来自胚乳，这就巧妙地避免了营养竞争造成的影响。</p><h1 id="水稻中潜在的化感活性物质"><a href="#水稻中潜在的化感活性物质" class="headerlink" title="水稻中潜在的化感活性物质"></a>水稻中潜在的化感活性物质</h1><p>酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻提取物和植株残体中潜在的化感活性物质。但是不知道这些物质在生长的水稻植株中是否会被释放，如果被释放，那是不是真真正正的的化感物质呢？</p><p>虽然许多植物组织中都含有潜在的化感活性物质，但是只有那些被释放到环境中的物质才可能会抑制周围植物的出芽及生长，这些释放到环境中的物质才可能是化感物质。鉴于此，比起那些在植物组织中存在的物质，根系分泌物中的物质才更可能是潜在的化感物质。此外，Wu等发现植物组织种具有生长抑制活性的物质的含量与其在根系分泌物中的量是没有明显的相关性的。</p><h1 id="水稻中的酚酸不太可能是化感物质"><a href="#水稻中的酚酸不太可能是化感物质" class="headerlink" title="水稻中的酚酸不太可能是化感物质"></a>水稻中的酚酸不太可能是化感物质</h1><p>在植物和土壤中广泛存在的酚酸被认为是潜在的化感物质，在水稻田、水稻植株残体及水稻根系分泌物中也检测到了酚酸。但是，在稻田土中检测到的酚酸的量不足以引发植物毒性效应，这也让人怀疑水稻中的酚酸类物质到底是不是化感物质。稻田土中酚酸的含量少于5mg/kg，这个含量远低于植物毒性效应的阈值；此外，具有化感活性的水稻与不具有化感活性的水稻分泌的酚酸含量并没有显著差异。那酚酸是不是存在协同作用呢？研究者将5种酚酸混合后来研究混合物对慈姑的抑制效应，发现要达到50%抑制率的话，酚酸混合物的浓度需要达到502μM，这个浓度远远超过根系分泌物中检测到的实际浓度。总之，这些结果表明水稻根系分泌物中的酚酸类物质对水稻的化感作用没有贡献。</p><h1 id="水稻根系分泌物中的稻壳酮"><a href="#水稻根系分泌物中的稻壳酮" class="headerlink" title="水稻根系分泌物中的稻壳酮"></a>水稻根系分泌物中的稻壳酮</h1><p>前面提到Koshihikari这个水稻品种具有很强的化感活性。一项研究水培了约5000株Koshihikari幼苗，希望  从中分离其分泌的化合物，从其中收集到2.1mg具有植物毒性的物质。从质谱数据中比对到这个潜在的化感物质的结构属于MB。Kong等人随后也在其他的水稻品种中鉴定到了MB。Koshihikari这个水稻品种中还存在一个潜在的化感活性物质稻壳酮A（momilactone A, MA）。后续的研究发现在许多水稻品种中都有MA和MB。</p><p>MA和MB最初是在稻壳中分离得到的，当时就发现这两个物质能够抑制植物的生长。随后的分析认为MA是植物抗毒素，因为后续的研究发现MA和MB能够抑制稻瘟病菌的生长。后续 有许多关于MA作为植物抗毒素的研究，许多证据表明MA在水稻抗真菌中具有一定的作用。相反，少有研究认为MB是植物抗毒素。最近的研究发现MA和MB也是苔藓<em>Hypnum plumaeforme</em> Wils中的化感物质。这个苔藓和水稻在系统发育上具有明显的距离，这表明这水稻和这种苔藓有着趋同进化的关系。</p><h1 id="稻壳酮的化感活性"><a href="#稻壳酮的化感活性" class="headerlink" title="稻壳酮的化感活性"></a>稻壳酮的化感活性</h1><p>MA和MB在较低浓度下（1-10μM）就能抑制稗草的生长。要对稗草根达到50% 抑制率，MA需要的浓度是28.7μM，MB需要的浓度是6.1。后续的研究也发现MB的抑制活性是MA的4.7-19倍，这表明MB比MA具有更高的抑制活性。</p><h1 id="稻壳酮不会毒害水稻"><a href="#稻壳酮不会毒害水稻" class="headerlink" title="稻壳酮不会毒害水稻"></a>稻壳酮不会毒害水稻</h1><p>稻壳酮A和B浓度分别在100和300μM以上时才能有效抑制水稻根和茎的生长，此时的抑制效率相当于稻壳酮对稗草抑制率的1-2%。MA和MB在对其他植物产生细胞毒性的时候，对水稻植株没有明显的损伤，即使有损伤也是微不足道的损伤。</p><h1 id="水稻选择性分泌MB"><a href="#水稻选择性分泌MB" class="headerlink" title="水稻选择性分泌MB"></a>水稻选择性分泌MB</h1><p>水稻在其整个生命周期都能向其根际分泌MA和MB。开花是分泌水平的临界线，植株开花后其分泌水平便开始降低。在第80天的时候，MA和MB的分泌量分别能够达到1.1μg/株/天和2.3μg/株/天，这个分泌量是30天时的55-58倍。但是有趣的是水稻茎秆内MA和MB的含量分别在4.5μg/g和3μg/g，稻壳里面的含量是4.9μg/g和2.9g/g，整株含量分别是140μg/g和95μg/g。从上面的数据可以看出在水稻植株体内MA的浓度是MB的1.5-1.7倍。相反的是MB的分泌量比MA的分泌量高，这表明相对于MA来说，MB有限分泌到水稻植株根际中。水稻通过其根系分泌稻壳酮的机制还不清楚。</p><h1 id="稻壳酮对水稻化感作用的贡献"><a href="#稻壳酮对水稻化感作用的贡献" class="headerlink" title="稻壳酮对水稻化感作用的贡献"></a>稻壳酮对水稻化感作用的贡献</h1><p>一项研究利用7天大的8个水稻品种幼苗与4天大的稗草种植在一起4天，发现这8个水稻品种幼苗都能抑制稗草的生长。测得MA的浓度在0.21-1.45μM之间，MB的浓度在0.66-3.84μM之间。基于抑制率和浓度，计算结果表明MA在水稻幼苗抑制稗草生长过程中贡献了1.0-4.9%，而MB贡献了58.8-81.9%。因此，MB更可能是水稻幼苗抑制稗草的主要贡献者。另外值得注意的是这8个水稻品种中MB的浓度是具有差异的。因此，不同水稻品种对稗草生长抑制的差异主要是由于MB的浓度差异导致的。</p><p>MA和MB一共贡献了61.4-86.6%的化感活性，剩下的14.4-38.6%化感活性由其他的物质完成，如3-isopropyl-5-acetoxcyclohexene-2-one-1 和 5,7,4′-trihydroxy-3′5′-dimethoxy-flavone。之前的研究发现水稻分泌MA和MB的量是随着时间发生变化的，因此水稻的化感活性也可能是随着时间变化的。</p><h1 id="稗草诱导的水稻化感作用与稻壳酮的分泌"><a href="#稗草诱导的水稻化感作用与稻壳酮的分泌" class="headerlink" title="稗草诱导的水稻化感作用与稻壳酮的分泌"></a>稗草诱导的水稻化感作用与稻壳酮的分泌</h1><p>如果水稻周围有稗草幼苗或水稻在稗草根系分泌物中生长的话，水稻的化感活性会增强。此时水稻化感活性增强并不是因为营养竞争导致的。稗草幼苗或稗草根系分泌物能够诱导水稻体内MB的含量增加，而且水稻分泌的MB的含量也增加。有可能是水稻感受到了来自稗草的物质，进而分泌了更多的MB。和这种情况类似的是高粱，绒毛叶（一种杂草）的根系分泌物会诱导高粱分泌更多的高粱酮。化感是一种诱导防御机制。</p><h1 id="胁迫诱导的水稻化感作用与稻壳酮的分泌"><a href="#胁迫诱导的水稻化感作用与稻壳酮的分泌" class="headerlink" title="胁迫诱导的水稻化感作用与稻壳酮的分泌"></a>胁迫诱导的水稻化感作用与稻壳酮的分泌</h1><p>植物防御信号激素茉莉酸可以增强水稻的化感活性。茉莉酸和斑蝥素能够增加MA和MB在水稻植株体内及分泌物中的含量。鉴于MA和MB具有抗菌活性，由茉莉酸和斑蝥素诱导的MA和MB含量变化可能和植物微生物防御相关。水稻稻瘟病菌的悄然能够增加稻壳酮的含量。</p><p>然而除了病原菌侵染外，UV辐射也能诱导水稻体内MA和MB的合成和释放。此外，重金属离子也能诱导MA和MB的合成。因此，可能不仅仅只有特定的微生物防御响应会激活MA和MB的合成，其他的胁迫也能激发相关的响应。也有研究发现营养饥饿条件下水稻中稻壳酮的分泌会增加。由于MA和MB极强的化感活性，这些胁迫条件下MA和MB分泌增减更有利于水稻与周围植物的竞争。</p><h1 id="稻壳酮作为化感物质的遗传证据"><a href="#稻壳酮作为化感物质的遗传证据" class="headerlink" title="稻壳酮作为化感物质的遗传证据"></a>稻壳酮作为化感物质的遗传证据</h1><p>上述这些描述充分表明稻壳酮是水稻中的有效化感物质，水稻也从其根部释放大量植物毒素物质（下图）。从遗传学的角度来说，研究某个物质的化感活性最好的方法就是直接将这个物质从复合物中去除，也就是将合成这个物质的基因进行敲低。因为已经确定了生产代表吡咯烷内酯生物合成中固定中间体的顺式-radi二烯所需的OsCPS4和OsKSL4，可以通过反向遗传学的方法研究这些物质的功能。已经有研究利用了这种方法。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>水稻具有化感活性，能够向周围的环境中释放化感物质。大量物质被认为是具有化感活性的。大量研究表明稻壳酮（尤其是稻壳酮B）在水稻化感活性中具有重要作用。稻壳酮在水稻进化中可有很重要的生态学功能，其相关性似乎反映在水稻基因组中存在一个专门的生物合成基因簇中。也许更重要的是，鉴定稻壳酮B是水稻中的主要化感物质，为育种和/或工程研究提供了分子标记，旨在增加这种重要主食作物的化感作用。</p><blockquote><p>💌lixiang117423@foxmail.com<br>💌lixiang117423@gmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coursera助学金申请模板</title>
      <link href="/article/5d800d6f/"/>
      <url>/article/5d800d6f/</url>
      
        <content type="html"><![CDATA[<p>I am a graduate student in a poor area of China. My major is plant pathology. <span id="more"></span>I don’t have a bioinformatics-related course at my university. I don’t have access to good educational resources. I hope to apply for a scholarship to complete this course and complete my studies and wishes.</p><p>First of all, I am very interested in bioinformatics. I like programming and biology. Secondly, my research needs to use bioinformatics. I want to use this course to consolidate my foundation. Use what I have learned to contribute to my research.</p><p>After the study is completed, I will share the knowledge I have learned with my colleagues in the lab and solve the bioinformatics problems in our lab.</p><p>Coursera has created a barrier-free university that brings convenience to many students who are unable to afford it. Here, thanks to Coursera and the various agencies, thank them for their selfless and great dedication.</p><p>Dear reviewer, I am a student from Yunnan Agricultural University. My major is plant pathology. I would very much like to be able to apply for a scholarship for this course. After completing this course, I will gain a lot.</p><p>First of all, I can successfully complete my postgraduate studies and further pursue a higher degree. Having a high degree of education is very important to me and is very important to my family. I will work hard to get the chance.</p><p>Secondly, after completing this course, in addition to being able to solve my own problems, I can help solve the problems in the laboratory. Our lab has many second- and third-generation sequencing data, and more things are waiting to be mined.</p><p>Learning this course is very important for the development of my thinking and hands-on ability. It is also important to my future at the same time.</p><p>Thank you!</p><blockquote><p>💌lixiang117423@gmail.com<br>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggtree学习笔记</title>
      <link href="/article/fb57811f/"/>
      <url>/article/fb57811f/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>Y叔的ggtree $^{[1]}$ 毫无疑问是当前绘制美化系统发育树（下文简称<code>进化树</code>）的最佳工具，一直想学习，但是都没有真真正正学习过，一是因为网上关于<code>gtree</code>的中文资源较少，另外一个原因是感觉到自己用不上，就没认真学习。春节在家，实在无聊，下定决心学一遍<code>ggtree</code>。下面的内容来自Y叔的博客$^{[2]}$ ，若有不当之处，恳请批评指正。</p><h2 id="关于进化树"><a href="#关于进化树" class="headerlink" title="关于进化树"></a>关于进化树</h2><h3 id="进化树怎么看"><a href="#进化树怎么看" class="headerlink" title="进化树怎么看"></a>进化树怎么看</h3><p>进化树展示的是进化关系，简单说就是亲缘关系，通常是使用物种的遗传序列（如DNA序列、氨基酸序列等）来构建的。进化树看起来和层次聚类很像，这两者有木有区别呢？Y叔在<code>统计之都</code>上的文章$^{[3]}$ 是这样描述的：</p><blockquote><p>层次聚类的侧重点在于分类，把距离近的聚在一起。而进化树的构建可以说也是一个聚类过程，但侧重点在于推测进化关系和进化距离 (evolutionary distance)。</p></blockquote><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071517854.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071515615.png" alt=""></p><p>上图展示的是典型的系统发育树。图中绿色、蓝色和红色的点都是<code>nodes</code>，也就是节点（个人理解），其中最外层绿色的点表示的是每个<code>sample</code>，这时绿色的点也叫<code>tips</code>；蓝色的点表示的是<code>父节点</code>，也就是从外往内两两<code>sample</code>的共有节点，可以理解成<code>祖先（ancestor）</code>，祖先之间还可以继续往上溯源，最终就汇集到红色的点，这个红色的点也就是<code>root</code>，需要注意的是有根树才具有<code>root</code>节点；横线叫做<code>分支(branches)</code>，这些横线表示的是进化变化（evolutionary changes），线的长短表示的是以时间或遗传变异为单位的进化变化。</p><h3 id="进化树数据格式"><a href="#进化树数据格式" class="headerlink" title="进化树数据格式"></a>进化树数据格式</h3><p>进化树的数据格式有多种，常见的有<code>Newick</code>、<code>NEXUS</code>及<code>Phylip</code>。</p><h4 id="Newick格式"><a href="#Newick格式" class="headerlink" title="Newick格式"></a>Newick格式</h4><p><code>Newick</code>格式是最常见的使用最广泛的进化树数据格式。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071517024.png" alt=""></p><p>上图是一个标准的进化树图，其对应的<code>Newick</code>格式为：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span>t2<span class="hljs-operator">:</span><span class="hljs-number">0.04</span><span class="hljs-punctuation">,</span>t1<span class="hljs-operator">:</span><span class="hljs-number">0.34</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">0.89</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">(</span>t5<span class="hljs-operator">:</span><span class="hljs-number">0.37</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">(</span>t4<span class="hljs-operator">:</span><span class="hljs-number">0.03</span><span class="hljs-punctuation">,</span>t3<span class="hljs-operator">:</span><span class="hljs-number">0.67</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">0.59</span><span class="hljs-punctuation">)</span>; <br></code></pre></td></tr></tbody></table></figure><p>数据格式和图是一一对应的，假如我们看图的时候是从外到内，那<code>t3</code>和<code>t4</code>是最近的，在数据中，<code>t3</code>和<code>t4</code>也是在一个括号里面的，数据的最小单位是一对<code>()</code>，就像剥洋葱那样顺着括号一层一层往外剥的时候，就能得到上图的那种样式。冒号后面对应的是横线上的“距离”，父节点的“距离”是两个“子节点”共有的，因此，需要表示“父节点”的“距离”时，需要将“距离”放在“子节点“的括号外。</p><h4 id="NEXUS格式"><a href="#NEXUS格式" class="headerlink" title="NEXUS格式"></a>NEXUS格式</h4><p><code>NEXUS</code>格式是<code>Newick</code>格式的拓展，以<code>blocks</code>为单位将进化树的元素分开。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#NEXUS</span><br><span class="hljs-punctuation">[</span>R<span class="hljs-operator">-</span>package APE<span class="hljs-punctuation">,</span> Wed Nov  <span class="hljs-number">9</span> <span class="hljs-number">11</span><span class="hljs-operator">:</span><span class="hljs-number">46</span><span class="hljs-operator">:</span><span class="hljs-number">32</span> <span class="hljs-number">2016</span><span class="hljs-punctuation">]</span><br><br>BEGIN TAXA;<br>    DIMENSIONS NTAX <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br>    TAXLABELS<br>        t5<br>        t4<br>        t1<br>        t2<br>        t3<br>    ;<br>END;<br>BEGIN TREES;<br>    TRANSLATE<br>        <span class="hljs-number">1</span>   t5<span class="hljs-punctuation">,</span><br>        <span class="hljs-number">2</span>   t4<span class="hljs-punctuation">,</span><br>        <span class="hljs-number">3</span>   t1<span class="hljs-punctuation">,</span><br>        <span class="hljs-number">4</span>   t2<span class="hljs-punctuation">,</span><br>        <span class="hljs-number">5</span>   t3<br>    ;<br>    TREE <span class="hljs-operator">*</span> UNTITLED <span class="hljs-operator">=</span> <span class="hljs-punctuation">[</span><span class="hljs-operator">&amp;</span>R<span class="hljs-punctuation">]</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">0.89</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">0.59</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-operator">:</span><span class="hljs-number">0.37</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">0.34</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-operator">:</span><span class="hljs-number">0.03</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-operator">:</span><span class="hljs-number">0.67</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">0.04</span><span class="hljs-punctuation">)</span>;<br>END;<br></code></pre></td></tr></tbody></table></figure><h4 id="其他格式"><a href="#其他格式" class="headerlink" title="其他格式"></a>其他格式</h4><p>进化树的存储格式还有很多种，更多请参照Y叔的博客$^{[4]}$。</p><h2 id="进化树数据处理"><a href="#进化树数据处理" class="headerlink" title="进化树数据处理"></a>进化树数据处理</h2><p>进化树数据可以使用<code>treeio</code>$^{[5]}$ 这个包进行合并等操作，然后可以将其他信息利用<code>tidytree</code>$^{[6]}$ 这个包将树文件转换成R里面常见的数据框格式，这种格式也可以再次转化成树文件，利用<code>ggtree</code>进行可视化。</p><h3 id="phylo对象"><a href="#phylo对象" class="headerlink" title="phylo对象"></a><code>phylo</code>对象</h3><p><code>phylo</code>格式是R包<code>ape</code>支持的格式，在R中的很多包都依赖于这种格式。<code>tidytree</code>中的函数<code>as_tibble</code>可以将<code>phylo</code>转换成数据框，此时的数据框是个<code>tbl_tree</code>对象。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ape<span class="hljs-punctuation">)</span><br><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">2017</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>tree<br></code></pre></td></tr></tbody></table></figure><p>此时得到的是<code>phylo</code>对象：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## </span><br><span class="hljs-comment">## Phylogenetic tree with 4 tips and 3 internal nodes.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Tip labels:</span><br><span class="hljs-comment">##   t4, t1, t3, t2</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Rooted; includes branch lengths.</span><br></code></pre></td></tr></tbody></table></figure><p>现在将其转化成数据框：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidytree<span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> as_tibble<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span><br>x<br></code></pre></td></tr></tbody></table></figure><figure class="highlight clean"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs clean">## # A tibble: <span class="hljs-number">7</span> x <span class="hljs-number">4</span><br>##   parent  node branch.length label<br>##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;<br>## <span class="hljs-number">1</span>      <span class="hljs-number">5</span>     <span class="hljs-number">1</span>       <span class="hljs-number">0.435</span>   t4   <br>## <span class="hljs-number">2</span>      <span class="hljs-number">7</span>     <span class="hljs-number">2</span>       <span class="hljs-number">0.674</span>   t1   <br>## <span class="hljs-number">3</span>      <span class="hljs-number">7</span>     <span class="hljs-number">3</span>       <span class="hljs-number">0.00202</span> t3   <br>## <span class="hljs-number">4</span>      <span class="hljs-number">6</span>     <span class="hljs-number">4</span>       <span class="hljs-number">0.0251</span>  t2   <br>## <span class="hljs-number">5</span>      <span class="hljs-number">5</span>     <span class="hljs-number">5</span>      NA       &lt;NA&gt; <br>## <span class="hljs-number">6</span>      <span class="hljs-number">5</span>     <span class="hljs-number">6</span>       <span class="hljs-number">0.472</span>   &lt;NA&gt; <br>## <span class="hljs-number">7</span>      <span class="hljs-number">6</span>     <span class="hljs-number">7</span>       <span class="hljs-number">0.274</span>   &lt;NA&gt;<br></code></pre></td></tr></tbody></table></figure><p>看图更直观：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071517116.png" alt=""></p><p>可以清楚地看到进化树的全部信息，包括父节点、节点、分支长度及<code>tips</code>的标签等。</p><p>使用<code>as.phylo(x)</code>就能将数据框转换成<code>phylo</code>:</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">as.phylo<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Phylogenetic tree with 4 tips and 3 internal nodes.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Tip labels:</span><br><span class="hljs-comment">##   t4, t1, t3, t2</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Rooted; includes branch lengths.</span><br></code></pre></td></tr></tbody></table></figure><p>如果此时我们需要添加信息的话，在原始文件上添加信息是比较麻烦的，但是可以团购先构建数据框，然后将两个数据框<code>join</code>在一起就可以了：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">d <span class="hljs-operator">&lt;-</span> tibble<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">'t'</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            trait <span class="hljs-operator">=</span> rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>y <span class="hljs-operator">&lt;-</span> full_join<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> d<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'label'</span><span class="hljs-punctuation">)</span><br>y<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071517688.png" alt=""></p><h3 id="treedata对象"><a href="#treedata对象" class="headerlink" title="treedata对象"></a><code>treedata</code>对象</h3><p><code>tidytree</code>默认的格式是<code>treedata</code>，函数<code>as.treedata</code>可以将前面的数据框转换成<code>treedata</code>对象：</p><figure class="highlight actionscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">as</span>.treedata(y)<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## 'treedata' S4 object'.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## ...@ phylo: </span><br><span class="hljs-comment">## Phylogenetic tree with 4 tips and 3 internal nodes.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Tip labels:</span><br><span class="hljs-comment">##   t4, t1, t3, t2</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Rooted; includes branch lengths.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## with the following features available:</span><br><span class="hljs-comment">##  'trait'.</span><br></code></pre></td></tr></tbody></table></figure><p>同样也可以通过<code>as_tibble</code>将<code>treedata</code>转换成数据框格式：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">y <span class="hljs-operator">%&gt;%</span> as.treedata <span class="hljs-operator">%&gt;%</span> as_tibble<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## # A tibble: 7 x 5</span><br><span class="hljs-comment">##   parent  node branch.length label  trait</span><br><span class="hljs-comment">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;</span><br><span class="hljs-comment">## 1      5     1       0.435   t4     0.943</span><br><span class="hljs-comment">## 2      7     2       0.674   t1    -0.171</span><br><span class="hljs-comment">## 3      7     3       0.00202 t3     0.570</span><br><span class="hljs-comment">## 4      6     4       0.0251  t2    -0.283</span><br><span class="hljs-comment">## 5      5     5      NA       &lt;NA&gt;  NA    </span><br><span class="hljs-comment">## 6      5     6       0.472   &lt;NA&gt;  NA    </span><br><span class="hljs-comment">## 7      6     7       0.274   &lt;NA&gt;  NA</span><br></code></pre></td></tr></tbody></table></figure><h3 id="树文件融合"><a href="#树文件融合" class="headerlink" title="树文件融合"></a>树文件融合</h3><p><code>treeio</code>同的函数<code>merge_tree()</code>可以对多个树文件进行合并，原理是以<code>node/branches</code>为`key进行数据合并，如：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>beast_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/MCC_FluA_H3.tree"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>rst_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/rst"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>mlc_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/mlc"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>beast_tree <span class="hljs-operator">&lt;-</span> read.beast<span class="hljs-punctuation">(</span>beast_file<span class="hljs-punctuation">)</span><br>codeml_tree <span class="hljs-operator">&lt;-</span> read.codeml<span class="hljs-punctuation">(</span>rst_file<span class="hljs-punctuation">,</span> mlc_file<span class="hljs-punctuation">)</span><br><br>merged_tree <span class="hljs-operator">&lt;-</span> merge_tree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> codeml_tree<span class="hljs-punctuation">)</span><br>merged_tree<br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## 'treedata' S4 object that stored information of</span><br><span class="hljs-comment">##  '/home/ygc/R/library/ggtree/examples/MCC_FluA_H3.tree',</span><br><span class="hljs-comment">##  '/home/ygc/R/library/ggtree/examples/rst',</span><br><span class="hljs-comment">##  '/home/ygc/R/library/ggtree/examples/mlc'.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## ...@ phylo: </span><br><span class="hljs-comment">## Phylogenetic tree with 76 tips and 75 internal nodes.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Tip labels:</span><br><span class="hljs-comment">##   A/Hokkaido/30-1-a/2013, A/New_York/334/2004, A/New_York/463/2005, A/New_York/452/1999, A/New_York/238/2005, A/New_York/523/1998, ...</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## Rooted; includes branch lengths.</span><br><span class="hljs-comment">## </span><br><span class="hljs-comment">## with the following features available:</span><br><span class="hljs-comment">##  'height',   'height_0.95_HPD',  'height_median',</span><br><span class="hljs-comment">##  'height_range', 'length',   'length_0.95_HPD',</span><br><span class="hljs-comment">##  'length_median',    'length_range', 'posterior',    'rate',</span><br><span class="hljs-comment">##  'rate_0.95_HPD',    'rate_median',  'rate_range',   'subs',</span><br><span class="hljs-comment">##  'AA_subs',  't',    'N',    'S',    'dN_vs_dS', 'dN',   'dS',   'N_x_dN',</span><br><span class="hljs-comment">##  'S_x_dS'.</span><br></code></pre></td></tr></tbody></table></figure><p>合并后的树文件，除开<code>node</code>和<code>branches</code>外，其余的所有附加信息都变成了变量。</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071517669.png" alt=""></p><p>既然是个数据框，那就可以对这些数据进行可视化：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>df <span class="hljs-operator">&lt;-</span> merged_tree <span class="hljs-operator">%&gt;%</span> <br>  as_tibble<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  select<span class="hljs-punctuation">(</span>dN_vs_dS<span class="hljs-punctuation">,</span> dN<span class="hljs-punctuation">,</span> dS<span class="hljs-punctuation">,</span> rate<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  subset<span class="hljs-punctuation">(</span>dN_vs_dS <span class="hljs-operator">&gt;=</span><span class="hljs-number">0</span> <span class="hljs-operator">&amp;</span> dN_vs_dS <span class="hljs-operator">&lt;=</span> <span class="hljs-number">1.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tidyr<span class="hljs-operator">::</span>gather<span class="hljs-punctuation">(</span>type<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">,</span> dN_vs_dS<span class="hljs-operator">:</span>dS<span class="hljs-punctuation">)</span><br>df<span class="hljs-operator">$</span>type<span class="hljs-punctuation">[</span>df<span class="hljs-operator">$</span>type <span class="hljs-operator">==</span> <span class="hljs-string">'dN_vs_dS'</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-string">'dN/dS'</span><br>df<span class="hljs-operator">$</span>type <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>type<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"dN/dS"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"dN"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"dS"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>rate<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_hex<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  facet_wrap<span class="hljs-punctuation">(</span><span class="hljs-operator">~</span>type<span class="hljs-punctuation">,</span> scale<span class="hljs-operator">=</span><span class="hljs-string">'free_y'</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518040.png" alt=""></p><p>还可以利用该函数比较不同软件的分析结果：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">phylo <span class="hljs-operator">&lt;-</span> as.phylo<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">)</span><br>N <span class="hljs-operator">&lt;-</span> Nnode2<span class="hljs-punctuation">(</span>phylo<span class="hljs-punctuation">)</span><br>d <span class="hljs-operator">&lt;-</span> tibble<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>N<span class="hljs-punctuation">,</span> fake_trait <span class="hljs-operator">=</span> rnorm<span class="hljs-punctuation">(</span>N<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> another_trait <span class="hljs-operator">=</span> runif<span class="hljs-punctuation">(</span>N<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>fake_tree <span class="hljs-operator">&lt;-</span> treedata<span class="hljs-punctuation">(</span>phylo <span class="hljs-operator">=</span> phylo<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> d<span class="hljs-punctuation">)</span><br>triple_tree <span class="hljs-operator">&lt;-</span> merge_tree<span class="hljs-punctuation">(</span>merged_tree<span class="hljs-punctuation">,</span> fake_tree<span class="hljs-punctuation">)</span><br>triple_tree<br></code></pre></td></tr></tbody></table></figure><h3 id="链接外部数据"><a href="#链接外部数据" class="headerlink" title="链接外部数据"></a>链接外部数据</h3><p>进化树能够展示的东西不仅仅是进化关系，还可以增添许多信息，如基因表达量啥的。<code>treeio</code>的函数<code>full_join()</code>能够通过<code>node</code>或<code>tips</code>进行数据融合：</p><ul><li><p>通过<code>node</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ape<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>woodmouse<span class="hljs-punctuation">)</span><br>d <span class="hljs-operator">&lt;-</span> dist.dna<span class="hljs-punctuation">(</span>woodmouse<span class="hljs-punctuation">)</span><br>tr <span class="hljs-operator">&lt;-</span> nj<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">)</span><br>bp <span class="hljs-operator">&lt;-</span> boot.phylo<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">,</span> <br>                 woodmouse<span class="hljs-punctuation">,</span> <br>                 <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> nj<span class="hljs-punctuation">(</span>dist.dna<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>bp2 <span class="hljs-operator">&lt;-</span> tibble<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>Nnode<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <span class="hljs-comment"># 计算父节点数</span><br>                Ntip<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># 计算tip数</span><br>              bootstrap <span class="hljs-operator">=</span> bp<span class="hljs-punctuation">)</span><br>full_join<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">,</span> bp2<span class="hljs-punctuation">,</span> by<span class="hljs-operator">=</span><span class="hljs-string">"node"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>通过<code>tips</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/BEAST"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"beast_mcc.tree"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>beast <span class="hljs-operator">&lt;-</span> read.beast<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> tibble<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> as.phylo<span class="hljs-punctuation">(</span>beast<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>tip.label<span class="hljs-punctuation">,</span> trait <span class="hljs-operator">=</span> rnorm<span class="hljs-punctuation">(</span>Ntip<span class="hljs-punctuation">(</span>beast<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>full_join<span class="hljs-punctuation">(</span>beast<span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">,</span> by<span class="hljs-operator">=</span><span class="hljs-string">"label"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ul><h3 id="如何找到想要的node"><a href="#如何找到想要的node" class="headerlink" title="如何找到想要的node"></a>如何找到想要的<code>node</code></h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>tr <span class="hljs-operator">=</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><br>p  <span class="hljs-operator">+</span> <br>  geom_label<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>branch<span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span>node<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.6</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p><code>treeio</code>中的函数 <code>groupOTU()</code> 和 <code>groupClade()</code> 可以用于分组。</p><h4 id="groupClade"><a href="#groupClade" class="headerlink" title="groupClade"></a><code>groupClade</code></h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">nwk <span class="hljs-operator">&lt;-</span> <span class="hljs-string">'(((((((A:4,B:4):6,C:5):8,D:6):3,E:21):10,((F:4,G:12):14,H:8):13):13,((I:5,J:2):30,(K:11,L:11):2):17):4,M:56);'</span><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>text<span class="hljs-operator">=</span>nwk<span class="hljs-punctuation">)</span><br><br>groupClade<span class="hljs-punctuation">(</span>as_tibble<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">21</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## # A tibble: 25 x 5</span><br><span class="hljs-comment">##    parent  node branch.length label group</span><br><span class="hljs-comment">##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;</span><br><span class="hljs-comment">##  1     20     1             4 A     1    </span><br><span class="hljs-comment">##  2     20     2             4 B     1    </span><br><span class="hljs-comment">##  3     19     3             5 C     1    </span><br><span class="hljs-comment">##  4     18     4             6 D     1    </span><br><span class="hljs-comment">##  5     17     5            21 E     1    </span><br><span class="hljs-comment">##  6     22     6             4 F     2    </span><br><span class="hljs-comment">##  7     22     7            12 G     2    </span><br><span class="hljs-comment">##  8     21     8             8 H     2    </span><br><span class="hljs-comment">##  9     24     9             5 I     0    </span><br><span class="hljs-comment">## 10     24    10             2 J     0    </span><br><span class="hljs-comment">## # … with 15 more rows</span><br></code></pre></td></tr></tbody></table></figure><p>以<code>node17</code>和<code>node21</code>为界将<code>clade</code>进行分组。这两个函数可以作用于<code>tbl_tree</code>、<code>phylo</code> 、 <code>treedata</code>及 <code>ggtree</code> 这些对象。</p><h4 id="groupOTU"><a href="#groupOTU" class="headerlink" title="groupOTU"></a><code>groupOTU</code></h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">2017</span><span class="hljs-punctuation">)</span><br>tr <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> as_tibble<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">)</span><br><span class="hljs-comment">## 输入的节点可以是节点ID，也可以是Label</span><br>groupOTU<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'t1'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'t4'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> group_name <span class="hljs-operator">=</span> <span class="hljs-string">"fake_group"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## # A tibble: 7 x 5</span><br><span class="hljs-comment">##   parent  node branch.length label fake_group</span><br><span class="hljs-comment">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;     </span><br><span class="hljs-comment">## 1      5     1       0.435   t4    1         </span><br><span class="hljs-comment">## 2      7     2       0.674   t1    1         </span><br><span class="hljs-comment">## 3      7     3       0.00202 t3    0         </span><br><span class="hljs-comment">## 4      6     4       0.0251  t2    0         </span><br><span class="hljs-comment">## 5      5     5      NA       &lt;NA&gt;  1         </span><br><span class="hljs-comment">## 6      5     6       0.472   &lt;NA&gt;  1         </span><br><span class="hljs-comment">## 7      6     7       0.274   &lt;NA&gt;  1</span><br></code></pre></td></tr></tbody></table></figure><p>更常见的分组方法是直接命名分组：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">cls <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>c1<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"A"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"B"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"C"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"D"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"E"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            c2<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"F"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"G"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"H"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            c3<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"L"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"K"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"I"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"J"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            c4<span class="hljs-operator">=</span><span class="hljs-string">"M"</span><span class="hljs-punctuation">)</span><br><br>as_tibble<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> groupOTU<span class="hljs-punctuation">(</span>cls<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## # A tibble: 25 x 5</span><br><span class="hljs-comment">##    parent  node branch.length label group</span><br><span class="hljs-comment">##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;</span><br><span class="hljs-comment">##  1     20     1             4 A     c1   </span><br><span class="hljs-comment">##  2     20     2             4 B     c1   </span><br><span class="hljs-comment">##  3     19     3             5 C     c1   </span><br><span class="hljs-comment">##  4     18     4             6 D     c1   </span><br><span class="hljs-comment">##  5     17     5            21 E     c1   </span><br><span class="hljs-comment">##  6     22     6             4 F     c2   </span><br><span class="hljs-comment">##  7     22     7            12 G     c2   </span><br><span class="hljs-comment">##  8     21     8             8 H     c2   </span><br><span class="hljs-comment">##  9     24     9             5 I     c3   </span><br><span class="hljs-comment">## 10     24    10             2 J     c3   </span><br><span class="hljs-comment">## # … with 15 more rows</span><br></code></pre></td></tr></tbody></table></figure><h3 id="重新标准化分支"><a href="#重新标准化分支" class="headerlink" title="重新标准化分支"></a>重新标准化分支</h3><p>不同的进化树可以进行合并，原始的分支长度可能单位不一样，这时候就可以用合并后的其他参数对分支长度进行标准化。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>merged_tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>rescale_tree<span class="hljs-punctuation">(</span>merged_tree<span class="hljs-punctuation">,</span> <span class="hljs-string">'dN'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>p3 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>rescale_tree<span class="hljs-punctuation">(</span>merged_tree<span class="hljs-punctuation">,</span> <span class="hljs-string">'rate'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> p3<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> labels <span class="hljs-operator">=</span> <span class="hljs-built_in">LETTERS</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518343.png" alt=""></p><p>从上图可以看到的是，三个图的“横坐标”范围不一样，第一个图是原始的分支单位，第二个是以<code>dN</code>进行标准化的结果，第三个是以<code>rate</code>进行标准化的结果。</p><h3 id="子集操作"><a href="#子集操作" class="headerlink" title="子集操作"></a>子集操作</h3><h4 id="从树中除去tips"><a href="#从树中除去tips" class="headerlink" title="从树中除去tips"></a>从树中除去<code>tips</code></h4><p>有些时候出于某些原因（如序列质量、组装质量、比对错误等），我们会将某些<code>tips</code>（样本）从树里面剔除，函数<code>drop.tip()</code>可以实现这一功能：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">f <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/NHX"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"phyldog.nhx"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>nhx <span class="hljs-operator">&lt;-</span> read.nhx<span class="hljs-punctuation">(</span>f<span class="hljs-punctuation">)</span><br>to_drop <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Physonect_sp_@2066767"</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-string">"Lychnagalma_utricularia@2253871"</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-string">"Kephyes_ovata@2606431"</span><span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>nhx<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> label <span class="hljs-operator">%in%</span> to_drop<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><br><br>nhx_reduced <span class="hljs-operator">&lt;-</span> drop.tip<span class="hljs-punctuation">(</span>as.phylo<span class="hljs-punctuation">(</span>nhx<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> to_drop<span class="hljs-punctuation">)</span> <span class="hljs-comment"># 发现需要转换成phylo对象才行</span><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>nhx_reduced<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span>  <br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"A"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"B"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518019.png" alt=""></p><h4 id="根据tips取子集"><a href="#根据tips取子集" class="headerlink" title="根据tips取子集"></a>根据<code>tips</code>取子集</h4><p>如果一个进化树很复杂的话，要看我们感兴趣的部分就很难，这时候就需要将我们感兴趣的部分提取出来。<code>treeio</code>中的函数<code>tree_subset()</code>能够完成这一功能，即使是提取出来的子集，结构还是和原来的一样，不会发生变化。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs R">beast_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/MCC_FluA_H3.tree"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>beast_tree <span class="hljs-operator">&lt;-</span> read.beast<span class="hljs-punctuation">(</span>beast_file<span class="hljs-punctuation">)</span><br><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'原始树'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">40</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>tree2 <span class="hljs-operator">=</span> tree_subset<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> <span class="hljs-string">"A/Swine/HK/168/2012"</span><span class="hljs-punctuation">,</span> levels_back<span class="hljs-operator">=</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span>  <br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'取子集'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br><br>p3 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> rate<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> <span class="hljs-number">21</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'用rate这个变量控制颜色'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> guide <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_continuous<span class="hljs-punctuation">(</span>low <span class="hljs-operator">=</span> <span class="hljs-string">'blue'</span><span class="hljs-punctuation">,</span> high <span class="hljs-operator">=</span> <span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'right'</span><span class="hljs-punctuation">)</span><br><br><br>p4 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>             root.position <span class="hljs-operator">=</span> as.phylo<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>root.edge<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span> <span class="hljs-number">24</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'添加根节点但不显示'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>p5 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>             root.position <span class="hljs-operator">=</span> as.phylo<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>root.edge<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_rootedge<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">40</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'添加根节点且显示'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>plot_grid<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> p3<span class="hljs-punctuation">,</span> p4<span class="hljs-punctuation">,</span> p5<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> .<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518696.png" alt=""></p><h4 id="根据内部节点编号取子集"><a href="#根据内部节点编号取子集" class="headerlink" title="根据内部节点编号取子集"></a>根据内部节点编号取子集</h4><p>如果我们对特定的进化分支（clade）感兴趣，那也可以通过<code>tree_subset()</code>函数将感兴趣的分支进行放大展示，但是这个时候需要我们知道感兴趣的进化分支所对应的<code>node</code>编号才行。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs R">clade <span class="hljs-operator">&lt;-</span> tree_subset<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> node<span class="hljs-operator">=</span><span class="hljs-number">121</span><span class="hljs-punctuation">,</span> levels_back<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>clade2 <span class="hljs-operator">&lt;-</span> tree_subset<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> node<span class="hljs-operator">=</span><span class="hljs-number">121</span><span class="hljs-punctuation">,</span> levels_back<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>clade<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'感兴趣的整个分支'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>clade2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'感兴趣的整个分支 + 回退两个节点'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">8</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> scale_color_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><br>library<span class="hljs-punctuation">(</span>ape<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidytree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>chiroptera<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 如果不知道node的时候，就直接进行匹配</span><br>nodes <span class="hljs-operator">&lt;-</span> grep<span class="hljs-punctuation">(</span><span class="hljs-string">"Plecotus"</span><span class="hljs-punctuation">,</span> chiroptera<span class="hljs-operator">$</span>tip.label<span class="hljs-punctuation">)</span><br>chiroptera <span class="hljs-operator">&lt;-</span> groupOTU<span class="hljs-punctuation">(</span>chiroptera<span class="hljs-punctuation">,</span> nodes<span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>chiroptera<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>colour <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'整个进化树中选择感兴趣的整个分支'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"none"</span><span class="hljs-punctuation">)</span><br><br>clade <span class="hljs-operator">&lt;-</span> MRCA<span class="hljs-punctuation">(</span>chiroptera<span class="hljs-punctuation">,</span> nodes<span class="hljs-punctuation">)</span> <span class="hljs-comment"># 最近的父节点</span><br>x <span class="hljs-operator">&lt;-</span> tree_subset<span class="hljs-punctuation">(</span>chiroptera<span class="hljs-punctuation">,</span> clade<span class="hljs-punctuation">,</span> levels_back <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>p4 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'感兴趣的特有分支'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><br>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> p3<span class="hljs-punctuation">,</span> p4<span class="hljs-punctuation">,</span>ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518111.png" alt=""></p><h3 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h3><p><code>treeio</code>这个R包可以导出多种格式的文件，这个比较简单，详情参照：<a href="https://yulab-smu.top/treedata-book/chapter3.html">https://yulab-smu.top/treedata-book/chapter3.html</a></p><h2 id="进化树可视化"><a href="#进化树可视化" class="headerlink" title="进化树可视化"></a>进化树可视化</h2><h3 id="基础方法"><a href="#基础方法" class="headerlink" title="基础方法"></a>基础方法</h3><p><code>ggtree</code>对进化树进行可视化的方法有两种：</p><ul><li><code>ggplot()</code> + <code>geom_tree()</code> + <code>theme_tree()</code></li><li><code>ggtree()</code></li></ul><p>第二种方法是第一种方法的“缩写版”。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><br>nwk <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sample.nwk"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>nwk<span class="hljs-punctuation">)</span><br><br>ggplot<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>这两种方法得到的结果是一样的：</p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518520.png" alt=""></p><p><code>ggtree</code>支持<code>ggplot2</code>的图形语法，因此，也可以在<code>ggtree</code>中对颜色性状等进行修改：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><br>nwk <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sample.nwk"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>nwk<span class="hljs-punctuation">)</span><br><br>ggplot<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span><br><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"firebrick"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> linetype<span class="hljs-operator">=</span><span class="hljs-string">"dotted"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'阶梯化'</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"firebrick"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> linetype<span class="hljs-operator">=</span><span class="hljs-string">"dotted"</span><span class="hljs-punctuation">,</span> ladderize<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'非阶梯化'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">)</span>v<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518765.png" alt=""></p><p>可以使用参数<code>branch.length</code>对egde进行标准化，如果参数为<code>none</code>，则是这样：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">"none"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518191.png" alt=""></p><h3 id="输出样式"><a href="#输出样式" class="headerlink" title="输出样式"></a>输出样式</h3><p><code>ggtree</code>支持多种输出样式：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">2017</span><span class="hljs-operator">-</span><span class="hljs-number">02</span><span class="hljs-operator">-</span><span class="hljs-number">16</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'默认'</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"roundrect"</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'roundrect'</span><span class="hljs-punctuation">)</span><br>p3 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"slanted"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'slanted'</span><span class="hljs-punctuation">)</span><br>p4 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"ellipse"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'ellipse'</span><span class="hljs-punctuation">)</span><br>p5 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"circular"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'circular'</span><span class="hljs-punctuation">)</span><br>p6 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"fan"</span><span class="hljs-punctuation">,</span> open.angle<span class="hljs-operator">=</span><span class="hljs-number">120</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'fan'</span><span class="hljs-punctuation">)</span><br>p7 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"equal_angle"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'equal_angle'</span><span class="hljs-punctuation">)</span><br>p8 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"daylight"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'daylight'</span><span class="hljs-punctuation">)</span><br>p9 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span><br>p10 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"ellipse"</span><span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">"none"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'ellipse对齐'</span><span class="hljs-punctuation">)</span><br>p11 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">'circular'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'circular对齐'</span><span class="hljs-punctuation">)</span><br>p12 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"daylight"</span><span class="hljs-punctuation">,</span> branch.length <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'daylight对齐'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span>p4<span class="hljs-punctuation">,</span>p5<span class="hljs-punctuation">,</span>p6<span class="hljs-punctuation">,</span>p7<span class="hljs-punctuation">,</span>p8<span class="hljs-punctuation">,</span>p9<span class="hljs-punctuation">,</span>p10<span class="hljs-punctuation">,</span>p11<span class="hljs-punctuation">,</span>p12<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518168.png" alt=""></p><p>当只是展示树结构而没有分支长度标尺的时候，就用最下面这4种。</p><p>还有其他的多种对齐方式：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> scale_x_reverse<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> coord_flip<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> layout_dendrogram<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggplotify<span class="hljs-operator">::</span>as.ggplot<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> angle<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">30</span><span class="hljs-punctuation">,</span> scale<span class="hljs-operator">=</span><span class="hljs-number">.9</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">'slanted'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> coord_flip<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">'slanted'</span><span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> layout_dendrogram<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">'circular'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> layout_inward_circular<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> layout_inward_circular<span class="hljs-punctuation">(</span>xlim<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518452.png" alt=""></p><p>如果是时间范围数据的话，则需要调用参数<code>mrsd</code>（most recent sample data）：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">beast_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/MCC_FluA_H3.tree"</span><span class="hljs-punctuation">,</span> <br>                          package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>beast_tree <span class="hljs-operator">&lt;-</span> read.beast<span class="hljs-punctuation">(</span>beast_file<span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> mrsd<span class="hljs-operator">=</span><span class="hljs-string">"2013-01-01"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518454.png" alt=""></p><h3 id="展示相关元素"><a href="#展示相关元素" class="headerlink" title="展示相关元素"></a>展示相关元素</h3><h4 id="展示进化距离"><a href="#展示进化距离" class="headerlink" title="展示进化距离"></a>展示进化距离</h4><p>函数<code>geom_treescale()</code>用于展示进化距离。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_treescale<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'默认'</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_treescale<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-number">45</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'设定位置、宽度、颜色'</span><span class="hljs-punctuation">)</span><br>p3 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_treescale<span class="hljs-punctuation">(</span>fontsize<span class="hljs-operator">=</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span> linesize<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'设定字体大小、线条大小、缩进'</span><span class="hljs-punctuation">)</span><br>p4 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'使用内置主题'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span>p4<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518270.png" alt=""></p><h4 id="展示nodes-tips"><a href="#展示nodes-tips" class="headerlink" title="展示nodes/tips"></a>展示<code>nodes/tips</code></h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>shape<span class="hljs-operator">=</span>isTip<span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span>isTip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'使用geom_point()函数'</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_nodepoint<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"#b5e521"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tippoint<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"#FDAC4F"</span><span class="hljs-punctuation">,</span> shape<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'使用两个函数'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071518888.png" alt=""></p><h4 id="展示tips的标签"><a href="#展示tips的标签" class="headerlink" title="展示tips的标签"></a>展示<code>tips</code>的标签</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_nodepoint<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"#b5e521"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">/</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tippoint<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"#FDAC4F"</span><span class="hljs-punctuation">,</span> shape<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"purple"</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"circular"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>angle<span class="hljs-operator">=</span>angle<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'blue'</span><span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> branch.length <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>as_ylab<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'firebrick'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="ggtree学习笔记/19.png" alt=""></p><h4 id="展示根节点"><a href="#展示根节点" class="headerlink" title="展示根节点"></a>展示根节点</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## with root edge = 1</span><br>tree1 <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>text<span class="hljs-operator">=</span><span class="hljs-string">'((A:1,B:2):3,C:2):1;'</span><span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree1<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_rootedge<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'有根节点信息'</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## without root edge</span><br>tree2 <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>text<span class="hljs-operator">=</span><span class="hljs-string">'((A:1,B:2):3,C:2);'</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_rootedge<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'无根节点信息，默认无'</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## setting root edge</span><br>tree2<span class="hljs-operator">$</span>root.edge <span class="hljs-operator">&lt;-</span> 2<br>p3 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_rootedge<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'无根节点信息，添加信息'</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## specify length of root edge for just plotting</span><br><span class="hljs-comment">## this will ignore tree$root.edge</span><br>p4 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_rootedge<span class="hljs-punctuation">(</span>rootedge <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">'无根节点信息，设置信息'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span>p4<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519612.png" alt=""></p><h4 id="上色"><a href="#上色" class="headerlink" title="上色"></a>上色</h4><p>上色直接是很简单，就像<code>ggplot2</code>那样：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>rate<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_continuous<span class="hljs-punctuation">(</span>low<span class="hljs-operator">=</span><span class="hljs-string">'darkgreen'</span><span class="hljs-punctuation">,</span> high<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-string">"right"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519537.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs R">anole.tree<span class="hljs-operator">&lt;-</span>read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"http://www.phytools.org/eqg2015/data/anole.tre"</span><span class="hljs-punctuation">)</span><br>svl <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"http://www.phytools.org/eqg2015/data/svl.csv"</span><span class="hljs-punctuation">,</span><br>                row.names<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>svl <span class="hljs-operator">&lt;-</span> as.matrix<span class="hljs-punctuation">(</span>svl<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>fit <span class="hljs-operator">&lt;-</span> phytools<span class="hljs-operator">::</span>fastAnc<span class="hljs-punctuation">(</span>anole.tree<span class="hljs-punctuation">,</span>svl<span class="hljs-punctuation">,</span>vars<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span>CI<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>td <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> nodeid<span class="hljs-punctuation">(</span>anole.tree<span class="hljs-punctuation">,</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>svl<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                 trait <span class="hljs-operator">=</span> svl<span class="hljs-punctuation">)</span><br>nd <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>fit<span class="hljs-operator">$</span>ace<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> trait <span class="hljs-operator">=</span> fit<span class="hljs-operator">$</span>ace<span class="hljs-punctuation">)</span><br><br>d <span class="hljs-operator">&lt;-</span> rbind<span class="hljs-punctuation">(</span>td<span class="hljs-punctuation">,</span> nd<span class="hljs-punctuation">)</span><br>d<span class="hljs-operator">$</span>node <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>d<span class="hljs-operator">$</span>node<span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> full_join<span class="hljs-punctuation">(</span>anole.tree<span class="hljs-punctuation">,</span> d<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'node'</span><span class="hljs-punctuation">)</span><br><br>p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>trait<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">'circular'</span><span class="hljs-punctuation">,</span> <br>             ladderize <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> continuous <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_gradientn<span class="hljs-punctuation">(</span>colours<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'orange'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'green'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'cyan'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'blue'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.85</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">'circular'</span><span class="hljs-punctuation">,</span> ladderize <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">2.8</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tree<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>trait<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> continuous<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  <br>  scale_color_gradientn<span class="hljs-punctuation">(</span>colours<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'orange'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'green'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'cyan'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'blue'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>trait<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> hjust <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.85</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> labels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"分支默认边框"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"分支黑色边框"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>    <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519693.png" alt=""></p><h4 id="对树进行重新标准化"><a href="#对树进行重新标准化" class="headerlink" title="对树进行重新标准化"></a>对树进行重新标准化</h4><p>多个参数对进化树进行标准化，时间序列相关的参数用<code>msrd</code>，其余的参数可以用<code>branch.length</code>。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>beast_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/MCC_FluA_H3.tree"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>beast_tree <span class="hljs-operator">&lt;-</span> read.beast<span class="hljs-punctuation">(</span>beast_file<span class="hljs-punctuation">)</span><br>beast_tree<br><br>p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> mrsd<span class="hljs-operator">=</span><span class="hljs-string">'2013-01-01'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>caption<span class="hljs-operator">=</span><span class="hljs-string">"时间序列"</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'rate'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>caption<span class="hljs-operator">=</span><span class="hljs-string">"取代速率"</span><span class="hljs-punctuation">)</span><br><br>mlcfile <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/PAML_Codeml"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"mlc"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>mlc_tree <span class="hljs-operator">&lt;-</span> read.codeml_mlc<span class="hljs-punctuation">(</span>mlcfile<span class="hljs-punctuation">)</span><br>p3 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>mlc_tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>caption<span class="hljs-operator">=</span><span class="hljs-string">"单密码子核苷酸取代"</span><span class="hljs-punctuation">)</span><br>p4 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>mlc_tree<span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'dN_vs_dS'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>caption<span class="hljs-operator">=</span><span class="hljs-string">"dN/dS"</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span>p4<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519795.png" alt=""></p><p>也可以用<code>rescale_tree</code>对树进行标准化：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">beast_tree2 <span class="hljs-operator">&lt;-</span> rescale_tree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'rate'</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>beast_tree2<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519411.png" alt=""></p><h4 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">2019</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree<span class="hljs-punctuation">(</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"white"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree<span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519108.png" alt=""></p><h4 id="批量建树"><a href="#批量建树" class="headerlink" title="批量建树"></a>批量建树</h4><p>批量建树就相当于<code>ggplot2</code>中的分面：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">## trees &lt;- lapply(c(10, 20, 40), rtree)</span><br><span class="hljs-comment">## class(trees) &lt;- "multiPhylo"</span><br><span class="hljs-comment">## ggtree(trees) + facet_wrap(~.id, scale="free") + geom_tiplab()</span><br><br>r8s <span class="hljs-operator">&lt;-</span> read.r8s<span class="hljs-punctuation">(</span>system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/r8s"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"H3_r8s_output.log"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>r8s<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> facet_wrap<span class="hljs-punctuation">(</span> <span class="hljs-operator">~</span>.id<span class="hljs-punctuation">,</span> scale<span class="hljs-operator">=</span><span class="hljs-string">"free"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519298.png" alt=""></p><h2 id="进化树注释"><a href="#进化树注释" class="headerlink" title="进化树注释"></a>进化树注释</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>注释的信息很多，节点的分组、样品来源、基因表达量等都可以作为注释的信息。一个简单的例子：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>treetext <span class="hljs-operator">=</span> <span class="hljs-string">"(((ADH2:0.1[&amp;&amp;NHX:S=human], ADH1:0.11[&amp;&amp;NHX:S=human]):</span><br><span class="hljs-string">0.05 [&amp;&amp;NHX:S=primates:D=Y:B=100],ADHY:</span><br><span class="hljs-string">0.1[&amp;&amp;NHX:S=nematode],ADHX:0.12 [&amp;&amp;NHX:S=insect]):</span><br><span class="hljs-string">0.1[&amp;&amp;NHX:S=metazoa:D=N],(ADH4:0.09[&amp;&amp;NHX:S=yeast],</span><br><span class="hljs-string">ADH3:0.13[&amp;&amp;NHX:S=yeast], ADH2:0.12[&amp;&amp;NHX:S=yeast],</span><br><span class="hljs-string">ADH1:0.11[&amp;&amp;NHX:S=yeast]):0.1[&amp;&amp;NHX:S=Fungi])[&amp;&amp;NHX:D=N];"</span><br>tree <span class="hljs-operator">&lt;-</span> read.nhx<span class="hljs-punctuation">(</span>textConnection<span class="hljs-punctuation">(</span>treetext<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_label<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>branch<span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span>S<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'lightgreen'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_label<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>D<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'steelblue'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>B<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519968.png" alt=""></p><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519933.png" alt=""></p><h3 id="clade注释"><a href="#clade注释" class="headerlink" title="clade注释"></a><code>clade</code>注释</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R">set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">2015</span><span class="hljs-operator">-</span><span class="hljs-number">12</span><span class="hljs-operator">-</span><span class="hljs-number">21</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">=</span> p1 <span class="hljs-operator">+</span> geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">45</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"test label"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">34</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"another clade"</span><span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">=</span> p1 <span class="hljs-operator">+</span> geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">45</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"test label"</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span>  offset <span class="hljs-operator">=</span> <span class="hljs-number">.2</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">34</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"another clade"</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> offset <span class="hljs-operator">=</span> <span class="hljs-number">.2</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'blue'</span><span class="hljs-punctuation">)</span><br><br>p4 <span class="hljs-operator">=</span> p1 <span class="hljs-operator">+</span> geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">45</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"test label"</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> angle<span class="hljs-operator">=</span><span class="hljs-number">270</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-string">'center'</span><span class="hljs-punctuation">,</span> offset.text<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> barsize<span class="hljs-operator">=</span><span class="hljs-number">1.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">34</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"another clade"</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> angle<span class="hljs-operator">=</span><span class="hljs-number">45</span><span class="hljs-punctuation">,</span> fontsize<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span><br><br>p5 <span class="hljs-operator">=</span> p1 <span class="hljs-operator">+</span> geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">34</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"another clade"</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> geom<span class="hljs-operator">=</span><span class="hljs-string">'label'</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'lightblue'</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span>p4<span class="hljs-punctuation">,</span>p5<span class="hljs-punctuation">,</span>ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519773.png" alt=""></p><p>同样也适用于无根输出样式，可以根据<code>node</code>的编号，也可以直接用<code>tips</code>的标签（这个是真的赞啊）：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"daylight"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">35</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"test label"</span><span class="hljs-punctuation">,</span> angle<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <br>                  fontsize<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> vjust<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">+</span> <br>  geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">55</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">'another clade'</span><span class="hljs-punctuation">,</span> <br>                  angle<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">95</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> fontsize<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span><br><br><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_strip<span class="hljs-punctuation">(</span><span class="hljs-string">'t10'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'t30'</span><span class="hljs-punctuation">,</span> barsize<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> <br>             label<span class="hljs-operator">=</span><span class="hljs-string">"associated taxa"</span><span class="hljs-punctuation">,</span> offset.text<span class="hljs-operator">=</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_strip<span class="hljs-punctuation">(</span><span class="hljs-string">'t1'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'t18'</span><span class="hljs-punctuation">,</span> barsize<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'blue'</span><span class="hljs-punctuation">,</span> <br>             label <span class="hljs-operator">=</span> <span class="hljs-string">"another label"</span><span class="hljs-punctuation">,</span> offset.text<span class="hljs-operator">=</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519919.png" alt=""></p><h3 id="局部高亮"><a href="#局部高亮" class="headerlink" title="局部高亮"></a>局部高亮</h3><p>局部高亮可以根据<code>node</code>编号进行高亮，也可以使用附加数据或树数据里面的数据进行高亮：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs R">nwk <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sample.nwk"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>nwk<span class="hljs-punctuation">)</span><br><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.6</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">17</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"darkgreen"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.6</span><span class="hljs-punctuation">)</span> <br><br>p2 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"circular"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.6</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">23</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"darkgreen"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.6</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## type can be 'encircle' or 'rect'</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"daylight"</span><span class="hljs-punctuation">,</span> branch.length <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_hilight<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">16</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'darkgreen'</span><span class="hljs-punctuation">,</span> type<span class="hljs-operator">=</span><span class="hljs-string">"rect"</span><span class="hljs-punctuation">)</span><br><br><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_balance<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">16</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'steelblue'</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'white'</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span> extend<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_balance<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">19</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'darkgreen'</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'white'</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span> extend<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment">## using external data</span><br>d <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">21</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> type<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"A"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"B"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_hilight<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>d<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span>node<span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span>type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## using data stored in tree object</span><br>x <span class="hljs-operator">&lt;-</span> read.nhx<span class="hljs-punctuation">(</span>system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/NHX/ADH.nhx"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_hilight<span class="hljs-punctuation">(</span>mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>subset <span class="hljs-operator">=</span> node <span class="hljs-operator">%in%</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> S<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"darkgreen"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519551.png" alt=""></p><h3 id="高亮不同分组"><a href="#高亮不同分组" class="headerlink" title="高亮不同分组"></a>高亮不同分组</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs R">mytree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"data/Tree 30.4.19.nwk"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Define nodes for coloring later on</span><br>tiplab <span class="hljs-operator">&lt;-</span> mytree<span class="hljs-operator">$</span>tip.label<br>cls <span class="hljs-operator">&lt;-</span> tiplab<span class="hljs-punctuation">[</span>grep<span class="hljs-punctuation">(</span><span class="hljs-string">"^ch"</span><span class="hljs-punctuation">,</span> tiplab<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <br>labeltree <span class="hljs-operator">&lt;-</span> groupOTU<span class="hljs-punctuation">(</span>mytree<span class="hljs-punctuation">,</span> cls<span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>labeltree<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">,</span> linetype<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"circular"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#efad29"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#63bbd4"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_nodepoint<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_tiplab<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">&lt;-</span> flip<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-number">136</span><span class="hljs-punctuation">,</span> <span class="hljs-number">110</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    flip<span class="hljs-punctuation">(</span><span class="hljs-number">141</span><span class="hljs-punctuation">,</span> <span class="hljs-number">145</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    rotate<span class="hljs-punctuation">(</span><span class="hljs-number">141</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    rotate<span class="hljs-punctuation">(</span><span class="hljs-number">142</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    rotate<span class="hljs-punctuation">(</span><span class="hljs-number">160</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    rotate<span class="hljs-punctuation">(</span><span class="hljs-number">164</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    rotate<span class="hljs-punctuation">(</span><span class="hljs-number">131</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">### Group V and II coloring </span><br>p3 <span class="hljs-operator">&lt;-</span> p2 <span class="hljs-operator">+</span> geom_hilight<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">110</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-string">"#229f8a"</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> extend <span class="hljs-operator">=</span> <span class="hljs-number">0.43</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>    <br>    geom_hilight<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">88</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-string">"#229f8a"</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> extend <span class="hljs-operator">=</span> <span class="hljs-number">0.445</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_hilight<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">156</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-string">"#229f8a"</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> extend <span class="hljs-operator">=</span> <span class="hljs-number">0.35</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_hilight<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">136</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-string">"#f9311f"</span><span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> extend <span class="hljs-operator">=</span> <span class="hljs-number">0.512</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">### Putting on a label on the avian specific expansion </span><br>p4 <span class="hljs-operator">&lt;-</span> p3 <span class="hljs-operator">+</span> geom_cladelabel<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">113</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">"Avian-specific expansion"</span><span class="hljs-punctuation">,</span> <br>                        align <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> angle <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">35</span><span class="hljs-punctuation">,</span> offset.text <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <br>                        hjust <span class="hljs-operator">=</span> <span class="hljs-string">"center"</span><span class="hljs-punctuation">,</span> fontsize <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span>  offset <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> barsize <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span><br>    <br><span class="hljs-comment">### Adding the bootstrap values with subset used to remove all bootstraps &lt; 50  </span><br>p5 <span class="hljs-operator">&lt;-</span> p4 <span class="hljs-operator">+</span> geom_text2<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>label<span class="hljs-punctuation">,</span> <br>                        subset <span class="hljs-operator">=</span> <span class="hljs-operator">!</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>label<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">&amp;</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>label<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">50</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                    size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span>nudge_y <span class="hljs-operator">=</span> <span class="hljs-number">0.7</span><span class="hljs-punctuation">,</span> nudge_x <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">)</span><br> <br><span class="hljs-comment">### Putting labels on the subgroups </span><br>p6 <span class="hljs-operator">&lt;-</span> p5 <span class="hljs-operator">+</span> geom_cladelabel<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">114</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">"Subgroup A"</span><span class="hljs-punctuation">,</span> align <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <br>                        angle <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">55</span><span class="hljs-punctuation">,</span> offset.text <span class="hljs-operator">=</span> <span class="hljs-number">.03</span><span class="hljs-punctuation">,</span> hjust <span class="hljs-operator">=</span> <span class="hljs-string">"center"</span><span class="hljs-punctuation">,</span> <br>                        offset <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> barsize <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> fontsize <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>            geom_cladelabel<span class="hljs-punctuation">(</span>node <span class="hljs-operator">=</span> <span class="hljs-number">121</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">"Subgroup B"</span><span class="hljs-punctuation">,</span> align <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <br>                        angle <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> offset.text <span class="hljs-operator">=</span> <span class="hljs-number">.03</span><span class="hljs-punctuation">,</span> hjust <span class="hljs-operator">=</span> <span class="hljs-string">"center"</span><span class="hljs-punctuation">,</span> <br>                        offset <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> barsize <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> fontsize <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>            theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-string">"none"</span><span class="hljs-punctuation">,</span> <br>                plot.margin<span class="hljs-operator">=</span>grid<span class="hljs-operator">::</span>unit<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"mm"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>print<span class="hljs-punctuation">(</span>p6<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519474.png" alt=""></p><h3 id="样品连接"><a href="#样品连接" class="headerlink" title="样品连接"></a>样品连接</h3><p>利用函数<code>geom_taxalink()</code>可以实现样品之间的连线，但是只支持有限的几种形式：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">'E'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">'F'</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">'K'</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span><br>                arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.02</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"circular"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">'E'</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">"grey"</span><span class="hljs-punctuation">,</span>alpha<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <br>                offset<span class="hljs-operator">=</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span>arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">'F'</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">'K'</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span> <br>                alpha<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><br>                arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">"L"</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">"M"</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">"blue"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <br>                offset<span class="hljs-operator">=</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span>hratio<span class="hljs-operator">=</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> <br>                arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># when the tree was created using reverse x, </span><br><span class="hljs-comment"># we can set outward to FALSE, which will generate the inward curve lines.</span><br>p3 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"inward_circular"</span><span class="hljs-punctuation">,</span> xlim<span class="hljs-operator">=</span><span class="hljs-number">150</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">'E'</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">"grey"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <br>                offset<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> <br>                outward<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>                arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">'F'</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">'K'</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span> <br>                alpha<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span><br>                outward<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>                arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_taxalink<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span><span class="hljs-string">"L"</span><span class="hljs-punctuation">,</span> taxa2<span class="hljs-operator">=</span><span class="hljs-string">"M"</span><span class="hljs-punctuation">,</span> <br>                color<span class="hljs-operator">=</span><span class="hljs-string">"blue"</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <br>                offset<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> <br>                outward<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>                arrow<span class="hljs-operator">=</span>arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"npc"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>hjust<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <br><br>dat <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>from<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"A"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"F"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"L"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  to<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"E"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"K"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"M"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  h<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  type<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"t1"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"t2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"t3"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  s<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p4 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"inward_circular"</span><span class="hljs-punctuation">,</span> xlim<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">150</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_taxalink<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>dat<span class="hljs-punctuation">,</span> <br>                mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>taxa1<span class="hljs-operator">=</span>from<span class="hljs-punctuation">,</span> <br>                            taxa2<span class="hljs-operator">=</span>to<span class="hljs-punctuation">,</span> <br>                            color<span class="hljs-operator">=</span>type<span class="hljs-punctuation">,</span> <br>                            size<span class="hljs-operator">=</span>s<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                ncp<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>                offset<span class="hljs-operator">=</span><span class="hljs-number">0.15</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>hjust<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_size_continuous<span class="hljs-punctuation">(</span><span class="hljs-built_in">range</span><span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> p3<span class="hljs-punctuation">,</span> p4<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> labels<span class="hljs-operator">=</span><span class="hljs-built_in">LETTERS</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071519203.png" alt=""></p><h3 id="Uncertainty-of-evolutionary-inference"><a href="#Uncertainty-of-evolutionary-inference" class="headerlink" title="Uncertainty of evolutionary inference"></a>Uncertainty of evolutionary inference</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/MEGA7"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"mtCDNA_timetree.nex"</span><span class="hljs-punctuation">,</span> package <span class="hljs-operator">=</span> <span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> read.mega<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_range<span class="hljs-punctuation">(</span><span class="hljs-string">'reltime_0.95_CI'</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.3</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_range<span class="hljs-punctuation">(</span><span class="hljs-string">'reltime_0.95_CI'</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.3</span><span class="hljs-punctuation">,</span> center<span class="hljs-operator">=</span><span class="hljs-string">'reltime'</span><span class="hljs-punctuation">)</span>  <br>p3 <span class="hljs-operator">&lt;-</span> p2 <span class="hljs-operator">+</span> scale_x_range<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>p3<span class="hljs-punctuation">,</span>ncol <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520792.png" alt=""></p><h3 id="其他软件输出的结果"><a href="#其他软件输出的结果" class="headerlink" title="其他软件输出的结果"></a>其他软件输出的结果</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R">rstfile <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/PAML_Codeml"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"rst"</span><span class="hljs-punctuation">,</span> <br>                       package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>mlcfile <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata/PAML_Codeml"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"mlc"</span><span class="hljs-punctuation">,</span> <br>                       package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br><br>ml <span class="hljs-operator">&lt;-</span> read.codeml<span class="hljs-punctuation">(</span>rstfile<span class="hljs-punctuation">,</span> mlcfile<span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>ml<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>dN_vs_dS<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'dN_vs_dS'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_color_continuous<span class="hljs-punctuation">(</span>name<span class="hljs-operator">=</span><span class="hljs-string">'dN/dS'</span><span class="hljs-punctuation">,</span> limits<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                         oob<span class="hljs-operator">=</span>scales<span class="hljs-operator">::</span>squish<span class="hljs-punctuation">,</span><br>                         low<span class="hljs-operator">=</span><span class="hljs-string">'darkgreen'</span><span class="hljs-punctuation">,</span> high<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>branch<span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span>AA_subs<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>            vjust<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'steelblue'</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_tree2<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.9</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520761.png" alt=""></p><h3 id="放大特定区域"><a href="#放大特定区域" class="headerlink" title="放大特定区域"></a>放大特定区域</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>nwk <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sample.nwk"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>nwk<span class="hljs-punctuation">)</span><br>p1 <span class="hljs-operator">=</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">=</span> viewClade<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> MRCA<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-string">"I"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"L"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span>p2<span class="hljs-punctuation">,</span>ncol <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'原图'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'特定区域'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520383.png" alt=""></p><h3 id="标准化选中的clade"><a href="#标准化选中的clade" class="headerlink" title="标准化选中的clade"></a>标准化选中的clade</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">tree2 <span class="hljs-operator">&lt;-</span> groupClade<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">21</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"firebrick"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>scaleClade<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> node<span class="hljs-operator">=</span><span class="hljs-number">17</span><span class="hljs-punctuation">,</span> scale<span class="hljs-operator">=</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520979.png" alt=""></p><h3 id="隐藏-展示某个clade"><a href="#隐藏-展示某个clade" class="headerlink" title="隐藏/展示某个clade"></a>隐藏/展示某个clade</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">p2 <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">%&gt;%</span> collapse<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_point2<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>subset<span class="hljs-operator">=</span><span class="hljs-punctuation">(</span>node<span class="hljs-operator">==</span><span class="hljs-number">21</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> shape<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'green'</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> collapse<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> node<span class="hljs-operator">=</span><span class="hljs-number">23</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_point2<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>subset<span class="hljs-operator">=</span><span class="hljs-punctuation">(</span>node<span class="hljs-operator">==</span><span class="hljs-number">23</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> shape<span class="hljs-operator">=</span><span class="hljs-number">23</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span><br>print<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">)</span><br>expand<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> node<span class="hljs-operator">=</span><span class="hljs-number">23</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> expand<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520310.png" alt=""></p><h3 id="利用三角形隐藏-展示某个clade"><a href="#利用三角形隐藏-展示某个clade" class="headerlink" title="利用三角形隐藏/展示某个clade"></a>利用三角形隐藏/展示某个clade</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R">p2 <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>node <span class="hljs-operator">&lt;-</span> 21<br>collapse<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> node<span class="hljs-punctuation">,</span> <span class="hljs-string">'max'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> expand<span class="hljs-punctuation">(</span>node<span class="hljs-punctuation">)</span><br>collapse<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> node<span class="hljs-punctuation">,</span> <span class="hljs-string">'min'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> expand<span class="hljs-punctuation">(</span>node<span class="hljs-punctuation">)</span><br>collapse<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> node<span class="hljs-punctuation">,</span> <span class="hljs-string">'mixed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> expand<span class="hljs-punctuation">(</span>node<span class="hljs-punctuation">)</span><br><br>collapse<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-number">21</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'mixed'</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'steelblue'</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">.4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  collapse<span class="hljs-punctuation">(</span><span class="hljs-number">23</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'mixed'</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">'firebrick'</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'blue'</span><span class="hljs-punctuation">)</span><br>  <br>scaleClade<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-number">23</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> collapse<span class="hljs-punctuation">(</span><span class="hljs-number">23</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'min'</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"darkgreen"</span><span class="hljs-punctuation">)</span>  <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520498.png" alt=""></p><h3 id="分组Taxa"><a href="#分组Taxa" class="headerlink" title="分组Taxa"></a>分组Taxa</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br><br>data<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">)</span><br>rn <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"_"</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">150</span><span class="hljs-punctuation">)</span><br>rownames<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rn<br>d_iris <span class="hljs-operator">&lt;-</span> dist<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">"man"</span><span class="hljs-punctuation">)</span><br><br>tree_iris <span class="hljs-operator">&lt;-</span> ape<span class="hljs-operator">::</span>bionj<span class="hljs-punctuation">(</span>d_iris<span class="hljs-punctuation">)</span><br>grp <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>setosa     <span class="hljs-operator">=</span> rn<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">50</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            versicolor <span class="hljs-operator">=</span> rn<span class="hljs-punctuation">[</span><span class="hljs-number">51</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            virginica  <span class="hljs-operator">=</span> rn<span class="hljs-punctuation">[</span><span class="hljs-number">101</span><span class="hljs-operator">:</span><span class="hljs-number">150</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>p_iris <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree_iris<span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">'circular'</span><span class="hljs-punctuation">,</span> branch.length<span class="hljs-operator">=</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span><br>groupOTU<span class="hljs-punctuation">(</span>p_iris<span class="hljs-punctuation">,</span> grp<span class="hljs-punctuation">,</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>group<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-string">"right"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520554.png" alt=""></p><p>另外一种方法：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">tree_iris <span class="hljs-operator">&lt;-</span> groupOTU<span class="hljs-punctuation">(</span>tree_iris<span class="hljs-punctuation">,</span> grp<span class="hljs-punctuation">,</span> <span class="hljs-string">"Species"</span><span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>tree_iris<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>Species<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">'circular'</span><span class="hljs-punctuation">,</span> branch.length <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-string">"right"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h3 id="旋转clade"><a href="#旋转clade" class="headerlink" title="旋转clade"></a>旋转clade</h3><p>旋转<code>clade</code>有两种方法：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">p1 <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> geom_point2<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>subset<span class="hljs-operator">=</span>node<span class="hljs-operator">==</span><span class="hljs-number">16</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'darkgreen'</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> rotate<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> <span class="hljs-number">17</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> rotate<span class="hljs-punctuation">(</span><span class="hljs-number">21</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 方法1</span><br>flip<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> <span class="hljs-number">17</span><span class="hljs-punctuation">,</span> <span class="hljs-number">21</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 方法2</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520705.png" alt=""></p><h3 id="外部数据mapping到树上"><a href="#外部数据mapping到树上" class="headerlink" title="外部数据mapping到树上"></a>外部数据mapping到树上</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggimage<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 文件下载地址</span><br><span class="hljs-comment"># https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tree_boots.nwk</span><br><span class="hljs-comment"># https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tip_data.csv</span><br><br><br>x <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"tree_boots.nwk"</span><span class="hljs-punctuation">)</span><br>info <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"tip_data.csv"</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&lt;+%</span> info <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">.1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span>offset <span class="hljs-operator">=</span> <span class="hljs-number">.6</span><span class="hljs-punctuation">,</span> hjust <span class="hljs-operator">=</span> <span class="hljs-number">.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tippoint<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>shape <span class="hljs-operator">=</span> trophic_habit<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> trophic_habit<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> mass_in_kg<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"right"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> scale_size_continuous<span class="hljs-punctuation">(</span><span class="hljs-built_in">range</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">#https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/inode_data.csv</span><br>d2 <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"inode_data.csv"</span><span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">%&lt;+%</span> d2 <span class="hljs-operator">+</span> geom_label<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> vernacularName.y<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> posterior<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_fill_gradientn<span class="hljs-punctuation">(</span>colors <span class="hljs-operator">=</span> RColorBrewer<span class="hljs-operator">::</span>brewer.pal<span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"YlGnBu"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520744.png" alt=""></p><h3 id="将SNP数据添加到树上"><a href="#将SNP数据添加到树上" class="headerlink" title="将SNP数据添加到树上"></a>将SNP数据添加到树上</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><span class="hljs-comment">## remote_folder &lt;- paste0("https://raw.githubusercontent.com/katholt/",</span><br><span class="hljs-comment">##                         "plotTree/master/tree_example_april2015/")</span><br>remote_folder <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"data/tree_example_april2015/"</span> <br><br><span class="hljs-comment">## read the phylogenetic tree</span><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span>remote_folder<span class="hljs-punctuation">,</span> <span class="hljs-string">"tree.nwk"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## read the sampling information data set</span><br>info <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span>remote_folder<span class="hljs-punctuation">,</span><span class="hljs-string">"info.csv"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## read and process the allele table</span><br>snps<span class="hljs-operator">&lt;-</span>read.csv<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span>remote_folder<span class="hljs-punctuation">,</span> <span class="hljs-string">"alleles.csv"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span><br>                row.names <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> stringsAsFactor <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br>snps_strainCols <span class="hljs-operator">&lt;-</span> snps<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <br>snps<span class="hljs-operator">&lt;-</span>snps<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-comment"># drop strain names</span><br>colnames<span class="hljs-punctuation">(</span>snps<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> snps_strainCols<br><br>gapChar <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"?"</span><br>snp <span class="hljs-operator">&lt;-</span> t<span class="hljs-punctuation">(</span>snps<span class="hljs-punctuation">)</span><br>lsnp <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>snp<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>        x <span class="hljs-operator">!=</span> snp<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&amp;</span> x <span class="hljs-operator">!=</span> gapChar <span class="hljs-operator">&amp;</span> snp<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">!=</span> gapChar<br>    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">)</span><br>lsnp <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>lsnp<span class="hljs-punctuation">)</span><br>lsnp<span class="hljs-operator">$</span>pos <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>rownames<span class="hljs-punctuation">(</span>lsnp<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>lsnp <span class="hljs-operator">&lt;-</span> tidyr<span class="hljs-operator">::</span>gather<span class="hljs-punctuation">(</span>lsnp<span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>pos<span class="hljs-punctuation">)</span><br>snp_data <span class="hljs-operator">&lt;-</span> lsnp<span class="hljs-punctuation">[</span>lsnp<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"name"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"pos"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment">## read the trait data</span><br>bar_data <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span>remote_folder<span class="hljs-punctuation">,</span> <span class="hljs-string">"bar.csv"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## visualize the tree </span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment">## attach the sampling information data set </span><br><span class="hljs-comment">## and add symbols colored by location</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">%&lt;+%</span> info <span class="hljs-operator">+</span> geom_tippoint<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>location<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## visualize SNP and Trait data using dot and bar charts,</span><br><span class="hljs-comment">## and align them based on tree structure</span><br>p <span class="hljs-operator">+</span> geom_facet<span class="hljs-punctuation">(</span>panel <span class="hljs-operator">=</span> <span class="hljs-string">"SNP"</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> snp_data<span class="hljs-punctuation">,</span> geom <span class="hljs-operator">=</span> geom_point<span class="hljs-punctuation">,</span> <br>               mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> pos<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> location<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> <span class="hljs-string">'|'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_facet<span class="hljs-punctuation">(</span>panel <span class="hljs-operator">=</span> <span class="hljs-string">"Trait"</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> bar_data<span class="hljs-punctuation">,</span> geom <span class="hljs-operator">=</span> ggstance<span class="hljs-operator">::</span>geom_barh<span class="hljs-punctuation">,</span> <br>                aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> dummy_bar_value<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> location<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> location<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                stat <span class="hljs-operator">=</span> <span class="hljs-string">"identity"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">.6</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme_tree2<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.85</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520908.png" alt=""></p><h3 id="关联矩阵"><a href="#关联矩阵" class="headerlink" title="关联矩阵"></a>关联矩阵</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R">beast_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/MCC_FluA_H3.tree"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>beast_tree <span class="hljs-operator">&lt;-</span> read.beast<span class="hljs-punctuation">(</span>beast_file<span class="hljs-punctuation">)</span><br><br>genotype_file <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"examples/Genotype.txt"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"ggtree"</span><span class="hljs-punctuation">)</span><br>genotype <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span>genotype_file<span class="hljs-punctuation">,</span> sep<span class="hljs-operator">=</span><span class="hljs-string">"\t"</span><span class="hljs-punctuation">,</span> stringsAsFactor<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>genotype<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> sub<span class="hljs-punctuation">(</span><span class="hljs-string">"\\.$"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span> colnames<span class="hljs-punctuation">(</span>genotype<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> mrsd<span class="hljs-operator">=</span><span class="hljs-string">"2013-01-01"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_treescale<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span><span class="hljs-number">2008</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_tiplab<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>gheatmap<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> genotype<span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> font.size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <br>        colnames_angle<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">45</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_manual<span class="hljs-punctuation">(</span>breaks<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"HuH3N2"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"pdm"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"trig"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"firebrick"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"darkgreen"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> name<span class="hljs-operator">=</span><span class="hljs-string">"genotype"</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>beast_tree<span class="hljs-punctuation">,</span> mrsd<span class="hljs-operator">=</span><span class="hljs-string">"2013-01-01"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_tiplab<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> linesize<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>gheatmap<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> genotype<span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span> <br>        colnames<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> legend_title<span class="hljs-operator">=</span><span class="hljs-string">"genotype"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_x_ggtree<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    scale_y_continuous<span class="hljs-punctuation">(</span>expand<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520371.png" alt=""></p><h3 id="关联多个矩阵"><a href="#关联多个矩阵" class="headerlink" title="关联多个矩阵"></a>关联多个矩阵</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs R">nwk <span class="hljs-operator">&lt;-</span> system.file<span class="hljs-punctuation">(</span><span class="hljs-string">"extdata"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"sample.nwk"</span><span class="hljs-punctuation">,</span> package<span class="hljs-operator">=</span><span class="hljs-string">"treeio"</span><span class="hljs-punctuation">)</span><br><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>nwk<span class="hljs-punctuation">)</span><br>circ <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">"circular"</span><span class="hljs-punctuation">)</span><br><br>df <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>first<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"a"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"b"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"a"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"c"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"d"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"d"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"a"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"b"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"e"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"e"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"f"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"c"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"f"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                 second<span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"z"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"z"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"z"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"z"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"y"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"y"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"y"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"y"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"x"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"x"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"x"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"a"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"a"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>rownames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> tree<span class="hljs-operator">$</span>tip.label<br><br>df2 <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>matrix<span class="hljs-punctuation">(</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">39</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>rownames<span class="hljs-punctuation">(</span>df2<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> tree<span class="hljs-operator">$</span>tip.label<br>colnames<span class="hljs-punctuation">(</span>df2<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">LETTERS</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><br><br><br>p1 <span class="hljs-operator">&lt;-</span> gheatmap<span class="hljs-punctuation">(</span>circ<span class="hljs-punctuation">,</span> df<span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">.8</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">.2</span><span class="hljs-punctuation">,</span><br>               colnames_angle<span class="hljs-operator">=</span><span class="hljs-number">95</span><span class="hljs-punctuation">,</span> colnames_offset_y <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_viridis_d<span class="hljs-punctuation">(</span>option<span class="hljs-operator">=</span><span class="hljs-string">"D"</span><span class="hljs-punctuation">,</span> name<span class="hljs-operator">=</span><span class="hljs-string">"discrete\nvalue"</span><span class="hljs-punctuation">)</span><br><br><br>library<span class="hljs-punctuation">(</span>ggnewscale<span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">&lt;-</span> p1 <span class="hljs-operator">+</span> new_scale_fill<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>gheatmap<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> df2<span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">.3</span><span class="hljs-punctuation">,</span><br>         colnames_angle<span class="hljs-operator">=</span><span class="hljs-number">90</span><span class="hljs-punctuation">,</span> colnames_offset_y <span class="hljs-operator">=</span> <span class="hljs-number">.25</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_viridis_c<span class="hljs-punctuation">(</span>option<span class="hljs-operator">=</span><span class="hljs-string">"A"</span><span class="hljs-punctuation">,</span> name<span class="hljs-operator">=</span><span class="hljs-string">"continuous\nvalue"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520415.png" alt=""></p><h3 id="多序列比对可视化"><a href="#多序列比对可视化" class="headerlink" title="多序列比对可视化"></a>多序列比对可视化</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"data/tree.nwk"</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br>msaplot<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-string">"data/sequence.fasta"</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">'circular'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_tiplab<span class="hljs-punctuation">(</span>offset<span class="hljs-operator">=</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">12</span><span class="hljs-punctuation">)</span><br>msaplot<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-string">"data/sequence.fasta"</span><span class="hljs-punctuation">,</span> window<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">120</span><span class="hljs-punctuation">,</span> <span class="hljs-number">200</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520969.png" alt=""></p><h3 id="拼图"><a href="#拼图" class="headerlink" title="拼图"></a>拼图</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">2019</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-operator">-</span><span class="hljs-number">31</span><span class="hljs-punctuation">)</span><br>tr <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><br>d1 <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>    <span class="hljs-comment"># only some labels match</span><br>    label <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>tr<span class="hljs-operator">$</span>tip.label<span class="hljs-punctuation">[</span>sample<span class="hljs-punctuation">(</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"A"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    value <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>d2 <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>    label <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span>tr<span class="hljs-operator">$</span>tip.label<span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    category <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">LETTERS</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> each<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    value <span class="hljs-operator">=</span> rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><br>g <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span>align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>p1 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>d1<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>label<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_col<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>label<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>label<span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span> value<span class="hljs-operator">+</span><span class="hljs-number">.1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    coord_flip<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span><br> <br>p2 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>d2<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>category<span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span>label<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_tile<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> scale_fill_viridis_c<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    theme_tree2<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <br>    <br>cowplot<span class="hljs-operator">::</span>plot_grid<span class="hljs-punctuation">(</span>g<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> p1<span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <br><br>library<span class="hljs-punctuation">(</span>aplot<span class="hljs-punctuation">)</span><br>p2 <span class="hljs-operator">%&gt;%</span> insert_left<span class="hljs-punctuation">(</span>g<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> insert_right<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520333.png" alt=""></p><h3 id="图片注释"><a href="#图片注释" class="headerlink" title="图片注释"></a>图片注释</h3><p>没能找到图片下载地址，看代码很容易理解：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggimage<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><br>nwk <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"((((bufonidae, dendrobatidae), ceratophryidae), (centrolenidae, leptodactylidae)), hylidae);"</span><br><br>x <span class="hljs-operator">=</span> read.tree<span class="hljs-punctuation">(</span>text <span class="hljs-operator">=</span> nwk<span class="hljs-punctuation">)</span><br>ggtree<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">7</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> ylim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>image<span class="hljs-operator">=</span>paste0<span class="hljs-punctuation">(</span><span class="hljs-string">"img/frogs/"</span><span class="hljs-punctuation">,</span> label<span class="hljs-punctuation">,</span> <span class="hljs-string">'.jpg'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>              geom<span class="hljs-operator">=</span><span class="hljs-string">"image"</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">.2</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>geom<span class="hljs-operator">=</span><span class="hljs-string">'label'</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_image<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span><span class="hljs-number">.8</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-number">5.5</span><span class="hljs-punctuation">,</span> image<span class="hljs-operator">=</span><span class="hljs-string">"img/frogs/frog.jpg"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">.2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520974.png" alt=""></p><h3 id="图标（剪影）注释"><a href="#图标（剪影）注释" class="headerlink" title="图标（剪影）注释"></a>图标（剪影）注释</h3><p><a href="http://phylopic.org/">PhyloPic</a>提供了1300余种生物剪影，<code>ggtree</code>能够调用这个数据库中的生物图标进行注释，相当于上面的图片。这种情况下绘图稍微有点慢，毕竟这个数据库是国外的。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>newick <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"((Pongo_abelii,(Gorilla_gorilla_gorilla,(Pan_paniscus,Pan_troglodytes)Pan,Homo_sapiens)Homininae)Hominidae,Nomascus_leucogenys)Hominoidea;"</span><br><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span>text<span class="hljs-operator">=</span>newick<span class="hljs-punctuation">)</span><br><br>d <span class="hljs-operator">&lt;-</span> ggimage<span class="hljs-operator">::</span>phylopic_uid<span class="hljs-punctuation">(</span>tree<span class="hljs-operator">$</span>tip.label<span class="hljs-punctuation">)</span><br>d<span class="hljs-operator">$</span>body_mass <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">52</span><span class="hljs-punctuation">,</span> <span class="hljs-number">114</span><span class="hljs-punctuation">,</span> <span class="hljs-number">47</span><span class="hljs-punctuation">,</span> <span class="hljs-number">45</span><span class="hljs-punctuation">,</span> <span class="hljs-number">58</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&lt;+%</span> d <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>image<span class="hljs-operator">=</span>uid<span class="hljs-punctuation">,</span> colour<span class="hljs-operator">=</span>body_mass<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> geom<span class="hljs-operator">=</span><span class="hljs-string">"phylopic"</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-number">2.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>label<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> offset <span class="hljs-operator">=</span> <span class="hljs-number">.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">7</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_viridis_c<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520220.png" alt=""></p><h3 id="使用子图进行注释"><a href="#使用子图进行注释" class="headerlink" title="使用子图进行注释"></a>使用子图进行注释</h3><p>用子图进行注释是通过函数<code>geom_inset()</code>来完成的。</p><h4 id="条形图注释"><a href="#条形图注释" class="headerlink" title="条形图注释"></a>条形图注释</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>phytools<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>anoletree<span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> getStates<span class="hljs-punctuation">(</span>anoletree<span class="hljs-punctuation">,</span><span class="hljs-string">"tips"</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> anoletree<br><br>cols <span class="hljs-operator">&lt;-</span> setNames<span class="hljs-punctuation">(</span>palette<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>sort<span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>fitER <span class="hljs-operator">&lt;-</span> ape<span class="hljs-operator">::</span>ace<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span>tree<span class="hljs-punctuation">,</span>model<span class="hljs-operator">=</span><span class="hljs-string">"ER"</span><span class="hljs-punctuation">,</span>type<span class="hljs-operator">=</span><span class="hljs-string">"discrete"</span><span class="hljs-punctuation">)</span><br>ancstats <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>fitER<span class="hljs-operator">$</span>lik.anc<span class="hljs-punctuation">)</span><br>ancstats<span class="hljs-operator">$</span>node <span class="hljs-operator">&lt;-</span> 1<span class="hljs-operator">:</span>tree<span class="hljs-operator">$</span>Nnode<span class="hljs-operator">+</span>Ntip<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## cols parameter indicate which columns store stats</span><br>bars <span class="hljs-operator">&lt;-</span> nodebar<span class="hljs-punctuation">(</span>ancstats<span class="hljs-punctuation">,</span> cols<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br>bars <span class="hljs-operator">&lt;-</span> lapply<span class="hljs-punctuation">(</span>bars<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>g<span class="hljs-punctuation">)</span> g<span class="hljs-operator">+</span>scale_fill_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> cols<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>tree2 <span class="hljs-operator">&lt;-</span> full_join<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> data.frame<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> stat <span class="hljs-operator">=</span> x <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'label'</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_tippoint<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> stat<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> cols<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"right"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">8</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">+</span> geom_inset<span class="hljs-punctuation">(</span>bars<span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">.08</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">.05</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> <span class="hljs-string">"branch"</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520608.png" alt=""></p><h4 id="饼图注释"><a href="#饼图注释" class="headerlink" title="饼图注释"></a>饼图注释</h4><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>phytools<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidytree<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>anoletree<span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> getStates<span class="hljs-punctuation">(</span>anoletree<span class="hljs-punctuation">,</span><span class="hljs-string">"tips"</span><span class="hljs-punctuation">)</span><br>tree <span class="hljs-operator">&lt;-</span> anoletree<br><br>cols <span class="hljs-operator">&lt;-</span> setNames<span class="hljs-punctuation">(</span>palette<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>sort<span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>fitER <span class="hljs-operator">&lt;-</span> ape<span class="hljs-operator">::</span>ace<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span>tree<span class="hljs-punctuation">,</span>model<span class="hljs-operator">=</span><span class="hljs-string">"ER"</span><span class="hljs-punctuation">,</span>type<span class="hljs-operator">=</span><span class="hljs-string">"discrete"</span><span class="hljs-punctuation">)</span><br>ancstats <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>fitER<span class="hljs-operator">$</span>lik.anc<span class="hljs-punctuation">)</span><br>ancstats<span class="hljs-operator">$</span>node <span class="hljs-operator">&lt;-</span> 1<span class="hljs-operator">:</span>tree<span class="hljs-operator">$</span>Nnode<span class="hljs-operator">+</span>Ntip<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">)</span><br><br>pies <span class="hljs-operator">&lt;-</span> nodepie<span class="hljs-punctuation">(</span>ancstats<span class="hljs-punctuation">,</span> cols <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br>pies <span class="hljs-operator">&lt;-</span> lapply<span class="hljs-punctuation">(</span>pies<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>g<span class="hljs-punctuation">)</span> g<span class="hljs-operator">+</span>scale_fill_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> cols<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>tree2 <span class="hljs-operator">&lt;-</span> full_join<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> data.frame<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> stat <span class="hljs-operator">=</span> x <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'label'</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree2<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> geom_tiplab<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tippoint<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> stat<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> cols<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">"right"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">8</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">+</span> geom_inset<span class="hljs-punctuation">(</span>pies<span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">.1</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">.1</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071520293.png" alt=""></p><h4 id="多种图像组合注释"><a href="#多种图像组合注释" class="headerlink" title="多种图像组合注释"></a>多种图像组合注释</h4><figure class="highlight scss"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs scss">pies_and_bars &lt;- pies<br><span class="hljs-selector-tag">i</span> &lt;- <span class="hljs-built_in">sample</span>(length(pies), <span class="hljs-number">20</span>)<br>pies_and_bars<span class="hljs-selector-attr">[i]</span> &lt;- bars<span class="hljs-selector-attr">[i]</span><br><span class="hljs-selector-tag">p</span> + <span class="hljs-built_in">geom_inset</span>(pies_and_bars, width=.<span class="hljs-number">08</span>, height=.<span class="hljs-number">05</span>)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521102.png" alt=""></p><h3 id="Phylomoji注释"><a href="#Phylomoji注释" class="headerlink" title="Phylomoji注释"></a><code>Phylomoji</code>注释</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># install.packages('emojifont')</span><br><br>tt <span class="hljs-operator">=</span> <span class="hljs-string">'((snail,mushroom),(((sunflower,evergreen_tree),leaves),green_salad));'</span><br>tree <span class="hljs-operator">=</span> read.tree<span class="hljs-punctuation">(</span>text <span class="hljs-operator">=</span> tt<span class="hljs-punctuation">)</span><br>d <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'snail'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mushroom'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'sunflower'</span><span class="hljs-punctuation">,</span><br>                          <span class="hljs-string">'evergreen_tree'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'leaves'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'green_salad'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                group <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'animal'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'fungi'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'flowering plant'</span><span class="hljs-punctuation">,</span><br>                          <span class="hljs-string">'conifers'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'ferns'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'mosses'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">"dashed"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'firebrick'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&lt;+%</span> d <span class="hljs-operator">+</span> <br>  xlim<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> ylim<span class="hljs-punctuation">(</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>parse<span class="hljs-operator">=</span><span class="hljs-string">"emoji"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> vjust<span class="hljs-operator">=</span><span class="hljs-number">.25</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> geom<span class="hljs-operator">=</span><span class="hljs-string">"label"</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span><span class="hljs-number">3.5</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521792.png" alt=""></p><h3 id="Emoji注释circular-fan树"><a href="#Emoji注释circular-fan树" class="headerlink" title="Emoji注释circular/fan树"></a><code>Emoji</code>注释circular/fan树</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout <span class="hljs-operator">=</span> <span class="hljs-string">"circular"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>  <br>  geom_tiplab<span class="hljs-punctuation">(</span>parse<span class="hljs-operator">=</span><span class="hljs-string">"emoji"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> vjust<span class="hljs-operator">=</span><span class="hljs-number">.25</span><span class="hljs-punctuation">)</span><br>print<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## fan layout  </span><br>p2 <span class="hljs-operator">&lt;-</span> open_tree<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> angle<span class="hljs-operator">=</span><span class="hljs-number">200</span><span class="hljs-punctuation">)</span> <br>print<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">%&gt;%</span> rotate_tree<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">90</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521274.png" alt=""></p><h3 id="Emoji注释clades"><a href="#Emoji注释clades" class="headerlink" title="Emoji注释clades"></a><code>Emoji</code>注释clades</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R">set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>tr <span class="hljs-operator">&lt;-</span> rtree<span class="hljs-punctuation">(</span><span class="hljs-number">30</span><span class="hljs-punctuation">)</span><br><br>ggtree<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlim<span class="hljs-punctuation">(</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">41</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"chicken"</span><span class="hljs-punctuation">,</span> parse<span class="hljs-operator">=</span><span class="hljs-string">"emoji"</span><span class="hljs-punctuation">,</span><br>                    fontsize<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> colour<span class="hljs-operator">=</span><span class="hljs-string">"firebrick"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">53</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"duck"</span><span class="hljs-punctuation">,</span> parse<span class="hljs-operator">=</span><span class="hljs-string">"emoji"</span><span class="hljs-punctuation">,</span><br>                    fontsize<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> colour<span class="hljs-operator">=</span><span class="hljs-string">"steelblue"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_cladelabel<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span><span class="hljs-number">48</span><span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span><span class="hljs-string">"family"</span><span class="hljs-punctuation">,</span> parse<span class="hljs-operator">=</span><span class="hljs-string">"emoji"</span><span class="hljs-punctuation">,</span><br>                    fontsize<span class="hljs-operator">=</span><span class="hljs-number">12</span><span class="hljs-punctuation">,</span> align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> colour<span class="hljs-operator">=</span><span class="hljs-string">"darkkhaki"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521726.png" alt=""></p><h3 id="AppleColorEmoji"><a href="#AppleColorEmoji" class="headerlink" title="AppleColorEmoji"></a><code>AppleColorEmoji</code></h3><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">library(ggtree)<br>tree_text &lt;- <span class="hljs-string">"(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);"</span><br>x &lt;- read.tree(<span class="hljs-attribute">text</span>=tree_text)<br>library(ggimage)<br>library(gridSVG)<br>p &lt;-  ggtree(x, <span class="hljs-attribute">size</span>=2) + geom_tiplab(<span class="hljs-attribute">size</span>=20, <span class="hljs-attribute">parse</span>=<span class="hljs-string">'emoji'</span>) +<br>    xlim(NA, 7) + ylim(NA, 8.5) +<br>    geom_phylopic(<span class="hljs-attribute">image</span>=<span class="hljs-string">"79ad5f09-cf21-4c89-8e7d-0c82a00ce728"</span>,<br>                  <span class="hljs-attribute">color</span>=<span class="hljs-string">"firebrick"</span>, alpha = .3, <span class="hljs-attribute">size</span>=Inf)<br><br>p<br>ps = grid.<span class="hljs-built_in">export</span>(<span class="hljs-string">"emoji.svg"</span>, <span class="hljs-attribute">addClass</span>=T)<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521756.png" alt=""></p><h2 id="ggtree可视化其他数据"><a href="#ggtree可视化其他数据" class="headerlink" title="ggtree可视化其他数据"></a><code>ggtree</code>可视化其他数据</h2><p><code>ggtree</code>支持其他的数据类型，比如树状图（更多格式请移步Y叔博客）：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R">hc <span class="hljs-operator">&lt;-</span> hclust<span class="hljs-punctuation">(</span>dist<span class="hljs-punctuation">(</span>mtcars<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>hc<br>clus <span class="hljs-operator">&lt;-</span> cutree<span class="hljs-punctuation">(</span>hc<span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>g <span class="hljs-operator">&lt;-</span> split<span class="hljs-punctuation">(</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>clus<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> clus<span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>hc<span class="hljs-punctuation">,</span> linetype<span class="hljs-operator">=</span><span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span><br>clades <span class="hljs-operator">&lt;-</span> sapply<span class="hljs-punctuation">(</span>g<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">)</span> MRCA<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> groupClade<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> clades<span class="hljs-punctuation">,</span> group_name<span class="hljs-operator">=</span><span class="hljs-string">'subtree'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>subtree<span class="hljs-punctuation">)</span><br><br>d <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>label <span class="hljs-operator">=</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>clus<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                cyl <span class="hljs-operator">=</span> mtcars<span class="hljs-punctuation">[</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>clus<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"cyl"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">%&lt;+%</span> d <span class="hljs-operator">+</span> <br>  layout_dendrogram<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tippoint<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> shape<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>factor<span class="hljs-punctuation">(</span>cyl<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span>x<span class="hljs-operator">+</span><span class="hljs-number">.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>label<span class="hljs-operator">=</span>cyl<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">.5</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_tiplab<span class="hljs-punctuation">(</span>angle<span class="hljs-operator">=</span><span class="hljs-number">90</span><span class="hljs-punctuation">,</span> hjust<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> offset<span class="hljs-operator">=</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> show.legend<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_color_brewer<span class="hljs-punctuation">(</span>palette<span class="hljs-operator">=</span><span class="hljs-string">'Set1'</span><span class="hljs-punctuation">,</span> breaks<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_dendrogram<span class="hljs-punctuation">(</span>plot.margin<span class="hljs-operator">=</span>margin<span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span><span class="hljs-number">80</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.9</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521771.png" alt=""></p><h2 id="ggtree拓展ggtreeExtra"><a href="#ggtree拓展ggtreeExtra" class="headerlink" title="ggtree拓展ggtreeExtra"></a><code>ggtree</code>拓展<code>ggtreeExtra</code></h2><p><code>ggtreeExtra</code>真的是惊艳到我了，只能献出我的膝盖啊！</p><p><code>ggtree</code>的函数<code>geom_facet()</code>只支持<code>rectangular</code>、 <code>roundrect</code>、 <code>ellipse</code> 及 <code>slanted</code> 这4种输出样式，并不支持在<code>circular</code>、<code>fan</code>及<code>radial</code>这几种输出样式的外环上添加图层，为了解决这个问题，Y叔团队开发了新的R包：<code>ggtreeExtra</code>！</p><h3 id="添加微生物组丰度"><a href="#添加微生物组丰度" class="headerlink" title="添加微生物组丰度"></a>添加微生物组丰度</h3><p><code>ggtree</code>直接支持<code>phyloseq</code>对象，这个对做微生物的来说，简直就是福音啊！</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtreeExtra<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>phyloseq<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br><br>data<span class="hljs-punctuation">(</span><span class="hljs-string">"GlobalPatterns"</span><span class="hljs-punctuation">)</span><br>GP <span class="hljs-operator">&lt;-</span> GlobalPatterns<br>GP <span class="hljs-operator">&lt;-</span> prune_taxa<span class="hljs-punctuation">(</span>taxa_sums<span class="hljs-punctuation">(</span>GP<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">600</span><span class="hljs-punctuation">,</span> GP<span class="hljs-punctuation">)</span><br>sample_data<span class="hljs-punctuation">(</span>GP<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>human <span class="hljs-operator">&lt;-</span> get_variable<span class="hljs-punctuation">(</span>GP<span class="hljs-punctuation">,</span> <span class="hljs-string">"SampleType"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%in%</span><br>                              <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Feces"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Skin"</span><span class="hljs-punctuation">)</span><br>mergedGP <span class="hljs-operator">&lt;-</span> merge_samples<span class="hljs-punctuation">(</span>GP<span class="hljs-punctuation">,</span> <span class="hljs-string">"SampleType"</span><span class="hljs-punctuation">)</span><br>mergedGP <span class="hljs-operator">&lt;-</span> rarefy_even_depth<span class="hljs-punctuation">(</span>mergedGP<span class="hljs-punctuation">,</span>rngseed<span class="hljs-operator">=</span><span class="hljs-number">394582</span><span class="hljs-punctuation">)</span><br>mergedGP <span class="hljs-operator">&lt;-</span> tax_glom<span class="hljs-punctuation">(</span>mergedGP<span class="hljs-punctuation">,</span><span class="hljs-string">"Order"</span><span class="hljs-punctuation">)</span><br><br>melt_simple <span class="hljs-operator">&lt;-</span> psmelt<span class="hljs-punctuation">(</span>mergedGP<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>               filter<span class="hljs-punctuation">(</span>Abundance <span class="hljs-operator">&lt;</span> <span class="hljs-number">120</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>               select<span class="hljs-punctuation">(</span>OTU<span class="hljs-punctuation">,</span> val<span class="hljs-operator">=</span>Abundance<span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>mergedGP<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"fan"</span><span class="hljs-punctuation">,</span> open.angle<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>     geom_tippoint<span class="hljs-punctuation">(</span>mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>color<span class="hljs-operator">=</span>Phylum<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                   size<span class="hljs-operator">=</span><span class="hljs-number">1.5</span><span class="hljs-punctuation">,</span><br>                   show.legend<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>p <span class="hljs-operator">&lt;-</span> rotate_tree<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">90</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span><br>     geom_fruit<span class="hljs-punctuation">(</span><br>         data<span class="hljs-operator">=</span>melt_simple<span class="hljs-punctuation">,</span><br>         geom<span class="hljs-operator">=</span>geom_boxplot<span class="hljs-punctuation">,</span><br>         mapping <span class="hljs-operator">=</span> aes<span class="hljs-punctuation">(</span><br>                     y<span class="hljs-operator">=</span>OTU<span class="hljs-punctuation">,</span><br>                     x<span class="hljs-operator">=</span>val<span class="hljs-punctuation">,</span><br>                     group<span class="hljs-operator">=</span>label<span class="hljs-punctuation">,</span><br>                     fill<span class="hljs-operator">=</span>Phylum<span class="hljs-punctuation">,</span><br>                   <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         size<span class="hljs-operator">=</span><span class="hljs-number">.2</span><span class="hljs-punctuation">,</span><br>         outlier.size<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>         outlier.stroke<span class="hljs-operator">=</span><span class="hljs-number">0.08</span><span class="hljs-punctuation">,</span><br>         outlier.shape<span class="hljs-operator">=</span><span class="hljs-number">21</span><span class="hljs-punctuation">,</span><br>         axis.params<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>                         axis       <span class="hljs-operator">=</span> <span class="hljs-string">"x"</span><span class="hljs-punctuation">,</span><br>                         text.size  <span class="hljs-operator">=</span> <span class="hljs-number">1.8</span><span class="hljs-punctuation">,</span><br>                         hjust      <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                         vjust      <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                         nbreak     <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>                     <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         grid.params<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span> <br>     <br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span><br>     scale_fill_discrete<span class="hljs-punctuation">(</span><br>         name<span class="hljs-operator">=</span><span class="hljs-string">"Phyla"</span><span class="hljs-punctuation">,</span><br>         guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     theme<span class="hljs-punctuation">(</span><br>         legend.title<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># The title of legend </span><br>         legend.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># The label text of legend, the sizes should be adjust with dpi.</span><br>     <span class="hljs-punctuation">)</span><br>p<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521044.png" alt=""></p><h3 id="多维数据添加多个图层"><a href="#多维数据添加多个图层" class="headerlink" title="多维数据添加多个图层"></a>多维数据添加多个图层</h3><p><a href="ggtreeExtra-data.zip">⬇点击下载示例数据⬇</a>。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtreeExtra<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidytree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggstar<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggnewscale<span class="hljs-punctuation">)</span><br><br>tree <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"data/HMP_tree/hmptree.nwk"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># the abundance and types of microbes</span><br>dat1 <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"data/HMP_tree/tippoint_attr.csv"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># the abundance of microbes at different body sites.</span><br>dat2 <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"data/HMP_tree/ringheatmap_attr.csv"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># the abundance of microbes at the body sites of greatest prevalence.</span><br>dat3 <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"data/HMP_tree/barplot_attr.csv"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># adjust the order</span><br>dat2<span class="hljs-operator">$</span>Sites <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>dat2<span class="hljs-operator">$</span>Sites<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Stool (prevalence)"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Cheek (prevalence)"</span><span class="hljs-punctuation">,</span><br>                                          <span class="hljs-string">"Plaque (prevalence)"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"Tongue (prevalence)"</span><span class="hljs-punctuation">,</span><br>                                          <span class="hljs-string">"Nose (prevalence)"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Vagina (prevalence)"</span><span class="hljs-punctuation">,</span><br>                                          <span class="hljs-string">"Skin (prevalence)"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat3<span class="hljs-operator">$</span>Sites <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>dat3<span class="hljs-operator">$</span>Sites<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Stool (prevalence)"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Cheek (prevalence)"</span><span class="hljs-punctuation">,</span><br>                                          <span class="hljs-string">"Plaque (prevalence)"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Tongue (prevalence)"</span><span class="hljs-punctuation">,</span><br>                                          <span class="hljs-string">"Nose (prevalence)"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Vagina (prevalence)"</span><span class="hljs-punctuation">,</span><br>                                          <span class="hljs-string">"Skin (prevalence)"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># extract the clade label information. Because some nodes of tree are annotated to genera,</span><br><span class="hljs-comment"># which can be displayed with high light using ggtree.</span><br>nodeids <span class="hljs-operator">&lt;-</span> nodeid<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> tree<span class="hljs-operator">$</span>node.label<span class="hljs-punctuation">[</span>nchar<span class="hljs-punctuation">(</span>tree<span class="hljs-operator">$</span>node.label<span class="hljs-punctuation">)</span><span class="hljs-operator">&gt;</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>nodedf <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span>nodeids<span class="hljs-punctuation">)</span><br>nodelab <span class="hljs-operator">&lt;-</span> gsub<span class="hljs-punctuation">(</span><span class="hljs-string">"[\\.0-9]"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span> tree<span class="hljs-operator">$</span>node.label<span class="hljs-punctuation">[</span>nchar<span class="hljs-punctuation">(</span>tree<span class="hljs-operator">$</span>node.label<span class="hljs-punctuation">)</span><span class="hljs-operator">&gt;</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># The layers of clade and hightlight</span><br>poslist <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1.6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">)</span><br>labdf <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span>nodeids<span class="hljs-punctuation">,</span> label<span class="hljs-operator">=</span>nodelab<span class="hljs-punctuation">,</span> pos<span class="hljs-operator">=</span>poslist<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># The circular layout tree.</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tree<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"fan"</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">0.15</span><span class="hljs-punctuation">,</span> open.angle<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     geom_hilight<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>nodedf<span class="hljs-punctuation">,</span> mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span>node<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                  extendto<span class="hljs-operator">=</span><span class="hljs-number">6.8</span><span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span><span class="hljs-string">"grey"</span><span class="hljs-punctuation">,</span> color<span class="hljs-operator">=</span><span class="hljs-string">"grey50"</span><span class="hljs-punctuation">,</span><br>                  size<span class="hljs-operator">=</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     geom_cladelab<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>labdf<span class="hljs-punctuation">,</span> <br>                   mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>node<span class="hljs-operator">=</span>node<span class="hljs-punctuation">,</span> <br>                               label<span class="hljs-operator">=</span>label<span class="hljs-punctuation">,</span><br>                               offset.text<span class="hljs-operator">=</span>pos<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                   hjust<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                   angle<span class="hljs-operator">=</span><span class="hljs-string">"auto"</span><span class="hljs-punctuation">,</span><br>                   barsize<span class="hljs-operator">=</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span><br>                   horizontal<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <br>                   fontsize<span class="hljs-operator">=</span><span class="hljs-number">1.4</span><span class="hljs-punctuation">,</span><br>                   fontface<span class="hljs-operator">=</span><span class="hljs-string">"italic"</span><br>                   <span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">%&lt;+%</span> dat1 <span class="hljs-operator">+</span> geom_star<span class="hljs-punctuation">(</span><br>                        mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>Phylum<span class="hljs-punctuation">,</span> starshape<span class="hljs-operator">=</span>Type<span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span>Size<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                        position<span class="hljs-operator">=</span><span class="hljs-string">"identity"</span><span class="hljs-punctuation">,</span>starstroke<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>         scale_fill_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#FFC125"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#87CEFA"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#7B68EE"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#808080"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#800080"</span><span class="hljs-punctuation">,</span><br>                                    <span class="hljs-string">"#9ACD32"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#D15FEE"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#FFC0CB"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#EE6A50"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#8DEEEE"</span><span class="hljs-punctuation">,</span><br>                                    <span class="hljs-string">"#006400"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#800000"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#B0171F"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#191970"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                           guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> keyheight <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                                              override.aes<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>starshape<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                           na.translate<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>         scale_starshape_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> keyheight <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                na.translate<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>         scale_size_continuous<span class="hljs-punctuation">(</span><span class="hljs-built_in">range</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                               guide <span class="hljs-operator">=</span> guide_legend<span class="hljs-punctuation">(</span>keywidth <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> keyheight <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>                                                    override.aes<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>starshape<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>                                                    <br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> new_scale_fill<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>         geom_fruit<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>dat2<span class="hljs-punctuation">,</span> geom<span class="hljs-operator">=</span>geom_tile<span class="hljs-punctuation">,</span><br>                    mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>y<span class="hljs-operator">=</span>ID<span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span>Sites<span class="hljs-punctuation">,</span> alpha<span class="hljs-operator">=</span>Abundance<span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span>Sites<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                    color <span class="hljs-operator">=</span> <span class="hljs-string">"grey50"</span><span class="hljs-punctuation">,</span> offset <span class="hljs-operator">=</span> <span class="hljs-number">0.04</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">0.02</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>         scale_alpha_continuous<span class="hljs-punctuation">(</span><span class="hljs-built_in">range</span><span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                             guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> keyheight <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>         geom_fruit<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>dat3<span class="hljs-punctuation">,</span> geom<span class="hljs-operator">=</span>geom_bar<span class="hljs-punctuation">,</span><br>                    mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>y<span class="hljs-operator">=</span>ID<span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span>HigherAbundance<span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span>Sites<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                    pwidth<span class="hljs-operator">=</span><span class="hljs-number">0.38</span><span class="hljs-punctuation">,</span> <br>                    orientation<span class="hljs-operator">=</span><span class="hljs-string">"y"</span><span class="hljs-punctuation">,</span> <br>                    stat<span class="hljs-operator">=</span><span class="hljs-string">"identity"</span><span class="hljs-punctuation">,</span><br>         <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>         scale_fill_manual<span class="hljs-punctuation">(</span>values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#0000FF"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#FFA500"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#FF0000"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#800000"</span><span class="hljs-punctuation">,</span><br>                                    <span class="hljs-string">"#006400"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#800080"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#696969"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                           guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> keyheight <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>         geom_treescale<span class="hljs-punctuation">(</span>fontsize<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> linesize<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> x<span class="hljs-operator">=</span><span class="hljs-number">4.9</span><span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>         theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.93</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               legend.background<span class="hljs-operator">=</span>element_rect<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               legend.title<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">6.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               legend.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">4.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               legend.spacing.y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.02</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"cm"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>             <span class="hljs-punctuation">)</span><br>p<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521659.png" alt=""></p><p>另外一种输出方式：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">p <span class="hljs-operator">+</span> layout_rectangular<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    theme<span class="hljs-punctuation">(</span>legend.position<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.7</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521711.png" alt=""></p><h2 id="群体遗学传例子"><a href="#群体遗学传例子" class="headerlink" title="群体遗学传例子"></a>群体遗学传例子</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtreeExtra<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggnewscale<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidytree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggstar<span class="hljs-punctuation">)</span><br><br>dat <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"data/microreact/Candida_auris/microreact-project-Candidaauris-data.csv"</span><span class="hljs-punctuation">)</span><br>tr <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"data/microreact/Candida_auris/microreact-project-Candidaauris-tree.nwk"</span><span class="hljs-punctuation">)</span><br><br>countries <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"Canada"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"United States"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Colombia"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Panama"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Venezuela"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"France"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Germany"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Spain"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"UK"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"India"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Israel"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Pakistan"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Saudi Arabia"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"United Arab Emirates"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Kenya"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"South Africa"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Japan"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"South Korea"</span><span class="hljs-punctuation">,</span><br>               <span class="hljs-string">"Australia"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># For the tip points</span><br>dat1 <span class="hljs-operator">&lt;-</span> dat <span class="hljs-operator">%&gt;%</span> select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"ID"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"COUNTRY"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"COUNTRY__colour"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat1<span class="hljs-operator">$</span>COUNTRY <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>dat1<span class="hljs-operator">$</span>COUNTRY<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span>countries<span class="hljs-punctuation">)</span><br>COUNTRYcolors <span class="hljs-operator">&lt;-</span> dat1<span class="hljs-punctuation">[</span>match<span class="hljs-punctuation">(</span>countries<span class="hljs-punctuation">,</span>dat<span class="hljs-operator">$</span>COUNTRY<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">"COUNTRY__colour"</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># For the heatmap layer</span><br>dat2 <span class="hljs-operator">&lt;-</span> dat <span class="hljs-operator">%&gt;%</span> select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"ID"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"FCZ"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"AMB"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"MCF"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat2 <span class="hljs-operator">&lt;-</span> reshape2<span class="hljs-operator">::</span>melt<span class="hljs-punctuation">(</span>dat2<span class="hljs-punctuation">,</span>id<span class="hljs-operator">=</span><span class="hljs-string">"ID"</span><span class="hljs-punctuation">,</span> variable.name<span class="hljs-operator">=</span><span class="hljs-string">"Antifungal"</span><span class="hljs-punctuation">,</span> value.name<span class="hljs-operator">=</span><span class="hljs-string">"type"</span><span class="hljs-punctuation">)</span><br>dat2<span class="hljs-operator">$</span>type <span class="hljs-operator">&lt;-</span> paste<span class="hljs-punctuation">(</span>dat2<span class="hljs-operator">$</span>Antifungal<span class="hljs-punctuation">,</span> dat2<span class="hljs-operator">$</span>type<span class="hljs-punctuation">)</span><br>dat2<span class="hljs-operator">$</span>type <span class="hljs-operator">&lt;-</span> unlist<span class="hljs-punctuation">(</span>lapply<span class="hljs-punctuation">(</span>dat2<span class="hljs-operator">$</span>type<span class="hljs-punctuation">,</span><br>                           <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span>ifelse<span class="hljs-punctuation">(</span>grepl<span class="hljs-punctuation">(</span><span class="hljs-string">"Not_"</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Susceptible"</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat2<span class="hljs-operator">$</span>Antifungal <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>dat2<span class="hljs-operator">$</span>Antifungal<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"FCZ"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"AMB"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"MCF"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat2<span class="hljs-operator">$</span>type <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>dat2<span class="hljs-operator">$</span>type<span class="hljs-punctuation">,</span><br>                    levels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"FCZ Resistant"</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-string">"AMB Resistant"</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-string">"MCF Resistant"</span><span class="hljs-punctuation">,</span><br>                            <span class="hljs-string">"Susceptible"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># For the points layer</span><br>dat3 <span class="hljs-operator">&lt;-</span> dat <span class="hljs-operator">%&gt;%</span> select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"ID"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"ERG11"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"FKS1"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>        reshape2<span class="hljs-operator">::</span>melt<span class="hljs-punctuation">(</span>id<span class="hljs-operator">=</span><span class="hljs-string">"ID"</span><span class="hljs-punctuation">,</span> variable.name<span class="hljs-operator">=</span><span class="hljs-string">"point"</span><span class="hljs-punctuation">,</span> value.name<span class="hljs-operator">=</span><span class="hljs-string">"mutation"</span><span class="hljs-punctuation">)</span><br>dat3<span class="hljs-operator">$</span>mutation <span class="hljs-operator">&lt;-</span> paste<span class="hljs-punctuation">(</span>dat3<span class="hljs-operator">$</span>point<span class="hljs-punctuation">,</span> dat3<span class="hljs-operator">$</span>mutation<span class="hljs-punctuation">)</span><br>dat3<span class="hljs-operator">$</span>mutation <span class="hljs-operator">&lt;-</span> unlist<span class="hljs-punctuation">(</span>lapply<span class="hljs-punctuation">(</span>dat3<span class="hljs-operator">$</span>mutation<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span>ifelse<span class="hljs-punctuation">(</span>grepl<span class="hljs-punctuation">(</span><span class="hljs-string">"WT"</span><span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat3<span class="hljs-operator">$</span>mutation <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>dat3<span class="hljs-operator">$</span>mutation<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"ERG11 Y132F"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"ERG11 K143R"</span><span class="hljs-punctuation">,</span><br>                                                <span class="hljs-string">"ERG11 F126L"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"FKS1 S639Y/P/F"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># For the clade group</span><br>dat4 <span class="hljs-operator">&lt;-</span> dat <span class="hljs-operator">%&gt;%</span> select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"ID"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"CLADE"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dat4 <span class="hljs-operator">&lt;-</span> aggregate<span class="hljs-punctuation">(</span>.<span class="hljs-operator">~</span>CLADE<span class="hljs-punctuation">,</span> dat4<span class="hljs-punctuation">,</span> FUN<span class="hljs-operator">=</span>paste<span class="hljs-punctuation">,</span> collapse<span class="hljs-operator">=</span><span class="hljs-string">","</span><span class="hljs-punctuation">)</span><br>clades <span class="hljs-operator">&lt;-</span> lapply<span class="hljs-punctuation">(</span>dat4<span class="hljs-operator">$</span>ID<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span>unlist<span class="hljs-punctuation">(</span>strsplit<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span>split<span class="hljs-operator">=</span><span class="hljs-string">","</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>clades<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> dat4<span class="hljs-operator">$</span>CLADE<br><br>tr <span class="hljs-operator">&lt;-</span> groupOTU<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">,</span> clades<span class="hljs-punctuation">,</span> <span class="hljs-string">"Clade"</span><span class="hljs-punctuation">)</span><br>Clade <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tr<span class="hljs-operator">=</span>tr<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"fan"</span><span class="hljs-punctuation">,</span> open.angle<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span>Clade<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     scale_colour_manual<span class="hljs-punctuation">(</span><br>         values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#69B920"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#9C2E88"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#F74B00"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"#60C3DB"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         labels<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">""</span><span class="hljs-punctuation">,</span><span class="hljs-string">"I"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"II"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"III"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"IV"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                            keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                            order<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                            override.aes<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>linetype<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"0"</span><span class="hljs-operator">=</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span><br>                                                         <span class="hljs-string">"Clade1"</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                                                         <span class="hljs-string">"Clade2"</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                                                         <span class="hljs-string">"Clade3"</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                                                         <span class="hljs-string">"Clade4"</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><br>                                                        <span class="hljs-punctuation">)</span><br>                                             <span class="hljs-punctuation">)</span><br>                           <span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>     new_scale_colour<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>p1 <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">%&lt;+%</span> dat1 <span class="hljs-operator">+</span><br>     geom_tippoint<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span>COUNTRY<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                   alpha<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     geom_tiplab<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span>COUNTRY<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                   align<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>                   linetype<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>                   size<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                   linesize<span class="hljs-operator">=</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span><br>                   show.legend<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><br>                   <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     scale_colour_manual<span class="hljs-punctuation">(</span><br>         name<span class="hljs-operator">=</span><span class="hljs-string">"Country labels"</span><span class="hljs-punctuation">,</span><br>         values<span class="hljs-operator">=</span>COUNTRYcolors<span class="hljs-punctuation">,</span><br>         guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                            keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                            order<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>                            override.aes<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>alpha<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">&lt;-</span> p1 <span class="hljs-operator">+</span><br>      geom_fruit<span class="hljs-punctuation">(</span><br>          data<span class="hljs-operator">=</span>dat2<span class="hljs-punctuation">,</span><br>          geom<span class="hljs-operator">=</span>geom_tile<span class="hljs-punctuation">,</span><br>          mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>Antifungal<span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span>ID<span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span>type<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          width<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>          color<span class="hljs-operator">=</span><span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span><br>          pwidth<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>          offset<span class="hljs-operator">=</span><span class="hljs-number">0.15</span><br>      <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>      scale_fill_manual<span class="hljs-punctuation">(</span><br>           name<span class="hljs-operator">=</span><span class="hljs-string">"Antifungal susceptibility"</span><span class="hljs-punctuation">,</span><br>           values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#595959"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#B30000"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#020099"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#E6E6E6"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           na.translate<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>           guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                              keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                              order<span class="hljs-operator">=</span><span class="hljs-number">3</span><br>                             <span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>      new_scale_fill<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">&lt;-</span> p2 <span class="hljs-operator">+</span><br>      geom_fruit<span class="hljs-punctuation">(</span><br>          data<span class="hljs-operator">=</span>dat3<span class="hljs-punctuation">,</span><br>          geom<span class="hljs-operator">=</span>geom_star<span class="hljs-punctuation">,</span><br>          mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>mutation<span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span>ID<span class="hljs-punctuation">,</span> fill<span class="hljs-operator">=</span>mutation<span class="hljs-punctuation">,</span> starshape<span class="hljs-operator">=</span>point<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          size<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>          starstroke<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>          pwidth<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>          inherit.aes <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>          grid.params<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><br>                          linetype<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>                          size<span class="hljs-operator">=</span><span class="hljs-number">0.2</span><br>                      <span class="hljs-punctuation">)</span><br><br>      <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>      scale_fill_manual<span class="hljs-punctuation">(</span><br>          name<span class="hljs-operator">=</span><span class="hljs-string">"Point mutations"</span><span class="hljs-punctuation">,</span><br>          values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#329901"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#0600FF"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#FF0100"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#9900CC"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><br>                             override.aes<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>starshape<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"ERG11 Y132F"</span><span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><br>                                                           <span class="hljs-string">"ERG11 K143R"</span><span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><br>                                                           <span class="hljs-string">"ERG11 F126L"</span><span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><br>                                                           <span class="hljs-string">"FKS1 S639Y/P/F"</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                                               size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>                            <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          na.translate<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>      scale_starshape_manual<span class="hljs-punctuation">(</span><br>          values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          guide<span class="hljs-operator">=</span><span class="hljs-string">"none"</span><br>      <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>      theme<span class="hljs-punctuation">(</span><br>          legend.background<span class="hljs-operator">=</span>element_rect<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          legend.title<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># The size should be adjusted with different devout.</span><br>          legend.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">5.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          legend.spacing.y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.02</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"cm"</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">)</span><br>p3<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521751.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggtreeExtra<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggnewscale<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>treeio<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidytree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggstar<span class="hljs-punctuation">)</span><br><br>tr <span class="hljs-operator">&lt;-</span> read.tree<span class="hljs-punctuation">(</span><span class="hljs-string">"data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-tree.nwk"</span><span class="hljs-punctuation">)</span><br><br>metada <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">"data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-data.csv"</span><span class="hljs-punctuation">)</span><br><br>metadata <span class="hljs-operator">&lt;-</span> metada <span class="hljs-operator">%&gt;%</span><br>            select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"id"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"country"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"country__colour"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"year"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"year__colour"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"haplotype"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>metadata<span class="hljs-operator">$</span>haplotype <span class="hljs-operator">&lt;-</span> unlist<span class="hljs-punctuation">(</span>lapply<span class="hljs-punctuation">(</span>metadata<span class="hljs-operator">$</span>haplotype<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span>ifelse<span class="hljs-punctuation">(</span>nchar<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">,</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>countrycolors <span class="hljs-operator">&lt;-</span> metada <span class="hljs-operator">%&gt;%</span><br>                 select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"country"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"country__colour"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>                 distinct<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>yearcolors <span class="hljs-operator">&lt;-</span> metada <span class="hljs-operator">%&gt;%</span><br>              select<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"year"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"year__colour"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>              distinct<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>yearcolors <span class="hljs-operator">&lt;-</span> yearcolors<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>yearcolors<span class="hljs-operator">$</span>year<span class="hljs-punctuation">,</span> decreasing<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br><br>metadata<span class="hljs-operator">$</span>country <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>metadata<span class="hljs-operator">$</span>country<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span>countrycolors<span class="hljs-operator">$</span>country<span class="hljs-punctuation">)</span><br>metadata<span class="hljs-operator">$</span>year <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>metadata<span class="hljs-operator">$</span>year<span class="hljs-punctuation">,</span> levels<span class="hljs-operator">=</span>yearcolors<span class="hljs-operator">$</span>year<span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> ggtree<span class="hljs-punctuation">(</span>tr<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"fan"</span><span class="hljs-punctuation">,</span> open.angle<span class="hljs-operator">=</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> size<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">%&lt;+%</span> metadata<br><br>p1 <span class="hljs-operator">&lt;-</span>p <span class="hljs-operator">+</span><br>     geom_tippoint<span class="hljs-punctuation">(</span><br>         mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>colour<span class="hljs-operator">=</span>country<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         size<span class="hljs-operator">=</span><span class="hljs-number">1.5</span><span class="hljs-punctuation">,</span><br>         stroke<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>         alpha<span class="hljs-operator">=</span><span class="hljs-number">0.4</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     scale_colour_manual<span class="hljs-punctuation">(</span><br>         name<span class="hljs-operator">=</span><span class="hljs-string">"Country"</span><span class="hljs-punctuation">,</span><br>         values<span class="hljs-operator">=</span>countrycolors<span class="hljs-operator">$</span>country__colour<span class="hljs-punctuation">,</span><br>         guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span><br>                            keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span><br>                            ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>                            override.aes<span class="hljs-operator">=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>alpha<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                            order<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     theme<span class="hljs-punctuation">(</span><br>         legend.title<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         legend.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         legend.spacing.y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.02</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"cm"</span><span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">&lt;-</span>p1 <span class="hljs-operator">+</span><br>     geom_fruit<span class="hljs-punctuation">(</span><br>         geom<span class="hljs-operator">=</span>geom_star<span class="hljs-punctuation">,</span><br>         mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>haplotype<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         starshape<span class="hljs-operator">=</span><span class="hljs-number">26</span><span class="hljs-punctuation">,</span><br>         color<span class="hljs-operator">=</span><span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span><br>         size<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>         starstroke<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>         offset<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     scale_fill_manual<span class="hljs-punctuation">(</span><br>         name<span class="hljs-operator">=</span><span class="hljs-string">"Haplotype"</span><span class="hljs-punctuation">,</span><br>         values<span class="hljs-operator">=</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"red"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span><br>                   keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span><br>                   keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span><br>                   order<span class="hljs-operator">=</span><span class="hljs-number">3</span><br>               <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         na.translate<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><br>     <span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">&lt;-</span>p2 <span class="hljs-operator">+</span><br>     new_scale_fill<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     geom_fruit<span class="hljs-punctuation">(</span><br>         geom<span class="hljs-operator">=</span>geom_tile<span class="hljs-punctuation">,</span><br>         mapping<span class="hljs-operator">=</span>aes<span class="hljs-punctuation">(</span>fill<span class="hljs-operator">=</span>year<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         width<span class="hljs-operator">=</span><span class="hljs-number">0.002</span><span class="hljs-punctuation">,</span><br>         offset<span class="hljs-operator">=</span><span class="hljs-number">0.1</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     scale_fill_manual<span class="hljs-punctuation">(</span><br>         name<span class="hljs-operator">=</span><span class="hljs-string">"Year"</span><span class="hljs-punctuation">,</span><br>         values<span class="hljs-operator">=</span>yearcolors<span class="hljs-operator">$</span>year__colour<span class="hljs-punctuation">,</span><br>         guide<span class="hljs-operator">=</span>guide_legend<span class="hljs-punctuation">(</span>keywidth<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> keyheight<span class="hljs-operator">=</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> ncol<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> order<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>     <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>     theme<span class="hljs-punctuation">(</span><br>           legend.title<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># The size should be adjusted with the different devout.</span><br>           legend.text<span class="hljs-operator">=</span>element_text<span class="hljs-punctuation">(</span>size<span class="hljs-operator">=</span><span class="hljs-number">4.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           legend.spacing.y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.02</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"cm"</span><span class="hljs-punctuation">)</span><br>           <span class="hljs-punctuation">)</span><br>p3<br></code></pre></td></tr></tbody></table></figure><p><img src="https://xiang-1257290193.cos.ap-guangzhou.myqcloud.com/Typora/202201071521939.png" alt=""></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p>[1]. Yu G, Smith D K, Zhu H, et al. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data[J]. <strong><em>Methods in Ecology and Evolution</em></strong>, 2017, 8(1): 28-36.</p><p>[2]. <a href="https://yulab-smu.top/treedata-book/index.html">https://yulab-smu.top/treedata-book/index.html</a></p><p>[3]. <a href="https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/">https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/</a></p><p>[4]. <a href="https://yulab-smu.top/treedata-book/chapter1.html">https://yulab-smu.top/treedata-book/chapter1.html</a></p><p>[5]. Wang L G, Lam T T Y, Xu S, et al. Treeio: an R package for phylogenetic tree input and output with richly annotated and associated data[J]. Molecular biology and evolution, 2020, 37(2): 599-603.</p><p>[6]. <a href="https://github.com/YuLab-SMU/tidytree">https://github.com/YuLab-SMU/tidytree</a></p></blockquote><p>交流请联系：</p><blockquote><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新希望—野生（近缘）种质资源</title>
      <link href="/article/baab187/"/>
      <url>/article/baab187/</url>
      
        <content type="html"><![CDATA[<p>种质资源是极其重要的资源，随着世界人口的增加，对粮食产量的要求越来越高，包括产量和质量。但是，<span id="more"></span>作物生长会受到各种各样的胁迫，包括生物胁迫和非生物胁迫。生物胁迫主要是病原侵染和昆虫取食；非生物胁迫包括干旱胁迫、盐胁迫、重金属胁迫等。应对病原菌侵染胁迫常见的方法是使用抗病品种和使用化学农药，但是这两种方法都有一定的局限性：</p><ul><li>种植几年后，抗病品种携带的抗性基因的抗性会逐渐丧失；</li><li>光谱抗性基因通常会影响作物的产量和质量等性状；</li><li>抗性基因叠加较为困难；</li><li>化学农药的滥用会带来一系列的问题，如食品安全、环境污染等。</li></ul><p>虽然这些问题都有一定的解决办法，如在化学农药的研发中利用<code>RNAi</code>技术。各种组学技术的发展极大地促进了作物抗性基因的挖掘和利用。“绿色革命”以后，大量的品种被培育推广，这些单一品种的大面积推广种植导致其可利用的抗性基因数量逐渐减少。而那些未被大面积推广，甚至是没有被发现利用的品种则成为了关键基因挖掘利用的关键材料，如中科院遗传发育所的储成才研究员利用100余个农家品种成功挖掘到水稻氮素高效利用的关键基因$^{[1]}$。除开这种利用未被发掘的种质资源外，一个比较新的方向是利用野生/近缘种植资源挖掘关键的遗传资源。最近最经典的案例是遗传发育所的李家洋院士利用四倍体野生稻直接实现了野生到的从头驯化，利用十余年的研究就实现了需要几千年才能完成的自然驯化，开辟了育种的新方向$^{[2]}$。这两天，塞恩斯伯里实验室在<strong><em>Nature Plants</em></strong>上发表了一篇文章，在茄属种植物中发现并成功克隆了新的对马铃薯晚疫病具有光谱抗性的基因$^{[3]}$。大年初一下载了文献，通读一遍，简直就是精彩啊！</p><h1 id="文献心得"><a href="#文献心得" class="headerlink" title="文献心得"></a>文献心得</h1><p>读完这篇文献，感触良多，总结几点：</p><ul><li>实验室（课题组）的前期研究（传承）很重要，在某个领域的点滴积累是发现新方向新东西的重要基础，研究要利用课题组优势；</li><li>野生（近缘）种质资源是非常重要的资源，保护、开发、利用这些种质资源对未来社会具有重要影响；</li><li>技术的发展能够极大地促进科学研究的发展，这个研究中利用了许多技术，如RenSeq、GenSeq、单分子实时测序、关联基因组学等技术，需要不断地学习才能了解技术的发展方向并合理地利用这些技术；</li><li>合理的可视化方法能够极大地增强文章的可读性，倒数第二张图片直接是让我拍案叫绝啊，学习了；</li><li>推理能力很重要，作者从进化树上推理出基因（蛋白）之间的依赖关系，这种推理能力的基础是大量的文献阅读，没有大量的知识储备是不可能完成这种推理的。</li></ul><h1 id="马铃薯晚疫病"><a href="#马铃薯晚疫病" class="headerlink" title="马铃薯晚疫病"></a>马铃薯晚疫病</h1><p>马铃薯晚疫病（potato late blight，PLB）是由致病疫霉[<em>Phytophthora infestans</em>(Mont) deBary，<em>P. infestans</em>]引起的。严重时会造成50%的损失，某些地区甚至会绝收$^{[4]}$。下图是致病疫霉侵染马铃薯的症状图$^{[5]}$。</p><h1 id="本研究简述"><a href="#本研究简述" class="headerlink" title="本研究简述"></a>本研究简述</h1><p>研究人员从茄属植物中克隆到了许多抗性基因，并通过育种的方法将这些抗性基因导入到马铃薯中。但是，单个的抗性基因在面对进化速度较快的致病疫霉<em>P.infestans</em>时，抗性会丢失，因此需要挖掘利用具有持久抗性的基因。研究人员从光果龙葵中克隆到了一个抗性基因：<em>Rpi-amr1</em>。利用来自不同国家的19个致病疫霉进行侵染测试，发现这个基因对19个致病疫霉都具有抗性。进一步利用关联基因组学和长读长RenSeq技术，研究人员又在其他的光果龙葵中及其近缘种中发现了8个<em>Rpi-amr1</em>的等位基因。尽管这些等位基因的蛋白序列与<em>Rpi-amr1</em>的蛋白序列只有90%左右的相似性，但是它们对致病疫霉均具有光谱抗性，但是对<em>Avramr1</em>的直系同源物和旁系同源物的识别能力不一样。这个研究为挖掘对<em>P.infestans</em> 具有抗性的基因提供了新的思路。</p><h1 id="研究过程"><a href="#研究过程" class="headerlink" title="研究过程"></a>研究过程</h1><p>研究团队在之前就在光果龙葵中鉴定到了对<em>P.infestans</em> 具有抗性的基因<em>Rpi-amr3</em>，未来挖掘到新的<em>Rpi-amr</em>基因，团队利用14个对<em>P.infestans</em> 具有抗性的光果龙葵品系及其近缘植物<em>S. nigrescens</em> 和 <em>S. nodiflorum</em>来构建F1和F2群体。利用RenSeq得到的marker，借助基因分型测序（GBS）和全基因组鸟枪测序（WGS）在11号染色体的短臂上定位到了基因<em>Rpi-amr1</em>。进一步利用单分子测序技术发现有11个潜在的编码序列，其中9个编码NLR基因。为了验证这些基因是不是都可以表达，利用cDNA RenSeq数据比对发现其中有7个基因都发生了表达，分别是<em>Rpi-amr1a</em>到<em>Rpi-amr1h</em>（下图a-c）。</p><p>找到那么多个潜在的功能基因，那是不是都有功能呢？通过接种发现只有<em>Rpi-amr1e</em>这个能够减缓<em>P.infestans</em>的生长（下图）。</p><p>那这个<em>Rpi-amr1e</em>对<em>P.infestans</em>到底有没有抗性呢？直接将这个基因克隆到马铃薯中，同时以没有功能的<em>Rpi-amr1a</em>作为阴性对照。发现克隆了<em>Rpi-amr1e</em>的马铃薯对<em>P.infestans</em>的抗性简直完美啊 （下图）。</p><p>这个基因结构是啥样的呢？研究者将cDNA RenSeq数据mapping到<em>Rpi-amr1</em>的全长数据上，发现有4种可变剪切结构（下图）。这个基因是典型的CC-NB-LRR抗性基因，具有CC、NB和LRRs结构域，这三种结构域都在第一个外显子上。剩下的三个外显子上没有发现已知结构域的同系物。</p><p>在之前的研究中他们发现14个光果龙葵极其近缘种对马铃薯晚疫病都有抗性，为了验证<em>Rpi-amr1</em>是不是也能赋予了其他光果龙葵抗性，研究人员从亲本为抗性品系的F2群体中选择了10-50株感病植株进行验证，在<em>Rpi-amr1</em>位置上挑选了个marker。结果发现这些干饼F2植株都缺少这个marker，这个个结果就表明光果龙葵对致病疫霉的抗性是由<em>Rpi-amr1</em> locus赋予的。那对致病疫霉具有抗性的光果龙葵的抗性是不是由<em>Rpi-amr1</em>的同系物赋予的呢？为了验证这个猜想，研究者利用SMRT RenSeq从头组装了那些抗性品系，以此来寻找<em>Rpi-amr1</em>的同系物，此外还利用了BSA RenSeq、cDNA RenSeq、关联基因组学和GenSeq等技术，最终找到8个<em>Rpi-amr1</em>同系物对88069这个菌株具有抗性。</p><p>找到了功能基因及其同系物，下一步那就应该看看它们对致病疫霉的抗性能力怎么样了。研究者挑选了两个同系物，<em>Rpi-amr1-2272</em>和<em>Rpi-amr1-2273</em>，用于测试的19个菌株来自不同国家。结果发现转入这两种同系物的马铃薯对这19株致病疫霉均有抗性，而野生型的马铃薯对这19株菌都没有抗性。这个结果表明<em>Rpi-amr1</em>对致病疫霉<em>P.infestans</em>具有广谱抗性。</p><p>植物免疫响应的重要组成部分之一是ETI，那<em>Rpi-amr1</em>及其同系物能不能有效识别到致病疫霉<em>P.infestans</em>中的效应子呢？为此，研究人员合成了<em>Avramr1</em>及其3个同系物，这三个同系物与<em>Avramr1</em>在进化树上属于不同的分支（分别属于Clade A-D）。除此之外，还从<em>P.parasitica</em>和<em>P.cactorum</em>中也合成了<em>Avaamr1</em>的同系物。</p><p>结果发现<em>Rpi-amr1</em>不同的等位基因与不同的<em>Avramr1</em>同系物组合时，产生的免疫反应不一样（下图）。从图中可以看出的是，<em>Rpi-amr1</em>的功能性同系物至少能够识别一种<em>Avramr1</em>。</p><p><em>Rpi-amr1</em>介导的抗性和效应子识别是它自己独立完成的呢还是需要依赖于其他成分呢？研究者首先对茄科植物代表性的NLR蛋白构建进化树，发现Rpi-amr1分组在CNL-3这个分支中，这个分支中之前没有克隆到任何的功能基因。与之最近的已被克隆到的基因是属于CNL-13这个分支位于4号染色体上的<em>Rpi-amr3</em>，这个基因与<em>Rpi-amr1</em>在氨基酸序列上具有31.2%的相似性。通过进化树研究人员猜测Rpi-amr1很可能需要NRC分支的帮助才能完成其功能。这个是怎么看出来的呢？作者解释的是CNL-3这个分支所在的分组（蓝色框）需要依赖于NRC才能完成相应的功能。利用瞬时表达发现<em>Rpi-amr1</em>介导的抗性需要NRC2或者NRC3的帮助才能完成。更多的研究结果进一步说明了<em>Rpi-amr1</em>介导的抗性和效应子识别需要依赖NRC2或者NRC3才能完成。</p><p>似乎，研究到这里就应该结束了。但是还探究了<em>Rpi-amr1</em>同系物是否存在于其他的茄科植物中。进一步的研究发现在六倍体茄科植物<em>S.nigrum</em>中也存在<em>Rpi-amr1</em>的同系物。</p><p>还有一个问题：<em>Rpi-amr1</em>有那么多的等位基因，是怎么来的呢？研究人员进一步研究发现是由于直系同源和旁系同源间序列交换才形成了如此高的等位基因多样性。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><ol><li>Liu Y, Wang H, Jiang Z, et al. Genomic basis of geographical adaptation to soil nitrogen in rice[J]. <strong><em>Nature</em></strong>, 2021: 1-6.</li><li>Yu H, Lin T, Meng X, et al. A route to de novo domestication of wild allotetraploid rice[J]. <strong><em>Cell</em></strong>, 2021.</li><li>Witek, K., Lin, X., Karki, H.S. <em>et al.</em> A complex resistance locus in <em>Solanum americanum</em> recognizes a conserved <em>Phytophthora</em> effector. <strong><em>Nature Plants</em></strong> (2021).</li><li>赵中华,朱杰华,朱晓明.马铃薯晚疫病发生特点与防治对策[J].中国植保导刊,2012,32(04):16-17.</li><li>祝菊澧,梁静思,王伟伟,王洪洋,刘晶,李灿辉,唐唯.马铃薯致病疫霉研究进展[J].微生物学通报,2020,47(03):952-966.</li></ol></blockquote><h1 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h1>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggprism学习笔记</title>
      <link href="/article/5d41879e/"/>
      <url>/article/5d41879e/</url>
      
        <content type="html"><![CDATA[<p>这个包简直就是完美啊！！！<span id="more"></span></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># for the graph</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggprism<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggnewscale<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># just for manipulating the data.frame</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#&gt; </span><br><span class="hljs-comment">#&gt; Attaching package: 'dplyr'</span><br><span class="hljs-comment">#&gt; The following objects are masked from 'package:stats':</span><br><span class="hljs-comment">#&gt; </span><br><span class="hljs-comment">#&gt;     filter, lag</span><br><span class="hljs-comment">#&gt; The following objects are masked from 'package:base':</span><br><span class="hljs-comment">#&gt; </span><br><span class="hljs-comment">#&gt;     intersect, setdiff, setequal, union</span><br>library<span class="hljs-punctuation">(</span>tidyr<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># construct the data.frame, log10 transform the agonist concentration</span><br><span class="hljs-comment"># convert the data.frame to long format, then remove any rows with NA</span><br>df <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>        agonist <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1e-10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1e-8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3e-8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1e-7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3e-7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1e-6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3e-6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1e-5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3e-5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1e-4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3e-4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        ctr1 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">11</span><span class="hljs-punctuation">,</span> <span class="hljs-number">125</span><span class="hljs-punctuation">,</span> <span class="hljs-number">190</span><span class="hljs-punctuation">,</span> <span class="hljs-number">258</span><span class="hljs-punctuation">,</span> <span class="hljs-number">322</span><span class="hljs-punctuation">,</span> <span class="hljs-number">354</span><span class="hljs-punctuation">,</span> <span class="hljs-number">348</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">412</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        ctr2 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">33</span><span class="hljs-punctuation">,</span> <span class="hljs-number">141</span><span class="hljs-punctuation">,</span> <span class="hljs-number">218</span><span class="hljs-punctuation">,</span> <span class="hljs-number">289</span><span class="hljs-punctuation">,</span> <span class="hljs-number">353</span><span class="hljs-punctuation">,</span> <span class="hljs-number">359</span><span class="hljs-punctuation">,</span> <span class="hljs-number">298</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">378</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        ctr3 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">160</span><span class="hljs-punctuation">,</span> <span class="hljs-number">196</span><span class="hljs-punctuation">,</span> <span class="hljs-number">345</span><span class="hljs-punctuation">,</span> <span class="hljs-number">328</span><span class="hljs-punctuation">,</span> <span class="hljs-number">369</span><span class="hljs-punctuation">,</span> <span class="hljs-number">372</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">399</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        trt1 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">11</span><span class="hljs-punctuation">,</span> <span class="hljs-number">52</span><span class="hljs-punctuation">,</span> <span class="hljs-number">80</span><span class="hljs-punctuation">,</span> <span class="hljs-number">171</span><span class="hljs-punctuation">,</span> <span class="hljs-number">289</span><span class="hljs-punctuation">,</span> <span class="hljs-number">272</span><span class="hljs-punctuation">,</span> <span class="hljs-number">359</span><span class="hljs-punctuation">,</span> <span class="hljs-number">352</span><span class="hljs-punctuation">,</span> <span class="hljs-number">389</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        trt2 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">55</span><span class="hljs-punctuation">,</span> <span class="hljs-number">77</span><span class="hljs-punctuation">,</span> <span class="hljs-number">195</span><span class="hljs-punctuation">,</span> <span class="hljs-number">230</span><span class="hljs-punctuation">,</span> <span class="hljs-number">333</span><span class="hljs-punctuation">,</span> <span class="hljs-number">306</span><span class="hljs-punctuation">,</span> <span class="hljs-number">320</span><span class="hljs-punctuation">,</span> <span class="hljs-number">338</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        trt3 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <span class="hljs-number">28</span><span class="hljs-punctuation">,</span> <span class="hljs-number">61</span><span class="hljs-punctuation">,</span> <span class="hljs-number">44</span><span class="hljs-punctuation">,</span> <span class="hljs-number">246</span><span class="hljs-punctuation">,</span> <span class="hljs-number">243</span><span class="hljs-punctuation">,</span> <span class="hljs-number">310</span><span class="hljs-punctuation">,</span> <span class="hljs-number">297</span><span class="hljs-punctuation">,</span> <span class="hljs-number">365</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        mutate<span class="hljs-punctuation">(</span>log.agonist <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>agonist<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        pivot_longer<span class="hljs-punctuation">(</span><br>                <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>agonist<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>log.agonist<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                names_pattern <span class="hljs-operator">=</span> <span class="hljs-string">"(.{3})([0-9])"</span><span class="hljs-punctuation">,</span> <br>                names_to <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"treatment"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"rep"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                values_to <span class="hljs-operator">=</span> <span class="hljs-string">"response"</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>        filter<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>response<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>head<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#&gt; # A tibble: 6 x 5</span><br><span class="hljs-comment">#&gt;        agonist log.agonist treatment rep   response</span><br><span class="hljs-comment">#&gt;          &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;</span><br><span class="hljs-comment">#&gt; 1 0.0000000001         -10 ctr       1            0</span><br><span class="hljs-comment">#&gt; 2 0.0000000001         -10 ctr       2            3</span><br><span class="hljs-comment">#&gt; 3 0.0000000001         -10 ctr       3            2</span><br><span class="hljs-comment">#&gt; 4 0.0000000001         -10 trt       1            3</span><br><span class="hljs-comment">#&gt; 5 0.0000000001         -10 trt       2            5</span><br><span class="hljs-comment">#&gt; 6 0.0000000001         -10 trt       3            4</span><br><br><span class="hljs-comment"># define model (note x and ec50 are swapped around because ec50 is already -ve)</span><br>dose_resp <span class="hljs-operator">&lt;-</span> y <span class="hljs-operator">~</span> <span class="hljs-built_in">min</span> <span class="hljs-operator">+</span> <span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">max</span> <span class="hljs-operator">-</span> <span class="hljs-built_in">min</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">+</span> <span class="hljs-built_in">exp</span><span class="hljs-punctuation">(</span>hill_coefficient <span class="hljs-operator">*</span> <span class="hljs-punctuation">(</span>ec50 <span class="hljs-operator">-</span> x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># plot the log10(agonist concentration) vs the response</span><br>p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> log.agonist<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> response<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># fit separate curves to the data from the two treatment types</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> geom_smooth<span class="hljs-punctuation">(</span><br>        aes<span class="hljs-punctuation">(</span>colour <span class="hljs-operator">=</span> treatment<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        method <span class="hljs-operator">=</span> <span class="hljs-string">"nls"</span><span class="hljs-punctuation">,</span> formula <span class="hljs-operator">=</span> dose_resp<span class="hljs-punctuation">,</span> se <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>        method.args <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>start <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.67</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-number">397</span><span class="hljs-punctuation">,</span> ec50 <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">7</span><span class="hljs-punctuation">,</span> hill_coefficient <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br>p<br><br><span class="hljs-comment"># apply a manual colour scale to the curves</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> scale_colour_manual<span class="hljs-punctuation">(</span><br>        labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"No inhibitor"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Inhibitor"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#00167B"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#9FA3FE"</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br>p<br><br><br><span class="hljs-comment"># reset the colour scale, add the data points, then use a new colour scale</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> ggnewscale<span class="hljs-operator">::</span>new_scale_colour<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>colour <span class="hljs-operator">=</span> treatment<span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> treatment<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_colour_prism<span class="hljs-punctuation">(</span><br>                palette <span class="hljs-operator">=</span> <span class="hljs-string">"winter_bright"</span><span class="hljs-punctuation">,</span> <br>                labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"No inhibitor"</span><span class="hljs-punctuation">,</span><br>                           <span class="hljs-string">"Inhibitor"</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_shape_prism<span class="hljs-punctuation">(</span><br>                labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"No inhibitor"</span><span class="hljs-punctuation">,</span><br>                           <span class="hljs-string">"Inhibitor"</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span><br>p<br><br><span class="hljs-comment"># use the Winter Bright theme and make the size of all plot elements larger</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> theme_prism<span class="hljs-punctuation">(</span>palette <span class="hljs-operator">=</span> <span class="hljs-string">"winter_bright"</span><span class="hljs-punctuation">,</span> base_size <span class="hljs-operator">=</span> <span class="hljs-number">16</span><span class="hljs-punctuation">)</span><br>p<br><br><span class="hljs-comment"># adjust the axis limits, major tick positions, and axis guide</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> scale_y_continuous<span class="hljs-punctuation">(</span><br>        limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">500</span><span class="hljs-punctuation">,</span> <span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        guide <span class="hljs-operator">=</span> <span class="hljs-string">"prism_offset"</span><br><span class="hljs-punctuation">)</span><br>p<br><br><br><span class="hljs-comment"># adjust the axis limits, major and minor tick positions, axis guide, and </span><br><span class="hljs-comment"># axis text (aka. label) appearance</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> scale_x_continuous<span class="hljs-punctuation">(</span><br>        limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        breaks <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-operator">:</span><span class="hljs-operator">-</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>        guide <span class="hljs-operator">=</span> <span class="hljs-string">"prism_offset_minor"</span><span class="hljs-punctuation">,</span><br>        minor_breaks <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">9</span><span class="hljs-punctuation">,</span> <span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-operator">^</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-operator">:</span><span class="hljs-operator">-</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> each <span class="hljs-operator">=</span> <span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        labels <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>lab<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>                do.call<span class="hljs-punctuation">(</span><br>                        <span class="hljs-built_in">expression</span><span class="hljs-punctuation">,</span><br>                        lapply<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span>lab<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> bquote<span class="hljs-punctuation">(</span>bold<span class="hljs-punctuation">(</span><span class="hljs-string">"10"</span><span class="hljs-operator">^</span>.<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>                <span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">)</span><br>p<br><br><span class="hljs-comment"># remove the y axis title and legend title, change the x axis title and</span><br><span class="hljs-comment"># move the legend to the top left</span><br>p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> theme<span class="hljs-punctuation">(</span><br>        axis.title.y <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.justification <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"[Agonist], M"</span><span class="hljs-punctuation">)</span><br>p<br><br><br><br><br><span class="hljs-comment"># all code</span><br>dose_resp <span class="hljs-operator">&lt;-</span> y <span class="hljs-operator">~</span> <span class="hljs-built_in">min</span> <span class="hljs-operator">+</span> <span class="hljs-punctuation">(</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">max</span> <span class="hljs-operator">-</span> <span class="hljs-built_in">min</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">+</span> <span class="hljs-built_in">exp</span><span class="hljs-punctuation">(</span>hill_coefficient <span class="hljs-operator">*</span> <span class="hljs-punctuation">(</span>ec50 <span class="hljs-operator">-</span> x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> log.agonist<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> response<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        geom_smooth<span class="hljs-punctuation">(</span><br>                aes<span class="hljs-punctuation">(</span>colour <span class="hljs-operator">=</span> treatment<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                method <span class="hljs-operator">=</span> <span class="hljs-string">"nls"</span><span class="hljs-punctuation">,</span> formula <span class="hljs-operator">=</span> dose_resp<span class="hljs-punctuation">,</span> se <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>                method.args <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>start <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.67</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-number">397</span><span class="hljs-punctuation">,</span> ec50 <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">7</span><span class="hljs-punctuation">,</span> hill_coefficient <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_colour_manual<span class="hljs-punctuation">(</span>labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"No inhibitor"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Inhibitor"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                            values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"#00167B"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"#9FA3FE"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        ggnewscale<span class="hljs-operator">::</span>new_scale_colour<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>colour <span class="hljs-operator">=</span> treatment<span class="hljs-punctuation">,</span> shape <span class="hljs-operator">=</span> treatment<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_colour_prism<span class="hljs-punctuation">(</span>palette <span class="hljs-operator">=</span> <span class="hljs-string">"winter_bright"</span><span class="hljs-punctuation">,</span> <br>                           labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"No inhibitor"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Inhibitor"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_shape_prism<span class="hljs-punctuation">(</span>labels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"No inhibitor"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Inhibitor"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        theme_prism<span class="hljs-punctuation">(</span>palette <span class="hljs-operator">=</span> <span class="hljs-string">"winter_bright"</span><span class="hljs-punctuation">,</span> base_size <span class="hljs-operator">=</span> <span class="hljs-number">16</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_y_continuous<span class="hljs-punctuation">(</span>limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                           breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">500</span><span class="hljs-punctuation">,</span> <span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                           guide <span class="hljs-operator">=</span> <span class="hljs-string">"prism_offset"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        scale_x_continuous<span class="hljs-punctuation">(</span><br>                limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                breaks <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-operator">:</span><span class="hljs-operator">-</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>                guide <span class="hljs-operator">=</span> <span class="hljs-string">"prism_offset_minor"</span><span class="hljs-punctuation">,</span><br>                minor_breaks <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">9</span><span class="hljs-punctuation">,</span> <span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-operator">^</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-operator">:</span><span class="hljs-operator">-</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> each <span class="hljs-operator">=</span> <span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                labels <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>lab<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>                        do.call<span class="hljs-punctuation">(</span><br>                                <span class="hljs-built_in">expression</span><span class="hljs-punctuation">,</span><br>                                lapply<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span>lab<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> bquote<span class="hljs-punctuation">(</span>bold<span class="hljs-punctuation">(</span><span class="hljs-string">"10"</span><span class="hljs-operator">^</span>.<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>                        <span class="hljs-punctuation">)</span><br>                <span class="hljs-punctuation">}</span><br>        <span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        theme<span class="hljs-punctuation">(</span>axis.title.y <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              legend.justification <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">"[Agonist], M"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><blockquote><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tidyHeatmap学习笔记</title>
      <link href="/article/4de9add/"/>
      <url>/article/4de9add/</url>
      
        <content type="html"><![CDATA[<p>相当惊艳的一个包，简单学习了下。<span id="more"></span></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#devtools::install_github("stemangiola/tidyHeatmap")</span><br><br>library<span class="hljs-punctuation">(</span>tidyHeatmap<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br>mtcars_tidy <span class="hljs-operator">&lt;-</span> <br>  mtcars <span class="hljs-operator">%&gt;%</span> <br>  as_tibble<span class="hljs-punctuation">(</span>rownames<span class="hljs-operator">=</span><span class="hljs-string">"Car name"</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  <br>  <span class="hljs-comment"># Scale 除开那些行，剩下的行进行标准化</span><br>  mutate_at<span class="hljs-punctuation">(</span>vars<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>`Car name`<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>hp<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>vs<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> scale<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  <br>  <span class="hljs-comment"># tidyfy 转换成长数据，保证3个变量不变，剩下的转换成长数据</span><br>  pivot_longer<span class="hljs-punctuation">(</span>cols <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>`Car name`<span class="hljs-punctuation">,</span> hp<span class="hljs-punctuation">,</span> vs<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> names_to <span class="hljs-operator">=</span> <span class="hljs-string">"Property"</span><span class="hljs-punctuation">,</span> values_to <span class="hljs-operator">=</span> <span class="hljs-string">"Value"</span><span class="hljs-punctuation">)</span><br><br>mtcars_tidy<br><br><span class="hljs-comment"># plot</span><br>mtcars_heatmap <span class="hljs-operator">&lt;-</span> <br>  mtcars_tidy <span class="hljs-operator">%&gt;%</span> <br>  heatmap<span class="hljs-punctuation">(</span>`Car name`<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 行</span><br>          Property<span class="hljs-punctuation">,</span> <span class="hljs-comment"># 列</span><br>          Value <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_tile<span class="hljs-punctuation">(</span>hp<span class="hljs-punctuation">)</span> <span class="hljs-comment"># 行注释</span><br><br>mtcars_heatmap<br><br><span class="hljs-comment"># save</span><br>mtcars_heatmap <span class="hljs-operator">%&gt;%</span> save_pdf<span class="hljs-punctuation">(</span><span class="hljs-string">"mtcars_heatmap.pdf"</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># grouping</span><br>mtcars_tidy <span class="hljs-operator">%&gt;%</span> <br>  group_by<span class="hljs-punctuation">(</span>vs<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-comment"># 按照vs这个变量进行分组</span><br>  heatmap<span class="hljs-punctuation">(</span>`Car name`<span class="hljs-punctuation">,</span> Property<span class="hljs-punctuation">,</span> Value <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_tile<span class="hljs-punctuation">(</span>hp<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 自定义颜色</span><br>mtcars_tidy <span class="hljs-operator">%&gt;%</span> <br>  heatmap<span class="hljs-punctuation">(</span><br>    `Car name`<span class="hljs-punctuation">,</span> <br>    Property<span class="hljs-punctuation">,</span> <br>    Value<span class="hljs-punctuation">,</span><br>    palette_value <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"red"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"blue"</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br>mtcars_tidy <span class="hljs-operator">%&gt;%</span> <br>  heatmap<span class="hljs-punctuation">(</span><br>    `Car name`<span class="hljs-punctuation">,</span> <br>    Property<span class="hljs-punctuation">,</span> <br>    Value<span class="hljs-punctuation">,</span><br>    palette_value <span class="hljs-operator">=</span> circlize<span class="hljs-operator">::</span>colorRamp2<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> viridis<span class="hljs-operator">::</span>magma<span class="hljs-punctuation">(</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Multiple groupings and annotations</span><br>tidyHeatmap<span class="hljs-operator">::</span>pasilla <span class="hljs-operator">%&gt;%</span><br>  group_by<span class="hljs-punctuation">(</span>location<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  heatmap<span class="hljs-punctuation">(</span><br>    .column <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">,</span><br>    .row <span class="hljs-operator">=</span> symbol<span class="hljs-punctuation">,</span><br>    .value <span class="hljs-operator">=</span> `count normalised adjusted`<br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_tile<span class="hljs-punctuation">(</span>condition<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_tile<span class="hljs-punctuation">(</span>activation<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Annotation types</span><br><br><span class="hljs-comment"># Create some more data points</span><br>pasilla_plus <span class="hljs-operator">&lt;-</span> <br>  tidyHeatmap<span class="hljs-operator">::</span>pasilla <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>act <span class="hljs-operator">=</span> activation<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  tidyr<span class="hljs-operator">::</span>nest<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> <span class="hljs-operator">-</span>sample<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <span class="hljs-comment">#创建list</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> rnorm<span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  dplyr<span class="hljs-operator">::</span>mutate<span class="hljs-punctuation">(</span>age <span class="hljs-operator">=</span> runif<span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">50</span><span class="hljs-punctuation">,</span> <span class="hljs-number">200</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  tidyr<span class="hljs-operator">::</span>unnest<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span> <br><br><span class="hljs-comment"># Plot</span><br>pasilla_plus <span class="hljs-operator">%&gt;%</span><br>  heatmap<span class="hljs-punctuation">(</span><br>    .column <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">,</span><br>    .row <span class="hljs-operator">=</span> symbol<span class="hljs-punctuation">,</span><br>    .value <span class="hljs-operator">=</span> `count normalised adjusted`<br>  <span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_tile<span class="hljs-punctuation">(</span>condition<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_point<span class="hljs-punctuation">(</span>activation<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_tile<span class="hljs-punctuation">(</span>act<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_bar<span class="hljs-punctuation">(</span>size<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  add_line<span class="hljs-punctuation">(</span>age<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><blockquote><p>💌lixiang117423@foxmail.com</p><p>💌lixiang117423@gmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生态和农业中植物亲缘识别的机制</title>
      <link href="/article/137f0725/"/>
      <url>/article/137f0725/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>许多生物能够有效地区别“近亲”和“陌生人”（这种现象叫亲缘识别，Kin Recognition），并且对“近亲”能够表现出更多的“合作”（positive kin recognition）。但是这种现象在植物中近几年才被关注到。<span id="more"></span>尽管某些用于研究亲缘识别的方法还存在一些不足，但是已经有足够的证据能够表明在植物中确实存在亲缘识别现象。亲缘识别不仅仅可以减少亲缘植物之间的资源竞争，还能有效影响植物与其共生体（如菌根网络）的互作。亲缘识别在植物性状进化、群体多样性、生态网络及群落结构等方面有着重要的应用。此外，亲缘选择（kin select）可能会减少竞争从而优化群体表现，这在作物育种上有这潜在的应用价值。探索这些在生态和农业上的应用面临一些挑战：亲缘关系的充分控制和度量、基因型水平上足够的重复及亲缘识别表现/适应性的综合度量。首要的关键问题是正向的亲缘识别在何时、何地、如何促进群体的表现。</p><h1 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h1><p>合作行为，作物育种，群体表现，广义适应度，亲缘歧化，亲缘选择，植物交流，资源竞争，根系分泌物，根系互作</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>再草地、林地、森林或者是农业田地等环节下，植物间通常都有这紧密的互作。这些互作有多种形式，如资源竞争、栖息地改造及交流等。在植物-植物互作的普遍性和多样性背景下，对某个个体性状的观察不能脱离开其邻居的影响。植物-植物互作在众多的生态过程中均有着重要的作用，如碳吸收、水分/营养均衡、植物-非植物生物互作及作物产量等。</p><p>大量植物生态学研究是基于”个体选择“的概念进行的，也就是通常会研究一个既定个体的某个性状对这个个体适应性的影响。然而，合作行为甚至是利他行为在自然界中更常见。为了解释这种”非自私“（non-selfish）的演变，Hamilton（1964）引入了”亲缘选择“（kin selection）这个概念（译者注：关于演化有两种观念，具体请参考<a href="https://luansheng.netlify.app/2018/06/05/group-selection-and-kin-selection/">博文</a>）。亲缘选择的基本概念是，如果某个个体帮助另外一个与其共享了某个数量等位基因的个体，那么这些等位基因不仅能够传递到下一代，还会增强下一代的适应新来增强其传递性。依赖关系行为的重要前提便是亲缘识别。</p><p>亲缘识别在大多数生物中都存在，如动物（包括脊椎动物和非脊椎动物）、真菌、甚至是细菌。但是长期以来人们并不太相信在植物中也存在亲缘识别。虽然有一个既定的事实是植物能够通过光信号或物理接触来感知周围的植物并做出响应，但是人们还是不太详细植物中的亲缘识别。植物甚至能够感知到近邻植物的状态，比如植物能够通过挥发物来感知邻近植物是否受到了攻击，比如植物能够通过声音来判别邻近植物是否受到了干旱胁迫。许多植物能够阻止自花授粉，这表明植物能够区分”自我“与”非我“。研究表明植物不仅能够区分自己的根系和邻近植物的根系，还能区分来自自我的挥发物和”非我“的邻近植物的挥发物。</p><p>植物亲缘识别的第一个研究是关于一年生植物<em>Cakile edentula</em> 的，这个研究发现<em>Cakile edentula</em> 与来自同一母本的植物进行互作时，根系分布会降低（地上部分生物量一定时，产生更少的根）。后续一系列的研究表明植物中确实存在亲缘识别及相关的亲缘歧化（下图）。</p><p>植物中亲缘识别现象的存在对研究植物生态学和进化生物学有着重要的影响。首先，亲缘选择会影响群体的遗传结构和多样性（群体遗传多样性通常会往低的方向走）；其次，”合作“通常会使群体表现更好，这在生态系统功能上会有重要的应用。亲缘识别在农业上可能有潜在的应用价值，农民关注的是作物群体性，而不会在乎单独的个体。这再次涉及到我们关注的问题，亲缘识别在多大程度上影响作物的表现？亲缘识别能不能作为育种靶标？</p><p>本篇综述的目的：</p><ul><li>严格阐述植物中亲缘识别及其潜在的机制；</li><li>讨论亲缘识别潜在的生态学应用；</li><li>讨论亲缘识别在农作物上的影响程度。</li></ul><h1 id="一些基础概念"><a href="#一些基础概念" class="headerlink" title="一些基础概念"></a>一些基础概念</h1><h2 id="合作与欺骗（cooperation-vs-cheating）"><a href="#合作与欺骗（cooperation-vs-cheating）" class="headerlink" title="合作与欺骗（cooperation vs cheating）"></a>合作与欺骗（cooperation vs cheating）</h2><p>在植物科技文献中存在的一个问题是个体选择与群体表现之间存在“冲突”。拥有能够让群体适应新最大化的性状的植物群体面对更具竞争力的植物时通常是没有“抵抗力“的。进化博弈论认为群体会想向着非最佳状态方向进化。典型的例子是植物株高：株高较矮且在茎秆上”投资更小“的植物会将更多的资源用在增强适应性上，如种子产量，但是这种植物群体会被更高的植物”入侵“。</p><p>这种”悲剧”的发生比不上单一的：比起能够让植物群体适应性最大化的性状，植物可能产生更多的叶子、更大的特殊的叶片区域和更多的根系，或者是更大的花。因此，在既定条件下，从最大化适应性角度也许不能优化vegation stands，这可能会对生态系统功能产生影响。</p><h2 id="亲缘选择：何时-amp-何地"><a href="#亲缘选择：何时-amp-何地" class="headerlink" title="亲缘选择：何时&amp;何地"></a>亲缘选择：何时&amp;何地</h2><p>除了合作/欺骗外，自然界中还充满着“利他行为”。Hamilton在1964年提出利他行为的选择可能发生在具有遗传关系的个体中。基本的概念是：如果一个个体能够帮助和他具有一定数量等位基因的几个题，那么这些等位基因就会传递到下一代，并增强下一代的适应性。Hamilton在1964年时将这些凝练成了定理：如果分化遗传关系（r）与受体的适应性（B）的乘积大于参与者的适应性损耗（C），那就会发生利他行为。</p><script type="math/tex; mode=display">r×B>C</script><p>汉密尔顿定理认为，遗传关系越近的个体之间越可能形成合作关系。但是，需要注意的是遗传背景越相近的个体之间竞争也可能越激烈。对于距离较近的植物，差异会导致更强的生态位分化。那么就有个问题：在亲缘竞争存在的情况下，亲缘选择何时发生？根据上面的公式，r和/或B更大或C更小的时候，亲缘选择会发生。</p><p>亲缘很大程度上取决于互作过程中的收入/支出比及生态条件。至少有两类生态因素会影响亲缘选择：</p><ul><li>更高的$r$值时：植物倾向于与遗传关系近的近邻互作；</li><li>竞争成为一个负向的非零和博弈：利他行为不仅会改变竞争平衡，还会增加资源的可利用性。</li></ul><p>此外，竞争不仅仅只会发生在植物个体间，还会发生在植物群体间，尤其是资源具有高度流动性的时候，如大量开花作物和草地植物之间的传粉媒介竞争。因此，即使合作行为针对的是一个群体，但如果合作的群体比没有合作的群头生产力更强的时候，群体之间也会发生具有偏向性的合作行为。没有亲缘选择时，可能会发生多群体选择。多层选择可能更偏向亲缘选择。</p><p>以下情况可能存在通过亲缘选择来实现合作进化：</p><ul><li>“合作成本低”时；</li><li>合作互作不仅能够降低竞争强度还能增强资源的可利用性时；</li><li>”资源“是高度可移动的时候；</li><li>在粘性植物种群中，遗传相关性和物理距离之间存在明显的负相关关系。</li></ul><h1 id="地下部分围绕可利用资源发生的亲缘识别和亲缘竞争"><a href="#地下部分围绕可利用资源发生的亲缘识别和亲缘竞争" class="headerlink" title="地下部分围绕可利用资源发生的亲缘识别和亲缘竞争"></a>地下部分围绕可利用资源发生的亲缘识别和亲缘竞争</h1><p>因此，即使合作行为是针对一个小组的选择，如果合作小组比不合作的小组更有生产力，也可以在小组之间有选择地偏向合作行为。</p>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用ImageJ批量计算叶片面积</title>
      <link href="/article/li-yong-imagej-pi-liang-ji-suan-xie-pian-mian-ji/"/>
      <url>/article/li-yong-imagej-pi-liang-ji-suan-xie-pian-mian-ji/</url>
      
        <content type="html"><![CDATA[<p>我以为只有在Linux上才能批量进行图片处理，没想到啊ImageJ在Windows上也可以。<span id="more"></span></p><p>途中的“宏文件”可以使用“宏记录”进行导出。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools4You教程6：方差分析</title>
      <link href="/article/c7d1b27c/"/>
      <url>/article/c7d1b27c/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>前两天在某个群里面，两个群友争论起来，给我的感受是<strong>我们使用某个方法之前还是需要了解基本的概念和用法，<span id="more"></span>不能拿着就往自己的数据上套。</strong>这也是我觉得我自己还需要学习很多东西的原因。</p><h1 id="Anova教程"><a href="#Anova教程" class="headerlink" title="Anova教程"></a>Anova教程</h1><ul><li><p>数据格式：分组信息必须在第一列，名称不一定必须是“group”，只要保证分组信息在第一列即可，后面的表示的是重复，重复也不一定要写成“rep_”，写什么都行。</p><p>如果数据有缺失值的话空出来就行，就像这样（此处感谢师弟提出的需求！）：</p></li><li><p>选择模块：打开网站<a href="http://shinyapp.top:3838/Tools4You/，选择”Anova”模块：">http://shinyapp.top:3838/Tools4You/，选择”Anova”模块：</a></p></li><li><p>上传数据：目前只支持CSV格式的数据，初次使用可以下载示例数据用示例数据先熟悉熟悉流程。</p></li><li><p>误差棒数据：Anova模块出图默认的是柱状图，柱状图通常需要加上误差棒， 误差棒通常使用的是均值±标准差来表示，也有使用均值±标准误来表示的。因此，我们提供了这两种选择（默认是标准差）：<br>.</p></li><li><p>是否显示显著性：方差分析的结果通常是用字母来表示的，如果这个选项选择的是“否”，那就不会在柱子上标注显著性，默认是“是”：</p></li><li><p>添加散点：通常柱状图上是没有散点的，现在某些期刊上会在柱状图上添加上散点，这样可以明显地看出重复之间的重复性好不好，比误差棒更加直观，默认是不添加散点的，需要添加的话改成“是”即可：</p></li><li><p>点击提交：设置完上述这些参数后，直接点击下方的“点击提交”按钮，稍等几秒钟，就能在右边弹出计算的结果和图片：</p></li><li><p>柱子顺序：R绘图会按照默认的顺序排序绘图，如果顺序不是自己想要的，按照下面的方法输入自己想要的顺序即可，<font color="red">必须用英文逗号分隔!!!</font>&gt;</p></li><li><p>其他参数：</p><ul><li>柱子宽度：默认的是0.6，如果出图的结果柱子太宽或太窄，可以滑动滑块调节这个参数：</li><li>柱子颜色：默认的参照AAAS系列杂志的配送进行上色，自定义颜色的时候颜色的数量需要和柱子数量对应，但是如果只想设置成一种颜色，比如黑色，那输入一个“black”即可。</li><li>其他绘图参数：坐标轴、标题等直接输入就好：</li><li>图片下载格式：默认的是PDF格式，因为PDF是矢量图，可以自由编辑，其他的几类图大多不可编辑，建议下载PDF格式图片，后续要细调啥的方便：</li></ul><p>将所有参数设置完成后再次点击“点击提交”按钮即可，然后下载结果表格和图片即可。</p></li></ul><h1 id="Tools4You教程合集"><a href="#Tools4You教程合集" class="headerlink" title="Tools4You教程合集"></a><a href="https://www.blog4xiang.world/categories/Tools4You/">Tools4You教程合集</a></h1><p>如果使用谷歌Chrome浏览器报错，请换其他的浏览器进行使用！！！</p><font color="red">如果遇到任何的报错，请与我们联系：</font><blockquote><blockquote><p>💌lixiang117423@foxmail.com</p><p>💌lixiang117423@gmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools4You </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools4You </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ImageJ计算叶片面积</title>
      <link href="/article/da044cd8/"/>
      <url>/article/da044cd8/</url>
      
        <content type="html"><![CDATA[<p>后续要扫描大量的水稻叶片然后计算病斑数量，之前没有使用过ImageJ这个软件，今天下午学了一下，成功get扫描一个图片中多个叶片面积的方法。</p><span id="more"></span><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><p>可以从官网下载安装（<a href="https://imagej.nih.gov/ij/download.html">点击下载</a>），但是网速感人，我把软件放在坚果云上面了，高速下载（<a href="https://www.jianguoyun.com/p/DXXP9zgQkOqUCRjesN8D">点击下载</a>）。下载后解压，然后双击就能打开软件：</p><h1 id="准备图片"><a href="#准备图片" class="headerlink" title="准备图片"></a>准备图片</h1><p>准备扫描的图片需要注意的是叶片不能和接触到边界，不然不能计算面积。</p><h1 id="导入图片"><a href="#导入图片" class="headerlink" title="导入图片"></a>导入图片</h1><p>File→Open…即可打开图片：</p><h1 id="处理图片"><a href="#处理图片" class="headerlink" title="处理图片"></a>处理图片</h1><p>导入的图片需要转换成<code>8-bit</code>格式：</p><p>转换后面的图片是这样的：</p><h1 id="改变阈值"><a href="#改变阈值" class="headerlink" title="改变阈值"></a>改变阈值</h1><p>改变图片的颜色阈值，让叶片与背景分开：</p><h1 id="计算面积"><a href="#计算面积" class="headerlink" title="计算面积"></a>计算面积</h1><p>设置完上述这些参数后，依次点击Analyze→Analyze Particles，然后在弹窗中设置参数：</p><p>设置完成后点击<code>OK</code>即可：</p><p>左边的弹窗是总面积数，右边的弹窗是每个叶片的面积。单位mm$^2$。</p><p>保存结果即可。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools4You教程5：PCoA</title>
      <link href="/article/fac8e7d1/"/>
      <url>/article/fac8e7d1/</url>
      
        <content type="html"><![CDATA[<h1 id="关于PCoA"><a href="#关于PCoA" class="headerlink" title="关于PCoA"></a>关于PCoA</h1><p>PCoA（Principal Coordinates Analysis，主坐标分析）和PCA（<a href="http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/">点击查看PCA教程</a>）一样是常见的数据降维方法，<span id="more"></span>常用在生态数据中。</p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>PCoA模块的使用方法和PCA的一样，请参考PCA教程（<a href="http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/">点击查看PCA教程</a>）。</p><h1 id="Tools4You教程合集http-www-blog4xiang-world-2021-01-28-Tools4You-E6-95-99-E7-A8-8B4-EF-BC-9APCA"><a href="#Tools4You教程合集http-www-blog4xiang-world-2021-01-28-Tools4You-E6-95-99-E7-A8-8B4-EF-BC-9APCA" class="headerlink" title="Tools4You教程合集http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)"></a><a href="https://www.blog4xiang.world/categories/Tools4You/">Tools4You教程合集</a><a href="http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/">http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/</a>)</h1><hr><blockquote><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools4You </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools4You </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools4You教程4：PCA</title>
      <link href="/article/b211c402/"/>
      <url>/article/b211c402/</url>
      
        <content type="html"><![CDATA[<h1 id="PCA简介"><a href="#PCA简介" class="headerlink" title="PCA简介"></a>PCA简介</h1><p>PCA（Principal Component Analysis，主成分分析）是常见的降维方法，在生命科学中应用广泛。<span id="more"></span>关于PCA的原理，推荐观看博主Josh Starmer博士的视频（<a href="https://www.bilibili.com/video/BV1fD4y1X7fw">点击打开B站视频链接</a>，手机端貌似无法打开链接），真的是深入浅出，极其通透。</p><h1 id="几点注意事项"><a href="#几点注意事项" class="headerlink" title="几点注意事项"></a>几点注意事项</h1><ul><li>目前唯一的网址为：<a href="http://shinyapp.top:3838/Tools4You/">http://shinyapp.top:3838/Tools4You/</a></li><li><code>Tools4You</code>所有模块目前只支持输入<code>.csv</code>格式，在Excel中将数据另存为<code>.csv</code>格式即可：</li><li>每个分析模块都有对应的示例数据，请按照示例数据的格式整理自己的格式。</li><li>如果界面和自己电脑屏幕不适配，请适当放大缩小浏览器的显示比例，开发调试用的是27寸屏幕。</li></ul><h1 id="选择PCA模块"><a href="#选择PCA模块" class="headerlink" title="选择PCA模块"></a>选择PCA模块</h1><p>打开网站，选择对应的PCA模块即可：</p><h1 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h1><p>PCA分析输入数据为“长数据“：</p><p>每一行是一个样品，每一列是一个观测指标，最后的“group”和“site”是样品的分组信息，必须有分组信息，这样后面画图才能进行分组显示，分组信息可以有多个，然后画图的时候不同的分组信息控制图形的颜色和形状等。</p><h1 id="分组信息"><a href="#分组信息" class="headerlink" title="分组信息"></a>分组信息</h1><p>在数据表中有多少个分组信息，就需要在这地方标明，比如我的数据中有两个分组信息：group和site，分别是样品分组信息和样品的位点信息。我就需要在“分组名称”这个输入<code>group,site</code>，后面绘图才能进行识别。</p><h1 id="多元方差分析"><a href="#多元方差分析" class="headerlink" title="多元方差分析"></a>多元方差分析</h1><p>如果PCA结果足够好的话，可以直接肉眼观察分组之间是否分开，但是如果分组之间是”若即若离“的，那就不好说到底有没有分开了。这时候就需要多元方差分析了，通常是PERMANOVA。</p><p>默认是进行PERMANOVA分析的。</p><p>下方是图片格式，支持多种图形格式，默认的是<code>PDF</code>格式。</p><h1 id="绘图样式"><a href="#绘图样式" class="headerlink" title="绘图样式"></a>绘图样式</h1><p>绘图样式有三种，最常见的是置信椭圆样式。</p><p>三种样式对应的图形如下：</p><h1 id="展示主成分"><a href="#展示主成分" class="headerlink" title="展示主成分"></a>展示主成分</h1><p>PCA分析中主成分的数量和变量的数量是一样的，比如我的数据有4个变量，那就会有4个主成分。</p><p>通常只展示前三个主成分，三个主成分两两组合，共有4种组合。</p><p>只需要在这个位置输入想展示的主成分即可，注意PC这两个字母需要大写，另外是英文逗号分隔。</p><h1 id="散点图相关设置"><a href="#散点图相关设置" class="headerlink" title="散点图相关设置"></a>散点图相关设置</h1><p>剩下的参数主要和散点图的点相关：</p><ul><li>”点的大小“这个参数就是说散点图中点的大小；</li><li>”点的透明度“是指散点的透明度，默认是1；</li><li>”控制点的形状的分组名称“是用数据中的哪个分组信息来控制点的形状，比如”group“；</li><li>”输入点的形状“，用户直接指定点的形状，但是要和上方分组的数量相同，比如我的”group“有三个，那我的这个地方只能输入三个值；</li><li>下方两个参数和上方两个类似。</li></ul><h1 id="点击查看"><a href="#点击查看" class="headerlink" title="点击查看"></a>点击查看</h1><p>设置完上述这些参数后，便可以点击左侧的”点击提交“完成分析，如果没有报错，应该得到这样的结果：</p><p>如果没有报错，那就再输入最右侧的参数。输入完成后需要再次点击”点击提交“。</p><h1 id="下载结果"><a href="#下载结果" class="headerlink" title="下载结果"></a>下载结果</h1><p>完成所有参数后，点击左下角的下载按钮即可。</p><p>可以根据”PCA碎石图“的结果来决定散点图展示哪几个主成分。</p><p>下载完图片后对长和宽不满意的话，可以重新设置长和宽，然后点击”点击提交“，最后再下载数据。</p><h1 id="示例结果"><a href="#示例结果" class="headerlink" title="示例结果"></a>示例结果</h1><p>示例数据得到的结果（点的颜色和形状分别用不同的分组控制）如下：</p><p>详细参数如下：</p><h1 id="Tools4You教程合集"><a href="#Tools4You教程合集" class="headerlink" title="Tools4You教程合集"></a><a href="https://www.blog4xiang.world/categories/Tools4You/">Tools4You教程合集</a></h1><hr><blockquote><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools4You </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools4You </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应</title>
      <link href="/article/5d1ec1f/"/>
      <url>/article/5d1ec1f/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>土壤遗产在优先效应的形成过程中有着重要的作用。然而我们还不知道<span id="more"></span>土壤中的植物种类对“土壤代谢”的影响到底有多大，我们也不知道土壤化学遗产是否影响“后到”植物。为了验证这些猜想，该研究收集了来自西洋石竹和紫羊茅的土壤溶液，然后评估这些不同的土壤溶液对西洋石竹和紫羊茅的影响，包括生长、生物量分布及功能形状等。</p><p>结果表明，来自西洋石竹和紫羊茅的土壤溶液的代谢物在组成和化学多样性上具有差异。两类土壤化学遗产对紫羊茅都没有任何影响，但是两类土壤溶液都会影响西洋石竹的“根系觅食”（root foraging）。结构方程模型表明，西洋石竹减少土壤的勘探（reduced soil exploration by <em>D. deltoides</em>）是通过根系生长途径( 西洋石竹代谢物)或根系性状途径(紫羊茅代谢物)引起的。根系觅食减少与总氮吸收减少无关。</p><p>这个研究说明土壤化学遗产能够通过影响“后到”植物的根系觅食来“创造”地下部分的优先效应。</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>优先效应（Priority effects）：可以简单理解成“先来后到”，即某个地方“先来”的植物会影响”后到“的植物的生长、发育和/或繁殖。</p><p>引起优先效应发生的机制主要有两种：</p><ul><li>生态位抢占（niche preemption）：”先来“的植物会消耗生态位上的关键资源，如空间、光即土壤营养等，如果生态位抢占是形成优先效应主要的因素的话，那”后到“的植物的生长、发育会受到负向影响。</li><li>生态位修饰（niche modification）：”先来“的植物会影响生态位的可利用类型，从而影响”后到“的植物，此种情况下”后到“的植物会出现两种情况：被”先来“的植物促进或抑制。</li></ul><p>研究生态位修饰驱动的优先效应产生的研究主要几种在植物土壤反馈实验（plant-soil feedback, PSF）。根系分泌物是土传遗产的重要组成部分。先前的研究发现：</p><ul><li>根系分泌物种的代谢物会影响根际真/细菌群落，受影响的真/细菌群落会激发PSF，进而影响植物的生长和防御；</li><li>根系分泌的化感物质会影响邻近植物的生长；根系分泌物可以作为近邻识别的化学线索。</li></ul><p>大量的研究证据表明根系分泌物在构建根际微生物组和介导植物—植物互作中扮演着核心作用，但是<strong>我们任然不知道土壤化学遗产在多大程度上影响”后到“植物的生长和发育以及这些化学遗产在多大程度上影响到优先效应的形成</strong>。</p><h1 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h1><p>这个研究的实验设计是比较简单的，同样的土，CK里面不种植植物，另外两个处理里面分别种植西洋石柱和紫羊矛，播种65天后开始后收集土壤溶液，每周收集两次，收集5周。每次收集的时候都用水把土壤淹没完，然后让土壤溶液在自然状态下从栽培容器底部的孔内流出，收集。收集完以后为了避免颗粒物和微生物的干扰，将收集到的土壤溶液过0.2$\mu$m的滤膜。收集到的土壤溶液一部分用于代谢组检测，检测的方法是LC-MS。另外一部分根系分泌物用于浇灌（实验Ⅱ）。</p><h1 id="植物生长对土壤化学遗产的影响"><a href="#植物生长对土壤化学遗产的影响" class="headerlink" title="植物生长对土壤化学遗产的影响"></a>植物生长对土壤化学遗产的影响</h1><p>首先是比较了三种处理下土壤溶液中代谢物的差异（下图a），可以看到的是没有种植物的土壤溶液和种植物的两个不同，分的很开。其次比较了三种处理下的代谢物的丰度情况（下图b），种植植物后，代谢物丰度明显更高了。代谢物丰度和可溶性有机碳（DOC）也呈现出明显的正相关关系（下图c）。</p><h1 id="土壤化学遗传对”后到“植物的影响"><a href="#土壤化学遗传对”后到“植物的影响" class="headerlink" title="土壤化学遗传对”后到“植物的影响"></a>土壤化学遗传对”后到“植物的影响</h1><p>通过对一些列指标的比较，发现不同来源的土壤化学遗传会影响紫羊茅，但是不影响（or影响很小）西洋石竹。</p><h1 id="结构方程分析"><a href="#结构方程分析" class="headerlink" title="结构方程分析"></a>结构方程分析</h1><p>最后还进行了结构方程模型分析。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>化感和化感物质在植物防御中的作用</title>
      <link href="/article/b54a9b65/"/>
      <url>/article/b54a9b65/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>化感（Allelopathy）指的是植物间或植物与其他生物之间通过植物产生的具有生物活性的次级代谢产物（化感物质，allelochemicals）介导的化学互作导致的生长干扰现象。<span id="more"></span>已有大量的研究探明了植物不同组织部位的化感物质的释放机制，如裸露在空气中的部位的挥发和淋溶、根系分泌及植物残体在土壤中的降解等。尽管这些化感物质有着不同的生物活性和作用方式，但是它们却具有类似的生物合成通路（某类代谢物可以通过多种生物合成通路进行合成产生）。最近大量的研究阐明了在原生/非原生生态中，化感物质对植物演替和入侵的重要影响作用。此外，许多研究还关注了能够抑制杂草的作物，对其进行筛选和利用，以此来管理田间杂草，实现农业可持续发展。更好地理解化感物质与植物防御之间的关系有助于我们更好地保护和管理农作物、限制入侵杂草的扩张、保存本地植物并促进新型农药的发展与应用。与代谢组学相关的技术的使用已经极大地促进了特有化感物质、生物合成通路及其在土壤中的复杂作用的研究。包括化感物质在内的植物新型代谢物的鉴定为新型农药的研发奠定了生物学基础，为今后的合成提供互补结构，并可以辅助开发新的分子靶标位点。</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>植物及其微生物区系持续不断地产生着大量的化学物质，这些物质中的大部分在初级代谢（植物生长发育必须）中不具有生物学功能。这些低分子量的有机化合物被称为植物次级产物或次级代谢物。某些被称为化感物质的次级代谢物对邻近植物的生长、健康和行为具有刺激或抑制效应，这种现象被称为化感作用。化感作用首次被提出使用是在1937年，当时被广泛地定义为植物间或植物-微生物间直接或间接的生物化学互作。</p><p>国际化感协会（The International Society of Allelopathy，ISA）将化感作用定义为植物与其他生物（不包括食草动物）之间的化学互作。鉴于此，大多数研究化感的研究人员关注的是植物之间的化学互作。然而，值得注意的是微生物也能够降解和激活次级代谢产物，某些情况下这些微生物具有更强的植物生长抑制效果。次级代谢物中具有潜在化感活性的物质叫做化感物质（allelochemicals）。此外，化感物质造成的化感干扰不同于植物之间对水分、空间、光、气、大量/微量元素的竞争干扰。随着植物的生长，化感和竞争都会造成生长减缓或生长干扰。</p><p>化感并不是一种新的现象，2000年以前的文献中就有了化感的相关记录。在这些古老的手稿中，植频繁记录着植物能够让土壤”生病“，并产生毒素影响其他植物的生长。希腊植物学家Theophrastus首次注意到鹰嘴豆会”耗尽“土壤并抑制杂草。后来的罗马学者Pliny记录描述了核桃树对周围植物的毒害作用。1832年，De Candolle完成了第一个较完整的实验对化感品种的根系分泌物的毒性进行了研究。近些年，基于这些基础性的研究，关于化感互作机制的研究呈现指数级增长。关于化感最新的研究极大地促进了我们对植物生态系统及其驱动力的理解。这些研究的关注点有这些：</p><ul><li>化感物质对入侵植物在非原生生态中成功入侵的影响；</li><li>动态生态系统中化感物质对植物演替的影响；</li><li>杂草抑制作物的筛选与利用；</li><li>根系中根系分泌物在驱动植物-微生物互作中的作用。</li></ul><p>本文主要关注的是植物间的化感互作、植物防御机制、化感物质的生化分类、化感物质作用模型及发生在根际或植物—土壤界面上的关键的化感互作。</p><h1 id="植物防御与化感物质的作用"><a href="#植物防御与化感物质的作用" class="headerlink" title="植物防御与化感物质的作用"></a>植物防御与化感物质的作用</h1><p>植物是固生的，因此不管是面对威胁还是面对有益资源都不能移动。在进化的过程中，植物进化出了物理/化学机制来抵抗昆虫和病原菌。传统上认为资源竞争是影响植物交流最重要的单一影响因子。然而，最近的研究发现化感作用影响植物防御进而影响植物交流的多样性。在这个过程中，植物释放出多种低分子量的次级代谢物，这些物质能够与周围的植物互作抑制其出芽和生长。现已知的能够产生化感物质的植物大多属于维管植物。近些年对非维管植物的次级代谢产物的研究在逐渐增加。化感物质在植物演替中扮演着重要的作用。</p><p>到目前为止在植物中鉴定到了大约10万种次级代谢物质。但是只有一小部分具有生物化感活性，这些具有化感活性的次级代谢产物通常属于特定的化学家族，如酚类、萜类、糖类固醇及生物碱。植物会分配大量的碳资源来合成、调控及存储参与植物防御的具有化感活性的次级代谢物。然而，许多植物进化出了高效的策略来产生和循环这些具有生物活性的代谢物。一种物质通过植物代谢转换成另外一种物质后可能具有完全不同的生物学功能。在一些例子中，一个单一的物质或其相关化合物家族会有多种功能。如，独角金内酯能够促进寄生植物的萌发而其他内酯会抑制萌发。尽管在生物活性和作用方式上具有差异，相关化合物通常共享相似的生物合成通路，而分类等代谢物能够通过多种生物合成通路和多种前体进行合成。</p><p>面对食草动物及病原菌等”取食者“，植物进化出了对应的物理或化学保护机制。植物页面毛等专门的结构能够提供物理防护功能。特定的防御机制包括具有生物活性代谢物的合成与释放。这些具有生物活性的代谢物中的某些在所有植物中都存在，一些专门为了应对生物/非生物胁迫而合成。病原菌侵染后立即形成的前体物质叫植物抗毒素（phytoalexins）。寄主植物在多种胁迫下产生的低分子量的代谢物具有广谱抑制活性及额外的化学多样性。</p><p>微生物共生也在影响着维管植物的生存与发展。如，广泛分布在生态系统中的菌根真菌与90%的维管植物形成了共生关系。这些微生物影响着土壤中氮磷向植物的移动运输，因此它们在地下部分通常扮演着基础性作用。植物释放化感物质、动物取食、其他代谢物被释放到根际并被其他植物吸收转运等情况下，这些微生物有时也参与化感干扰，并被成为地下”高速公路“，促进化感物质在植物间的转运。</p><h2 id="化感物质在环境中的定位和释放"><a href="#化感物质在环境中的定位和释放" class="headerlink" title="化感物质在环境中的定位和释放"></a>化感物质在环境中的定位和释放</h2><p>包括化感物质在内的次级代谢产物在自然界中是很常见的。植物生长过程中各个部位都会释放出次级代谢产物。空中部分的挥发与淋溶、根系分泌、残体在土壤中的降解等方面相关的机制研究已经有很多了（下图）。雨水、雾滴及露水等直接的挥发和沉降也影响着植物空气部分化感物质的溶解性和释放，尤其是那些含有化感物质的腺毛等部位。毛滴（trichomes）是植物叶片、茎秆或花序表面的毛状附属物。这些毛滴能够有效防止食草动物的取食，也具有利用化感物质进行防御的潜在可能。作为 物理屏障的腺毛体具有能够产生参与化学防御体系的化感物质的特异性细胞。</p><h1 id="次级代谢物的分类"><a href="#次级代谢物的分类" class="headerlink" title="次级代谢物的分类"></a>次级代谢物的分类</h1><p>可以根据碳骨架结构和功能基团对次级代谢物进行分类，但是最常用的分类系统是根据代谢物的生物遗传起源对代谢物进行分类（下图）。根据Walton、Brown及Rice等人的研究，可以将植物代谢物和化感物质分为三大类：酚类、萜类和生物碱。</p><h2 id="酚类及其衍生物"><a href="#酚类及其衍生物" class="headerlink" title="酚类及其衍生物"></a>酚类及其衍生物</h2><p>植物多酚中的多类有机化合物都含有一个共同的结构，它们由一个芳香环组成，至少含有一个羟基，可能还有其他取代基。可以将植物酚类细分为酚酸类、黄酮类、二苯乙烯类、香豆素类、木质素类和单宁类。酚类是衍生自苯丙烷-乙酸酯生物合成途径的次级代谢产物。到目前为止天然的次级代谢产物中大约有8000种属于酚类。这些酚类物质在植物中有着多样的结构和物理化学功能。酚类在高等植物的防御中扮演者重要的作用，也是报道最多的。毒性的多样性导致酚类物质能够在细胞的多个位置发挥功能。植物结构基础的40%是由木质素和单宁酸组成的，而木质素和单宁酸就属于酚类。这些物质还能随着时间变化降解在根际土壤中，进而保证有足够多的丰度来完成合成、转化、释放及降解的生态循环。</p><p>已经有大量关于酚类物质的化感机制研究的报道，这些研究发现酚类物质不仅会干扰多个植物关键酶，还会影响一些生理过程。如，肉桂酸（cinnamic）和苯甲酸（benzoic acids）会影响激素活性、膜的通透性、光合作用、呼吸作用及有机物的合成等（下图）。但是还没有实验数据表明酚类物质会影响细胞分化和基因翻译。</p><p>包括苜蓿和三叶草在内的多年生豆科植物会在牧场施肥后产生化感作用。三叶草和苜蓿等也会有自毒作用。这些植物会抑制同种植物的生长。CArlsen等人研究三叶草的植物毒性后发现三叶草会释放黄酮类和糖苷类次级代谢物来抑制杂草生长。</p><h2 id="萜类"><a href="#萜类" class="headerlink" title="萜类"></a>萜类</h2><p>萜类是一类特殊的化感物质，其生物合成通路有甲羟戊酸和异戊烯基焦磷酸两个途径。<code>terpene</code>或<code>terpenoid</code>来自希腊语<code>terpentin</code>，因为首次报道的<code>terpeniod</code>是从<code>turpentine</code>分离得到的。自然存在的大约24000个萜类化合物是由五个碳异戊二烯亚基组成的（下图）。这些压机它们通过常见的头对头或次要的头尾连接而连接在一起，但有些特征还在于头对中环闭合。根据拥有的异戊二烯亚基的相对数量，可以将萜类化合物分成半萜烯、单萜、倍半萜、二萜、三萜、四萜及多萜。由于萜类具有挥发性，因此它们在植物中具有多种功能，如信号分子、光保护剂、生殖激素及化感物质等。</p><p>植物精油的主要成分单萜对植物生长和幼苗发芽具有很强的抑制作用。研究较好的是单萜1,4-cineole和1,8-cineole（下图）的生长抑制作用，而且是新型除草剂的有效候选物质。这些单萜尽管在结构上具有相似性，但是作用方式却不尽相同，如1,8-cineole影响有丝分裂的所有阶段，1,4-cineole会造成芽的生长异常。</p><p>倍半萜及其相关的代谢物也是植物精油的组成成分，它们对植物具有植物毒性。倍半萜$\beta$-石竹烯（下图）是大多数植物挥发物的有效成分，在很低浓度下就能抑制 甘蓝型油菜和萝卜种子的萌发和生长。葛根叶片中的黄嘌呤的几何异构体在极低浓度下便能抑制了许多小种子一年生阔叶和草的幼苗根生长。</p><h2 id="生物碱"><a href="#生物碱" class="headerlink" title="生物碱"></a>生物碱</h2><p>生物碱是源自植物的杂环含氮碱性化合物（下图）。之所以被称为生物碱是因为它们的碱性本质。菊科、夹竹桃科、紫草科及豆科等四类植物能够合成生物碱。自古以来，由于它们独特的药理特性，因此一直被关注。生物碱是最大的次级代谢产物组类，迄今已鉴定出约20,000种化合物，代表了巨大的结构生物合成多样性。根据生物合成来源，可以将生物碱分成不同的类。如，吲哚生物碱衍生自色氨酸；吡咯嗪核生物碱衍生自鸟氨酸或精氨酸；喹喔啉生物碱衍生自赖氨酸。</p><p>生物碱在植物中分布广泛。生物碱在植物中常见的报道是其参与了植物的防御反应，如食草动物取食、真菌等微生物侵染及临近植物干扰等情况。研究人员已评估了几种天然存在的吡咯烷核生物碱对人类和放牧牲畜的肝脏毒性，而且这些物质还能作为植物地上防御系统的一部分，阻止草食动物取食。然而，其他的生物碱在某些时候会抑制植物生长。野生烟草被食草动物取食或破坏后，其体内尼古丁产物增加；有趣的是尼古丁对一年生杂草具有化感活性。生物碱可以通过干扰DNA、酶活性、蛋白质生物合成及膜完整性等机制来抑制植物的生长。Lovett等研究了大麦能够从根部释放生物碱草胺和鱼藤碱（这两种物质对幼苗具有化感活性）增强防御反应的机制。Wink等研究发现豆类植物会合成喹唑烷生物碱，这种物质能够通过影响膜通透性和蛋白质合成来引发强烈的抑制作用。</p><h2 id="苯并恶嗪类化合物的异羟肟酸：农学案例研究"><a href="#苯并恶嗪类化合物的异羟肟酸：农学案例研究" class="headerlink" title="苯并恶嗪类化合物的异羟肟酸：农学案例研究"></a>苯并恶嗪类化合物的异羟肟酸：农学案例研究</h2><p>苯酚衍生物异羟肟酸是次级代谢产物中具有生物活性的苯并噁嗪来化合物的基本骨架（下图）。大量研究表明苯并噁嗪类化合物具有抗菌、抗真菌、拒食及植物毒性等作用。</p><p>玉米、黑麦及小麦等栽培作物中的异羟肟酸的化感活性有着广泛的研究，这种物质的含量与植物对昆虫和病原菌的抗性高度相关。DIMBOA（2,4-Dihydroxy-7-methoxy-2H-1,4-benzoxazin-3-one）和DIBOA（2,4-dihydroxy-2H-1,4-benzoxazin-3-one）以及相关微生物转化物质对许多阔叶杂草和生菜、小麦等作物具有很强的化感活性。这些物质通常是通过植物受伤部位释放到土壤中的，除此之外，收获后留下的植物残体降解后也会产生这类物质。DIBOA和DIMBOA的糖苷（以及它们各自的糖苷配基和黑麦（黑麦谷物）根残留物中释放的降解产物）是主要的化感活性成分（对阔叶作物、杂草及一些一年生草）。</p><h1 id="化感物质的作用模型"><a href="#化感物质的作用模型" class="headerlink" title="化感物质的作用模型"></a>化感物质的作用模型</h1><p>化感研究中一个挑战是鉴定高等植物中化感物质的特定的作用模型。已经有很多的方法来研究化感物质对高等植物生长的直接影响并进一步研究其作用机制。但是这可能是比较困难的，因为某个化感物质潜在的靶标位点特异性的酶可能是多样性的，而且需要大量对催化位点和靶标位点结构相关的先验知识。在某些例子中，通过对植物生长和/或形态学的观察得到的化感物质作用的靶标位点可能不是真真正正的靶标位点。此外，某些通过体外测定进行的化感方式的研究的结果已经受到一定的质疑，而且更重要的是体外测定得到的结果和自然状态下的结果的差异性也受到了一定的质疑。</p><p>需要注意的是在自然状态下化感物质的浓度通常是很低的，而且存留的时间很短，因此添加到土壤或环境中的单一化感物质或化感物质群的浓度是很难估计或测定的。因此，在一定浓度下需要进行适当的生物测定来评估化感物质对高等植物生长的影响。在许多例子中，需要使用多种生物测定方法评估化感物质对植物生长的影响。如，利用自然系统中的土壤和植物品种对得到统一可重复的数据结果是很重要的。一些研究人员已经利用准确敏感的的方法去评估天然/合成化感物质在农业化学系统中的作用模型，并得到了强大可靠的模型。一种典型的方法是利用多种分析条件来得到数据，如利用能够在一周内迅速生长并繁殖出更多苗的紫菜或浮萍等水生植物。利用浮萍的话只需要很低的浓度即可，另外一个好处是化感物质可以溶解在水中。此外，还有许多研究利用局部土壤和/或琼脂来评估化感物质对地上或地下部分的影响。但是这种验证方法需要更长的时间让植物达到评估条件。最后，一种用于评估植物残体降解影响的方法已经被用于评估植物残体的植物毒性。通过使用适当的检测方法进行筛选，已经鉴定并验证了一些不同的作用机制，如膜通透性、水分/营养吸收、呼吸作用、光合作用、蛋白质/核酸合成及生长调节等。</p><h2 id="膜通透性"><a href="#膜通透性" class="headerlink" title="膜通透性"></a>膜通透性</h2><p>包括化感物质在内的次级代谢产物在浓度足够时能够调节膜通透性和膜的功能。暴露在这些代谢物中时可能会导致细胞内容物的泄露，进而通过凋亡或死亡导致细胞死亡。这个过程最终导致植物组织死亡及特定功能的丧失。如，几种存在化感效应的物质能够调节质膜的通透性。这些物质能够通过扩散或辅助运输机制很轻易地通过细胞膜。一旦膜通透性发生改变，钾离子通道就会受到影响，并且经常导致对氯离子的渗透性降低。Yoon等研究发现，单萜$\alpha$-蒎烯能对质膜造成氧化应激，还会造成膜结构破坏，进而导致细胞死亡。Chain等也发现酚类物质浓度超过1mM后会增加风信子叶片组织的膜通透性。与未处理的对照相比，膜损伤通常在体外通过测量处理过的植物的相对电解质渗漏来评估。</p><h2 id="水分和养分吸收"><a href="#水分和养分吸收" class="headerlink" title="水分和养分吸收"></a>水分和养分吸收</h2><p>为了进一步探究释放到环境中的化感物质的作用模式，需要关注植物根系的相对健康状态与功能完整性。在根中，化感物质通常影响其参与跨膜离子吸收的$Na^+/K^+$泵的活性。如，Abenavoli等研究发现肉桂酸、阿魏酸及对香豆酸等物质不仅会影响玉米的营养吸收，还会影响其膜上$H^+-ATP$ 酶活性。Franche等也报道了酚类化合物肉桂酸和阿魏酸会影响植物对P和Fe的吸收，从而抑制目标植物的生长。种植完甜菜后再种植大豆或玉米等对锌敏感的作物，甜菜产生的植物毒素能增强这些作物对锌的吸收。</p><h1 id="呼吸作用"><a href="#呼吸作用" class="headerlink" title="呼吸作用"></a>呼吸作用</h1><p><code>Donor</code>植物释放的化感物质能够通过以下途径影响周围植物的呼吸作用进而影响其生长：线粒体中的电子转移、氧气吸收、CO$_2$产生及ATP产生过程中的氧化磷酸化。如，Abrahim等研究发现$\alpha$蒎烯和柠檬烯会通过多种机制影响多种植物的下胚轴线粒体呼吸活性，这些机制分别是线粒体解偶联、细胞色素途径中的电子流和氧吸收。Czarnota等发现高粱根系分泌的抑制剂高粱油酮不仅会通过D1结合蛋白来影响Ⅱ型光合系统中电子的转运，还会通过解耦所植物中的电子流来抑制线粒体电子运输。与成熟植物相比，化感物质对幼苗生长和萌发的影响更大。相关研究认为化感物质抑制通过频繁破坏线粒体进行呼吸的能力来影响幼苗生长和萌发。</p><h2 id="光合作用"><a href="#光合作用" class="headerlink" title="光合作用"></a>光合作用</h2><p>化感物质也能通过多种途径来影响植物的光合作用过程，如干扰PS Ⅰ和Ⅱ中的电子流、影响光合色素的合成及刺激光合色素的降解等。植物茎叶中光合色素含量降低会导致ATP的合成（主要发生在光合系统Ⅱ中）。对PS Ⅱ除草剂抑制剂具有抗性的在D1结合位点有多个改变的杂草同样也能抵抗高粱油酮对这个位点的影响。Poonpaiboonpipat等观察到从柠檬草中提取的精油能够显著降低稗草中叶绿素a和叶绿素b的浓度，从而减缓光合作用，最终影响植物生长。这些发现认为精油对叶绿素的合成具有直接影响。许多植物中都存在的化感物质柠檬醛不仅会通过呼吸作用、光合作用来影响幼苗的代谢，还会通过抑制生长、调节植物氧化状态来影响成熟植物。这个研究说明特定化感物质的作用模型是和植物组织、植物生长年龄相关的，而且还和植物吸收化感物质的位点（置）相关。</p><h2 id="蛋白质-核酸合成及生长调节"><a href="#蛋白质-核酸合成及生长调节" class="headerlink" title="蛋白质/核酸合成及生长调节"></a>蛋白质/核酸合成及生长调节</h2><p>化感物质能够靶向调控能够影响植物生长的关键机制来影响临近植物的生长。这些特定的机制包括DNA插入、抑制DNA聚合酶I、抑制蛋白质合成等。酚类化感物质也能干扰核酸的形成、胞内代谢及基因表达。Li等研究发现阿魏酸和肉桂酸对总蛋白质合成有不利影响。<code>Donor</code>植物产生的化感物质能够调节靶标植物防御基因的表达。如，水稻与稗草在一起时，水稻中参与酚类物质生物合成的酶的合成会上调。稗草存在时，幼苗期的水稻体内的化感物质momilolactone的含量会增加。这表明植物竞争或化感导致的胁迫会影响靶标植物合成防御物质的能力。通过提高化感物质的含量来衡量的话，化感响应可能在数小时至数天之内发生。Yang等的研究发现类似的酚类物质还可以氧化高等植物细胞伸长所必须的激素：氧化吲哚-3-乙酸。</p><h1 id="Donor植物体内化感物质的定位和运输"><a href="#Donor植物体内化感物质的定位和运输" class="headerlink" title="Donor植物体内化感物质的定位和运输"></a>Donor植物体内化感物质的定位和运输</h1><p>植物有特定的组织部位来完成次级代谢物的合成并向环境中进行释放，这些特定的部位包括茎部的气孔和腺毛；根部的根毛、边缘细胞、表皮及周皮。根表皮的单个细胞延伸物—根毛在根-土壤界面复杂的互作中有着重要作用。根毛能够分泌离子、氨基酸、生长调节剂及化感物质等低/高分子量的有机物（下图）。一些物质能够直接在根毛中进行合成然后直接分泌到环境中，如<em>Echium plantagineum</em> L.幼苗直接分泌的高梁素和紫草素类。最近有研究报道了强性入侵杂草<em>E. plantagineum</em> L. 活根的外周皮分泌的红色生物活性萘醌；随着时间的流逝，这种植物会在主根的外皮中积累这些抗菌和植物毒性的萘醌，并且还会以红色液滴的形式从幼苗的根毛中释放这些分子。共聚焦显微荧光法加速了类似的定位研究。</p><p>在茎部，化感物质能够通过叶片表面的腺毛进行直接释放，也会先转运到气孔然后再进行分泌。猫薄荷腺体分泌的21种挥发性化合物能够抑制种子的萌发及幼苗的生长（用悬浮在发芽幼苗附近但不与幼苗接触的叶子进行测定时的结果）。这表明挥发对于植物生长过程的扩散和抑制很重要。能够强烈抑制水芹生长的 2-（2-乙氧基乙氧基）-乙醇、异木香烯和卡丹烯这三种物质不仅能够在挥发物和甲醇提取液中检测到，还能在水提液中检测到。Eom等研究多年生地被植物后发现猫薄荷的叶面挥发物能够显著抑制水芹及常见的路边杂草的生长。猫薄荷产生的亲脂性或挥发性物质可以直接通过脂质双层扩散，而更多的极性化合物则需要专门的膜结合转运蛋白来协助转运过程。</p><p>大多数化感物质一旦在植物组织中被合成并积累，便会被分泌释放导到植物体外，从而有效避免自毒；或是存储在液泡、膜状小囊泡或储存器官中。初次之外，这些化感物质还会通过扩散或特定的转运蛋白转运到植物的其他组织中（下图）。</p><h2 id="化感物质的根系分泌"><a href="#化感物质的根系分泌" class="headerlink" title="化感物质的根系分泌"></a>化感物质的根系分泌</h2><p>化感物质从根系分泌最常见的方式是通过根系分泌物进行分泌释放，尤 尤其是通过根毛分泌。根—土壤界面或根际含有来自根毛分泌、植物残体降解及微生物相关的各种浓度的有机物，因此根际被认为是土壤中活性最强的部位。次级代谢产物的变化使得根际成为及其复杂的环境。硅胶微探针管和固相根区提取技术的发展为精确地描述土壤中活植物根系释放的非极性到中等极性的化感物质提供了机会。硅胶微针管插入到根表周围的土壤中，极少的极性分子附着在管子的硅胶上，后续的溶解提取能够将这些极性分子选择性地清楚掉。</p><p>根系分泌物的组成极为复杂，通常是含碳物质，如多糖、氨基酸、有机酸、酚类、生物碱、单宁酸、萜类、黄酮类、生长调节剂、维生素、营养物质，还有离子、水、电解质等无碳物质。化感物质一旦被释放，就会经受土壤中的物理、化学及生物学变化。因此，一个化感物质的生物活性在达到潜在靶标之前可能会被微生物的降解作用、氧化等影响，甚至还会通过与土壤颗粒不可逆结合而固定。</p><p>Wseton等描述了根系分泌的诸多机制，如扩散、囊泡运输及离子通道转运等。下面将进行简要描述。</p><h2 id="扩散"><a href="#扩散" class="headerlink" title="扩散"></a>扩散</h2><p>糖、氨基酸、羧酸及酚类等低分子量的有机物在活根表皮细胞和土壤之间通过浓度梯度进行释放。这种类型的分泌释放取决于根细胞的生理状态和有机物的极性。双层疏水的质膜通常通过扩散促进亲脂性化合物的运输。</p><h2 id="囊泡运输"><a href="#囊泡运输" class="headerlink" title="囊泡运输"></a>囊泡运输</h2><p>高分子量的有机化合物的转运通过根帽分泌细胞形成高尔基囊泡介导完成。这些细胞随后从根表面退化或脱落。在膜结合多核糖体水平合成的酸性磷酸酶和过氧化物酶等酶通过矢状分离进入内质网管腔。囊泡的这种胞吐作用依赖于细胞内和细胞外的钙水平。</p><h2 id="离子通道"><a href="#离子通道" class="headerlink" title="离子通道"></a>离子通道</h2><p>某些植物在经受胁迫时，柠檬酸、苹果酸及草酸等物质在高浓度时是不能通过简单的扩散完成分泌的。相关研究利用离子通道拮抗剂等方法发现表皮根细胞质膜上的离子通道参与了小麦和玉米体内苹果酸和柠檬酸的释放。</p><h1 id="影响植物化感物质释放的因素"><a href="#影响植物化感物质释放的因素" class="headerlink" title="影响植物化感物质释放的因素"></a>影响植物化感物质释放的因素</h1><p>植物释放到根际等环境中的化感物质的浓度和性质取决于植物本身和其他生物/非生物因素（下图）。植物因素包括植物品种（栽培种）、植物年龄、组织类型等。调节化感物质合成和释放的环境因素有病原菌的侵染；物理损伤；干旱、温度、土壤理化性质、水流、营养状态、灌溉、竞争及紫外辐射等非生物因素。气候变化也可能影响化感物质的合成，这也成为了近几年的研究焦点。</p><p>在分类学上相近的物种并不总是释放相似的化感物质或相似浓度的代谢物到环境中。极端环境下化感物质的释放和扩散与化感物质的化学性质相关，如分子量、极性和浓度等。化感物质通常会和相关的代谢物共同进行释放。需要注意的是，这些代谢物在植物中具有多种功能。一种化合物还可以保护其寄主免受几种不相关竞争者或取食者的干扰。如，酚类物质能够刺激或抑制真菌；特定的真菌利用酚氧化酶活性去代谢、减轻高等植物产生的酚类化合物的毒性。</p><p>评估相关代谢物的化感潜力的方法的选择和使用必须要小心注意。多种代谢物组成的混合物可能会严重影响代谢物的化感活性。活性可能与复杂的分子相互作用有关，包括协同作用、拮抗作用和在其他代谢物存在下的增强作用。为了评估化感物质的生物学活性，剂量/响应研究对评估化感物质的化感活性是必须的。如果研究时使用的浓度显著高于其在土壤中的浓度，那这个研究结果是很难解释该物质的化感活性的。此外，如果研究时使用的浓度高于其在环境中的真实浓度，那该化感物质在该浓度下的作用模式也可能不同。</p><h1 id="化感物质对根际、近邻植物及其他生物的影响"><a href="#化感物质对根际、近邻植物及其他生物的影响" class="headerlink" title="化感物质对根际、近邻植物及其他生物的影响"></a>化感物质对根际、近邻植物及其他生物的影响</h1><p>根际是植物根系周围很小的一块区域，生存着大量的微生物。 植物根系不仅会与临近植物根系发生竞争，还会和真/细菌等微生物发生竞争。很难通过大小对根际进行衡量，但是可以根据其物理化学性质进行划分。根际从根开始向外，化学物质的浓度往往呈现递降趋势。Newman等研究后发现典型的高等植物会将光合作用固定的10-40%的碳以有/无机物的形式释放到根际。根部产生的物质被统称为<code>rhizodeposits</code>，包括分泌物、粘液，脱落边缘细胞及根冠细胞。根系分泌物中的大多数物质都是低分子量的物质。</p><p>可控条件下对根际化感干扰的研究已经很成熟。但是，在田间条件下研究不同品种的植物竞争过程中发生的化感对生长的抑制的研究还比较困难。近些年关于根系理化性质的研究取得了新的进展。根际中的根系与微生物的互作时刻发生着。复杂的土壤环境使得相关研究变得较为苦难。越来越多的证据表明根系分泌物能够促进临近植物的交流，共生与病原生物通过生物和物理相互作用。根系分泌物能够调节根际微生物的共生关系、保护植物免受食草动物的取食、调节土壤的理化性质、影响其他植物的生长。最近的研究表明植物产生的次级代谢产物能够抑制入侵植物根际微生物介导的反硝化作用，从而限制入侵植物的生长。根系及其分泌物产生的静电和趋化响应能够促进植物—微生物之间有效的共生。</p><p>根系分泌物会通过吸引对植物生长有正向影响或能够直接影响植物代谢的微生物来刺激植物的生长。根系分泌物中的化感物质对临近物质的影响取决于化感物质在根系分泌物中的浓度、相对分泌速率、靶标植物的生长阶段及生物/非生物条件。需要注意的是，如果化感物质释放的量足够而且在环境中存在的时间 足够长的话，这些化感物质只会表现出负向干扰效应。Weidenhamer研究发现植物生长阶段、生物量、密度等因素是影响释放到根际的化感物质的可利用性的关键因素，因此在进行化感物质的相关实验时，需要考虑这些因素。受体植物密度更高时也就需要供体植物释放出更高浓度的化感物质。</p><p>化感物质从植物组织中释放后在达到靶标植物之前会受到诸多因素的影响，如淋溶、氧化、生物降解、临近植物吸收等。生物、化学等刺激下分泌释放的根系分泌物也可能对根际细菌具有抗菌活性。植物会通过可分离的边界细胞来抵抗根际真/细菌的侵染，位于根尖的这些细胞会释放出化感物质在内的大量具有生物活性的物质。如，新出出芽的植物会利用边界细胞产生的物质来协助植物进行防御，尤其是在田间根系还没有完全发育完善前。根部的边界细胞产生的胞外DNA和蛋白质会成为土传病害的”陷阱“，这些土传病原菌会受到化感物质的负向调控。燕麦产生的<code>avenicin</code>能抑制相关的病原微生物。Osbourn实验室研究发现燕麦产生的三萜物质对土壤微生物具有很好的防御效果，而且在植物应对非生物胁迫中也有着重要的作用。</p><h2 id="对化感物质的耐受性"><a href="#对化感物质的耐受性" class="headerlink" title="对化感物质的耐受性"></a>对化感物质的耐受性</h2><p>某些植物对特定的植物毒素很敏感，或者是进化出特有的机制来防御自身或其他植物产生的化感物质。能够产生并吸收化感物质的植物通常有着较强的抗毒能力，作用机制包括主动隔离膜结合结构、液泡或囊泡中的毒素、吸收后立即分泌化合物或通过一级和二级代谢改变其化学结构。如，<em>Polygonella myriophylla</em>  (Small) Horton能够以熊果苷的形式释放对苯二酚和苯醌，以此来避免自毒发生。超过百万年的进化使得某些植物具备了耐受或代谢植物毒素的能力。那些不经常遇到植物毒素的物种不太可能产生抗药性。最近的一个假说认为那些成功定殖繁育的入侵性杂草会通过释放特有的化感物质来负向影响本土植物的生长，这些本土植物对那些入侵性杂草产生的化感物质的代谢能力较弱甚至是没有。</p><h1 id="植物-土壤提取物中化感物质的代谢研究"><a href="#植物-土壤提取物中化感物质的代谢研究" class="headerlink" title="植物/土壤提取物中化感物质的代谢研究"></a>植物/土壤提取物中化感物质的代谢研究</h1><p>陆地生态学中研究得最好的领域是根际生物化学互作。尽管存在一定的挑战性，但是代谢检测和鉴定技术的发展极大地加速了对复杂系统/互作关系的研究，进而解释化感物质调节及其在生态系统功能中的相关科学问题。代谢profiling是研究复杂植物互作的有利工具。通过提取植物组织并评估代谢组，可以在特定时间点评估生物系统的功能状态。</p><p>Weston等利用一种新的代谢组学方法来研究感兴趣的靶标物质，如某个化感物质处理下的生物学系统响应。通过代谢profiling，能够为研究根际生物在化感物质处理后的生物化学状态。代谢组学还可以和转录组、蛋白组等组学相结合来研究感兴趣的靶标物质的生物合成通路。特定化感物质的代谢profiling可以用于研究入侵性杂草的潜在机制。Skoneczny等利用LS-MS技术，通过田间试验与室内试验研究发现，与<em>Echium vulgare</em> L.相比，入侵性更强的<em>E. plantagineum</em> L. 体内的吡咯嗪核生物碱和氮氧化物含量更高。</p><p>代谢组是一种高通量的方法，分析大量样本时能够在短时间内得到结果。这个领域发展出很多新的分析平台，如配备高分辨率质谱的气相和液相，靶向代谢组和非靶向代谢组等。最近的三重四极杆MS或敏感离子阱质谱增强了分析的精度和准度，能够对复合物中低量的上千种具有生物活性的物质进行注释。代谢profiling也被用于研究植物根际。有研究利用这种方法研究了三叶草向根际释放的多种黄酮类物质。也有研究利用UPLC QToF-MS来研究植物根系中15余种萘醌和紫草素对植物防御和化感的影响。使用LC/MS技术也成功地回收了一些更持久的化感物质，包括在受侵染的土壤中含量在ppm级别的乙酰基紫草素和紫草素。越来越多的研究利用代谢组学研究代谢物的动态变化和生物合成通路。这些方法的使用毫无疑问会增强我们对土壤环境中化感物质的研究和认识。</p><p>通过代谢组学分析后，尝试处理大量质谱数据并随后表征代谢物。不可能鉴定到复合物中所有的代谢成分。高通量的计算和分析工具能够在一定程度上有效解决这些问题，如数据转换、特征值检测、归一化及质量控制等。将存在的化合物的分子特征归一化（用于基线变化），并与可用的结构库对齐。天然产物比对最常用的库是METLIN库。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>研究复杂的植物—植物、植物—微生物互作的化感是植物科学研究中一个具有活力的领域。本领域相关的研究人员和论文数量已经呈现指数级增长了。土壤学家、化学家、生态学家、遗传学家及分子生物学家的紧密合作将会极大地促进对调控高等植物中化感物质的因素的研究，不仅如此，还会促进这些代谢物对入侵生态学、植物竞争、植物干扰及作物产量等研究的发展。代谢组学新的分析技术的使用及其与其他组学的结合将有利于鉴定新的化感物质及其生物合成通路，甚至是气候对化感物质的影响等。进一步理解化感物质在植物防御中的作用将有助于我们开发管理作物、限制入侵性杂草的扩张、保护本地植物，甚至是从这些化感物质中找到潜在的新型农药。</p><p>越来越多的研究开始担忧除草剂带来的影响，对天然产物中的农药的开发的呼吁声不断。包含化感物质在内的新型植物代谢物的鉴定为开发基于生物源的农药提供了材料来源（通过提供合成化合物的互补结构或辅助开发新的分子靶位）。</p><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools4You教程3：线性回归分析</title>
      <link href="/article/de26be17/"/>
      <url>/article/de26be17/</url>
      
        <content type="html"><![CDATA[<h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><p>线性回归分析的界面和<code>t</code>检验的界面很相似。首先在左侧选择对应的模块<code>回归分析</code>，便科研看到如下界面：</p><h1 id="数据上传与参数设置"><a href="#数据上传与参数设置" class="headerlink" title="数据上传与参数设置"></a>数据上传与参数设置</h1><p>数据格式如下：第一列是<code>x</code>，第二列是<code>y</code>，第三列是<code>group</code>，如果只是一组数据的话，在<code>group</code>列输入一个分组名称即可，多组的话对应输入多个分组名称即可。</p><p>数据上传完成后，需要选择绘制散点图形状（<a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1611026087&amp;ver=2837&amp;signature=yPe5ICH4hawX6qlTXFCg40LYw4uy11a3yOiwZuxuGQOvi8Hx2BcuLNXF3G50xlFxzqdxLTuk8iGF*2uS3ofQoggAfloxW-MwPCjX9coIvm7VNAY3v5kz*NG8afFfFgSN&amp;new=1">点击查看散点形状代码</a>）、大小、颜色及透明度，如果没有选择或输入相关的参数，那后续的绘图就会按照默认的参数进行。</p><p>第二列下面一个边框主要选择的参数是下载的结果的格式和图片格式，默认的是数据格式是<code>Excel</code>表，默认的图片格式是<code>PDF</code>格式，图片的长和宽都是默认5cm，科研根据自己的需要调节长宽。</p><p>右下角的框里面的参数主要和图片相关，如果<code>是否展示图例</code>选择否，则不会展示图例，如果选择的是默认参数<code>是</code>，则将图例展示在右边。X轴、Y轴及图片标题如果没有输入的话，则按照默认的<code>X</code>、<code>Y</code>和<code>Title</code>进行显示。</p><p><strong>设置完所有参数后点击左侧的<code>点击提交</code>按钮，便能得到对应的结果</strong>。</p><h1 id="结果解读"><a href="#结果解读" class="headerlink" title="结果解读"></a>结果解读</h1><p>下图展示的是回归分析的结果，第一列<code>group</code>表示的是分组，每个分组有两行结果，第一行是<strong>截距</strong>，第二行是<strong>斜率</strong>；第三列表示的是截距和斜率对应的值，其他几列不用看，直接看最后一列<code>Pvalue</code>即可。下方这个表点击左侧的<code>下载结果</code>即可进行下载。</p><p>下图展示的是绘图结果。不同的颜色表示的是不同分组，示例数据 有三组，以此展示出来的颜色有三种。有一部分表示的是置信区间，也就是对应的回归方程的置信区间，原始数据中落在阴影部分的点越多，表明结果越好；左上角的公式与每个分组对应，颜色和散点图的颜色是一致的，其实也就是将上图中的斜率、截距及<code>Pvalue</code>展示在散点图中。下方这个表点击左侧的<code>下载图片</code>即可进行下载。</p><p>注意：<strong>如果需要修改其他参数，请将参数修改好以后再次点击<code>点击提交</code>按钮，不用再次上传数据！！！</strong></p><h1 id="Tools4You教程合集"><a href="#Tools4You教程合集" class="headerlink" title="Tools4You教程合集"></a><a href="https://www.blog4xiang.world/categories/Tools4You/">Tools4You教程合集</a></h1><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools4You </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools4You </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools4You教程2:相关性分析</title>
      <link href="/article/b370ab0f/"/>
      <url>/article/b370ab0f/</url>
      
        <content type="html"><![CDATA[<p>相关性分析是一种常见的数据分析方法。本教程演示如何利用<code>Tools4You</code>来完成相关性分析。</p><span id="more"></span><h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><p>打开<code>Tools4You</code>界面，在<code>统计&amp;分析</code>下选择<code>相关分析</code>，然后就能看到如下的软件界面：</p><p>从左到右依次是树<code>数据上传参数设置区域</code>、<code>绘图区域</code>、<code>相关性结果表格</code>和<code>绘图参数区域</code>。</p><h1 id="数据上传-参数设置"><a href="#数据上传-参数设置" class="headerlink" title="数据上传+参数设置"></a>数据上传+参数设置</h1><p>支持的数据格式如下图所示。每个单独的指标为一列，每个指标之间的数据量需要相等，<strong>不需要有行名称</strong>。</p><p>相关性计算方法部分有三中方法，分别是<code>pearson</code>、<code>spearman</code>和<code>kendall</code>。选择不同的计算方法，后面的绘图结果和表格展示的结果也就不相同。</p><p>支持多种格式的图片进行下载，默认是<code>PDF</code>格式，相关性表格默认的是<code>Excel</code>表格。</p><p>图片的长和宽都默认是5cm，可自行调节。</p><p>设置完这些参数后可以点击<code>点击提交</code>按钮，先看看结果，如果没有报错，便可以对绘图参数进行设置。</p><h1 id="绘图参数设置"><a href="#绘图参数设置" class="headerlink" title="绘图参数设置"></a>绘图参数设置</h1><p>第一个参数<code>绘图结果展示</code>有三种选择：<strong>全部展示</strong>、<strong>上半部分</strong>和<strong>下半部分</strong>，所对应的图形如下图所示：</p><p>第二个参数<code>选择可视化方法</code>指的是用什么形状来展示相关性大小，有4种选择，每种选择对应的图形如下：</p><p>第三个参数<code>是否展示数值</code>指的是是否把相关性的数值展示在图中，默认是<code>是</code>，如果选择<code>否</code>，就不会在图形中将相关性展示出来。</p><p>第四个参数<code>是否展示显著性</code>指的是是否在图中展示出某两个指标相关性的显著性，如果选择<code>是</code>，且具有显著性的话就会在图中标注出对应的显著性，显著是<code>*</code>，极显著是<code>**</code>，再往上就是<code>***</code>。</p><p>第五个和第六个参数控制第三个、第四个参数的颜色和大小，如果不填，则按默认的进行绘图。</p><p>第七个参数<code>相关性底色</code>指的是相关性最低的那个值的颜色，如果没有，就默认是红色。</p><p>第八个参数<code>相关性顶色</code>指的是相关性最高的那个值的颜色，如果没有，就默认是蓝色。</p><p>设置完所有的参数，就可以再次点击<code>点击提交</code>按钮，就会根据选择或输入的参数进行计算和绘图。</p><h1 id="结果保存"><a href="#结果保存" class="headerlink" title="结果保存"></a>结果保存</h1><p>保存图片请点击最左下角的<code>相关性图</code>，保存结果请点击最左下角的<code>下载表格</code>。</p><h1 id="Tools4You教程合集"><a href="#Tools4You教程合集" class="headerlink" title="Tools4You教程合集"></a><a href="https://www.blog4xiang.world/categories/Tools4You/">Tools4You教程合集</a></h1><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools4You </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools4You </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言常用Tips</title>
      <link href="/article/15541358/"/>
      <url>/article/15541358/</url>
      
        <content type="html"><![CDATA[<p>经常要用到<code>R</code>，有些小技巧每次都要去查，比较麻烦，干脆记录一下。</p><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><ol><li><p>安装<code>Rtools</code>：</p><ul><li><p>安装 Rtools4.0，安装包：<a href="https://link.zhihu.com/?target=https%3A//cran.r-project.org/bin/windows/Rtools/">https://cran.r-project.org/bin/windows/Rtools/</a></p></li><li><p>配置环境</p><ul><li><p>在 RStudio 里面运行以下脚本：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">writeLines<span class="hljs-punctuation">(</span><span class="hljs-string">'PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"'</span><span class="hljs-punctuation">,</span> con <span class="hljs-operator">=</span> <span class="hljs-string">"~/.Renviron"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>重新启动 RStudio，然后运行以下代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">Sys.which<span class="hljs-punctuation">(</span><span class="hljs-string">"make"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>会得到结果：”C:\rtools40\usr\bin\make.exe”（也就是 make.exe 的路径）</p></li><li><p>尝试安装一个包</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"jsonlite"</span><span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"source"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ul></li></ul></li><li><p><code>RStudio</code>中文乱码：<br>菜单栏中的 <code>file-&gt;reopen with encoding-&gt;utf-8</code></p></li><li><p><code>Rshiny</code>上传文件大小限制：在<code>server.R</code>文件顶部加上下面这行代码：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">options<span class="hljs-punctuation">(</span>shiny.maxRequestSize<span class="hljs-operator">=</span><span class="hljs-number">1000</span><span class="hljs-operator">*</span><span class="hljs-number">1024</span><span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>更新所有R包：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#安装包</span><br>install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"rvcheck"</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#加载包</span><br>library<span class="hljs-punctuation">(</span>rvcheck<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#检查R是否有更新</span><br>rvcheck<span class="hljs-operator">::</span>check_r<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 更新所有R包</span><br>rvcheck<span class="hljs-operator">::</span>update_all<span class="hljs-punctuation">(</span>check_R <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span>which <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"CRAN"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"BioC"</span><span class="hljs-punctuation">,</span><span class="hljs-string">"github"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>更新R版本：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>installr<span class="hljs-punctuation">)</span><br>updateR<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>安装<code>{% label proj4 purple %}</code>解决方案：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install libproj-dev<br></code></pre></td></tr></tbody></table></figure></li></ol><h1 id="ggplot2"><a href="#ggplot2" class="headerlink" title="ggplot2"></a><code>ggplot2</code></h1><ol><li><p><code>ggplot2</code>限制Y轴范围：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">coord_cartesian<span class="hljs-punctuation">(</span>ylim <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">22</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p><code>ggplot2</code>输出中文：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">theme_bw<span class="hljs-punctuation">(</span>base_family <span class="hljs-operator">=</span> <span class="hljs-string">"STKaiti"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p><code>ggplot2</code>坐标轴文字角度：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">axis.text.x <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">45</span><span class="hljs-punctuation">,</span> hjust <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> vjust <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p><code>ggplot2</code>导出成<code>PPT</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">export<span class="hljs-operator">::</span>graph2ppt<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span><br>                  margins <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>top <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> right <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <br>                                  bottom <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> left<span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  center <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>                  file <span class="hljs-operator">=</span> <span class="hljs-string">'../results/PPT/稻瘟病发病情况（2020）.ppt'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p><code>ggplot2</code>渐变色填充：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">scale_fill_gradient2<span class="hljs-punctuation">(</span>low <span class="hljs-operator">=</span> <span class="hljs-string">"#000080"</span><span class="hljs-punctuation">,</span> mid <span class="hljs-operator">=</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span> high <span class="hljs-operator">=</span> <span class="hljs-string">"#B22222"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>图例名称：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">labs<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">'Cor'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>坐标轴刻度长度：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">theme<span class="hljs-punctuation">(</span>axis.ticks.length.y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mm'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>颠倒X轴和Y轴：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">coord_flip<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ol><h1 id="热图相关"><a href="#热图相关" class="headerlink" title="热图相关"></a>热图相关</h1><ol><li><p><code>ComplexHeatmap</code>注释的颜色设置：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs R">ann.right <span class="hljs-operator">=</span> HeatmapAnnotation<span class="hljs-punctuation">(</span>which <span class="hljs-operator">=</span> <span class="hljs-string">'row'</span><span class="hljs-punctuation">,</span><br>                              gap <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">1.5</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mm'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                              `Class I` <span class="hljs-operator">=</span> res.cor.3<span class="hljs-operator">$</span>`Class I`<span class="hljs-punctuation">,</span><br>                              annotation_name_side <span class="hljs-operator">=</span> <span class="hljs-string">'top'</span><span class="hljs-punctuation">,</span><br>                              annotation_name_rot <span class="hljs-operator">=</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span><br>                              annotation_name_offset <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mm'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                              col <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>`Class I` <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'Lipids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#DC143C'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Phenolic acids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#00FF00'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Alkaloids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#483D8B'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Terpenoids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#808000'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Organic acids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#FF8C00'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Others'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#B22222'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Nucleotides'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#000000'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Flavonoids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#006400'</span><span class="hljs-punctuation">,</span><br>                                                      <span class="hljs-string">'Amino acids'</span> <span class="hljs-operator">=</span> <span class="hljs-string">'#0000CD'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>调用<code>pheatmap</code>包中的函数解决<code>ComplexHeatmap::Heatmap</code>数据标准化问题：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">df.heatmap<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> as.matrix<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  pheatmap<span class="hljs-operator">:::</span>scale_rows<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ComplexHeatmap<span class="hljs-operator">::</span>Heatmap<span class="hljs-punctuation">(</span>name <span class="hljs-operator">=</span> <span class="hljs-string">'相 对\n表达量'</span><span class="hljs-punctuation">,</span><br>                          col <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">"navy"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"firebrick3"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                          show_row_names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>热图标注显著性：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">p.cor <span class="hljs-operator">=</span> quickcor<span class="hljs-punctuation">(</span>design<span class="hljs-punctuation">,</span> mes<span class="hljs-punctuation">,</span> cor.test <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_colour<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_mark<span class="hljs-punctuation">(</span>r <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span>sig.thres <span class="hljs-operator">=</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <br>            size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span><br>            nudge_x <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> nudge_y <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_gradient2<span class="hljs-punctuation">(</span>low <span class="hljs-operator">=</span> <span class="hljs-string">"navy"</span><span class="hljs-punctuation">,</span> <br>                       mid <span class="hljs-operator">=</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span> <br>                       high <span class="hljs-operator">=</span> <span class="hljs-string">"firebrick3"</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">'Cor'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li><li><p><code>ggcor</code>绘制两个矩阵的热图：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">quickcor<span class="hljs-punctuation">(</span>df.dems.1<span class="hljs-punctuation">,</span> df.degs.1.down<span class="hljs-punctuation">,</span> cor.test <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    geom_colour<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_gradient2<span class="hljs-punctuation">(</span>low <span class="hljs-operator">=</span> <span class="hljs-string">"navy"</span><span class="hljs-punctuation">,</span> <br>                         mid <span class="hljs-operator">=</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span> <br>                         high <span class="hljs-operator">=</span> <span class="hljs-string">"firebrick3"</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>    labs<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">'Cor'</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>    remove_x_axis<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme<span class="hljs-punctuation">(</span>axis.ticks.length.y <span class="hljs-operator">=</span> unit<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mm'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          axis.text.y <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ol><h1 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h1><ol><li><p><code>dcast()</code>函数用法：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">reshape2<span class="hljs-operator">::</span>dcast<span class="hljs-punctuation">(</span>res.cor<span class="hljs-punctuation">,</span> gene <span class="hljs-operator">~</span> meta<span class="hljs-punctuation">)</span> <span class="hljs-comment"># gene是行，meta是列</span><br><span class="hljs-comment"># acast()函数的话直接就生成rownames</span><br><span class="hljs-comment"># gene在第一列，meta在第二列，这样才能成功，我也不知道是为啥！</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>方差分析多重比较：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">tuk.15 <span class="hljs-operator">=</span> glht<span class="hljs-punctuation">(</span>fit.15<span class="hljs-punctuation">,</span> linfct <span class="hljs-operator">=</span> mcp<span class="hljs-punctuation">(</span>donor <span class="hljs-operator">=</span> <span class="hljs-string">'Tukey'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>sig.15 <span class="hljs-operator">=</span> cld<span class="hljs-punctuation">(</span>tuk.15<span class="hljs-punctuation">,</span> level <span class="hljs-operator">=</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">,</span> decreasing <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"mcletters"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"Letters"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span><br>        as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>带连接线的堆积柱状图</title>
      <link href="/article/3a1c1c6c/"/>
      <url>/article/3a1c1c6c/</url>
      
        <content type="html"><![CDATA[<p>堆积柱状图加上连接线能够更好地看出变化情况，参照“宏基因组”的<a href="https://mp.weixin.qq.com/s/FZWinr14RTs6YSUE_juaug">教程</a>改写了代码，封装成了一个函数。</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs R">bar_percent_segemnt <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>  <br>  library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>  library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>  <br>  colnames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> <span class="hljs-string">'cat'</span><br>  <br>  sum_group <span class="hljs-operator">=</span> apply<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>sum_group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>i<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>i<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">/</span> sum_group<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">}</span><br>  <br>  df.long <span class="hljs-operator">&lt;-</span> df <span class="hljs-operator">%&gt;%</span> reshape2<span class="hljs-operator">::</span>melt<span class="hljs-punctuation">(</span>id.vars <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>  colnames<span class="hljs-punctuation">(</span>df.long<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'cat'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'value'</span><span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-comment">## 组间连线数据：</span><br>  <span class="hljs-comment">## 假设第一列是Phylum</span><br>  link_dat <span class="hljs-operator">&lt;-</span> df <span class="hljs-operator">%&gt;%</span> <br>    arrange<span class="hljs-punctuation">(</span>by<span class="hljs-operator">=</span>desc<span class="hljs-punctuation">(</span>cat<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>    mutate_if<span class="hljs-punctuation">(</span><span class="hljs-built_in">is.numeric</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">cumsum</span><span class="hljs-punctuation">)</span> <br>  <br>  bar.width <span class="hljs-operator">&lt;-</span> 0.7<br>  link_dat <span class="hljs-operator">&lt;-</span> link_dat<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-operator">:</span><span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>link_dat<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>each<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ncol<span class="hljs-punctuation">(</span>link_dat<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>  <br>  link_dat <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>y<span class="hljs-operator">=</span>t<span class="hljs-punctuation">(</span>matrix<span class="hljs-punctuation">(</span>t<span class="hljs-punctuation">(</span>link_dat<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> nrow<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <br>  link_dat<span class="hljs-operator">$</span>x.1 <span class="hljs-operator">&lt;-</span> 1<span class="hljs-operator">:</span><span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span>bar.width<span class="hljs-operator">/</span><span class="hljs-number">2</span><br>  link_dat<span class="hljs-operator">$</span>x.2 <span class="hljs-operator">&lt;-</span> 1<span class="hljs-operator">:</span><span class="hljs-punctuation">(</span>ncol<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">-</span>bar.width<span class="hljs-operator">/</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>  <br>  p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>df.long<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> group<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> value<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> cat<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>    geom_bar<span class="hljs-punctuation">(</span>stat <span class="hljs-operator">=</span> <span class="hljs-string">"identity"</span><span class="hljs-punctuation">,</span> width<span class="hljs-operator">=</span>bar.width<span class="hljs-punctuation">,</span> <br>             col<span class="hljs-operator">=</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span>  <span class="hljs-operator">+</span> <br>    geom_segment<span class="hljs-punctuation">(</span>data<span class="hljs-operator">=</span>link_dat<span class="hljs-punctuation">,</span><br>                 aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>x.1<span class="hljs-punctuation">,</span> xend<span class="hljs-operator">=</span>x.2<span class="hljs-punctuation">,</span> y<span class="hljs-operator">=</span>y.1<span class="hljs-punctuation">,</span> yend<span class="hljs-operator">=</span>y.2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> inherit.aes <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>labels <span class="hljs-operator">=</span> scales<span class="hljs-operator">::</span>percent<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme<span class="hljs-punctuation">(</span>legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>          axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tools4You教程1：关于Tools4You + t检验</title>
      <link href="/article/c5bde688/"/>
      <url>/article/c5bde688/</url>
      
        <content type="html"><![CDATA[<h1 id="Tools4You是什么"><a href="#Tools4You是什么" class="headerlink" title="Tools4You是什么"></a><code>Tools4You</code>是什么</h1><p><code>Tools4You</code>是一个基于<code>R shiny</code>的网页工具，能够完成常见的统计分析及数据可视化。</p><span id="more"></span><h1 id="Tools4You的开发初衷"><a href="#Tools4You的开发初衷" class="headerlink" title="Tools4You的开发初衷"></a><code>Tools4You</code>的开发初衷</h1><p>作为<code>R</code>语言的重度使用者，自从习惯用<code>R</code>以后，我就很少用那些破解版的付费软件，如<code>SPSS</code>、<code>OriginLab</code>等。我们课题组相对比较大，总是有同学在找各种软件的破解包来进行统计分析或者是绘图。使用盗版（破解）软件有些不足之处，比如说破解的版本经常无法使用，或者说在投稿的时候因为破解版软件影响到文章等。相比之下，<code>R</code>作为一个完全开源免费的软件，在生命科学领域正在大放异彩，囊括了从统计分析到数据可视化的各种功能，不乏<code>CNS</code>级别的文章都使用<code>R</code>进行统计和绘图。但是要从头学习一个语言是比较困难的，虽然<code>R</code>的学习曲线相对来说不是很陡峭，但是对于我们农学口的研究生来说，要拿出大把的时间学习<code>R</code>也是比较困难的。很感谢我的导师，从我本科毕业开始就让我往生信方向走，从那时候开始学习<code>R</code>，现在也快两年半了，算不上精通<code>R</code>，我认为我只是熟悉<code>R</code>。在研三这个特殊的时期，我突然决定以<code>R shiny</code>为基础开发一个网页版工具，供实验室的同学使用，如果能够帮助到其他学校/研究所的同学，那我将倍感荣幸。</p><p><code>Tools4You</code>目前预计功能模块有30个左右，总代码量达到1.5~2.0W行。由于目前完全是我一个人在开发，临近毕业需要写毕业论文+做实验，所以进度较慢，预计一周能够更新1-2个功能模块；一个人开发，免不了代码不规范、代码冗余，暂时的目标是搭建好一个基本的可使用的框架，更多细节留在后面慢慢调试。</p><blockquote><p>目前<code>Tools4You</code>托管在阿里云服务器上，由于服务器内存只有2G，访问的时候加载时间大概是10秒左右，还请耐心等待。</p><p>如果遇到报错或者是有任何的建议意见，欢迎联系我们：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote><h1 id="访问Tools4You"><a href="#访问Tools4You" class="headerlink" title="访问Tools4You"></a>访问<code>Tools4You</code></h1><p>浏览器访问网址<a href="http://shinyapp.top:3838/Tools4You/，手机端暂不兼容。">http://shinyapp.top:3838/Tools4You/，手机端暂不兼容。</a></p><p>访问连接成功后便是如下界面：</p><p>主要分为3个大的功能模块：    </p><ul><li><code>常用小工具</code>：分组求均值，数据正态性检验，方差齐性检验等；</li><li><code>统计&amp;分析</code>：常见的统计分析方法；</li><li><code>数据可视化</code>：生命科学研究中常见的图形。</li></ul><p>点开每个大的功能模块下会有具体的功能模块。</p><h1 id="t检验"><a href="#t检验" class="headerlink" title="t检验"></a><code>t</code>检验</h1><p>使用流程：</p><ol><li><code>上传数据</code>：目前只支持<code>.csv</code>格式文件的上传，<strong>检验先下载示例数据，按照示例数据的格式整理数据，然后上传分析</strong>；</li><li><code>选择统计检验的置信度</code>，通常是0.99或者0.55，默认的是0.99；</li><li>下方的<code>单尾/双尾</code>和<code>方差相等</code>通常都是默认值；</li><li><code>配对数据</code>：如果数据是配对的，选择<code>是</code>，否则就是默认<code>否</code>；</li><li><code>误差棒数据</code>：选择柱状图误差棒是用<code>标准误</code>还是<code>标准差</code>，默认是<code>标准差</code>；</li><li><code>下载参数设置</code>：下载统计分析结果的文件格式，默认的是’Excel’文件，图片下载格式默认的是<code>PDF</code>，下面是图片的长度和宽度设置；</li><li><code>绘图参数设置</code>：坐标轴及图片名称等，<strong>需要注意的是，如果没有输入在那个分组上标注显著性，则默认在两个柱子上都标注显著性</strong>；</li><li>将所有参数设置完成后，点击<code>点击提交</code>即可；</li><li>如果需要调整某个参数，则在调整完参数后再次点击<code>点击提交</code>；</li><li>完成后下载对应的表格结果和图片即可。</li></ol><p>注：展示的图片长宽和下载的图片长款是没有关系的，如果需要更进一步的细节修改，可以使用<code>AI</code>等软件进行调整，也可以在后续我们更新相关模块后进行细调整。</p><h1 id="t检验结果解读"><a href="#t检验结果解读" class="headerlink" title="t检验结果解读"></a><code>t</code>检验结果解读</h1><p>这是<code>t检验</code>的结果，从左到右分别表示：分组名称、重复数量、和、均值、标准差、标准误、<em>P</em> 值和显著性。</p><p>这个是导出的绘图结果，基本能用。</p><h1 id="Tools4You教程合集"><a href="#Tools4You教程合集" class="headerlink" title="Tools4You教程合集"></a><a href="https://www.blog4xiang.world/categories/Tools4You/">Tools4You教程合集</a></h1><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools4You </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tools4You </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Rshiny到服务器的常见问题</title>
      <link href="/article/96076236/"/>
      <url>/article/96076236/</url>
      
        <content type="html"><![CDATA[<h1 id="下载安装Rshiny-server"><a href="#下载安装Rshiny-server" class="headerlink" title="下载安装Rshiny-server"></a>下载安装Rshiny-server</h1><p>参考链接：</p><ul><li><a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1610162005&amp;ver=2817&amp;signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&amp;new=1">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1610162005&amp;ver=2817&amp;signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&amp;new=1</a></li><li><a href="http://m.meiyingqishi.cn/view.php?aid=85">http://m.meiyingqishi.cn/view.php?aid=85</a></li></ul><!-- more  --><h2 id="安装-R"><a href="#安装-R" class="headerlink" title="安装 R"></a>安装 R</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo echo " debhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/" | sudo tee -a/etc/apt/sources.list<br></code></pre></td></tr></tbody></table></figure><ul><li><p>添加秘钥</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">gpg --keyserver keyserver.ubuntu.com --recv-key51716619E084DAB9<br>gpg -a --export 51716619E084DAB9 | sudo apt-key add –<br>sudo apt-key adv --keyserver keyserver.ubuntu.com--recv-keys E084DAB9<br></code></pre></td></tr></tbody></table></figure></li></ul><ul><li><p>更新</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br></code></pre></td></tr></tbody></table></figure></li></ul><ul><li><p>安装</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install r-base r-base-core r-base-dev<br></code></pre></td></tr></tbody></table></figure></li></ul><h2 id="安装-RStudio-Server"><a href="#安装-RStudio-Server" class="headerlink" title="安装 RStudio Server"></a>安装 RStudio Server</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install gdebi-core<br>wget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb<br>sudo gdebi rstudio-server-1.2.1335-amd64.deb<br></code></pre></td></tr></tbody></table></figure><ul><li><p>启动 / 停止 / 重启</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">rstudio-server start# 启动<br>rstudio-server stop #停止<br>rstudio-server restart #重启<br></code></pre></td></tr></tbody></table></figure></li></ul><ul><li><p>配置</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">ip 和端口：</span><br>vi/etc/rstudio/rserver.conf<br>www-port=8789 #设置监听端口<br>\#www-address=127.0.0.0# 允许访问的 IP 地址，默认 0.0.0.0<br></code></pre></td></tr></tbody></table></figure></li></ul><ul><li>会话配置：</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi/etc/rstudio/rsession.conf<br>session-timeout-minutes=30# 会话超时时间<br>r-cran-repos=https://my.favorite.cran.mirror#CRAN 资源库<br></code></pre></td></tr></tbody></table></figure><p>5）帐号、访问</p><p>访问地址：<br><a href="http://ip:8789">http://ip:8789</a><br>帐号密码：unbuntu 的帐号密码，注意：不能用 root 帐号<br>新建帐号：useradd -d/home/ 用户名 -m 用户名 #创建用户的同时指定目录 passwd 用户名 #设置密码</p><p>五、安装 Shiny Server<br>1）安装 shiny 包<br>sudosu - -c</p><p>“R -e”install.packages(‘shiny’,repos=’<a href="https://cran.rstudio.com/">https://cran.rstudio.com/</a>‘)””</p><p>2）查看最新版本<br><a href="https://www.rstudio.com/products/shiny/download-server/">https://www.rstudio.com/products/shiny/download-server/</a></p><p>3）安装 server<br>sudo apt-getinstall gdebi-core<br>wget <a href="https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb">https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb</a><br>sudo gdebishiny-server-1.5.9.923-amd64.deb</p><p>4）启动 / 停止 / 重启 / 状态<br>sudo systemctl start shiny-server #开启<br>sudo systemctl stop shiny-server #停止<br>sudo systemctl restart shiny-server #重启<br>sudo systemctl status shiny-server #查看状态</p><p>5）访问<br>Http://ip:3838</p><p>六、安装 shiny 包<br>sudo su - -c<br>“R -e”install.packages (‘ 包名 ‘, repos=’<a href="https://cran.rstudio.com/">https://cran.rstudio.com/</a>‘)””</p><h1 id="报错信息等"><a href="#报错信息等" class="headerlink" title="报错信息等"></a>报错信息等</h1><ul><li><p>如果部署成功后可以正常打开，但是很快显示与服务器断开连接，通常是以为依赖的包没有安装好。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">Disconnected from the server.<br>Reload<br></code></pre></td></tr></tbody></table></figure></li><li><p>如果显示下面的图片，通常是R包和R版本冲突，需要重新安装R包。</p></li></ul><h1 id="用户传入文件"><a href="#用户传入文件" class="headerlink" title="用户传入文件"></a>用户传入文件</h1><p>用户传入的文件结构是这样的：</p><ul><li><p>上传多个文件：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">fileInput<span class="hljs-punctuation">(</span><span class="hljs-string">"data_input"</span><span class="hljs-punctuation">,</span><br>                       label <span class="hljs-operator">=</span> h4<span class="hljs-punctuation">(</span><span class="hljs-string">"上传数据"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                       multiple <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>                       accept <span class="hljs-operator">=</span> <span class="hljs-string">".csv"</span><span class="hljs-punctuation">,</span><br>                       buttonLabel <span class="hljs-operator">=</span> <span class="hljs-string">"浏览..."</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu更新R</title>
      <link href="/article/4fa06897/"/>
      <url>/article/4fa06897/</url>
      
        <content type="html"><![CDATA[<p>123参考链接：<a href="https://blog.csdn.net/weixin_41929524/article/details/108470515">https://blog.csdn.net/weixin_41929524/article/details/108470515</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo su<br>echo "deb http://www.stats.bris.ac.uk/R/bin/linux/ubuntu xenial-cran40/" &gt;&gt; /etc/apt/sources.list<br>apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9<br>apt-get update<br>apt-get upgrade<br><br>sudo apt-getinstall r-base<br>sudo apt-get install r-base-dev<br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NMDS分析</title>
      <link href="/article/4e41844f/"/>
      <url>/article/4e41844f/</url>
      
        <content type="html"><![CDATA[<p>NMDS（nonmetric multidimensional scaling，非度量多维尺度分析）是排序（ordination）分析一种。排序分析的目的在于寻找数据的连续性（也就是通过连续的排序轴来展示数据的主要趋势）。</p><span id="more"></span><p>为什么在微生物（微生态）研究中常用排序分析呢？因为自然生态群落往往是沿着环境梯度呈连续性分布的。</p><h1 id="为什么要用排序分析"><a href="#为什么要用排序分析" class="headerlink" title="为什么要用排序分析"></a>为什么要用排序分析</h1><p>假设现在有这样一组数据：100个样本，100个变量（如基因），那得到的数据就是一个100行×100列的表，也就是100×100=10000维的数据，我（们）能理解（想象）的维度只能到3维，超过3维的数据就很难理解（想象）了。那怎么办呢？既然维度太高我们无法理解，那就把维度降低，降到一维、二维或者三维就能理解了。所以，我理解的排序分析的本质就是降维（个人理解）。</p><h1 id="排序分析分类"><a href="#排序分析分类" class="headerlink" title="排序分析分类"></a>排序分析分类</h1><p>那都有哪些排序分析方法呢？</p><p>按照是否”约束“可以分成两类：</p><ul><li>约束（典范）排序：RDA（冗余分析）、CCA（典范对应分析）、LDA（线性判别分析）等；</li><li>非约束排序：PCA（主成分分析）、CA对应分析、PCoA（主坐标分析）、NMDS（非度量多维尺度分析）等。</li></ul><p>需要注意的是：非约束排序只是一种描述性的方法，不存在统计检验评估排序结果显著性的问题；而约束排序则需要对排序的结果进行显著性检验。</p><h1 id="NMDS的原理"><a href="#NMDS的原理" class="headerlink" title="NMDS的原理"></a>NMDS的原理</h1><p>数学原理和算法很复杂，我们作为应用中，只需要要知道怎么用就可以了（下面的例子都是我自己的理解，不妥指出还请批评指正）。</p><p>举个很简单的例子，假设现在路上有4个人在跑步，分别是①②③④。现在我们并不关心他们之间的具体的距离是多少，我们在乎的只是对某个人来说，其他三个人和他的相对距离。现在假设我是图中的①，那么②就是我的”第一远“，思就是我的”第二远“，③就是我的”第三远“。</p><p>在NMDS中，排序轴就是一条条的跑道，根据排序轴来比较样本的差异。</p><h1 id="NMDS在R中的实现"><a href="#NMDS在R中的实现" class="headerlink" title="NMDS在R中的实现"></a>NMDS在R中的实现</h1><p>好像是有好多软件能完成NMDS分析，但是我还是觉得R语言是最好的。PS：就在我些这个文章的时候，同学告诉我说经典的进化树可视化软件（软件）<code>iTOL</code>开始收费了，所以是，开源不收费还是好啊。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>ade4<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>plyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># download data</span><br>load<span class="hljs-punctuation">(</span><span class="hljs-string">'Doubs.RData'</span><span class="hljs-punctuation">)</span><br>spe <span class="hljs-operator">=</span> spe<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-comment"># 提出无物种数据的样本</span><br><br><span class="hljs-comment"># run NMDS</span><br>spe.nmds <span class="hljs-operator">=</span> vegan<span class="hljs-operator">::</span>metaMDS<span class="hljs-punctuation">(</span>spe<span class="hljs-punctuation">,</span> distance <span class="hljs-operator">=</span> <span class="hljs-string">'bray'</span><span class="hljs-punctuation">)</span><br>spe.nmds<br><br><span class="hljs-comment"># 经验法则：应力 &lt; 0.05 可很好地表示尺寸减小，</span><br><span class="hljs-comment"># &lt;0.1 非常好，&lt;0.2 还不错，而应力 &lt; 0.3 有待提高。</span><br>spe.nmds<span class="hljs-operator">$</span>stress<br><br>plot<span class="hljs-punctuation">(</span>spe.nmds<span class="hljs-punctuation">,</span>type <span class="hljs-operator">=</span> <span class="hljs-string">'t'</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 评估拟合度</span><br>png<span class="hljs-punctuation">(</span>filename <span class="hljs-operator">=</span> <span class="hljs-string">'20201109NMDS(非度量多维尺度分析)/figures/2.png'</span><span class="hljs-punctuation">,</span><br>    width <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">,</span> heigh <span class="hljs-operator">=</span> <span class="hljs-number">400</span><span class="hljs-punctuation">)</span><br>stressplot<span class="hljs-punctuation">(</span>spe.nmds<span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>这个图看$R^2$即可，$R^2$越大越好。</p><h1 id="NMDS可视化"><a href="#NMDS可视化" class="headerlink" title="NMDS可视化"></a>NMDS可视化</h1><p>NMDS的可视化本质是散点图，通常有三种可视化方法：</p><ol><li>置信椭圆</li><li>多边形</li><li>放射线</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 利用ggplot2进行可视化</span><br>nmds.res <span class="hljs-operator">=</span> spe.nmds<span class="hljs-punctuation">[[</span><span class="hljs-string">"points"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'a'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'b'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'c'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 椭圆</span><br>p1 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>nmds.res<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>MDS1<span class="hljs-punctuation">,</span> MDS2<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  stat_ellipse<span class="hljs-punctuation">(</span>level <span class="hljs-operator">=</span> <span class="hljs-number">0.68</span><span class="hljs-punctuation">,</span> show.legend <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_continuous<span class="hljs-punctuation">(</span>breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><span class="hljs-string">'text'</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1.4</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">'Rseq = 0.995 \n Stress = 0.0738'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">'NMDS1'</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'NMDS2'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p1<br>ggsave<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'20201109NMDS(非度量多维尺度分析)/figures/3.png'</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 多边形</span><br>group_border <span class="hljs-operator">=</span> ddply<span class="hljs-punctuation">(</span>nmds.res<span class="hljs-punctuation">,</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span> <br>                     <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span> df<span class="hljs-punctuation">[</span>chull<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> df<span class="hljs-punctuation">[[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>nmds.res<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>MDS1<span class="hljs-punctuation">,</span> MDS2<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> group<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_polygon<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> group_border<span class="hljs-punctuation">,</span> alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.4</span><span class="hljs-punctuation">,</span> show.legend <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_continuous<span class="hljs-punctuation">(</span>breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><span class="hljs-string">'text'</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1.4</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">'Rseq = 0.995 \n Stress = 0.0738'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">'NMDS1'</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'NMDS2'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p2<br>ggsave<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'20201109NMDS(非度量多维尺度分析)/figures/4.png'</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 放射线</span><br><br><span class="hljs-comment"># mean</span><br>cent <span class="hljs-operator">=</span> aggregate<span class="hljs-punctuation">(</span>cbind<span class="hljs-punctuation">(</span>MDS1<span class="hljs-punctuation">,</span>MDS2<span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> group<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> nmds.res<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>cent<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'cent1'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'cent2'</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># merge data</span><br>nmds.res <span class="hljs-operator">=</span> merge<span class="hljs-punctuation">(</span>nmds.res<span class="hljs-punctuation">,</span> cent<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span> all.x <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>nmds.res<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>MDS1<span class="hljs-punctuation">,</span> MDS2<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> cent<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>cent1<span class="hljs-punctuation">,</span> cent2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> show.legend <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_segment<span class="hljs-punctuation">(</span>mapping <span class="hljs-operator">=</span> aes<span class="hljs-punctuation">(</span>xend <span class="hljs-operator">=</span> cent1<span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> cent2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> show.legend <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_continuous<span class="hljs-punctuation">(</span>breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><span class="hljs-string">'text'</span><span class="hljs-punctuation">,</span> x <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1.4</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1.2</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">'Rseq = 0.995 \n Stress = 0.0738'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">'NMDS1'</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'NMDS2'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p3<br>ggsave<span class="hljs-punctuation">(</span>p3<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'20201109NMDS(非度量多维尺度分析)/figures/5.png'</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R包stat4xiang</title>
      <link href="/article/29e3cb7/"/>
      <url>/article/29e3cb7/</url>
      
        <content type="html"><![CDATA[<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>The R package <a href="https://github.com/lixiang117423/stat4xiang"><strong>stat4xiang</strong></a> is for statistical analysis including <em>Student t-test</em>, <em>Anova</em>, <em>Wilcox test</em> and <em>Kruskal test</em>.</p><span id="more"></span><h1 id="Download-and-Install"><a href="#Download-and-Install" class="headerlink" title="Download and Install"></a>Download and Install</h1><p>To download the development version of the package, type the following at the R command line:</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs r">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"devtools"</span><span class="hljs-punctuation">)</span><br>devtools<span class="hljs-operator">::</span>install_github<span class="hljs-punctuation">(</span><span class="hljs-string">"lixiang117423/stat4xiang"</span><span class="hljs-punctuation">,</span> build_vignettes <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="Parameter"><a href="#Parameter" class="headerlink" title="Parameter"></a>Parameter</h1><blockquote><p><code>df</code>: input data.frame 输入数据框</p><p><code>value</code>: Colnames of value 值所在的列名</p><p><code>group</code>: Colnames of group 分组信息所在列名</p><p><code>method</code>: Method of statistics 统计方法：<code>t检验</code>、<code>方差分析</code>、<code>Wilcox检验</code>及<code>Kruskal检验</code></p><p><code>level</code>: Statistical inspection level 显著水平，如<code>0.99</code></p></blockquote><h1 id="Basic-example"><a href="#Basic-example" class="headerlink" title="Basic example"></a>Basic example</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>stat4xiang<span class="hljs-punctuation">)</span><br><br>res <span class="hljs-operator">&lt;-</span> stat4xiang<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">,</span><span class="hljs-string">'Sepal.Length'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'Species'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'anova'</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.99</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="Reporting-bugs-and-other-issues"><a href="#Reporting-bugs-and-other-issues" class="headerlink" title="Reporting bugs and other issues"></a>Reporting bugs and other issues</h1><p>If you encounter a clear bug, please file a minimal reproducible example on github.</p><h1 id="Contact-us"><a href="#Contact-us" class="headerlink" title="Contact us"></a>Contact us</h1><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的统计函数:stat_xiang</title>
      <link href="/article/4b6eae4d/"/>
      <url>/article/4b6eae4d/</url>
      
        <content type="html"><![CDATA[<p>常用的基础统计函数每次都要对统计分析的结果进行提取，稍微有些麻烦，索性写个函数，后期封装成R包，方便自己直接调用。</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>multcomp<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>pgirmess<span class="hljs-punctuation">)</span><br><br>stat_xiang <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">,</span> group<span class="hljs-punctuation">,</span> method<span class="hljs-punctuation">,</span> level<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>  df_sub <span class="hljs-operator">&lt;-</span> df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">,</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>  colnames<span class="hljs-punctuation">(</span>df_sub<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'value'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-comment"># mean, sd, se and number</span><br>  number <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>table<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  colnames<span class="hljs-punctuation">(</span>number<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'number'</span><span class="hljs-punctuation">)</span><br>  df_sub <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>df_sub<span class="hljs-punctuation">,</span> number<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br>  mean_value <span class="hljs-operator">&lt;-</span> aggregate<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br>  colnames<span class="hljs-punctuation">(</span>mean_value<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mean'</span><span class="hljs-punctuation">)</span><br>  sd_value <span class="hljs-operator">&lt;-</span> aggregate<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> sd<span class="hljs-punctuation">)</span><br>  colnames<span class="hljs-punctuation">(</span>sd_value<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'standard_deviation'</span><span class="hljs-punctuation">)</span><br>  temp_df <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>mean_value<span class="hljs-punctuation">,</span> sd_value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br>  df_sub <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>df_sub<span class="hljs-punctuation">,</span> temp_df<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br>  df_sub<span class="hljs-operator">$</span>standard_error <span class="hljs-operator">&lt;-</span> df_sub<span class="hljs-operator">$</span>standard_deviation <span class="hljs-operator">/</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>number<span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-comment"># statistical analysis</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">==</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">'t.test'</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      fit <span class="hljs-operator">&lt;-</span> t.test<span class="hljs-punctuation">(</span>value <span class="hljs-operator">~</span> group<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_sub<span class="hljs-punctuation">)</span><br>      pvalue <span class="hljs-operator">&lt;-</span> fit<span class="hljs-punctuation">[[</span><span class="hljs-string">"p.value"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>      <span class="hljs-built_in">signif</span> <span class="hljs-operator">&lt;-</span> ifelse<span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.001</span><span class="hljs-punctuation">,</span><span class="hljs-string">'***'</span><span class="hljs-punctuation">,</span><br>                       ifelse<span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&gt;</span> <span class="hljs-number">0.001</span> <span class="hljs-operator">&amp;</span> pvalue <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'**'</span><span class="hljs-punctuation">,</span><br>                              ifelse<span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&gt;</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'NS'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'*'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">}</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">'wilcox'</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      fit <span class="hljs-operator">&lt;-</span> wilcox.test<span class="hljs-punctuation">(</span>value <span class="hljs-operator">~</span> group<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_sub<span class="hljs-punctuation">)</span><br>      pvalue <span class="hljs-operator">&lt;-</span> fit<span class="hljs-punctuation">[[</span><span class="hljs-string">"p.value"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>      <span class="hljs-built_in">signif</span> <span class="hljs-operator">&lt;-</span> ifelse<span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.001</span><span class="hljs-punctuation">,</span><span class="hljs-string">'***'</span><span class="hljs-punctuation">,</span><br>                       ifelse<span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&gt;</span> <span class="hljs-number">0.001</span> <span class="hljs-operator">&amp;</span> pvalue <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'**'</span><span class="hljs-punctuation">,</span><br>                              ifelse<span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&gt;</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'NS'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'*'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">}</span><br>    <span class="hljs-comment"># dataframe for statistical </span><br>    sig <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                      method <span class="hljs-operator">=</span> method<span class="hljs-punctuation">,</span><br>                      level <span class="hljs-operator">=</span> level<span class="hljs-punctuation">,</span><br>                      pvalue <span class="hljs-operator">=</span> pvalue<span class="hljs-punctuation">,</span><br>                      <span class="hljs-built_in">signif</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">,</span><span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <br>  <span class="hljs-punctuation">}</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">'anova'</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      fit <span class="hljs-operator">&lt;-</span> aov<span class="hljs-punctuation">(</span>value <span class="hljs-operator">~</span> group<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_sub<span class="hljs-punctuation">)</span><br>      pvalue <span class="hljs-operator">&lt;-</span> summary<span class="hljs-punctuation">(</span>fit<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"Pr(&gt;F)"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>      tuk <span class="hljs-operator">&lt;-</span> glht<span class="hljs-punctuation">(</span>fit<span class="hljs-punctuation">,</span> linfct <span class="hljs-operator">=</span> mcp<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> <span class="hljs-string">'Tukey'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-built_in">signif</span> <span class="hljs-operator">&lt;-</span> cld<span class="hljs-punctuation">(</span>tuk<span class="hljs-punctuation">,</span> level <span class="hljs-operator">=</span> level<span class="hljs-punctuation">,</span> ddecreasing <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"mcletters"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"Letters"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>      <span class="hljs-built_in">signif</span> <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">)</span><br>      colnames<span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-string">'signif'</span><br>      <span class="hljs-built_in">signif</span><span class="hljs-operator">$</span>group <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-built_in">signif</span><span class="hljs-operator">$</span>method <span class="hljs-operator">&lt;-</span> method<br>      <span class="hljs-built_in">signif</span><span class="hljs-operator">$</span>pvalue <span class="hljs-operator">&lt;-</span> pvalue<br>      <span class="hljs-built_in">signif</span><span class="hljs-operator">$</span>level <span class="hljs-operator">&lt;-</span> level<br>      <br>      sig <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">signif</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'method'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'level'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'pvalue'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'signif'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>      <br>    <span class="hljs-punctuation">}</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">'kruskal'</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      fit <span class="hljs-operator">&lt;-</span> kruskal.test<span class="hljs-punctuation">(</span>value <span class="hljs-operator">~</span> group<span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_sub<span class="hljs-punctuation">)</span><br>      pvalue <span class="hljs-operator">&lt;-</span> fit<span class="hljs-punctuation">[[</span><span class="hljs-string">"p.value"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>      <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>pvalue <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>        fit_2 <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>kruskalmc<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">,</span> probs <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">-</span>level<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-built_in">signif</span> <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>fit_2<span class="hljs-punctuation">)</span><br>        <span class="hljs-built_in">signif</span><span class="hljs-operator">$</span>statistic <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">)</span><br>        colnames<span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-string">'group_comp'</span><br>        <span class="hljs-built_in">signif</span><span class="hljs-operator">$</span>group <span class="hljs-operator">&lt;-</span> unique<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><br>        <br>        sig <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                          method <span class="hljs-operator">=</span> method<span class="hljs-punctuation">,</span><br>                          level <span class="hljs-operator">=</span> level<span class="hljs-punctuation">,</span><br>                          pvalue <span class="hljs-operator">=</span> pvalue<span class="hljs-punctuation">)</span><br>        sig <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span><span class="hljs-built_in">signif</span><span class="hljs-punctuation">,</span> sig<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">}</span><span class="hljs-keyword">else</span><span class="hljs-punctuation">{</span><br>        sig <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>df_sub<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                          method <span class="hljs-operator">=</span> method<span class="hljs-punctuation">,</span><br>                          level <span class="hljs-operator">=</span> level<span class="hljs-punctuation">,</span><br>                          pvalue <span class="hljs-operator">=</span> pvalue<span class="hljs-punctuation">,</span><br>                          <span class="hljs-built_in">signif</span> <span class="hljs-operator">=</span> <span class="hljs-string">'NS'</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">}</span><br>    <span class="hljs-punctuation">}</span><br>  <span class="hljs-punctuation">}</span><br>  results <span class="hljs-operator">&lt;-</span> merge<span class="hljs-punctuation">(</span>df_sub<span class="hljs-punctuation">,</span>sig<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span> all.x <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>results<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尿囊素保护番茄免受UV-C胁迫</title>
      <link href="/article/a2ac10e2/"/>
      <url>/article/a2ac10e2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>编者注：2018年<strong><em>New Phytologist</em></strong> 上发表了一篇文章<strong>Kin recognition in rice (Oryza sativa) lines</strong>$^{[1]}$，在水稻根系分泌物中有一种关键的化合物：尿囊素（allantoin, AT）——可以作为水稻品种间亲缘识别的关键物质。</p><p>这篇文章主要讲的是AT在作物非生物胁迫上的效应。</p></blockquote><span id="more"></span><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>AT能不能有效减缓UVC胁迫还没有报道。本研究报道了在番茄上UVC诱导的非生物胁迫的物理化学机制，包括AT导向的减缓策略。</p><ul><li>UVC胁迫抑制番茄植株生长和光敏色素的合成；</li><li>热图和PCA结果表明UVC胁迫下的毒性影响主要是由氧化损伤和渗透压稳态紊乱引起的；</li><li>UVC胁迫前用AT处理能够有效减缓胁迫危害；</li><li>AT能够有效减缓氧化损伤；</li><li>和胁迫前用AT处理相比，胁迫后用AT处理的情况下，保护作用减弱；</li><li>UVC胁迫前用AT处理是一种有效减缓UVC胁迫的有效方法，不止是在番茄上，别的作物上也可能是这样。</li></ul><h1 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h1><p>首先是个预实验，找到最合适的UVC胁迫剂量，然后按照如下实验设计进行实验：</p><p>然后测定鲜重、干重、光敏色素含量等。</p><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><h2 id="AT浓度选择与UVC胁迫剂量"><a href="#AT浓度选择与UVC胁迫剂量" class="headerlink" title="AT浓度选择与UVC胁迫剂量"></a>AT浓度选择与UVC胁迫剂量</h2><p>上图A表示的是UVC胁迫对番茄植株生长的影响，可以看到UVC胁迫对番茄植株的影响呈现浓度效应。比较有趣的是UVC剂量达到0.6W m$^{-2}$及以上时，番茄植株内的AT及尿囊酸盐的含量会急剧减少，但是在0.3W m$^{-2}$时不会影响番茄植株体内的AT及尿囊酸盐含量。<strong>因此，选择0、0.6及1.2W m$^{-2}$作为后续的UVC胁迫剂量。</strong></p><p>在选择合适的UVC胁迫剂量后，再对AT最适浓度进行筛选。通过浓度梯度实验后选择10$^{-4}$M作为最适浓度（上图B）。</p><h2 id="AT改善植株生长、水分关系和光敏色素含量"><a href="#AT改善植株生长、水分关系和光敏色素含量" class="headerlink" title="AT改善植株生长、水分关系和光敏色素含量"></a>AT改善植株生长、水分关系和光敏色素含量</h2><p>上图是9种不同的处理下相对生长速率（RGR）、茎秆鲜重（SFW）、根部鲜重（RFW）、茎秆干重（SDW）、根部干重（RDW）及几种叶绿素的含量情况。从上图可以看出AT处理后，几种指标和对照相比都在一定程度上增加了。因此，AT能够有效改善植株生长及光敏色素含量等。</p><h2 id="AT减缓UVC胁迫对含水量等的影响"><a href="#AT减缓UVC胁迫对含水量等的影响" class="headerlink" title="AT减缓UVC胁迫对含水量等的影响"></a>AT减缓UVC胁迫对含水量等的影响</h2><p>整体上看，UVC胁迫对相对含水量、外表皮蜡质、蛋白含量、自由氨基酸含量、可溶性蛋白含量及可溶性碳水化合物的影响呈现出浓度效应。不管是UVC胁迫前还是胁迫后用AT进行处理，都能有效减缓UVC胁迫对番茄植株的影响；但是UVC胁迫前用AT处理的效果比胁迫后用AT处理的效果好。</p><h2 id="AT减弱UVC胁迫的氧化损伤"><a href="#AT减弱UVC胁迫的氧化损伤" class="headerlink" title="AT减弱UVC胁迫的氧化损伤"></a>AT减弱UVC胁迫的氧化损伤</h2><p>上图表示的是9种不同的处理下氧化相关的物质的变化情况。从整体上可以看出，UVC胁迫后番茄植株体内与氧化相关的各类物质的含量都显著升高了，在“NO AT”这类情况下尤其明显。加了AT之后这些氧化相关物质的含量都有一定程度下降，但是挟迫迁加AT比胁迫后加AT效果更明显。<strong>这表明AT能够有效减弱UVC胁迫对番茄植株的氧化损伤</strong>。</p><h2 id="AT促进非酶抗氧化剂状态及其此生代谢"><a href="#AT促进非酶抗氧化剂状态及其此生代谢" class="headerlink" title="AT促进非酶抗氧化剂状态及其此生代谢"></a>AT促进非酶抗氧化剂状态及其此生代谢</h2><p>上图从左到右从上到下分别表示的是谷胱甘肽含量、抗坏血酸含量、花青素、黄酮、$\alpha$维生素E及酚类化合物的含量。除$\alpha$维生素E外，其他几种物质在UVC胁迫后含量都会发生变化。胁迫前加AT处理的情况下这些物质含量都相应地升高了。</p><h2 id="AT调节内源性代谢物、信号分子、GST及PPO活性"><a href="#AT调节内源性代谢物、信号分子、GST及PPO活性" class="headerlink" title="AT调节内源性代谢物、信号分子、GST及PPO活性"></a>AT调节内源性代谢物、信号分子、GST及PPO活性</h2><h2 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h2><p>最后将上述的这些物质进行热图绘制和PCA分析。比较有意思的是，UVC胁迫前加AT和UVC胁迫后加AT分别与未加AT比较的情况下，这些物质都能聚成3个cluster。而且，在热图中聚成cluster的物质在PCA图中也基本聚集在一起。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h1 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h1><p>Title：Mechanistic Insight of Allantoin in Protecting Tomato Plants Against Ultraviolet C Stress</p><p>译名：尿囊素在保护番茄植物免受紫外线C胁迫中的作用机理</p><p>期刊：<strong><em>Planta</em></strong></p><p>IF：3.4</p><p>链接： <a href="https://www.mdpi.com/2223-7747/10/1/11">https://www.mdpi.com/2223-7747/10/1/11</a></p><p>通讯作者：Arafat Abdel Hamed Abdel Latef</p><p>主要单位：South Valley University</p><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>[1] Yang X F, Li L L, Xu Y, et al. Kin recognition in rice (Oryza sativa) lines[J]. <strong><em>New Phytologist</em></strong>, 2018, 220(2): 567-578.</p></blockquote><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量OPLS-DA函数</title>
      <link href="/article/6ec23e3c/"/>
      <url>/article/6ec23e3c/</url>
      
        <content type="html"><![CDATA[<p>每次分组过多都要写<code>for</code>循环，还容易出错，直接写个函数搞定！</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs R">multi_opls <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> group<span class="hljs-punctuation">,</span> method<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>  <span class="hljs-comment"># load  packages</span><br>  library<span class="hljs-punctuation">(</span>ropls<span class="hljs-punctuation">)</span><br>  colnames<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'sample'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'group_name'</span><span class="hljs-punctuation">)</span><br>  group<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  group_num <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  group_unique <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>unique<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-punctuation">(</span>group_num <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>j <span class="hljs-keyword">in</span> <span class="hljs-punctuation">(</span>i<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span>group_num<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>      <br>      dir.create<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span>group_unique<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">' VS '</span><span class="hljs-punctuation">,</span>group_unique<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      selected_group <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>group_unique<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>group_unique<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>      group_sub <span class="hljs-operator">&lt;-</span> dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> group_name <span class="hljs-operator">%in%</span> selected_group<span class="hljs-punctuation">)</span><br>      df_sub <span class="hljs-operator">&lt;-</span> df<span class="hljs-punctuation">[</span>group_sub<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>      <br>      <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">'opls'</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>        opls_res <span class="hljs-operator">&lt;-</span> opls<span class="hljs-punctuation">(</span>df_sub<span class="hljs-punctuation">,</span>group_sub<span class="hljs-operator">$</span>group_name<span class="hljs-punctuation">)</span><br>        <br>        sample_scores <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>opls_res<span class="hljs-operator">@</span>scoreMN<span class="hljs-punctuation">)</span><br>        loading_scores <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>opls_res<span class="hljs-operator">@</span>loadingMN<span class="hljs-punctuation">)</span><br>        modelDF <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>opls_res<span class="hljs-operator">@</span>modelDF<span class="hljs-punctuation">)</span><br>        vip_value <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>opls_res<span class="hljs-operator">@</span>vipVn<span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">}</span><br>      <span class="hljs-keyword">else</span> <span class="hljs-punctuation">{</span><br>        oplsda_res <span class="hljs-operator">&lt;-</span> opls<span class="hljs-punctuation">(</span>df_sub<span class="hljs-punctuation">,</span><br>                           group_sub<span class="hljs-operator">$</span>group_name<span class="hljs-punctuation">,</span><br>                           predI <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>                           orthoI <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br>        <br>        sample_scores <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>oplsda_res<span class="hljs-operator">@</span>scoreMN<span class="hljs-punctuation">)</span><br>        loading_scores <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>oplsda_res<span class="hljs-operator">@</span>loadingMN<span class="hljs-punctuation">)</span><br>        modelDF <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>oplsda_res<span class="hljs-operator">@</span>modelDF<span class="hljs-punctuation">)</span><br>        vip_value <span class="hljs-operator">&lt;-</span> as.data.frame<span class="hljs-punctuation">(</span>oplsda_res<span class="hljs-operator">@</span>vipVn<span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">}</span><br>      write.csv<span class="hljs-punctuation">(</span>sample_scores<span class="hljs-punctuation">,</span> <br>                file <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span>group_unique<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">' VS '</span><span class="hljs-punctuation">,</span>group_unique<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'/'</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'sample_scores.csv'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      write.csv<span class="hljs-punctuation">(</span>loading_scores<span class="hljs-punctuation">,</span> <br>                file <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span>group_unique<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">' VS '</span><span class="hljs-punctuation">,</span>group_unique<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'/'</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'loading_scores.csv'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      write.csv<span class="hljs-punctuation">(</span>modelDF<span class="hljs-punctuation">,</span> <br>                file <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span>group_unique<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">' VS '</span><span class="hljs-punctuation">,</span>group_unique<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'/'</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'modelDF.csv'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      write.csv<span class="hljs-punctuation">(</span>vip_value<span class="hljs-punctuation">,</span> <br>                file <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span>group_unique<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">' VS '</span><span class="hljs-punctuation">,</span>group_unique<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'/'</span><span class="hljs-punctuation">,</span><br>                             <span class="hljs-string">'vip_value.csv'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2坡度图</title>
      <link href="/article/b7629aa1/"/>
      <url>/article/b7629aa1/</url>
      
        <content type="html"><![CDATA[<p>之前见过坡度图，但是不知道怎么画。今天稍微看了一下就搞定了！</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br><br>df <span class="hljs-operator">=</span> data.frame<span class="hljs-punctuation">(</span>cat <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> each <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                value <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-built_in">c</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><br>                d <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><br>                e<span class="hljs-operator">=</span> <span class="hljs-built_in">letters</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>cat<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_segment<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> xend <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <br>                   y <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> d<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">16</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_x_discrete<span class="hljs-punctuation">(</span>limit <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTI中的信号网络</title>
      <link href="/article/39370b8f/"/>
      <url>/article/39370b8f/</url>
      
        <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>在自然环境下，植物时时刻刻都在面对病原物的入侵。然而，由于植物具有有效的免疫系统，植物病害很少发生。病原物被两层不同的识别系统识别：PTI和ETI。PTI和ETI都具有能够阻止病原入侵的诱导防御系统。本综述主要讨论PTI中的信号通路网络，主要聚焦于丝裂原活化蛋白激酶。</p><span id="more"></span><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>植物能够将光变成糖类，因此植物成为了包括微生物（尤其是以植物地上地下部分为寄主的微生物）在内的大量生物的碳水源和能量来源。植物病原物根据其侵染方式和取食策略，可以分成活体营养型（如<em>Hyaloperonospora arabidopsidis</em>）、半活体营养型（如<em>Pseudomonas syringae</em>）和死体营养型（如<em>Botrytis cinerea</em>）。植物病原物能够降低植物的生物量、降低植物的育性、影响作物的产量和质量，甚至在是杀死植物，从而引起人们的关注。</p><p>植物通常能够抵御大多数病原物的侵染，这种现象叫非寄主抗性（non-host resistance）。表皮和细胞壁是植物抵御病原菌侵染的第一层物理屏障。除开第一层物理屏障外，植物持续分泌的抗菌物质也能有效的抵御病原菌的侵染。陆生植物最外层都有由角质和蜡质组成的表皮。表皮在植物生理上有着重要的作用，如较少水分散失、抗UV辐射等。表皮同样能够有效抵御植物病原菌侵染和昆虫的取食（真菌能够通过机械压力来穿透表皮或者是通过分泌能够水解角质聚酯的角质来透过表皮）。此外，包裹在植物细胞周围的外骨骼——植物细胞壁，由纤维素微纤维、果胶、半纤维素、蛋白质及木质素等组成。细胞壁在完整性维护机制的控制下给细胞提供了结构支撑的同时能够有效应对（非）生物胁迫。某些真菌能够穿透表皮和细胞壁，但是细菌不能直接地穿透植物表皮。细菌需要借助一些自然孔口才能进入植物体内，这些自然孔口包括the hydathodes, the nectarthodes, the lenticels，最重要的孔口是气孔。此外，昆虫取食、食草动物、风、暴雨等造成的植物伤口也是病原物侵染植物的有效途径。除了利用物理屏障抵御病原菌的侵染外，植物还能持续稳定地合成并分泌抗菌物质来抑制病原菌的生长。一些代谢物和蛋白都具有这种抗菌活性，如十字花科植物的此生代谢产物芥子油甘及其衍生物。那些成功穿过植物物理屏障的病原物在进入植物细胞后需要卖你对的是植物的免疫系统。植物的免疫系统包括了两部分：病原物识别和病原物防御。</p><p>植物免疫系统的第一层是PAMPs（病原相关分子模式）/PRRs（病原/模式识别受体）。PAMPs通常也来自非致病菌，因此它们被优先命名成MAMPs（微生物相关分子模式）。植物识别到MAMPs后会诱导PAMP激发的免疫，或者是诱导病原激活的免疫或者是模式激发的免疫，也就是PTI。植物同样能够感知到损伤相关的分子模式（DAMPs），这些DAMPs是植物在遭受病原菌侵染后降解的产物。DAMPs激发的免疫和响应和PTI响应类似。植物也可以通过感知病原物效应子（病原物合成后释放到植物的胞外空间或胞内来增强病原物的适应性）来感知病原的入侵。 不能正常感知到这些效应子的植物对该病原菌表现为感病，从而导致由效应子激发的易感性；而能够通过R蛋白来识别这些效应子的植物则会激发ETI。植物和病原在共进化的过程中形成了<strong>Z</strong>型模型。</p><p>在成功识别病原物后，植物会启动一系列的防御机制，如关闭气孔阻止细菌的进入、控制营养物质从细胞质到质外体的转运来限制细菌的增殖、合成并分泌camalexin等植保素、合成分泌PR1等防御相关的蛋白或多肽、在被侵染部位合成与过敏反应相关的活性氧（ROS）。</p><p>病原识别机制中涉及到了复杂的信号网络。本篇综述重点关注的是PTI过程中的信号网络及丝裂原活化蛋白激酶（MAMPs）参与途径。主要以拟南芥-细菌互作系统进行描述。</p><h1 id="MAMP-DAMP识别"><a href="#MAMP-DAMP识别" class="headerlink" title="MAMP/DAMP识别"></a>MAMP/DAMP识别</h1><p>植物能够识别对微生物很重要的MAMPs。MAMPs包括蛋白（如细菌鞭毛蛋白和延伸因子Tu）、碳水化合物(如真菌的几丁质)及脂多糖等。DAMPs是病原菌侵染过程中植物的降解产物（如角质素单体）、细胞壁受损产物或者AtPep1等内源肽。PRRs通常是质膜结合类受体激酶（RLKs）或者是有着胞外结构域的类受体蛋白。已经鉴定到了一些PRR/DAMP对，如拟南芥中能够识别细菌鞭毛（铜绿假单胞菌的22个氨基酸长的抗原决定簇flg22为代表）的N端的flagellin-sensitive 2（FLS2）（图2）、拟南芥中的EF-Tu受体（EFR）。在DAMPs中，RLK蛋白PERR1是DAMP AtPep1的受体。</p><p>此外，一些蛋白与PRRs组成了免疫受体复合物，而且这些蛋白对正常的MAMP识别和信号转导是至关重要的。MAMP感知不仅能够快速（几秒）诱导质膜上免疫受体复合物的形成，还能诱导不同的自磷酸化和反磷酸化。和BRI1相关的受体激酶1（BAK1）能够和FLS2互作，BAK1缺失会导致早期依赖flg22响应的下降。BAK1实际上可以与不同的PRR相互作用，并与FLS2互作结合flg22，因此可以被看成共受体。除了BAK1外，受体样胞质激酶葡萄孢菌诱导的激酶1（BIK1）和相关的PBL激酶能够与FLS2及EFR互作，在MAMP结合后迅速被磷酸化并从PRR复合物中释放。</p><h1 id="Ca-2-爆发"><a href="#Ca-2-爆发" class="headerlink" title="Ca$^{2+}$爆发"></a>Ca$^{2+}$爆发</h1><p>植物在感知到MAMP/DAMP后，最早的物理响应之一就是胞外Ca$^{2+}$的内流，发生的时间在0.5-2min，4-6min达到峰值。BIK1以及其他BIK1家族蛋白正向调控Ca$^{2+}$的内流。Ca$^{2+}$的内流导致H$^{+}$内流、K$^{+}$和NO$_3^{+}$外流，从而使得胞外空间碱化（1min左右）及质膜去极化（1-3min）。正常情况下，细胞质中Ca$^{2+}$的浓度受质膜和膜内Ca$^{2+}$通道调节；但是涉及到MAMP/DAMP识别和信号转导相关的分子物质还尚不清楚。值得注意的是，在MAMP响应中，拟南芥脂膜上的能与FLS2及ACA8互作的拟南芥自抑制Ca$^{2+}$ATP激酶8和其同系物ACA10参与了Ca$^{2+}$水平调节。MAMP识别过程中除了Ca$^{2+}$会快速流入细胞质外，Nomura等发现在叶绿体基质中自由Ca$^{2+}$水平会持续更长时间。研究人员还观察到使用丝氨酸/苏氨酸蛋白激酶和MAPK激酶抑制剂可减少细胞质和间质Ca$^{2+}$的浓度变化，说明MAPK在Ca$^{2+}$信号的产生过程中可能有着相关的级联反应。考虑到MAMP/DAMP识别中质外体快算碱化，很可能质膜上H$^{+}$-ATP酶的抑制也影响着阴离子外流和质子内流。</p><h1 id="ROS爆发"><a href="#ROS爆发" class="headerlink" title="ROS爆发"></a>ROS爆发</h1><p>由MAMP时，2-3min后胞外空间通常会发生活性氧爆发并在10-14min达到峰值。在拟南芥中，质膜上的NADPH氧化酶RBOHD和MAMP诱导的ROS爆发相关。有趣的是，<strong><em>P. syringae</em></strong>在拟南芥中引起的ROS爆发水平受到FLS PRR的调控，而且要在20min左右才能检测到ROS，在35-40min才达到峰值。波动的幅度也比flg22诱导的低。这些数据表明，鞭毛蛋白是在感染后80分钟内检测到的主要MAMP/DAMP，鞭毛蛋白的数量和/或可及性相对较弱。在MAMP感知中，RBOHD可以和FLS2及EFR关联，完全激活NADPH氧化酶需要Ca$^{2+}$诱导的钙依赖性蛋白激酶（CDPK）和BIK1对不同残基进行磷酸化。Ca$^{2+}$本身也能调控RBOHD。RBOHD能在质外体中产生不透膜的超氧化物O$_2^-$，该物质能够通过超氧化物歧化酶催化后变成H$_2$O$_2$。H$_2$O$_2$具有膜透性，从而能够进入到细胞质和不同的器官中。H$_2$O$_2$等活性氧也会影响胞内Ca$^{2+}$水平。MAMP/DAMP诱导的活性氧爆发对胞内Ca$^{2+}$水平有正反馈调节作用，从而导致二次峰值（flg22诱导后5min左右）。有趣的是，依赖于CDPK的RBOHD的磷酸化在ROS的刺激下也会发生。依赖MPK3/MPK6的MAMP/DAMP诱导的ROS爆发有着矛盾的结果。如，Zhang等发现细菌效应子HopAI1（能够使MPK3和MPK6失活）的诱导表达完全抑制了flg22诱导的ROS爆发，这个结果表明MPK3/MPK6作用在ROS爆发的上游。但是这种方法不能区分每个MAPK的特定贡献。后面又发现HopAI1还能抑制MPK4的活性。因为一些病原菌的效应子能够以不同的信号元件为靶标（如HopF2能够以多个MKKs和BAK1为靶标），因此HopAI1也有可能作用于位于ROS爆发上游的由flg22激发的信号的其他成分。Ranf等利用<em>mpk</em>的单突变体研究发现用flg22处理两个不同的<em>mpk3</em>突变体表现出更长时间的ROS爆发，<em>mpk6</em>突变体和野生型类似，所以MPK3负向调节由flg22诱导的ROS的爆发。Galletti等研究发现flg22诱导的ROS爆发在两个AP2C1（一个能够使MPK3和MPK6失活的MAPK磷酸化酶）过表达株系中没有受到影响，这个结果表明ROS爆发对于MPK3/MPK6来说是独立发生的。此外，他们也发现MPK4以AP2C1为靶标。最佳，Xu等发现<em>mpk3</em>与<em>mpk6</em>的双重突变体中ROS爆发与野生型类似，这表明ROS爆发与MPK3/MPK6无关。同样，由MAMP/DAMP诱导的依赖于MPK4的ROS爆发也有矛盾的结果。Zhang等发现flg22诱导的ROS爆发与MEKK1-MKK1/MKK2-MPK4级联反应无关。然而，与野生型相比，MPK4株系中ROS爆发水平降低了，突变体<em>mpk4</em>中ROS爆发水平上调了，这表明MPK4负向调节ROS爆发。目前比较清楚的是，MAMP诱导的ROS爆发是由RBOHD引起的；其他RBOH蛋白参与了不同的信号通路。然而，NADPH氧化酶并不是植物细胞中唯一的ROS源；越来越清楚的是，植物中的ROS源（叶绿体、过氧化物酶、线粒体及质膜）有着复杂的时空变化，而且ROS其他信号之间也是及其复杂的。</p><h1 id="其他小信号分子：RNO和脂类"><a href="#其他小信号分子：RNO和脂类" class="headerlink" title="其他小信号分子：RNO和脂类"></a>其他小信号分子：RNO和脂类</h1><p>除了Ca$^{2+}$和ROS外，MAMP信号中还有其他的小分子。被统称为活性氮的NO及其衍生物参与了信号转导的不同步骤，如通过半胱氨酸亚硝化调控<em>PR</em> genes 1（调控防御基因的表达）的非表达体的聚合状态，或者是通过半胱氨酸亚硝化抑制RBOHD。这些结果表明寄主在响应病原菌的过程中ROS和NO之间有着紧密的关系。NO在生成过程中有个滞后期，在此期间，隐球菌素和壳聚糖能够在几分钟内诱导NO的生成。壳聚糖能够持续诱导NO的生成（直到60min左右）。病原菌诱导的Ca$^{2+}$内流或激活钙调蛋白和/或类钙调蛋白，从而激活下游的NO合成。但是NO的生物合成还有很多不清楚的地方。</p><p>磷脂酸（PA）和神经酰类等脂类也被认为是植物响应病原物过程中的信号分子。在flg22或真菌的诱导子上，番茄细胞中PA会被快速诱导合成并在数分钟内达到峰值（对flg22来说是8min左右）；与此同时，PA的前体物质PIP2和PIP的含量在2min开始降低，DGPP（PA的磷酸化产物）的含量开始升高。MAMP诱导的NO的合成部分需要PA参与才能完成，这个过程中涉及到两个通路：磷脂酶D（PLD）和磷脂酶C/二酰基甘油激酶（PLC/DGK）。PA可以与免疫信号转导的已知成分（如CDPKs、PDK1、RBOHD/F等）相互作用并调节其活性。外源PA能在几秒内诱导烟草细胞发生ROS爆发并在6min左右达到峰值；PA还能诱导已悬浮培养2min的大豆细胞中的MAPK。PA能从多个层面上调控信号转导，如ROS、MAPK活性、SA，还可能是ET。</p><h1 id="异三聚体G蛋白"><a href="#异三聚体G蛋白" class="headerlink" title="异三聚体G蛋白"></a>异三聚体G蛋白</h1><p>拟南芥有一个典型的G$\alpha$亚基（GPA1）、一个G$\beta$亚基（AGB1）和三个G$\gamma$基（AGG1、AGG2和AGG3）。和动物相反的是，植物的G蛋白独立于G蛋白偶联的受体，并且似乎是自我激活的。虽然GPA1没有参与到对<em>P. syringae</em> 的基础抗性中，对细胞死亡或MAMP诱导的MPK3/MPK6活性也没有明显的影响，但是AGB1、AGG1和AGG2却有着重要的作用。如，MAMP或<em>P. syringae</em> 诱导的ROS合成在<em>agb1</em> 突变体中就降低了。虽然<em>agg1</em> 和<em>agg2</em> 单突变体没有表现出明显的表型，但是它们的双重突变体对<em>P. syringae</em> 更敏感，并且成对的flg22/slf18及几丁质诱导的抗性也降低了。<em>agb1</em> 或<em>agg1 agg2</em> 中MPK3和MPK6的活性没有受到影响，但是MPK4的活性略微下降了一些。总之，这些结果表明除开GAP1外，AGB1、AGG1、AGG2都是MAMP诱导的免疫响应所需要的。这些G蛋白也部分参与了MAMP诱导的ROS爆发，但是MAMP诱导的MPK3、MPK4及MPK6的活性与G蛋白无关。AGB1-AGG1／２二连体是如何被RLKs激活的还尚不清楚。AGB1-AGG1／２二连体调控下游反应的精确通路也还不清楚。</p><h1 id="14-3-3蛋白"><a href="#14-3-3蛋白" class="headerlink" title="14-3-3蛋白"></a>14-3-3蛋白</h1><p>14-3-3蛋白也参与了免疫信号转导。拟南芥中的14-3-3基因家族有15个成员，14-3-3蛋白通常与磷酸化蛋白互作来完善这些磷酸化蛋白的活性。在不同的植物中都有关于14-3-3蛋白但与抗病反应的研究报道，而且这些蛋白在这些抗病反应中通常具有正向调节作用。14-3-3蛋白能与免疫信号转导的已知成分互作并调节它们的活性，如玉米质膜上的H$^+$-ATP酶、NtRBOHD 、番茄中的MAPKKKalpha和MKK2、拟南芥因子CPK-1、PA、PDK1及一些参与ET生物合成的1-氨基环丙烷-1-羧酸合成酶。这些不同研究表明14-3-3既参与了PTI也参与了ETI。最近的一个研究阐述了14-3-3蛋白在PTI中的作用。利用5 -氨基咪唑- 4 -甲酰胺- 1 - b - D -呋喃核苷对14-3-3蛋白进行化学破胞后再与互作蛋白进行互作后发现再拟南芥和本氏烟中由MAMP诱导的ROS爆发明显降低了。<em>P. syringae</em> 的效应子HopM1会使14-3-3蛋白GRF/AtMIN10失稳。Lozano-Duran等的研究结果表明AICAR能够恢复不具有效应子HopM1的<em>P. syringae</em> 的毒力，这个结果进一步确定了14-3-3蛋白在免疫响应中的作用。也由研究发现本氏烟的同源物GFR8/AtMIN10在番茄敲除系中由MAMP诱导的ROS爆发降低了。目前为止的研究表明14-3-3蛋白能与磷酸化蛋白互作，参与到植物免疫信号转导的不同步骤，但是更多的具体的机制还有待研究。</p><h1 id="蛋白激酶"><a href="#蛋白激酶" class="headerlink" title="蛋白激酶"></a>蛋白激酶</h1><p>由蛋白质激酶介导并由蛋白质磷酸酶清除的蛋白质磷酸化是真核生物中最常见的翻译后修饰，并且在信号转导中具有重要作用。蛋白质磷酸化会影响蛋白稳定性、酶活性及亚细胞定位等。在MAMP识别中发生着大量的磷酸化事件，磷酸化蛋白质组能够精确定位到磷酸化的位点。MAMP处理后磷酸化位点丰度降低表明磷酸化酶在PTI信号中有着及其重要的功能。</p><p>除开之前提到的在MAMP识别中除了免疫受体复合物会马上自磷酸化和反磷酸化外，其他的蛋白激酶也快速被激活。这些蛋白激酶大多数属于CDPK、MAPK及AGC蛋白激酶家族，它们也是调控转录因子、代谢酶、质膜蛋白及细胞骨架蛋白等大量蛋白靶标的关键。</p><h2 id="CDPKs"><a href="#CDPKs" class="headerlink" title="CDPKs"></a>CDPKs</h2><p>拟南芥基因组编辑34个CDPKs。CDPKs有个N端丝氨酸/苏氨酸蛋白激酶结构域和一个C端类CaM结构域（EF-hand结合位点，大多数都要依赖于Ca$^{2+}$）。CPK4、CPK5、CPK6及CPK11等一些CDPKs会被flg22暂时（5-30min）地激活。<em>P. syringae</em> 侵染后，CPK4/5/6/11参与了由flg22介导的ROS爆发、flg22介导的转录重编程和flg22诱导的抗性。一些CDPK底物被鉴定到，如CPK5的第五RBOHD、番茄中CDPK2的底物ACS2。除了Ca$^{2+}$，CDPKs也会被其他参与信号转导的分子（如脂类、14-3-3蛋白）调控。</p><h2 id="AGC及其相关激酶"><a href="#AGC及其相关激酶" class="headerlink" title="AGC及其相关激酶"></a>AGC及其相关激酶</h2><p>AGC蛋白激酶参与了植物免疫响应并调控病原菌诱导的MAPK级联反应。在拟南芥中，AGC激酶家族有39个成员。通过H$_2$O$_2$、纤维素酶处理、抵御<em>Hyaloperonospora arabidopsidis</em> 和 <em>P. syringae</em> 侵染完全激活MPK3和MPK6需要AGC2-1（也叫OXI1）的参与才能完成。MAMPs和DAMPs（flg22、纤维素酶、H$_2$O$_2$）能够快速诱导根叶部OXI1的基因表达和酶活性。有趣的是，在RBOHD突变体或用NADPH氧化酶抑制剂二苯基碘处理后，拟南芥中OXI1的转录诱导下降。MAMPs处理或半活体营养型病原菌侵染后的ROS爆发与RBOHD相关，这表明在植物-病原互作中RBOHD介导的XOI1诱导会导致ROS合成。OXI1调控一类蛋白激酶，如Pti1-1到Pti1-4。<em>in vivo</em> 发现受胁迫诱导的Pti1-4能与MPK6互作。对其他的AGC激酶来说，OXI1活性受到AGC激酶PDK1的调控，PA能以依赖PDK1的方式激活OXI1。然而，Pti1激酶活性在flg22和H$_2$O$_2$条件下不依赖于PDK1，但是依赖于OXI1，这个结果表明在受到ROS或MAMP刺激时其他蛋白激酶作用于OXI1的上游。</p><h2 id="MAPKs"><a href="#MAPKs" class="headerlink" title="MAPKs"></a>MAPKs</h2><p>拟南芥基因组编码20个MAPKs、10个MAPKKs和60个MAPKKKs。MAPKKKs、MAPKKs和MAPKs都含有能够将胞外刺激转化成适当响应的功能信号模块。这些MAPKs在植物-病原互作研究中被广泛关注。flg22和其他MAMP处理后，MAPK3/4/6/11在1-2min内被激活并在10-15分钟达到峰值，之后迅速下降。MKK4/MKK5组成的信号模块通过磷酸化和MPK4上游的MEKK1-MKK1/MKK2激活MPK3/MPK6（图4）。最开始的研究认为MEKK1是MKK4/MKK5-MPK3/MPK6上游的MAPKKK。然而，在flg22处理后<em>mekk1</em> 突变体后，MPK3和MPK6被激活，这个结果表明MEKK1并不是这个模块上有的MAPKKK，或者至少一个其他MAPKKK扮演多余的角色。有意思的是，参与气孔发育及花序结构的MAPK模块由YODA下游的MKK4 / MKK5- MPK3 / MPK6组成，即MAPKKK。然而，由MAMP激发的MPK3和MPK6的活性在<em>yoda</em> 突变体中是正常的。免疫反应中MKK4/MKK5-MPK3/MPK6上游的MAPKKK(s)的鉴定还不清楚。MKK4/MKK5-MPK3/MPK6模块正向调节防御响应。<em>mekk1</em>突变体的MEKK1激酶受损后半矮化程度降低，这表明MEKK1在其酶活性之外还有个独立的结构性功能，但是仍然不能完全排除此MEKK1激酶受损版本具有残留活性。酵母双杂分析发现MEKK1直接与MPK4互作。然而，没有更多的数据来支撑这个结果。首先，MEKK1-MKK1/MKK2-MPK4模块被认为会负向调控防御响应（级联模块突变体有着本构防御响应，如H$_2$O$_2$积累、<em>PR</em>基因的本构表达等，并且对病原菌的抗性增强了）。然而，最近的研究表明在<em>mkk1 mkk2</em>中这个MAPK模块实际上能够正向调节防御响应，而且被<em>R</em> 蛋白抑制子保护着。</p><p>PRR免疫复合物和下游的MAPKKKs之间的分子连接仍旧不清楚。一些数据表明flg22诱导的MPK3/4/6的活性部分依赖于Ca$^{2+}$爆发，但是在<em>cpk5 cpk 6 cpk11</em> 三重突变体中，flg22诱导的MPK3/4/6的活性并没有变化。在<em>rbohd</em> 突变体中flg22诱导的MPK3/4/6的活性和野生型类似，这说明ROS爆发不需要MAPK激活就能完成。此外，在<em>bik1 pnl1</em> 双重突变体中flg22诱导后MPK3/4/6的活性正常，这说明它们的激活不需要BIK1和PBL1就能完成；但是细菌AvrAC效应子表达的情况下flg22诱导的MAPK活性降低了，这表明额外的BIK1相关蛋白可能激活MAPK。此外，利用四重突变体研究发现flg22诱导的MPK3/MPK6激活与野生型是有差异的，这表明MAPK激活与SA、JA及ET信号通路是无关的。</p><h1 id="MAPK-底物"><a href="#MAPK-底物" class="headerlink" title="MAPK 底物"></a>MAPK 底物</h1><p>当前在生物学中重要挑战是将给定的蛋白激酶与其真实的底物进行高度关联，尤其是在信号转导研究中。在PTI中，MAPK底物是被研究得最多的。已经利用多种方法鉴定到了多个底物。</p><h2 id="转录因子"><a href="#转录因子" class="headerlink" title="转录因子"></a>转录因子</h2><p>免疫MAPK底物半数都是转录因子，说明在免疫响应中免疫MAPKs在转录重编程中有着重要作用。<em>in vitro</em> 时MPK3、MPK4及MPK6不够磷酸化转录因子WRKY33，<em>in vivo</em> 条件下MPK3和MPK6引发的磷酸化也有相关研究进行报道。遗传分析表明在不同病原菌侵染时和MPK3/MPK6信号通路中WRKY33对camalexin的生物合成是至关重要的。在突变体WRKY33$^{SA}$中WRKY33中5个潜在的MAPK磷酸化位点被突变。WRKY33$^{SA}$中并没有<em>wrky33</em> 突变的表型，而且值得注意的是camalexin生物合成相关基因的激活效率更低。此外，WRKY33能和<em>PAD3</em> 的启动子进行结合，这表明WRKY33能够直接激活camalexin合成相关基因的表达。有趣的是，MPK3/MPK6信号调控<em>WRKY33</em> 的表达，WRKY33能够与其启动子结合，这表明在<em>WRKY33</em>  的表达中存在循坏调节。总之，camalexin的生物合成被MPK3/MPK6信号通过对WRKY33转录及转录后的调节明显地诱导。事实上，WRKY33还能与MPK4互作来控制camalexin的生物合成。WRKY33与MPK4和MKS1形成核复合物。flg22诱导或细菌侵染后，由MPK4引发的MKS1的磷酸化诱导MKS1-WRKY33复合物从MPK4中释放出来，从而激活<em>PAD3</em> 基因表达。此外，MKS1能够识别WRKY33中与DNA结合的WRKY结构域，刺激其与DNA的结合。然而，在突变体<em>mks1</em> 受到病原菌侵染后仍有camalexin的积累；<em>PAD3</em> 在<em>mpk4</em> 中表达稳，但在<em>mks1</em>中却被病原菌诱导表达。<em>mks4</em> 突变体中MKS1沉默表达后，矮化减轻。总之，MPK3/MPK6和MPK4-MKS1信号通过调节WRKY33来影响camalexin的生物合成，但是具体的crosstalk机制还不清楚。</p><p><em>in vivo</em> 时MPK3与bZIP转录因子VIP1互作，而且在<em>in vito</em> 时能将其磷酸化。用不同的表达系VIP1、VIP1$^{S79A}$或VIP1$^{S79D}$试验表明VIP1和VIP1$^{S79A}$定位在细胞质和细胞核中，VIP1$^{S79D}$主要定位在细胞核中。flg22处理后，VIP1定位在细胞核中，但是VIP1$^{S79A}$没有定位在细胞核中。进一步的试验表明细胞核中的VUP1激活<em>PR1</em> 基因表达。这些结果表明flg22处理后，MPK3将VIP1磷酸化，这表明这个蛋白重定位到了细胞核中，然后激活<em>PR1</em> 基因表达。</p><p>MPK6能与ET响应因子家族中的ERF104互作，但是在flg22处理5-15min后这种互作关系就消失了。有意思的是，这个蛋白复合物的破裂需要MPK6活性和ET信号才能完成。<em>in vitro</em> 中MPK6磷酸化ERF104的C端结构域。ERF104过表达系转录组分析发现某些胁迫相关基因的表达上调了，尤其是防御素基因<em>PDF1.2</em> 。总之这些结果表明flg22处理后MPK6能够磷酸化ERF104，从而诱导ERF104的释放并激活其防御基因的表达。ERF104似乎是MPK6的一个特定的底物，但是ERF6等其他的ERF转录因子能够被MPK3和MPK6磷酸化。<em>in vitro</em>, 磷酸化主要发生在S266和/或S269；<em>in vivo</em> 分析发现<em>B. cinerea</em> 侵染时ERF6能够被S266和S269磷酸化。此外，活性烟草NtMEK2的诱导也能使拟南芥ERF6 S266和S269残基发生磷酸化，这表明MPK3和MPK6磷酸化了这些位点 <em>in vivo</em>。ERF6的硫酸化减弱了蛋白酶体介导的ERF6的降解。<em>B. cinerea</em> 侵染强烈诱导了ERF6的表达，这种诱导效应部分依赖于MPK3/MPK6信号，但是和ET信号无关。一个模拟磷酸化的突变体植株和野生型相比对<em>B. cinerea</em> 表现出更强的抗性，同时表现出不同于<em>mpk4</em> 突变体的严重的矮化。与此相反的是，一个dominant-negative ERF6突变体植株比野生型植株对<em>B. cinerea</em>表现出了更高的敏感性。他们研究还发现ERF6能作用于MPK3/MPK6信号的下游，诱导<em>PDF1.1</em>、<em>PDF1.2a</em> 等几个防御素基因的表达。总之，这些数据表明ERF6是MPK3和MPK6的一个底物，参与激活防御基因表达和真菌对病原菌的抗性。</p><h2 id="其他底物"><a href="#其他底物" class="headerlink" title="其他底物"></a>其他底物</h2><p>除了转录因子意外，还有一些具有多种细胞功能的免疫MAPK底物被鉴定到。<em>in vitro</em>，MPK6磷酸化ET生物合成限速酶1-氨基环丙烷-1-羧酸合酶的两种同工型：ACS2和ACS6。在ACS6中被磷酸化的位点是S480、S483和S488。SCA6的一个更稳定的突变体ACS6$^{S480D/S483D/S488D}$能导致细胞ACS活性和ET生物合成增加。此外，遗传分析发现激活MPK6后，ACS2和ACS6都是生成高水平ET所必须的。同一研究组后来还发现MPK3也参与了同样的反应，并且发现其磷酸化的精确机制，进而通过泛素化-蛋白酶体机制来解释ACS蛋白的稳定性或降解机制。这个研究的数据表明MPK3和MPK6通过ACS2和ACS6的磷酸化来调节ET的生物合成。有趣的是，WRKY33能够与<em>ACS2</em> 和<em>ACS6</em> 的启动子直接结合 <em>in vivo</em> ，MPK3/MPK6信号很大程度上依赖WRKY33来诱导<em>ACS2</em> 和<em>ACS6</em> 的基因表达。因此，与WRKY33调控camalexin生物合成类似，MPK3/MPK6信号通过对ACS2和ACS6的转录级转录后的调节来调控ET的合成。</p><p>研究者利用蛋白质芯片筛选将串联锌指蛋白9（TZF9）鉴定为MPK3和MPK6的底物。Maldonado-Donilla等的研究进一步确证了这个结果，而且进一步表明MPK3和MPK6能够与TZF9在细胞质和细胞核中互作。TZF9原生质体顺势表达发现TZF9在flg22处理后发生磷酸化，磷酸化以后TZF9的蛋白稳定性可能发生变化。<em>tzf9</em> 突变体对MAMP诱导的抗性有部分衰减：ROA爆发降低、MAPK活性降低、<em>FRK1</em> 和<em>NHL10</em>防御表达降低。这些数据表明植物防御期间，MPK3和MPK6能够磷酸化TZF9，进而破坏蛋白稳定性、改变其可能参与的转录后的调控。</p><p>MPK6和MPK3（可能）与LIP5互作，都能磷酸化LIP5。病原菌侵染或MPK3/MPK6信号下，LIP5也会被磷酸化。<em>lip5</em> 突变体中flg22诱导的防御响应是正常的，但是对<em>P. syringae</em> 的基础抗性受损。LIP5中MAPK潜在的磷酸化位点突变会降低LIP5的稳定性。受到<em>P. syringae</em> 侵染后植株需要LIP5来增加多囊泡体的形成。总之，这些结果表明MPK3和MPK6磷酸化LIP5，磷酸化后的蛋白更稳定并且能够正向调节多囊泡体铁路，从而导致防御相关分子的重定位。</p><p>PHOS32和相关蛋白PHOS34在flg22处理后能够被迅速磷酸化，PHOS32中的磷酸化位点是S21。<em>in vitro</em> 激酶分析发现MPK3和MPK6能够磷酸化PHOS32，尤其是S21这个位点；进一步的免疫耗竭实验发现MPK3和MPK6是磷酸化这个位点的主要蛋白激酶。PHOS32和PHOS34都含有一个普遍的应激蛋白A结构域。但是PHOS32和PHOS34在植物防御中的具体功能、MPK3和MPK6引发的磷酸化的作用还没有新概念报道。</p><p>除了MPK3/4/6外，还有MPK11也有一定的功能。MPK11能与GRF6互作。 烟草共表达等试验发现MPK11磷酸化GRF6的丝氨酸残基。MPK11与GRF6共表达后GRF6的丰度降低，这表明MPK11会影响GRF的稳定性。此外，抗泛素化抗体试验发现GRF6会被泛素-蛋白酶系统降解。在水痘病毒李痘病毒（PPV）侵染后，<em>mpk11</em> 和<em>grf6</em> 分别表现更高的敏感性和抗性。总之，这些结果表明MPK11磷酸化GRF6从而导致其泛素-蛋白酶退化，对PPV抗性降低。</p><h2 id="其他的MAPK底物"><a href="#其他的MAPK底物" class="headerlink" title="其他的MAPK底物"></a>其他的MAPK底物</h2><p>在其他条件下（病原侵染、非生物胁迫级其他）也鉴定到了MPK3/4/6的其他底物。这些底物中的一半以上都是转录因子。这些蛋白是转录因子EIN3、硝酸还原酶NIA2、ｂHLH转录因子SPCH、ｍRNA酶DCP1、转录因子MYB4和MYB44、转录因子HSFA2和HSFA4A、脂类转运蛋白相关的杂交富脯氨酸蛋白AZI1、ｂＨＬＨ转录因子MYC2、MAPK酸化酶MPK1、细胞骨架蛋白MAP65-1、C2H2型转录因子ZAT6及ZAT10。</p><h2 id="中高通量分析中推定的MAPK底物"><a href="#中高通量分析中推定的MAPK底物" class="headerlink" title="中高通量分析中推定的MAPK底物"></a>中高通量分析中推定的MAPK底物</h2><p>上述的MAPK底物主要是通过candidate approaches鉴定到的。与之相反的是，许多推定的底物都是从中/高通量分析中得到的，但是大多数都还需要进一步的实验来验证。Feiler等开发了包含1690个拟南芥蛋白的芯片，并将其与MPK3和MPK6进行孵育。得到48个MPK3的潜在底物、39个MPK6的潜在底物，有26个底物是共有的，其中是ACS6就是MPK3和MPK6的底物。其他的潜在底物是转录因子、核糖体蛋白、组蛋白及其他蛋白。Popescu等人利用含有2158个拟南芥蛋白的芯片并借助GO分析发现推定的底物中50.4% 是潜在的转录因子、35%是推定的核酸结合蛋白、16%是蛋白激酶。测试了10个不同的MAPKs后，发现570个蛋白是潜在的底物。</p><h2 id="病原效应子靶向的MAPK模块"><a href="#病原效应子靶向的MAPK模块" class="headerlink" title="病原效应子靶向的MAPK模块"></a>病原效应子靶向的MAPK模块</h2><p>病原菌释放大量的效应子到寄主细胞中来抑制寄主免疫响应，MAPK模块是这些效应子主要的靶标。前面提到的HopAI1以MPK3/4/6为靶标。HopAI1通过其磷酸化酶活性来刺激这些MAPKs。<em>P. syringae</em> 的效应子与MPK4互作，诱导磷酸化并激活MPK4。此外，MPK4直接与RIN4互作并将其磷酸化。</p><h1 id="文献信息"><a href="#文献信息" class="headerlink" title="文献信息"></a>文献信息</h1><blockquote><p>Title：Signaling Mechanisms in Pattern-Triggered Immunity (PTI)</p><p>译名：PTI中的信号机制</p><p>期刊：<strong><em>Molecular Plant</em></strong></p><p>IF：12</p><p>链接：<a href="https://doi.org/10.1016/j.molp.2014.12.022">https://doi.org/10.1016/j.molp.2014.12.022</a></p><p>通讯作者：Heribert Hirt</p><p>主要单位：King Abdullah University of Science and Technology</p></blockquote><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文献 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清理WinSXS文件夹</title>
      <link href="/article/b4fcbbe6/"/>
      <url>/article/b4fcbbe6/</url>
      
        <content type="html"><![CDATA[<p>以管理员身份运行<code>cmd</code>命令行，输入下方代码即可:</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">Dism /online /Cleanup-Image /StartComponentCleanup<br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>data.table学习笔记</title>
      <link href="/article/9ba8b5f7/"/>
      <url>/article/9ba8b5f7/</url>
      
        <content type="html"><![CDATA[<p>后面要处理大量数据，明显感觉到<code>data.frame</code>这种格式满足不了大数据要求了，索性把<code>data.table</code>学一下。</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#install.packages('data.table')</span><br><br><br><span class="hljs-comment"># load package</span><br>library<span class="hljs-punctuation">(</span>data.table<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># read data</span><br>dt <span class="hljs-operator">=</span> fread<span class="hljs-punctuation">(</span><span class="hljs-string">'flights_2014.csv'</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># fread("https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv")</span><br><br><span class="hljs-comment"># check numbers of row and column</span><br>nrow<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">)</span><br>ncol<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># view names of headers</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># head data</span><br>head<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># selecting clunms</span><br>dt1 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>origin<span class="hljs-punctuation">]</span> <span class="hljs-comment"># return a vector</span><br>dt1 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>.<span class="hljs-punctuation">(</span>origin<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-comment"># retuen a datat.table</span><br>dt1 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'origin'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>with <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># keeping a column based on column position</span><br>dt2 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>with <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment">#selecting multiple columns</span><br>dt3 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>.<span class="hljs-punctuation">(</span>origin<span class="hljs-punctuation">,</span>year<span class="hljs-punctuation">,</span>month<span class="hljs-punctuation">,</span>hour<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>dt4 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>with <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># dropping a columns</span><br>dt5 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">!</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'origin'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>with <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># dropping multiple columns</span><br>dt6 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">!</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'origin'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'year'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>with <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># keeping a column that contain 'dep'</span><br>dt7 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">)</span> <span class="hljs-operator">%like%</span> <span class="hljs-string">'dep'</span><span class="hljs-punctuation">,</span>with <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># rename</span><br>setnames<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'dest'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'Destination'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># rename multiple variables</span><br>setnames<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'Destination'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'origin'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'dest'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'origin.of.flighr'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># subsetting rows</span><br>dt8 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span>origin.of.flighr <span class="hljs-operator">==</span> <span class="hljs-string">'JFK'</span><span class="hljs-punctuation">]</span><br>dt9 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span>origin.of.flighr <span class="hljs-operator">%in%</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'JFK'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'LGA'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># not subsetting rows</span><br>dt10 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span><span class="hljs-operator">!</span>origin.of.flighr <span class="hljs-operator">%in%</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'JFK'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'LGA'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># filter based on multiple variables</span><br>dt11 <span class="hljs-operator">=</span> dt<span class="hljs-punctuation">[</span>origin.of.flighr <span class="hljs-operator">==</span> <span class="hljs-string">'JFK'</span> <span class="hljs-operator">&amp;</span> carrier <span class="hljs-operator">==</span> <span class="hljs-string">'AA'</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># sorting data</span><br>dt12 <span class="hljs-operator">=</span> setorder<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">,</span>origin.of.flighr<span class="hljs-punctuation">)</span><br>dt13 <span class="hljs-operator">=</span> setorder<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">,</span><span class="hljs-operator">-</span>origin.of.flighr<span class="hljs-punctuation">)</span><br>dt14 <span class="hljs-operator">=</span> setorder<span class="hljs-punctuation">(</span>dt<span class="hljs-punctuation">,</span>origin.of.flighr<span class="hljs-punctuation">,</span><span class="hljs-operator">-</span>carrier<span class="hljs-punctuation">)</span> <span class="hljs-comment"># ascending then descending</span><br><br><span class="hljs-comment"># adding a colume</span><br>dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>dep_sch<span class="hljs-operator">:=</span>dep_time<span class="hljs-operator">-</span>dep_delay<span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># adding multiple columns</span><br>dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'dep_sch'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'arr_sch'</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:=</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>dep_time<span class="hljs-operator">-</span>dep_delay<span class="hljs-punctuation">,</span>arr_time <span class="hljs-operator">-</span> arr_delay<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># if else</span><br>dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>flag<span class="hljs-operator">:=</span>ifelse<span class="hljs-punctuation">(</span><span class="hljs-built_in">min</span><span class="hljs-operator">&lt;</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># subset then subset again</span><br>dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>dep_sch<span class="hljs-operator">:=</span>dep_time<span class="hljs-operator">-</span>dep_delay<span class="hljs-punctuation">]</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>.<span class="hljs-punctuation">(</span>dep_time<span class="hljs-punctuation">,</span>dep_delay<span class="hljs-punctuation">,</span>dep_sch<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># summarize</span><br>dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>.<span class="hljs-punctuation">(</span>mean <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">(</span>dep_delay<span class="hljs-punctuation">,</span>na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      median <span class="hljs-operator">=</span> median<span class="hljs-punctuation">(</span>arr_delay<span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">min</span><span class="hljs-punctuation">(</span>arr_delay<span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>arr_delay<span class="hljs-punctuation">,</span> na.rm <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># summarize multiple columns</span><br>dt<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span>.<span class="hljs-punctuation">(</span>mean<span class="hljs-punctuation">(</span>arr_delay<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">(</span>dep_delay<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分类-回归树(CART)在R语言中的实现</title>
      <link href="/article/dca5ae94/"/>
      <url>/article/dca5ae94/</url>
      
        <content type="html"><![CDATA[<p><strong>CART 模型</strong> ，即 Classification And Regression Trees。它和一般回归分析类似，是用来对变量进行解释和预测的工具，也是数据挖掘中的一种常用算法。如果因变量是连续数据，相对应的分析称为回归树，如果因变量是分类数据，则相应的分析称为分类树。</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>rpart<span class="hljs-punctuation">)</span> <br>library<span class="hljs-punctuation">(</span>maptree<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>TH.data<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># load data</span><br>df <span class="hljs-operator">=</span> data.table<span class="hljs-operator">::</span>fread<span class="hljs-punctuation">(</span><span class="hljs-string">'df.csv'</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> encoding <span class="hljs-operator">=</span> <span class="hljs-string">'UTF-8'</span><span class="hljs-punctuation">)</span><br><br>colnames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># for Taxa_S</span><br>df_1 <span class="hljs-operator">=</span> df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>formula_1 <span class="hljs-operator">=</span> Taxa_S <span class="hljs-operator">~</span>.<br>fit_1 <span class="hljs-operator">=</span> rpart<span class="hljs-punctuation">(</span>formula_1<span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">'anova'</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_1<span class="hljs-punctuation">)</span><br>pfit_1<span class="hljs-operator">=</span>prune<span class="hljs-punctuation">(</span>fit_1<span class="hljs-punctuation">,</span>cp<span class="hljs-operator">=</span> fit_1<span class="hljs-operator">$</span>cptable<span class="hljs-punctuation">[</span>which.min<span class="hljs-punctuation">(</span>fit_1<span class="hljs-operator">$</span>cptable <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-string">"xerror"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">"CP"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <br>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'Taxa_S.回归树.pdf'</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span>family<span class="hljs-operator">=</span><span class="hljs-string">"GB1"</span><span class="hljs-punctuation">)</span><br>draw.tree<span class="hljs-punctuation">(</span>fit_1<span class="hljs-punctuation">,</span>digits <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>printcp<span class="hljs-punctuation">(</span>fit_1<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  write.csv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'Taxa_S结果.csv'</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># for Individuals</span><br>df_2 <span class="hljs-operator">=</span> df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>formula_2 <span class="hljs-operator">=</span> Individuals <span class="hljs-operator">~</span>.<br>fit_2 <span class="hljs-operator">=</span> rpart<span class="hljs-punctuation">(</span>formula_2<span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">'anova'</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_2<span class="hljs-punctuation">)</span><br>pfit_2<span class="hljs-operator">=</span>prune<span class="hljs-punctuation">(</span>fit_2<span class="hljs-punctuation">,</span>cp<span class="hljs-operator">=</span> fit_2<span class="hljs-operator">$</span>cptable<span class="hljs-punctuation">[</span>which.min <span class="hljs-punctuation">(</span>fit_2<span class="hljs-operator">$</span>cptable <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-string">"xerror"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">"CP"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <br><br>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'Individuals.回归树.pdf'</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span>family<span class="hljs-operator">=</span><span class="hljs-string">"GB1"</span><span class="hljs-punctuation">)</span><br>draw.tree<span class="hljs-punctuation">(</span>fit_2<span class="hljs-punctuation">,</span>digits <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>printcp<span class="hljs-punctuation">(</span>fit_2<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  write.csv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'Individuals结果.csv'</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><br><span class="hljs-comment"># for Chao_1</span><br>df_3 <span class="hljs-operator">=</span> df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>formula_3 <span class="hljs-operator">=</span> Chao_1 <span class="hljs-operator">~</span>.<br>fit_3 <span class="hljs-operator">=</span> rpart<span class="hljs-punctuation">(</span>formula_3<span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">'anova'</span><span class="hljs-punctuation">,</span> data <span class="hljs-operator">=</span> df_3<span class="hljs-punctuation">)</span><br>pfit_3<span class="hljs-operator">=</span>prune<span class="hljs-punctuation">(</span>fit_3<span class="hljs-punctuation">,</span>cp<span class="hljs-operator">=</span> fit_3<span class="hljs-operator">$</span>cptable<span class="hljs-punctuation">[</span>which.min<span class="hljs-punctuation">(</span>fit_3<span class="hljs-operator">$</span>cptable <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-string">"xerror"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">"CP"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <br><br>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'Chao_1.回归树.pdf'</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span>family<span class="hljs-operator">=</span><span class="hljs-string">"GB1"</span><span class="hljs-punctuation">)</span><br>draw.tree<span class="hljs-punctuation">(</span>fit_3<span class="hljs-punctuation">,</span>digits <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>printcp<span class="hljs-punctuation">(</span>fit_3<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  write.csv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'Chao_1结果.csv'</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2分面填充色与字体大小</title>
      <link href="/article/4f1cbafb/"/>
      <url>/article/4f1cbafb/</url>
      
        <content type="html"><![CDATA[<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">theme<span class="hljs-punctuation">(</span>strip.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>face <span class="hljs-operator">=</span> <span class="hljs-string">"bold"</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> rel<span class="hljs-punctuation">(</span><span class="hljs-number">1.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      strip.background <span class="hljs-operator">=</span> element_rect<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">"white"</span><span class="hljs-punctuation">,</span>colour <span class="hljs-operator">=</span> <span class="hljs-string">"black"</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><span id="more"></span><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分组柱状图加散点</title>
      <link href="/article/309798c8/"/>
      <url>/article/309798c8/</url>
      
        <content type="html"><![CDATA[<p>chu处理数据的时候遇到一个问题：分面分组柱状图怎么加上对应的数据散点？</p><p>群里问了一遍没人回答，自己解决了！</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>reshape2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>extrafont<span class="hljs-punctuation">)</span><br>loadfonts<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># loading data</span><br>df <span class="hljs-operator">=</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">'data_for_plot.csv'</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> encoding <span class="hljs-operator">=</span> <span class="hljs-string">'utf-8'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  reshape2<span class="hljs-operator">::</span>melt<span class="hljs-punctuation">(</span>id.vars <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">16</span><span class="hljs-operator">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">=</span> <span class="hljs-string">'receptor'</span><br>df<span class="hljs-operator">$</span>receptor <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>receptor<span class="hljs-punctuation">)</span><br>df<span class="hljs-operator">$</span>Neighbored.by <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>Neighbored.by<span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_bar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>gene<span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> Neighbored.by<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           stat <span class="hljs-operator">=</span> <span class="hljs-string">'identity'</span><span class="hljs-punctuation">,</span>position <span class="hljs-operator">=</span> <span class="hljs-string">'dodge'</span><span class="hljs-punctuation">,</span>width <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>gene<span class="hljs-punctuation">,</span> value<span class="hljs-punctuation">,</span> group <span class="hljs-operator">=</span> Neighbored.by<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>             position <span class="hljs-operator">=</span> position_dodge<span class="hljs-punctuation">(</span>width <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">4.5</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_errorbar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>gene<span class="hljs-punctuation">,</span> <br>                    ymin <span class="hljs-operator">=</span> mean <span class="hljs-operator">-</span> se<span class="hljs-punctuation">,</span> <br>                    ymax <span class="hljs-operator">=</span> mean <span class="hljs-operator">+</span> se<span class="hljs-punctuation">,</span><br>                    group <span class="hljs-operator">=</span> Neighbored.by<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                position <span class="hljs-operator">=</span> position_dodge<span class="hljs-punctuation">(</span>width <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                width <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'#008000'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'#FFA74F'</span><span class="hljs-punctuation">,</span><br>                               <span class="hljs-string">'#663300'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'#FF5900'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  facet_grid<span class="hljs-punctuation">(</span><span class="hljs-operator">~</span> receptor<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">'Relatice expression'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.ticks.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p<br>ggsave<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'res.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span><br>       device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不同数量样品绘制柱状图</title>
      <link href="/article/9b347903/"/>
      <url>/article/9b347903/</url>
      
        <content type="html"><![CDATA[<p>昨天帮同学画图的实现不同样品数量的分组画柱状图会出问题：</p><span id="more"></span><p>组内的每个重复都被叠加了，和误差线差太远了，咋办呢？后面发现可以根据分组样品数量求均值：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsignif<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>extrafont<span class="hljs-punctuation">)</span><br>loadfonts<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>df <span class="hljs-operator">=</span> data.frame<span class="hljs-punctuation">(</span>value <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">20</span><span class="hljs-operator">:</span><span class="hljs-number">25</span><span class="hljs-punctuation">,</span><span class="hljs-number">25</span><span class="hljs-operator">:</span><span class="hljs-number">27</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                group <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'B'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>mean <span class="hljs-operator">=</span> aggregate<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>mean<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'mean'</span><span class="hljs-punctuation">)</span><br>df <span class="hljs-operator">=</span> merge<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span>mean<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br><br>sd <span class="hljs-operator">=</span> aggregate<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>value<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> sd<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>sd<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'group'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'sd'</span><span class="hljs-punctuation">)</span><br>df <span class="hljs-operator">=</span> merge<span class="hljs-punctuation">(</span>sd<span class="hljs-punctuation">,</span>df<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'group'</span><span class="hljs-punctuation">)</span><br><br>df<span class="hljs-operator">$</span>se <span class="hljs-operator">=</span> ifelse<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>group <span class="hljs-operator">==</span> <span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span><br>                 df<span class="hljs-operator">$</span>sd<span class="hljs-operator">/</span><span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                 df<span class="hljs-operator">$</span>sd<span class="hljs-operator">/</span><span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>complist <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'B'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_bar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> ifelse<span class="hljs-punctuation">(</span>group <span class="hljs-operator">==</span> <span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span>mean<span class="hljs-operator">/</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span> mean<span class="hljs-operator">/</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>fill <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           stat <span class="hljs-operator">=</span> <span class="hljs-string">'identity'</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_errorbar<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span> <br>                    ymin <span class="hljs-operator">=</span> mean <span class="hljs-operator">-</span> se<span class="hljs-punctuation">,</span> <br>                    ymax <span class="hljs-operator">=</span> mean <span class="hljs-operator">+</span> se<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                width <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_signif<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>group<span class="hljs-punctuation">,</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              comparisons <span class="hljs-operator">=</span> complist<span class="hljs-punctuation">,</span><br>              test <span class="hljs-operator">=</span> <span class="hljs-string">'wilcox.test'</span><span class="hljs-punctuation">,</span><br>              step_increase <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>              map_signif_level <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>              vjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>              y_position <span class="hljs-operator">=</span> <span class="hljs-number">30</span><span class="hljs-punctuation">,</span><br>              tip_length <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.05</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>              linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span><br>              color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">35</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  annotate<span class="hljs-punctuation">(</span><span class="hljs-string">'text'</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">33</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-string">'Wilcox.test'</span><span class="hljs-punctuation">,</span><br>           color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> breaks <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">36</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_aaas<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">'Mean value'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">,</span><br>        legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <br>                                 family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p<br>ggsave<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'2.pdf'</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">3.5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>植物科学常用数据库和生物信息学工具</title>
      <link href="/article/321b666b/"/>
      <url>/article/321b666b/</url>
      
        <content type="html"><![CDATA[<h1 id="通用数据库"><a href="#通用数据库" class="headerlink" title="通用数据库"></a>通用数据库</h1><p><strong><a href="http://bigd.big.ac.cn/databasecommons/">http://bigd.big.ac.cn/databasecommons/</a></strong></p><p>国家基因库下属数据库，涵盖各种生物的全面公开可用的数据信息</p><span id="more"></span><p><strong><a href="https://www.ncbi.nlm.nih.gov/">https://www.ncbi.nlm.nih.gov/</a></strong></p><p>美国国家生物技术信息中心的生物医学和基因组信息门户网站</p><p><strong><a href="https://www.oxfordjournals.org/nar/database/cat/13">https://www.oxfordjournals.org/nar/database/cat/13</a></strong> </p><p>牛津大学出版社提供的植物科学相关数据库的汇总网站   </p><p><strong><a href="http://abc.gao-lab.org/index.php">http://abc.gao-lab.org/index.php</a></strong> </p><p>北京大学应用生物信息学中心  </p><p><strong><a href="https://www.expasy.org/">https://www.expasy.org/</a></strong>   </p><p>瑞士生物信息研究所的生物信息资源门户网站，涵盖各种生物研究数据库和软件工具  </p><p><strong><a href="http://www.bioinfo.wsu.edu/">http://www.bioinfo.wsu.edu/</a></strong>  </p><p>作物基因组、遗传和育种研究的分析计算工具和数据库  </p><p><strong><a href="https://www.agbiodata.org/">https://www.agbiodata.org/</a></strong> </p><p>农业生物数据库和相关资源综合平台   </p><p><strong><a href="https://phytozome.jgi.doe.gov/pz/portal.html">https://phytozome.jgi.doe.gov/pz/portal.html</a></strong></p><p>植物比较基因组学资源库  </p><p><strong><a href="https://bioinformatics.psb.ugent.be/plaza/">https://bioinformatics.psb.ugent.be/plaza/</a></strong></p><p>植物比较基因组学数据库  </p><p><strong><a href="http://www.plantontology.org">http://www.plantontology.org</a></strong> </p><p>集成植物基因组学、表型和遗传学数据的共享型平台   </p><p><strong><a href="http://harvest.ucr.edu/">http://harvest.ucr.edu/</a></strong>  </p><p>作物 EST 序列及相关分子信息数据平台   </p><p><strong><a href="http://www.gramene.org/">http://www.gramene.org/</a></strong>  </p><p>用于作物和模式物种的比较功能基因组学分析的综合平台   </p><p><strong><a href="https://www.uniprot.org/">https://www.uniprot.org/</a></strong>  </p><p>蛋白质序列和功能信息资源数据库和分析平台 </p><p><strong><a href="http://urgi.versailles.inra.fr/">http://urgi.versailles.inra.fr/</a></strong>  </p><p>针对有农学意义的植物研究生物信息平台   </p><p><strong><a href="http://systemsbiology.cau.edu.cn/agriGOv2/index.php#">http://systemsbiology.cau.edu.cn/agriGOv2/index.php#</a></strong>  </p><p>GO 分析工具包和数据库综合平台   </p><p><strong><a href="http://www.bioinformatics.nl/AraQTL">http://www.bioinformatics.nl/AraQTL</a></strong>  </p><p>基于 Web 的用于表达定量性状位点（eQTL）研究的工作台和数据库   </p><p><strong><a href="http://www.plantgdb.org/">http://www.plantgdb.org/</a></strong> </p><p>植物基因组序列数据库   </p><p><strong><a href="https://mpss.danforthcenter.org/index.php">https://mpss.danforthcenter.org/index.php</a></strong>  </p><p>二代测序（NGS）数据库，包括植物的 RNA 和基因组信息资源   </p><p><strong><a href="http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp">http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp</a></strong>  </p><p>植物基因组数据库   </p><p><strong><a href="http://systemsbiology.cau.edu.cn/chromstates/">http://systemsbiology.cau.edu.cn/chromstates/</a></strong>  </p><p>植物染色质状态信息数据库   </p><p><strong><a href="http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home">http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home</a></strong>  </p><p>植物 snoRNA 基因数据库   </p><p><strong><a href="http://bioinformatics.psb.ugent.be/webtools/plantcare/html/">http://bioinformatics.psb.ugent.be/webtools/plantcare/html/</a></strong> </p><p>植物顺式调控元件、增强子和抑制子数据库   </p><p><strong><a href="http://metacrop.ipk-gatersleben.de">http://metacrop.ipk-gatersleben.de</a></strong>  </p><p>作物代谢途径数据库   </p><p><strong><a href="http://podb.nibb.ac.jp/Organellome">http://podb.nibb.ac.jp/Organellome</a></strong>  </p><p>植物器官研究数据库   </p><p><strong><a href="http://www.drastic.org.uk">http://www.drastic.org.uk</a></strong>  </p><p>植物细胞的信号转导分析数据库   </p><p><strong><a href="http://www.pathoplant.de">http://www.pathoplant.de</a></strong>  </p><p>植物 - 病原体相互作用的信号转导相关物质成分数据库   </p><p><strong><a href="http://planttfdb.cbi.pku.edu.cn/">http://planttfdb.cbi.pku.edu.cn/</a></strong></p><p>植物转录因子数据库  </p><p><strong><a href="http://plntfdb.bio.uni-potsdam.de/v3.0/">http://plntfdb.bio.uni-potsdam.de/v3.0/</a></strong></p><p>植物转录因子数据库  </p><p><strong><a href="http://psorf.whu.edu.cn/">http://psorf.whu.edu.cn/</a></strong>  </p><p>植物小型开放阅读框架（sORF）数据资源库 </p><p><strong><a href="http://uorflight.whu.edu.cn/">http://uorflight.whu.edu.cn/</a></strong>  </p><p>植物 uORF 翻译调控相关数据库   </p><p><strong><a href="https://apex.ipk-gatersleben.de/apex/f?p=116:1">https://apex.ipk-gatersleben.de/apex/f?p=116:1</a></strong>  </p><p>作物 EST 数据库   </p><p><strong><a href="https://www.dna.affrc.go.jp/PLACE/?action=newplace">https://www.dna.affrc.go.jp/PLACE/?action=newplace</a></strong>  </p><p>植物顺式调控 DNA 元件数据库   </p><p><strong><a href="https://webapps.plantenergy.uwa.edu.au/applications/mpic/">https://webapps.plantenergy.uwa.edu.au/applications/mpic/</a></strong> </p><p>植物线粒体蛋白运输元件数据库  </p><p><strong><a href="https://bioinformatics.cse.unr.edu/fat-ptm">https://bioinformatics.cse.unr.edu/fat-ptm</a></strong> </p><p>用于分析蛋白质和代谢途径的翻译后修饰数据库 </p><p><strong><a href="http://sundarlab.ucdavis.edu/smrnas/">http://sundarlab.ucdavis.edu/smrnas/</a></strong></p><p>谷物特别是水稻和玉米的小 RNA 数据库  </p><p><strong><a href="http://ppdb.tc.cornell.edu/default.aspx">http://ppdb.tc.cornell.edu/default.aspx</a></strong> </p><p>拟南芥和玉米蛋白质组数据库  </p><p><strong><a href="http://atted.jp/">http://atted.jp/</a></strong>   </p><p>基于互秩指数统计特性的植物共表达数据库   </p><p><strong><a href="http://ibi.zju.edu.cn/plantcircbase/">http://ibi.zju.edu.cn/plantcircbase/</a></strong>   </p><p>植物 Circular RNAs 数据库   </p><p><strong><a href="http://plantcrispr.org/cgi-bin/crispr/index.cgi">http://plantcrispr.org/cgi-bin/crispr/index.cgi</a></strong>  </p><p>植物基因编辑数据库，收集 CRISPR / Cas9 技术产生植物的信息   </p><p><strong><a href="https://www.try-db.org/TryWeb/Home.php">https://www.try-db.org/TryWeb/Home.php</a></strong></p><p>植物性状全球数据库   </p><p><strong><a href="http://chibba.agtec.uga.edu/duplication/">http://chibba.agtec.uga.edu/duplication/</a></strong></p><p>植物基因和基因组加倍的数据库  </p><p><strong><a href="http://www.mirbase.org/">http://www.mirbase.org/</a></strong>  </p><p>生物 microRNA 数据库   </p><p><strong><a href="http://bioinformatics.cau.edu.cn/PMRD/">http://bioinformatics.cau.edu.cn/PMRD/</a></strong>  </p><p>植物 microRNA 数据库   </p><p><strong><a href="http://bis.zju.edu.cn/pmirkb/">http://bis.zju.edu.cn/pmirkb/</a></strong>  </p><p>模式植物拟南芥和水稻的 microRNA 数据库   </p><p><strong><a href="http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl">http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl</a></strong>   </p><p>植物相关微生物的多基因座序列分型和分析数据库及网站   </p><p><strong><a href="http://structuralbiology.cau.edu.cn/PlantGSEA">http://structuralbiology.cau.edu.cn/PlantGSEA</a></strong>   </p><p>植物基因集富集分析平台   </p><p><strong><a href="http://structuralbiology.cau.edu.cn/PNRD">http://structuralbiology.cau.edu.cn/PNRD</a></strong> </p><p>植物非编码 RNA 数据库   </p><p><strong><a href="http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB">http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB</a></strong>   </p><p>植物长非编码 RNA 数据库   </p><p><strong><a href="http://prgdb.org/prgdb/">http://prgdb.org/prgdb/</a></strong>   </p><p>植物抗病 R 基因数据库   </p><p><strong><a href="https://www.inetbio.org/aranet/">https://www.inetbio.org/aranet/</a></strong>   </p><p>拟南芥和一些非模式植物的功能基因网络改进数据库 </p><p><strong><a href="http://greenc.sciencedesigners.com/wiki/Main_Page">http://greenc.sciencedesigners.com/wiki/Main_Page</a></strong></p><p>基于 Wiki 的植物长非编码 RNAs 数据库   </p><p><strong><a href="http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi">http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi</a></strong>   </p><p>植物启动子数据库   </p><p><strong><a href="http://www.pmiren.com/">http://www.pmiren.com/</a></strong>   </p><p>植物 miRNA 综合数据库   </p><p><strong><a href="http://www.mbkbase.org/">http://www.mbkbase.org/</a></strong>  </p><p>水稻、小麦和大豆的分子育种资源库   </p><p><strong><a href="http://epigenome.genetics.uga.edu/PlantMethylome/">http://epigenome.genetics.uga.edu/PlantMethylome/</a></strong>  </p><p>植物 DNA 甲基化数据库   </p><p><strong><a href="http://bioinfo.sibs.ac.cn/plant-regulomics">http://bioinfo.sibs.ac.cn/plant-regulomics</a></strong> </p><p>从植物多组学数据中检索获取上游调控因子的数据驱动平台  </p><p><strong><a href="http://autosnpdb.appliedbioinformatics.com.au/">http://autosnpdb.appliedbioinformatics.com.au/</a></strong> </p><p>植物 SNP 检索数据库  </p><p><strong><a href="http://www.p3db.org/">http://www.p3db.org/</a></strong>   </p><p>植物蛋白磷酸化数据库   </p><p><strong><a href="http://phytamp.pfba-lab-tun.org/main.php">http://phytamp.pfba-lab-tun.org/main.php</a></strong>  </p><p>植物天然抗菌肽数据库   </p><p><strong><a href="http://bis.zju.edu.cn/pcernadb/index.jsp">http://bis.zju.edu.cn/pcernadb/index.jsp</a></strong></p><p>植物竞争性内源 RNA 数据库  </p><p><strong><a href="http://www.byanbioinfo.org/plamom/">http://www.byanbioinfo.org/plamom/</a></strong>   </p><p>用于检索，分析和预测植物移动大分子包括 RNA 和蛋白质的数据库平台   </p><p><strong><a href="https://cvalues.science.kew.org/">https://cvalues.science.kew.org/</a></strong>   </p><p>用于获取和比较植物基因组大小的数据库   </p><p><strong><a href="https://plantreactome.gramene.org/index.php?lang=en">https://plantreactome.gramene.org/index.php?lang=en</a></strong> </p><p>植物代谢和调控通路数据库   </p><p><strong><a href="http://plantpis.ba.itb.cnr.it/">http://plantpis.ba.itb.cnr.it/</a></strong>  </p><p>植物蛋白酶抑制剂数据库   </p><p><strong><a href="http://plantdhs.org/">http://plantdhs.org/</a></strong>   </p><p>植物 DNase I 超敏位点数据库   </p><p><strong><a href="http://bis.zju.edu.cn/pnatdb/">http://bis.zju.edu.cn/pnatdb/</a></strong>   </p><p>植物天然反义转录本（Natural Antisense Transcripts）数据库   </p><p><strong><a href="http://linux1.softberry.com/berry.phtml?topic=plantprom&amp;group=data&amp;subgroup=plantprom">http://linux1.softberry.com/berry.phtml?topic=plantprom&amp;group=data&amp;subgroup=plantprom</a></strong>  </p><p>植物启动子数据库   </p><p><strong><a href="http://www.sesame-bioinfo.org/PMDBase/">http://www.sesame-bioinfo.org/PMDBase/</a></strong></p><p>用于研究植物物种和基因组进化中的微卫星 DNA 和标记开发的数据库  </p><p><strong><a href="http://pogs.uoregon.edu/#/">http://pogs.uoregon.edu/#/</a></strong>  </p><p>旨在促进有关植物基因功能和基因模型的跨物种推断的关系数据库   </p><p><strong><a href="http://plants.proteincomplexes.org/">http://plants.proteincomplexes.org/</a></strong>  </p><p>植物蛋白复合物组分以及蛋白间稳定互作图谱数据库   </p><h1 id="拟南芥"><a href="#拟南芥" class="headerlink" title="拟南芥"></a>拟南芥</h1><p><strong>www.arabidopsis.org</strong> </p><p>最为常用的拟南芥遗传和分子生物学数据资源库   </p><p><strong><a href="http://rarge.gsc.riken.jp/">http://rarge.gsc.riken.jp/</a></strong>   </p><p>拟南芥 cDNA、突变体和微阵列数据库   </p><p><strong><a href="https://1001genomes.org/">https://1001genomes.org/</a></strong>  </p><p>1001 Genomes：拟南芥遗传变异目录  </p><p><strong><a href="https://aragwas.1001genomes.org/#/">https://aragwas.1001genomes.org/#/</a></strong> </p><p>AraGWAS：用于拟南芥的 GWAS 标准结果的公共人工管理数据库  </p><p><strong><a href="http://www.athamap.de/">http://www.athamap.de/</a></strong>   </p><p>拟南芥的全基因组范围的假定的转录因子结合位点数据库   </p><p><strong><a href="https://www.gabi-kat.de/">https://www.gabi-kat.de/</a></strong>   </p><p>拟南芥的基于侧翼序列标签（FST）的 T-DNA 插入突变体查找库   </p><p><strong><a href="http://www.plprot.ethz.ch/">http://www.plprot.ethz.ch/</a></strong>   </p><p>拟南芥质体蛋白数据库   </p><p><strong><a href="http://seedgenes.org/">http://seedgenes.org/</a></strong></p><p>拟南芥发育关键基因数据库  </p><p><strong><a href="http://suba.live/">http://suba.live/</a></strong>   </p><p>拟南芥蛋白的亚细胞定位数据库   </p><p><strong><a href="http://travadb.org/">http://travadb.org/</a></strong>  </p><p>基于 RNA-seq 分析的拟南芥基因表达谱数据库   </p><p><strong><a href="http://atrm.cbi.pku.edu.cn/">http://atrm.cbi.pku.edu.cn/</a></strong>   </p><p>拟南芥转录调控图谱数据库</p><p><strong><a href="http://wanglab.sippe.ac.cn/rootatlas/">http://wanglab.sippe.ac.cn/rootatlas/</a></strong> </p><p>拟南芥根部单细胞 RNA 测序数据库  </p><p><strong><a href="http://ipf.sustech.edu.cn/pub/athrna/">http://ipf.sustech.edu.cn/pub/athrna/</a></strong></p><p>拟南芥 RNA-seq 数据资源，可探索 20,000 多种已发布的拟南芥 RNA-Seq 库  </p><h1 id="水稻"><a href="#水稻" class="headerlink" title="水稻"></a>水稻</h1><p><strong><a href="http://www.ricedata.cn/index.htm">http://www.ricedata.cn/index.htm</a></strong>  </p><p>国家水稻数据中心   </p><p><strong><a href="https://omictools.com/bgi-ris-tool">https://omictools.com/bgi-ris-tool</a></strong>   </p><p>BGI-RIS：水稻以及其他谷类作物和植物基因组研究的信息资源和分析平台  </p><p><strong><a href="http://rapdb.dna.affrc.go.jp/">http://rapdb.dna.affrc.go.jp/</a></strong>   </p><p>粳稻日本晴基因组注释计划   </p><p><strong><a href="http://rice.plantbiology.msu.edu/">http://rice.plantbiology.msu.edu/</a></strong>   </p><p>粳稻日本晴基因组注释计划   </p><p><strong><a href="http://redb.ncpgr.cn/">http://redb.ncpgr.cn/</a></strong>   </p><p>水稻 EST 数据库   </p><p><strong><a href="http://rmd.ncpgr.cn/">http://rmd.ncpgr.cn/</a></strong>   </p><p>水稻突变体数据库 </p><p><strong><a href="http://signal.salk.edu/cgi-bin/RiceGE">http://signal.salk.edu/cgi-bin/RiceGE</a></strong>  </p><p>水稻功能基因组表达数据库   </p><p><strong><a href="https://tos.nias.affrc.go.jp/">https://tos.nias.affrc.go.jp/</a></strong>   </p><p>水稻逆转座子 Tos17 插入突变数据库   </p><p><strong><a href="http://urgi.versailles.inra.fr/OryzaTagLine/">http://urgi.versailles.inra.fr/OryzaTagLine/</a></strong> </p><p>水稻 T-DNA 插入突变数据库   </p><p><strong><a href="http://server.ncgr.ac.cn/ricd/">http://server.ncgr.ac.cn/ricd/</a></strong></p><p>籼稻 cDNA 数据库  </p><p><strong><a href="https://shigen.nig.ac.jp/rice/oryzabase/">https://shigen.nig.ac.jp/rice/oryzabase/</a></strong></p><p>水稻遗传学和基因组学数据库  </p><p><strong><a href="https://ricefrend.dna.affrc.go.jp/">https://ricefrend.dna.affrc.go.jp/</a></strong></p><p>水稻基因共表达数据库  </p><p><strong><a href="https://ricephylogenomics.ucdavis.edu/cellwalls/gt/">https://ricephylogenomics.ucdavis.edu/cellwalls/gt/</a></strong>   </p><p>水稻糖基转移酶数据库   </p><p><strong><a href="http://rice.hzau.edu.cn/rice/">http://rice.hzau.edu.cn/rice/</a></strong></p><p>籼稻基因组的综合生物信息学平台  </p><p><strong><a href="https://www.genome.arizona.edu/cgi-bin/rite/index.cgi">https://www.genome.arizona.edu/cgi-bin/rite/index.cgi</a></strong></p><p>稻属和假稻属的重复序列和转座因子（TEs）数据库  </p><p><strong><a href="https://ricexpro.dna.affrc.go.jp/index.html">https://ricexpro.dna.affrc.go.jp/index.html</a></strong></p><p>水稻表达谱数据库  </p><p><strong><a href="http://ricevarmap.ncpgr.cn/v2/">http://ricevarmap.ncpgr.cn/v2/</a></strong>   </p><p>水稻基因组变异及其功能注释综合数据库   </p><p><strong><a href="https://snpseek.irri.org/index.zul">https://snpseek.irri.org/index.zul</a></strong>   </p><p>水稻 SNP 检索数据库   </p><p><strong><a href="http://funricegenes.ncpgr.cn/">http://funricegenes.ncpgr.cn/</a></strong>   </p><p>水稻已克隆基因的数据库   </p><p><strong><a href="http://ibi.zju.edu.cn/ricerelativesgd/">http://ibi.zju.edu.cn/ricerelativesgd/</a></strong></p><p>水稻相关物种基因组数据库  </p><p><strong><a href="http://www.elabcaas.cn/rice/index.html">http://www.elabcaas.cn/rice/index.html</a></strong></p><p>水稻专属的表观组学数据库  </p><h1 id="其他重要植物"><a href="#其他重要植物" class="headerlink" title="其他重要植物"></a>其他重要植物</h1><p><strong><a href="http://www.wheatgenome.org/">http://www.wheatgenome.org/</a></strong> </p><p>小麦基因组信息数据库   </p><p><strong><a href="https://www.wheatgmap.org/">https://www.wheatgmap.org/</a></strong>   </p><p>小麦基因图谱和数据共享的综合基因组平台 </p><p><strong><a href="http://wheat.cau.edu.cn/TGT/">http://wheat.cau.edu.cn/TGT/</a></strong>  </p><p>小麦族同源基因数据库   </p><p><strong><a href="https://wheatproteome.org/">https://wheatproteome.org/</a></strong></p><p>小麦蛋白质组数据库   </p><p><strong><a href="http://202.194.139.32/">http://202.194.139.32/</a></strong>   </p><p>小麦组学大数据可视化网站   </p><p><strong><a href="http://wheat.pw.usda.gov">http://wheat.pw.usda.gov</a></strong>  </p><p>小麦族和燕麦属的分子和表型信息数据库</p><p><strong><a href="http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/">http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/</a></strong></p><p>小麦及其祖先的基因组变异数据库  </p><p><strong><a href="http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi">http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi</a></strong></p><p>大麦种质资源和基因组分析数据库  </p><p><strong><a href="https://apex.ipk-gatersleben.de/apex/f?p=284:10">https://apex.ipk-gatersleben.de/apex/f?p=284:10</a>::::::</strong> </p><p>大麦基因组资源平台  </p><p><strong><a href="http://maize.jcvi.org/">http://maize.jcvi.org/</a></strong></p><p>玉米基因组数据库   </p><p><strong><a href="https://www.maizegdb.org/">https://www.maizegdb.org/</a></strong></p><p>玉米基因组和遗传分析平台   </p><p><strong><a href="https://www.panzea.org/">https://www.panzea.org/</a></strong> </p><p>玉米及其野生近缘种的基因组工程资源库   </p><p><strong><a href="http://bioinformatics.cau.edu.cn/MCENet/">http://bioinformatics.cau.edu.cn/MCENet/</a></strong></p><p>玉米多组学基因网络分析平台   </p><p><strong><a href="http://www.zeamap.com/">http://www.zeamap.com/</a></strong> </p><p>适应玉米多组学时代的综合数据库   </p><p><strong><a href="https://soybase.org/">https://soybase.org/</a></strong></p><p>大豆基因组学和分子生物学数据库  </p><p><strong><a href="http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi">http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi</a></strong>  </p><p>大豆蛋白质组数据库   </p><p><strong><a href="http://www.ildis.org/LegumeWeb/">http://www.ildis.org/LegumeWeb/</a></strong> </p><p>国际豆科植物数据库和信息服务   </p><p><strong><a href="https://www.cottongen.org/">https://www.cottongen.org/</a></strong> </p><p>棉花基因组学，遗传学和育种数据库   </p><p><strong><a href="http://structuralbiology.cau.edu.cn/GraP/">http://structuralbiology.cau.edu.cn/GraP/</a></strong></p><p>棉花功能基因组学数据分析平台  </p><p><strong><a href="http://magen.whu.edu.cn/">http://magen.whu.edu.cn/</a></strong>  </p><p>锦葵科比较基因组数据库   </p><p><strong><a href="http://structuralbiology.cau.edu.cn/gossypium/">http://structuralbiology.cau.edu.cn/gossypium/</a></strong> </p><p>二倍体和多倍体棉花基因网络与功能模块比较分析平台   </p><p><strong><a href="http://ted.bti.cornell.edu/">http://ted.bti.cornell.edu/</a></strong> </p><p>番茄功能基因组数据库   </p><p><strong><a href="https://www.inetbio.org/tomatonet/">https://www.inetbio.org/tomatonet/</a></strong>   </p><p>番茄的复杂性状挖掘的全基因组协同网络平台   </p><p><strong><a href="http://ted.bti.cornell.edu/epigenome/">http://ted.bti.cornell.edu/epigenome/</a></strong> </p><p>番茄表观基因组数据库   </p><p><strong><a href="http://tea.solgenomics.net/">http://tea.solgenomics.net/</a></strong>  </p><p>番茄基因及其产物的高分辨率图谱和搜索工具   </p><p><strong><a href="http://tomexpress.toulouse.inra.fr/">http://tomexpress.toulouse.inra.fr/</a></strong> </p><p>番茄转录组数据可视化和分析平台   </p><p><strong><a href="https://solgenomics.net/">https://solgenomics.net/</a></strong> </p><p>茄科物种基因组测序数据库   </p><p><strong><a href="http://tropgenedb.cirad.fr/">http://tropgenedb.cirad.fr/</a></strong>   </p><p>管理热带作物的遗传和基因组信息的数据库 </p><p><strong><a href="http://medicinalplantgenomics.msu.edu/participants.shtml">http://medicinalplantgenomics.msu.edu/participants.shtml</a></strong>  </p><p>药用植物基因组和代谢组资源库   </p><p><strong><a href="http://gabipd.org/projects/Pomamo/">http://gabipd.org/projects/Pomamo/</a></strong> </p><p>马铃薯生物信息数据库   </p><p><strong><a href="http://vitisgdb.ynau.edu.cn/">http://vitisgdb.ynau.edu.cn/</a></strong></p><p>葡萄育种和遗传信息综合数据库  </p><p><strong><a href="http://structuralbiology.cau.edu.cn/sorghum/">http://structuralbiology.cau.edu.cn/sorghum/</a></strong></p><p>高梁功能基因组学数据库   </p><p><strong><a href="http://structuralbiology.cau.edu.cn/SIFGD/">http://structuralbiology.cau.edu.cn/SIFGD/</a></strong> </p><p>谷子功能基因组学数据库   </p><p><strong><a href="http://pepperhub.hzau.edu.cn/pegnm/">http://pepperhub.hzau.edu.cn/pegnm/</a></strong></p><p>辣椒基因组信息数据库  </p><p><strong><a href="https://www.inetbio.org/wheatnet/">https://www.inetbio.org/wheatnet/</a></strong></p><p>面包小麦的全基因组规模功能基因网络数据库   </p><p><strong><a href="http://brassicadb.org/brad/">http://brassicadb.org/brad/</a></strong> </p><p>重要芸苔属作物全基因组规模的遗传数据库 <strong><a href="http://rapeseed.biocloud.net/home">http://rapeseed.biocloud.net/home</a></strong></p><p>油菜种质资源遗传信息共享平台网站  </p><p><strong><a href="http://cbi.hzau.edu.cn/bnapus">http://cbi.hzau.edu.cn/bnapus</a></strong>   </p><p>甘蓝型油菜泛基因组数据库   </p><p><strong><a href="http://www.brassicagenome.net/">http://www.brassicagenome.net/</a></strong>   </p><p>芸苔属作物基因组数据库   </p><p><strong><a href="http://cucurbitgenomics.org/">http://cucurbitgenomics.org/</a></strong></p><p>葫芦科植物基因组数据库  </p><p><strong><a href="http://coffee-genome.org/">http://coffee-genome.org/</a></strong></p><p>咖啡基因组学、遗传学、育种数据和分析工具   </p><p><strong><a href="http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp">http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp</a></strong>   </p><p>管理热带作物基因组，遗传和表型信息的数据库   </p><p><strong><a href="https://www.rosaceae.org/">https://www.rosaceae.org/</a></strong>  </p><p>蔷薇科植物基因组数据库   </p><h1 id="可用于植物研究的生信工具"><a href="#可用于植物研究的生信工具" class="headerlink" title="可用于植物研究的生信工具"></a>可用于植物研究的生信工具</h1><p><strong><a href="https://bio.tools/">https://bio.tools/</a></strong>   </p><p>生物信息学和生命科学软件工具门户   </p><p><strong><a href="http://abc.gao-lab.org/tools.php">http://abc.gao-lab.org/tools.php</a></strong>  </p><p>北京大学应用生物信息学中心工具库   </p><p><strong><a href="https://github.com/CJ-Chen/TBtools/releases">https://github.com/CJ-Chen/TBtools/releases</a></strong></p><p>Tbtools：用于生物大数据交互式分析的集成工具包   </p><p><strong><a href="http://www.cbs.dtu.dk/services/TargetP/">http://www.cbs.dtu.dk/services/TargetP/</a></strong> </p><p>TargetP：亚细胞定位 / N 端功能肽预测   </p><p><strong><a href="http://bioinformatics.cau.edu.cn/easygo/">http://bioinformatics.cau.edu.cn/easygo/</a></strong> </p><p>EasyGo：提供一系列待查基因的功能注释以及微阵列探针信息   </p><p><strong><a href="http://smart.embl-heidelberg.de/">http://smart.embl-heidelberg.de/</a></strong>  </p><p>SMART：蛋白保守结构域预测工具   </p><p><strong><a href="http://biology-assets.anu.edu.au/GenAlEx/Welcome.html">http://biology-assets.anu.edu.au/GenAlEx/Welcome.html</a></strong> </p><p>GenAlEx：群体遗传分析软件   </p><p><strong><a href="https://mapman.gabipd.org/mapman-download/">https://mapman.gabipd.org/mapman-download/</a></strong> </p><p>MapMan：适用于多组学数据分析的蛋白质分类和注释框架  </p><p><strong><a href="https://genevestigator.com/">https://genevestigator.com/</a></strong></p><p>GENEVESTIGATOR: 转录组数据挖掘比对云平台   </p><p><strong><a href="http://skl.scau.edu.cn/">http://skl.scau.edu.cn/</a></strong>  </p><p>CRISPR-GE: 用于 CRISPR 基因组编辑的便捷软件工具包   </p><p><strong><a href="http://skl.scau.edu.cn/dsdecode/">http://skl.scau.edu.cn/dsdecode/</a></strong>  </p><p>DSDecode：基于 Web 的用于对目标突变基因型的序列色谱图进行解码的工具   </p><p><strong><a href="https://github.com/srbehera11/stag-cns">https://github.com/srbehera11/stag-cns</a></strong></p><p>STAG-CNS：一种可用于任意数量物种的顺序保守非编码序列发现工具  </p><p><strong><a href="http://www.hi-tom.net/FED">http://www.hi-tom.net/FED</a></strong></p><p>FED：基因组编辑外源成分检测平台  </p><p><strong><a href="https://m2sb.org/">https://m2sb.org/</a></strong></p><p>GeneCloud：使用语义技术来扫描特定基因列表的基因描述   </p><p><strong><a href="https://mafft.cbrc.jp/alignment/server/">https://mafft.cbrc.jp/alignment/server/</a></strong></p><p>MAFFT：在线的序列比对工具   </p><p><strong><a href="http://wlab.ethz.ch/protter/start/">http://wlab.ethz.ch/protter/start/</a></strong>  </p><p>Protter：在线蛋白结构绘制工具   </p><p><strong><a href="https://www.evolgenius.info/evolview/">https://www.evolgenius.info/evolview/</a></strong></p><p>EvolView：用于可视化，注释和管理系统树的网络工具   </p><p><strong><a href="https://itol.embl.de/">https://itol.embl.de/</a></strong>  </p><p>iTOL：用于显示，注释和管理系统发育树的在线工具   </p><p><strong><a href="https://orthovenn2.bioinfotoolkits.net/">https://orthovenn2.bioinfotoolkits.net/</a></strong></p><p>OrthoVenn2：多物种直系同源基因簇比较和注释在线服务工具  </p><p><strong><a href="http://bioinformatics.cau.edu.cn/ARSER/">http://bioinformatics.cau.edu.cn/ARSER/</a></strong> </p><p>ARSER: 生物节律表达谱波形分析   </p><h1 id="植物研究专用工具"><a href="#植物研究专用工具" class="headerlink" title="植物研究专用工具"></a>植物研究专用工具</h1><p><strong><a href="http://www.bar.utoronto.ca/welcome.htm">http://www.bar.utoronto.ca/welcome.htm</a></strong> </p><p>BAR：植物生物学分析工具平台  </p><p><strong><a href="http://crispr.hzau.edu.cn/CRISPR2/">http://crispr.hzau.edu.cn/CRISPR2/</a></strong>  </p><p>CRISPR-P: 用于植物基因组编辑的改进的 CRISPR / Cas9 工具包   </p><p><strong><a href="https://www.michalopoulos.net/act/">https://www.michalopoulos.net/act/</a></strong>   </p><p>ACT：拟南芥共表达分析工具   </p><p><strong><a href="http://orygenesdb.cirad.fr/">http://orygenesdb.cirad.fr/</a></strong></p><p>OryGenesDB：用于水稻反向遗传学研究的交互式工具   </p><p><strong><a href="http://signal.salk.edu/cgi-bin/tdnaexpress">http://signal.salk.edu/cgi-bin/tdnaexpress</a></strong></p><p>T-DNA Express：拟南芥基因定位工具  </p><p><strong><a href="http://plantgrn.noble.org/pssRNAit/">http://plantgrn.noble.org/pssRNAit/</a></strong>  </p><p>pssRNAit: 通过全基因组脱靶基因评估设计有效和特异性的植物 RNAi siRNA   </p><p><strong><a href="http://www.personal.psu.edu/sma3/CLIMtools.html">http://www.personal.psu.edu/sma3/CLIMtools.html</a></strong>   </p><p>CLIMtools：基于网络的研究拟南芥基因型、表型和环境相关性的交互式数据库工具 </p><p><strong><a href="http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi">http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi</a></strong>  </p><p>Plant MetGenMAP：在生化途径的背景下全面挖掘和整合基因表达和代谢物变化的网络工具 </p><p><strong><a href="http://itak.feilab.net/cgi-bin/itak/index.cgi">http://itak.feilab.net/cgi-bin/itak/index.cgi</a></strong> </p><p>iTAK：用于识别和分类植物转录因子和蛋白激酶的软件包  </p><p><strong><a href="http://plantpan2.itps.ncku.edu.tw/">http://plantpan2.itps.ncku.edu.tw/</a></strong>  </p><p>PlantPAN：检测植物转录因子结合位点的工具  </p><p><strong><a href="http://guoweilong.github.io/SnpHub/">http://guoweilong.github.io/SnpHub/</a></strong>  </p><p>SnpHub：用于探索大规模基因组变异数据的统一的网络服务器框架 </p><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装hexo遇到的bug及解决方法</title>
      <link href="/article/c12a96f2/"/>
      <url>/article/c12a96f2/</url>
      
        <content type="html"><![CDATA[<ul><li>如果在运行<code>hexo init</code>和<code>npm install</code>报错的话，用 Node.js 自带的 <code>Node.js command prompt</code> 执行这两个命令就行了。</li><li>在<code>cmd</code>命令行中且切换目录：<code>cd /d d:</code></li></ul><span id="more"></span><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代谢组S-plot</title>
      <link href="/article/a1ccb979/"/>
      <url>/article/a1ccb979/</url>
      
        <content type="html"><![CDATA[<p>经过一翻探索，终于把OPLS-DA里面的S-plot给搞清楚了！</p><span id="more"></span><p>在代谢组学中，<code>S-plot</code>常用来展示差异代谢物。横坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的协方差，纵坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的相关性。通常筛选相关性≥0.8的代谢物为差异代谢物。也可以将代谢物的<code>VIP</code>值用不同的颜色进行展示。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># load  packages</span><br>library<span class="hljs-punctuation">(</span>ropls<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>Cairo<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>extrafont<span class="hljs-punctuation">)</span><br>loadfonts<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># load data</span><br>data<span class="hljs-punctuation">(</span>sacurine<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>sacurine<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># OPLS-DA</span><br>oplsda <span class="hljs-operator">=</span> opls<span class="hljs-punctuation">(</span>dataMatrix<span class="hljs-punctuation">,</span> genderFc<span class="hljs-punctuation">,</span> predI <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> orthoI <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br><br>loading <span class="hljs-operator">=</span> oplsda<span class="hljs-operator">@</span>scoreMN <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>df <span class="hljs-operator">=</span> sacurine<span class="hljs-punctuation">[[</span><span class="hljs-string">"dataMatrix"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>cor.value <span class="hljs-operator">=</span> WGCNA<span class="hljs-operator">::</span>cor<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> loading<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>cor.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-string">'cor'</span><br><br>cov.value <span class="hljs-operator">=</span> cov<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> loading<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>cov.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-string">'cov'</span><br><br>res <span class="hljs-operator">=</span> cbind<span class="hljs-punctuation">(</span>cor.value<span class="hljs-punctuation">,</span> cov.value<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>res<span class="hljs-operator">$</span>col <span class="hljs-operator">=</span> ifelse<span class="hljs-punctuation">(</span>res<span class="hljs-operator">$</span>cor <span class="hljs-operator">&gt;</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span><span class="hljs-string">'Positive'</span><span class="hljs-punctuation">,</span><br>                 ifelse<span class="hljs-punctuation">(</span>res<span class="hljs-operator">$</span>cor <span class="hljs-operator">&lt;</span> <span class="hljs-operator">-</span><span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'Negative'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'NS'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>res<span class="hljs-operator">$</span>col <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>res<span class="hljs-operator">$</span>col<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>res<span class="hljs-operator">$</span>col<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>p <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>res<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>cov<span class="hljs-punctuation">,</span> cor<span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> col<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'blue'</span><span class="hljs-punctuation">,</span> <span class="hljs-string">'red'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">'Cov'</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'Corr'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>p<br><br>ggsave<span class="hljs-punctuation">(</span>p<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'S-plot.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2画箭头</title>
      <link href="/article/f2d7bee6/"/>
      <url>/article/f2d7bee6/</url>
      
        <content type="html"><![CDATA[<p>突然有个用<code>ggplot2</code>画箭头的需求，So，搞它！</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br>data<span class="hljs-punctuation">(</span><span class="hljs-string">"iris"</span><span class="hljs-punctuation">)</span><br><br>pca <span class="hljs-operator">=</span> prcomp<span class="hljs-punctuation">(</span>iris<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>score <span class="hljs-operator">=</span> pca<span class="hljs-punctuation">[[</span><span class="hljs-string">"x"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>loading <span class="hljs-operator">=</span> pca<span class="hljs-punctuation">[[</span><span class="hljs-string">"rotation"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br>ggplot<span class="hljs-punctuation">(</span>score<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>PC1<span class="hljs-punctuation">,</span> PC2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> iris<span class="hljs-operator">$</span>Species<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_segment<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> loading<span class="hljs-punctuation">,</span><br>               aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> PC1<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> PC2<span class="hljs-punctuation">,</span> xend <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               arrow <span class="hljs-operator">=</span> arrow<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-operator">=</span>unit<span class="hljs-punctuation">(</span><span class="hljs-number">0.20</span><span class="hljs-punctuation">,</span><span class="hljs-string">"cm"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                             ends<span class="hljs-operator">=</span><span class="hljs-string">"first"</span><span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">"closed"</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>               size <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_text<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> loading<span class="hljs-punctuation">,</span><br>            aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> PC1<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> PC2<span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>loading<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>            size <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献检索、追踪、阅读等小总结</title>
      <link href="/article/6cdff7bd/"/>
      <url>/article/6cdff7bd/</url>
      
        <content type="html"><![CDATA[<p>去年写了个小总结，包含了文献检索等（简书地址：<a href="https://www.jianshu.com/p/3e17e9b7fac8）。">https://www.jianshu.com/p/3e17e9b7fac8）。</a></p><span id="more"></span><p>时间悄然过去一年多了，关于文献检索、追踪及下载有了新的认识。从头梳理一遍，一方面希望能帮助到实验室的师弟师妹，另外一方面也是对自己知识体系的一个梳理。（注：本文部分内容来自互联网，如有侵权，请联系我们进行修改或删除）</p><h1 id="文献分类"><a href="#文献分类" class="headerlink" title="文献分类"></a>文献分类</h1><p>按照文字分类，可以简单将文献分成两类：</p><ol><li>中文；</li><li>英文。</li></ol><p>按照文章类型来分，可以分成如下几类：</p><ol><li>Article（我称它为“研究论文”）</li><li>Review（“综述”）</li><li>Letter（“信”）</li></ol><p>其中最常见的是Article，其次是Review。</p><h1 id="文献阅读顺序"><a href="#文献阅读顺序" class="headerlink" title="文献阅读顺序"></a>文献阅读顺序</h1><p>文献千千万，那怎么开始阅读呢？</p><p>如果进入的领域是全新的，那我的经验是这样的：</p><p>本实验室和自己方向相关的师兄师姐的毕业论文→本领域的优秀博士论文→优秀中文综述→优秀英文综述→优秀Article。</p><p>为什么先看师兄师姐的论文？</p><ol><li>毕业论文中有详尽的研究背景、试验方法等；</li><li>毕业论文中用到的仪器通常是本实验室就有的，实现了解什么仪器能解决什么问题；</li><li>从师兄师姐毕业论文中的展望部分说不定就是自己的研究方向呢。</li></ol><p>其次是优秀的博士论文的原因有这样几点：</p><ol><li>文字是中文，看起来OK；</li><li>优秀的博士论文有详尽的文献综述，对专业名词还有详尽的解释，不用漫山遍野查专业名词的意思；</li><li>优秀博士论文的参考文献通常是本领域最新的。</li></ol><p>优秀的中文综述和英文综述是互补的。</p><p>我还记得导师给我的第一篇文章是：<strong>Root exudates: the hidden part of plant defense</strong>$^{[1]}$。真的是看到崩溃啊，根本看不懂那些专有名词啊。果断放弃了，后面再去看的时候好很多了。</p><p>优秀的综述有什么用呢？一个最大的用处在后面揭晓。</p><p>Article就是日常浏览or精读的文献类型了。</p><h1 id="一篇文献的组成及功能"><a href="#一篇文献的组成及功能" class="headerlink" title="一篇文献的组成及功能"></a>一篇文献的组成及功能</h1><p>以Article文章为例，一篇文献通常有如下部分组成：</p><ol><li>文献标题：通常文献标题就是文献内容的高度概括，在浏览文献的时候看看标题就知道是不是自己要的文献了；</li><li>作者信息：每个领域做得非常好的机构/研究者往往就那么几个，可以重点关注某些大佬的是实验室动态；</li><li>摘要：摘要是一篇文章的精髓。通常包含了背景、目的、方法、结果、结论、展望等几个部分，日常看文献也大多是看这个部分；</li><li>关键词：这个部分就是这篇文献的主要相关的东西，而这个部分通常是后面我们讲文献追踪时用到的；</li><li>研究背景：在这个部分通常会对本领域的研究进行简单的总结，然后说还有说明问题有待解决，而“我这个研究刚好解决了这个问题”；</li><li>材料与方法：在这个部分，优秀的期刊通常会写得很详细，如用什么植株、有没有用突变体、怎么得到突变体等，这个部分有个越来越重要的内容是数据和代码，尤其是生命科学领域，通常会涉及到测序和分析，优秀的文章通常是提供对应的数据和代码的，在这个部分通常能知道当前主流的方法是什么，用了什么软件等；</li><li>结果：这个部分就是对每个图的描述；</li><li>讨论：结合前人的研究，对自己的试验结果进行讨论；</li><li>结论：这篇文献的结论是什么；</li><li>致谢：对研究有帮助的人/机构/公司进行感谢；</li><li>附件材料：正文的图表是最关键最重要的内容，有些文献会附上附件进行更详尽的解释；</li><li>参考文献：这篇文献引用的文献。</li></ol><h1 id="如何检索文献"><a href="#如何检索文献" class="headerlink" title="如何检索文献"></a>如何检索文献</h1><p>首先先找实验室师兄师姐相关的毕业论文进行阅读。</p><p>检索网站：</p><ol><li><p>中文：中国知网基本够了，其他的还有万方、百度学术、必应学术等。推荐的顺序是：知网＞必应学术＞百度学术。关于知网的使用技巧参照知乎帖子：<a href="https://zhuanlan.zhihu.com/p/52476553">https://zhuanlan.zhihu.com/p/52476553</a></p></li><li><p>英文：谷歌学术、WOS（Web Of Science）、Pubmed、必应学术、百度学术、知网。推荐的使用顺序是： 谷歌学术＞Pubmed＞WOS&gt;必应学术＞百度学术。WOS的话需要登录才能使用，通过WOS检索是最准确的，如果学校没有购买数据库的话只能去淘宝买账号了。PubMed的话访问速度比较慢，如果习惯使用PubMed的话，可以参照<a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1603760985&amp;ver=2669&amp;signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&amp;new=1设置影响因子筛选器，就可以按照影响因子对文献进行筛选了。百度学术、必应学术及知网我使用较少。">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1603760985&amp;ver=2669&amp;signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&amp;new=1设置影响因子筛选器，就可以按照影响因子对文献进行筛选了。百度学术、必应学术及知网我使用较少。</a><br>谷歌学术在国内是无法正常访问的，但是可以通过浏览器插件或者镜像网站进行访问。浏览器插件的使用参照：<a href="https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&amp;mid=2247492278&amp;idx=1&amp;sn=ff9afc876e1f6da5029d27fde52e8c08&amp;chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&amp;mid=2247492278&amp;idx=1&amp;sn=ff9afc876e1f6da5029d27fde52e8c08&amp;chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&amp;scene=21#wechat_redirect</a><br>镜像网站目前这几个可以用：</p><p> <a href="https://xueshu.lanfanshu.cn/">https://xueshu.lanfanshu.cn/</a><br><a href="https://xueshu.kiphub.com/">https://xueshu.kiphub.com/</a><br> <a href="https://xueshu.lanfanshu.cn/">https://xueshu.lanfanshu.cn/</a><br>除此之外，推荐一个集成网站：大木虫学术导航<a href="http://www.4243.net/，里面能够找到各种常用的学术网站，包括谷歌学术等。">http://www.4243.net/，里面能够找到各种常用的学术网站，包括谷歌学术等。</a></p></li></ol><p>如何检索文献呢？我们根据文献的组成来看看怎么检索文献：</p><ol><li>按标题进行检索：快准狠，没得说，随便找个数据库都可以；</li><li>按作者进行检索：通常能够找到某个研究者的所有论文，这时候就需要根据时间、影响因子、被引等信息进行筛选；</li><li>按关键词进行筛选：这是最常见的检索方式，如以<code>Root exudates</code>进行检索，还可以假设一些检索限定词进行检索，如<code>"Root exudates"</code>和<code>Root exudates</code> 是不一样的，加上引号以后就是把引号里面的内容当成了一个整体进行检索了，<code>”root exudates“ 2015</code>表示的是限定在2015年进行检索；除此之外，还可以加上一些逻辑连接词进行检索，如<code>AND</code>、<code>OR</code>以及<code>NOT</code>；</li><li>从参考文献反推：找到一篇优秀的综述，优秀的综述引用的文献通常是最经典、最新的，直接从这篇综述的参考文献里面去找文献，这样最大的好处是这些文献都是和这个领域高度相关的，再稍加研究就能发现这个领域的大佬是那些了，如<strong>Root exudates: the hidden part of plant defense</strong>$^{[1]}$这篇综述的参考文献就有100篇，如果看（浏览）完这100篇文献，那对根系分泌物肯定能有个了解了。</li></ol><h1 id="文献下载"><a href="#文献下载" class="headerlink" title="文献下载"></a>文献下载</h1><p>检索完文献后通常需要对文献进行下载，下载分成那么几种情况：</p><ol><li><p>学校购买了对应数据库的直接连接上校园网下载即可，如中国知网，大多高校都购买了，直接连上校园网下载即可；</p></li><li><p>如果学校没有购买数据库或者是需要下载文献的时候没法连接校园网呢：</p><ul><li><p>请别人下载，我就经常请985的同学帮忙下载文献，好的学校通常数据库也买得多；</p></li><li><p>知网免费下载网站：<a href="https://www.cn-ki.net/，每天可以免费下载3篇（好像）；">https://www.cn-ki.net/，每天可以免费下载3篇（好像）；</a></p></li><li><p>Sci-Hub：这个网站（<a href="http://sci-hub.ren/）在科研圈的重要性，那是不言自明的，通常能够下载到90%以上的文献。不过由于被各大出版社封杀，网站也在不断换地址，网址无法使用时去维基百科看看新的网址就可以了：https://en.wikipedia.org/wiki/Sci-Hub。这个网站我的体验是校园网下载比手机热点块。">http://sci-hub.ren/）在科研圈的重要性，那是不言自明的，通常能够下载到90%以上的文献。不过由于被各大出版社封杀，网站也在不断换地址，网址无法使用时去维基百科看看新的网址就可以了：https://en.wikipedia.org/wiki/Sci-Hub。这个网站我的体验是校园网下载比手机热点块。</a></p><p>除了通过DOI或者PMID进行下载外，Sci-Hub还有个更酷的使用的方法：Chrome装上油猴插件，再装上<strong>Sci-hub button</strong>这个插件，然后就会对网页上的DOI号进行自动标识，只需要点那个图标就能进行文献下载了，如下图：</p></li></ul></li><li><p>其他文献下载方法<br>对那些在知网上需要收费的文献，可以直接到期刊的网站看看是不是可以下载，我试了很多次，通常在期刊网页是可以免费下载的。对英文期刊，如果Sci-Hub无法下载的话，可以去researchgate看看有没有完整的PDF版本；如果上述所有方法都无法下载到的话，可以发邮件给通讯作者试试看能不能得到PDF版本。</p></li><li><p>书籍下载<br>通常需要下载一些书籍，我下载书籍通常只用两种方法就能搞定：</p><ul><li>就摸搜素：<a href="https://www.jiumodiary.com/。这个网站能找到大部分书籍，不管是中文还是英文的都可以找到；">https://www.jiumodiary.com/。这个网站能找到大部分书籍，不管是中文还是英文的都可以找到；</a></li><li>上面这个网站找不到的，我就去淘宝，淘宝也没有的话，我就放弃了。</li></ul></li><li><p>试验方法下载</p><p>当前最新的系统的试验方法下载的网站是<a href="https://bio-protocol.org/cn/Default.aspx。详细到用什么耗材都会写，更酷炫的是还有视频啊。这个网站上的试验方法通常是优秀文献中的试验方法进行总结的；还能发现数据分析教程，可以说是个宝藏了。">https://bio-protocol.org/cn/Default.aspx。详细到用什么耗材都会写，更酷炫的是还有视频啊。这个网站上的试验方法通常是优秀文献中的试验方法进行总结的；还能发现数据分析教程，可以说是个宝藏了。</a></p></li></ol><h1 id="文献追踪"><a href="#文献追踪" class="headerlink" title="文献追踪"></a>文献追踪</h1><p>每时每刻新的文献浩如烟海，该怎么知道感兴趣领域的最新进展呢？这里说的“最新进展”是相对的，真真正正最新的东西在研究人员的脑海中，发表出来的说不定都是一两年前的工作了。那该怎么追踪这些最新的动态呢？我主要有下面这几种方法：</p><ol><li>关注公众号<br>关注优秀的公众号，这些优秀的公众号通常会推送最新发表的文献，如10月27日凌晨中科院遗传发育所在<strong><em>Nature genetic</em></strong>上发表了小麦的群体遗传文章，马上就有公众号进行推送了。</li><li>Stork文献鸟<br>网址：<a href="https://www.storkapp.me/?logout=1。这个网站是免费注册的，使用超级简单，邮箱注册，然后添加关键词，再设置推送频率（每天或每周）就可以了。关键词可以是研究人员的姓名、研究者机构(高校、院所等)、也可以是真真正正的关键词，也就是文献里面的`Key">https://www.storkapp.me/?logout=1。这个网站是免费注册的，使用超级简单，邮箱注册，然后添加关键词，再设置推送频率（每天或每周）就可以了。关键词可以是研究人员的姓名、研究者机构(高校、院所等)、也可以是真真正正的关键词，也就是文献里面的`Key</a> words`。现在添加关键词以后还能自动评估关键词的质量。</li><li>不定期浏览期刊网站<br>这种方法很难get到很相关的文献，但是可以浏览浏览，如果运气好的话，能发现新的东西。</li><li>RSS订阅<br>我后来很少用RSS订阅了，就不展开说了，有前面几种方法足够了。</li></ol><h1 id="文献管理"><a href="#文献管理" class="headerlink" title="文献管理"></a>文献管理</h1><p>文献管理软件有好多种，针对中文英文都有不同的软件，具体比较可以参照这个帖子：<a href="https://www.biomart.cn/experiment/793/2714581.htm，然后选择自己喜欢的软件即可。我最常用的是Endnote，加上OneDrive云同步，简直不要太爽，可以多台电脑无缝衔接。使用教程的话可以参考中科大罗昭锋老师的教程：https://www.bilibili.com/video/BV1Bz411B7qZ?from=search&amp;seid=12380402443859107521。公众号的话可以看看`子聿学长`。我使用Endnote的原因有几点：">https://www.biomart.cn/experiment/793/2714581.htm，然后选择自己喜欢的软件即可。我最常用的是Endnote，加上OneDrive云同步，简直不要太爽，可以多台电脑无缝衔接。使用教程的话可以参考中科大罗昭锋老师的教程：https://www.bilibili.com/video/BV1Bz411B7qZ?from=search&amp;seid=12380402443859107521。公众号的话可以看看`子聿学长`。我使用Endnote的原因有几点：</a></p><ol><li><p>插入文献管理方便（习惯了就不想换软件了）</p></li><li><p>插入参考文献方便</p><p>写毕业论文的时候就知道Endnote有多爽了，不但有现成的期刊引文格式，还能自定义，足以应付各种参考文献格式要求。</p></li></ol><p>在使用过程中发现几个小的不足：</p><ol><li>谷歌学术导出的参考文献格式通常会把期刊显示到作者一栏，需要手动修改；</li><li>直接在文献主页导出<code>RIS</code>格式的比<code>enw</code>格式的更容易正确识别。</li></ol><p>在公众号后台回复<code>endnote</code>就能下载到中科大大账号版本的Endnote，无需破解，完全正版。</p><h1 id="文献笔记与输出"><a href="#文献笔记与输出" class="headerlink" title="文献笔记与输出"></a>文献笔记与输出</h1><p>输入与输出是同等重要的，输入是吸收的过程，输出是对吸收的知识进行重塑的过程，有没有真真正正了解某个知识点，最好的方法就是看看能不能无压力输出。关于文献输入，我有一些小的体会：</p><ol><li>在文献中看当前的研究前沿热点，看看那些优秀的文章都在做啥；</li><li>在材料与方法中找到当下最新的方法，重点关注自己能够用到的方法、软件等；</li><li>在讨论部分看看这个研究工作还有啥能做的，指出这个研究的不足之处（这个还有待加进）；</li><li>仔细研究研究文章中的图表，看看别人是怎么用图表来展示数据的，往后自己的类似数据就可以借鉴类似的展示方法；</li><li>往往第一篇英文文献是最痛苦的，专业名词看不懂、句子看不懂、图看不懂，没办法，只能慢慢来；</li><li>不推荐某些全文翻译软件，如X云文献翻译，翻译出来了虽然看着很快，但是在无形中失去了那个过程，以后遇到英文文献还是看不懂（个人观点）（PS：专业名词的翻译的话推荐<code>知网学术翻译</code>：<a href="http://dict.cnki.net/，日常翻译推荐谷歌翻译：https://translate.google.cn/）。">http://dict.cnki.net/，日常翻译推荐谷歌翻译：https://translate.google.cn/）。</a></li></ol><p>有了输入之后应该有输出，输出的方式很多，如做报告、写公众号（<code>南农LorMe</code>在文献分享方面做得真的很棒）等，也有很多的个人平台可以进行输出，如简书等。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>文献阅读是个过程。研一，导师的要求是一周一篇英文文献精读+PPT汇报，那时候的感受就是痛苦啊；现在是基本每周一篇英文文献+公众号，也很庆幸这两年都是这样过来的，现在看文献基本不用翻译了，看本领域的英文书籍也基本能应付，偶尔遇到专业知识的盲点的时候再查缺补漏。</p><blockquote><p>人生没有无用的经历。</p></blockquote><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>[1] Baetz U, Martinoia E. Root exudates: the hidden part of plant defense[J]. <strong><em>Trends in Plant Science</em></strong>, 2014, 19(2): 90-98.</p></blockquote><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文献 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OPLS-DA在R语言中的实现</title>
      <link href="/article/3f4f7ea1/"/>
      <url>/article/3f4f7ea1/</url>
      
        <content type="html"><![CDATA[<p>主成分分析（Principal Component Analysis，PCA）是一种无监督降维方法，能够有效对高维数据进行处理。但PCA对相关性较小的变量不敏感，而PLS-DA（Partial Least Squares-Discriminant Analysis，偏最小二乘判别分析）能够有效解决这个问题。而OPLS-DA（正交偏最小二乘判别分析）结合了正交信号和PLS-DA来筛选差异变量。</p><span id="more"></span> <p>图片来自：<a href="https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/">https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/</a></p><h1 id="安装和加载包"><a href="#安装和加载包" class="headerlink" title="安装和加载包"></a>安装和加载包</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># install ropls</span><br><span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>requireNamespace<span class="hljs-punctuation">(</span><span class="hljs-string">"BiocManager"</span><span class="hljs-punctuation">,</span> quietly <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">"BiocManager"</span><span class="hljs-punctuation">)</span><br>  <br>  BiocManager<span class="hljs-operator">::</span>install<span class="hljs-punctuation">(</span><span class="hljs-string">"ropls"</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br><span class="hljs-comment"># load  packages</span><br>library<span class="hljs-punctuation">(</span>ropls<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggsci<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>Cairo<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>extrafont<span class="hljs-punctuation">)</span><br>loadfonts<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><h1 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># load data</span><br>data<span class="hljs-punctuation">(</span>sacurine<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>sacurine<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># view data information</span><br>attach<span class="hljs-punctuation">(</span>sacurine<span class="hljs-punctuation">)</span><br>strF<span class="hljs-punctuation">(</span>dataMatrix<span class="hljs-punctuation">)</span><br>strF<span class="hljs-punctuation">(</span>sampleMetadata<span class="hljs-punctuation">)</span><br>strF<span class="hljs-punctuation">(</span>variableMetadata<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>这个数据集是不同年龄、性别和BMI的183个人的尿液中109种代谢物的浓度差异$^{[1]}$。下面的分析主要以性别为变量来研究不同性别人群尿液种代谢物的差异。下面的分析主要包含PCA、PLS-DA和OPLS-DA。</p><h1 id="PCA分析"><a href="#PCA分析" class="headerlink" title="　PCA分析"></a>　PCA分析</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># PCA analysis</span><br>pca <span class="hljs-operator">=</span> opls<span class="hljs-punctuation">(</span>dataMatrix<span class="hljs-punctuation">)</span><br>genderFc <span class="hljs-operator">=</span> sampleMetadata<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"gender"</span><span class="hljs-punctuation">]</span><br><br>pdf<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">'figures/PCA.pdf'</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br>plot<span class="hljs-punctuation">(</span>pca<span class="hljs-punctuation">,</span> typeVc <span class="hljs-operator">=</span> <span class="hljs-string">"x-score"</span><span class="hljs-punctuation">,</span><br>     parAsColFcVn <span class="hljs-operator">=</span> genderFc<span class="hljs-punctuation">,</span> parEllipsesL <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>可以看到的是如果用PCA的话，不同性别的人群是混在一起的。</p><h1 id="PLS-DA"><a href="#PLS-DA" class="headerlink" title="PLS-DA"></a>PLS-DA</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># PLSDA analysis</span><br>plsda <span class="hljs-operator">=</span> opls<span class="hljs-punctuation">(</span>dataMatrix<span class="hljs-punctuation">,</span>genderFc<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># sample scores plot</span><br>sample.score <span class="hljs-operator">=</span> plsda<span class="hljs-operator">@</span>scoreMN <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  mutate<span class="hljs-punctuation">(</span>gender <span class="hljs-operator">=</span> sacurine<span class="hljs-punctuation">[[</span><span class="hljs-string">"sampleMetadata"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"gender"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  <br>p1 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>sample.score<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> gender<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">'P1(10.0%)'</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'P2(9%)'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  stat_ellipse<span class="hljs-punctuation">(</span>level <span class="hljs-operator">=</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'solid'</span><span class="hljs-punctuation">,</span> <br>               size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> show.legend <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'#008000'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'#FFA74F'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.9</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'figures/pls.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>和PCA相比，PLS-DA的效果相对较好。PLS-DA分析的目的是找到差异变量（本例中的109种代谢物的某几种）。因此，需要找到VIP值大于1的变量（代谢物）：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># VIP scores plot</span><br>vip.score <span class="hljs-operator">=</span> as.data.frame<span class="hljs-punctuation">(</span>plsda<span class="hljs-operator">@</span>vipVn<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>vip.score<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-string">'vip'</span><br>vip.score<span class="hljs-operator">$</span>metabolites <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>vip.score<span class="hljs-punctuation">)</span><br>vip.score <span class="hljs-operator">=</span> vip.score<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>vip.score<span class="hljs-operator">$</span>vip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>vip.score<span class="hljs-operator">$</span>metabolites <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>vip.score<span class="hljs-operator">$</span>metabolites<span class="hljs-punctuation">,</span><br>                               levels <span class="hljs-operator">=</span> vip.score<span class="hljs-operator">$</span>metabolites<span class="hljs-punctuation">)</span><br><br>loading.score <span class="hljs-operator">=</span> plsda<span class="hljs-operator">@</span>loadingMN <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>loading.score<span class="hljs-operator">$</span>metabolites <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>loading.score<span class="hljs-punctuation">)</span><br><br>all.score <span class="hljs-operator">=</span> merge<span class="hljs-punctuation">(</span>vip.score<span class="hljs-punctuation">,</span> loading.score<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'metabolites'</span><span class="hljs-punctuation">)</span><br><br>all.score<span class="hljs-operator">$</span>cat <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>all.score<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><br><br>p2 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>all.score<span class="hljs-punctuation">[</span>all.score<span class="hljs-operator">$</span>vip <span class="hljs-operator">&gt;=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>cat<span class="hljs-punctuation">,</span> vip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_segment<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> cat<span class="hljs-punctuation">,</span> xend <span class="hljs-operator">=</span> cat<span class="hljs-punctuation">,</span><br>                   y <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> vip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>shape <span class="hljs-operator">=</span> <span class="hljs-number">21</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'#008000'</span> <span class="hljs-punctuation">,</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">'#008000'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">'VIP value'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">,</span><br>        legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text.x <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">90</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>p2<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'figures/pls_VIP.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>下面这些物质就是差异代谢物（VIP值大于等于1）：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs R"> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">gamma</span><span class="hljs-punctuation">)</span>Glu<span class="hljs-operator">-</span>Leu<span class="hljs-operator">/</span>Ile                                                                  <br> <span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-number">2</span><span class="hljs-operator">-</span>acetamido<span class="hljs-operator">-</span><span class="hljs-number">4</span><span class="hljs-operator">-</span>methylphenyl acetate                                                  <br> <span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-number">2</span><span class="hljs-operator">-</span>Methylhippuric acid                                                               <br> <span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><span class="hljs-operator">-</span>Methylcrotonylglycine                                                             <br> <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-operator">-</span>Dihydroxybenzeneacetic acid                                                     <br> <span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-operator">-</span>dihydroxybenzoic acid<span class="hljs-operator">/</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-operator">-</span>dihydroxybenzoic acid                                 <br> <span class="hljs-punctuation">[</span><span class="hljs-number">7</span><span class="hljs-punctuation">]</span> <span class="hljs-number">4</span><span class="hljs-operator">-</span>Acetamidobutanoic acid isomer <span class="hljs-number">3</span>                                                   <br> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span><span class="hljs-punctuation">]</span> <span class="hljs-number">6</span><span class="hljs-operator">-</span><span class="hljs-punctuation">(</span>carboxymethoxy<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>hexanoic acid                                                    <br> <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> Acetaminophen glucuronide                                                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span> Acetylphenylalanine                                                                 <br><span class="hljs-punctuation">[</span><span class="hljs-number">11</span><span class="hljs-punctuation">]</span> alpha<span class="hljs-operator">-</span>N<span class="hljs-operator">-</span>Phenylacetyl<span class="hljs-operator">-</span>glutamine                                                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">12</span><span class="hljs-punctuation">]</span> Asp<span class="hljs-operator">-</span>Leu<span class="hljs-operator">/</span>Ile isomer <span class="hljs-number">1</span>                                                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">13</span><span class="hljs-punctuation">]</span> Citric acid                                                                         <br><span class="hljs-punctuation">[</span><span class="hljs-number">14</span><span class="hljs-punctuation">]</span> Dehydroepiandrosterone <span class="hljs-number">3</span><span class="hljs-operator">-</span>glucuronide                                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">15</span><span class="hljs-punctuation">]</span> Dehydroepiandrosterone sulfate                                                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">16</span><span class="hljs-punctuation">]</span> Gluconic acid and<span class="hljs-operator">/</span>or isomers                                                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">17</span><span class="hljs-punctuation">]</span> Glucuronic acid and<span class="hljs-operator">/</span>or isomers                                                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">18</span><span class="hljs-punctuation">]</span> Glyceric acid                                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">19</span><span class="hljs-punctuation">]</span> Hippuric acid                                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">20</span><span class="hljs-punctuation">]</span> Hydroxybenzyl alcohol isomer                                                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">21</span><span class="hljs-punctuation">]</span> Malic acid                                                                          <br><span class="hljs-punctuation">[</span><span class="hljs-number">22</span><span class="hljs-punctuation">]</span> Methyl <span class="hljs-punctuation">(</span>hydroxymethyl<span class="hljs-punctuation">)</span>pyrrolidine<span class="hljs-operator">-</span>carboxylate<span class="hljs-operator">/</span>Methyl <span class="hljs-punctuation">(</span>hydroxy<span class="hljs-punctuation">)</span>piperidine<span class="hljs-operator">-</span>carboxylate<br><span class="hljs-punctuation">[</span><span class="hljs-number">23</span><span class="hljs-punctuation">]</span> Monoethyl phthalate                                                                 <br><span class="hljs-punctuation">[</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span> N<span class="hljs-operator">-</span>Acetyl<span class="hljs-operator">-</span>aspartic acid                                                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">25</span><span class="hljs-punctuation">]</span> Oxoglutaric acid                                                                    <br><span class="hljs-punctuation">[</span><span class="hljs-number">26</span><span class="hljs-punctuation">]</span> p<span class="hljs-operator">-</span>Anisic acid                                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">27</span><span class="hljs-punctuation">]</span> p<span class="hljs-operator">-</span>Hydroxyhippuric acid                                                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">28</span><span class="hljs-punctuation">]</span> Pantothenic acid                                                                    <br><span class="hljs-punctuation">[</span><span class="hljs-number">29</span><span class="hljs-punctuation">]</span> Pentose                                                                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">30</span><span class="hljs-punctuation">]</span> Phe<span class="hljs-operator">-</span>Tyr<span class="hljs-operator">-</span>Asp <span class="hljs-punctuation">(</span>and isomers<span class="hljs-punctuation">)</span>                                                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">31</span><span class="hljs-punctuation">]</span> Pyruvic acid                                                                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">32</span><span class="hljs-punctuation">]</span> Testosterone glucuronide                                                            <br><span class="hljs-punctuation">[</span><span class="hljs-number">33</span><span class="hljs-punctuation">]</span> Threonic acid<span class="hljs-operator">/</span>Erythronic acid                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">34</span><span class="hljs-punctuation">]</span> Valerylglycine isomer <span class="hljs-number">1</span>                                                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">35</span><span class="hljs-punctuation">]</span> Valerylglycine isomer <span class="hljs-number">2</span>                                                              <br></code></pre></td></tr></tbody></table></figure><p>将它们的VIP值得进行可视化（某些代谢物名称太长，进行转换表示）：</p><h1 id="OPLS-DA分析"><a href="#OPLS-DA分析" class="headerlink" title="OPLS-DA分析"></a>OPLS-DA分析</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># OPLS-DA analysis</span><br>oplsda <span class="hljs-operator">=</span> opls<span class="hljs-punctuation">(</span>dataMatrix<span class="hljs-punctuation">,</span> genderFc<span class="hljs-punctuation">,</span> predI <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> orthoI <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># sample scores plot</span><br>sample.score <span class="hljs-operator">=</span> oplsda<span class="hljs-operator">@</span>scoreMN <span class="hljs-operator">%&gt;%</span> <br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  mutate<span class="hljs-punctuation">(</span>gender <span class="hljs-operator">=</span> sacurine<span class="hljs-punctuation">[[</span><span class="hljs-string">"sampleMetadata"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"gender"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>         o1 <span class="hljs-operator">=</span> oplsda<span class="hljs-operator">@</span>orthoScoreMN<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>p3 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>sample.score<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> o1<span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> gender<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_vline<span class="hljs-punctuation">(</span>xintercept <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  <span class="hljs-comment">#geom_point(aes(-10,-10), color = 'white') +</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">'P1(5.0%)'</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'to1'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  stat_ellipse<span class="hljs-punctuation">(</span>level <span class="hljs-operator">=</span> <span class="hljs-number">0.95</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'solid'</span><span class="hljs-punctuation">,</span> <br>               size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> show.legend <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_color_manual<span class="hljs-punctuation">(</span>values <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'#008000'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'#FFA74F'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><span class="hljs-number">0.85</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>p3<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'figures/opls.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>可以看到的是OPLS-DA的效果比PLS-DA更好一些。</p><p>同样进行差异代谢物筛选：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># VIP scores plot</span><br>vip.score <span class="hljs-operator">=</span> as.data.frame<span class="hljs-punctuation">(</span>oplsda<span class="hljs-operator">@</span>vipVn<span class="hljs-punctuation">)</span><br>colnames<span class="hljs-punctuation">(</span>vip.score<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-string">'vip'</span><br>vip.score<span class="hljs-operator">$</span>metabolites <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>vip.score<span class="hljs-punctuation">)</span><br>vip.score <span class="hljs-operator">=</span> vip.score<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>vip.score<span class="hljs-operator">$</span>vip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>vip.score<span class="hljs-operator">$</span>metabolites <span class="hljs-operator">=</span> factor<span class="hljs-punctuation">(</span>vip.score<span class="hljs-operator">$</span>metabolites<span class="hljs-punctuation">,</span><br>                               levels <span class="hljs-operator">=</span> vip.score<span class="hljs-operator">$</span>metabolites<span class="hljs-punctuation">)</span><br><br>loading.score <span class="hljs-operator">=</span> oplsda<span class="hljs-operator">@</span>loadingMN <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>loading.score<span class="hljs-operator">$</span>metabolites <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>loading.score<span class="hljs-punctuation">)</span><br><br>all.score <span class="hljs-operator">=</span> merge<span class="hljs-punctuation">(</span>vip.score<span class="hljs-punctuation">,</span> loading.score<span class="hljs-punctuation">,</span> by <span class="hljs-operator">=</span> <span class="hljs-string">'metabolites'</span><span class="hljs-punctuation">)</span><br><br>all.score<span class="hljs-operator">$</span>cat <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">'A'</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>all.score<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><br><br>p4 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>all.score<span class="hljs-punctuation">[</span>all.score<span class="hljs-operator">$</span>vip <span class="hljs-operator">&gt;=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>cat<span class="hljs-punctuation">,</span> vip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_segment<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> cat<span class="hljs-punctuation">,</span> xend <span class="hljs-operator">=</span> cat<span class="hljs-punctuation">,</span><br>                   y <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> vip<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>shape <span class="hljs-operator">=</span> <span class="hljs-number">21</span><span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'#008000'</span> <span class="hljs-punctuation">,</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">'#008000'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> linetype <span class="hljs-operator">=</span> <span class="hljs-string">'dashed'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-string">'VIP value'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">,</span><br>        legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text.x <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">90</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p4<br>ggsave<span class="hljs-punctuation">(</span>p4<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'figures/opls_VIP.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>下面的的是差异代谢物：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs R"> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">gamma</span><span class="hljs-punctuation">)</span>Glu<span class="hljs-operator">-</span>Leu<span class="hljs-operator">/</span>Ile                                                                  <br> <span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-number">2</span><span class="hljs-operator">-</span>acetamido<span class="hljs-operator">-</span><span class="hljs-number">4</span><span class="hljs-operator">-</span>methylphenyl acetate                                                  <br> <span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-number">2</span><span class="hljs-operator">-</span>Methylhippuric acid                                                               <br> <span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><span class="hljs-operator">-</span>Methylcrotonylglycine                                                             <br> <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-operator">-</span>Dihydroxybenzeneacetic acid                                                     <br> <span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-operator">-</span>dihydroxybenzoic acid<span class="hljs-operator">/</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-operator">-</span>dihydroxybenzoic acid                                 <br> <span class="hljs-punctuation">[</span><span class="hljs-number">7</span><span class="hljs-punctuation">]</span> <span class="hljs-number">4</span><span class="hljs-operator">-</span>Acetamidobutanoic acid isomer <span class="hljs-number">3</span>                                                   <br> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span><span class="hljs-punctuation">]</span> <span class="hljs-number">6</span><span class="hljs-operator">-</span><span class="hljs-punctuation">(</span>carboxymethoxy<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>hexanoic acid                                                    <br> <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> Acetaminophen glucuronide                                                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span> Acetylphenylalanine                                                                 <br><span class="hljs-punctuation">[</span><span class="hljs-number">11</span><span class="hljs-punctuation">]</span> alpha<span class="hljs-operator">-</span>N<span class="hljs-operator">-</span>Phenylacetyl<span class="hljs-operator">-</span>glutamine                                                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">12</span><span class="hljs-punctuation">]</span> Asp<span class="hljs-operator">-</span>Leu<span class="hljs-operator">/</span>Ile isomer <span class="hljs-number">1</span>                                                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">13</span><span class="hljs-punctuation">]</span> Citric acid                                                                         <br><span class="hljs-punctuation">[</span><span class="hljs-number">14</span><span class="hljs-punctuation">]</span> Dehydroepiandrosterone <span class="hljs-number">3</span><span class="hljs-operator">-</span>glucuronide                                                <br><span class="hljs-punctuation">[</span><span class="hljs-number">15</span><span class="hljs-punctuation">]</span> Dehydroepiandrosterone sulfate                                                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">16</span><span class="hljs-punctuation">]</span> Gluconic acid and<span class="hljs-operator">/</span>or isomers                                                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">17</span><span class="hljs-punctuation">]</span> Glucuronic acid and<span class="hljs-operator">/</span>or isomers                                                      <br><span class="hljs-punctuation">[</span><span class="hljs-number">18</span><span class="hljs-punctuation">]</span> Glyceric acid                                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">19</span><span class="hljs-punctuation">]</span> Hippuric acid                                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">20</span><span class="hljs-punctuation">]</span> Hydroxybenzyl alcohol isomer                                                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">21</span><span class="hljs-punctuation">]</span> Malic acid                                                                          <br><span class="hljs-punctuation">[</span><span class="hljs-number">22</span><span class="hljs-punctuation">]</span> Methyl <span class="hljs-punctuation">(</span>hydroxymethyl<span class="hljs-punctuation">)</span>pyrrolidine<span class="hljs-operator">-</span>carboxylate<span class="hljs-operator">/</span>Methyl <span class="hljs-punctuation">(</span>hydroxy<span class="hljs-punctuation">)</span>piperidine<span class="hljs-operator">-</span>carboxylate<br><span class="hljs-punctuation">[</span><span class="hljs-number">23</span><span class="hljs-punctuation">]</span> Monoethyl phthalate                                                                 <br><span class="hljs-punctuation">[</span><span class="hljs-number">24</span><span class="hljs-punctuation">]</span> N<span class="hljs-operator">-</span>Acetyl<span class="hljs-operator">-</span>aspartic acid                                                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">25</span><span class="hljs-punctuation">]</span> Oxoglutaric acid                                                                    <br><span class="hljs-punctuation">[</span><span class="hljs-number">26</span><span class="hljs-punctuation">]</span> p<span class="hljs-operator">-</span>Anisic acid                                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">27</span><span class="hljs-punctuation">]</span> p<span class="hljs-operator">-</span>Hydroxyhippuric acid                                                              <br><span class="hljs-punctuation">[</span><span class="hljs-number">28</span><span class="hljs-punctuation">]</span> Pantothenic acid                                                                    <br><span class="hljs-punctuation">[</span><span class="hljs-number">29</span><span class="hljs-punctuation">]</span> Pentose                                                                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">30</span><span class="hljs-punctuation">]</span> Phe<span class="hljs-operator">-</span>Tyr<span class="hljs-operator">-</span>Asp <span class="hljs-punctuation">(</span>and isomers<span class="hljs-punctuation">)</span>                                                           <br><span class="hljs-punctuation">[</span><span class="hljs-number">31</span><span class="hljs-punctuation">]</span> Pyruvic acid                                                                        <br><span class="hljs-punctuation">[</span><span class="hljs-number">32</span><span class="hljs-punctuation">]</span> Testosterone glucuronide                                                            <br><span class="hljs-punctuation">[</span><span class="hljs-number">33</span><span class="hljs-punctuation">]</span> Threonic acid<span class="hljs-operator">/</span>Erythronic acid                                                       <br><span class="hljs-punctuation">[</span><span class="hljs-number">34</span><span class="hljs-punctuation">]</span> Valerylglycine isomer <span class="hljs-number">1</span>                                                             <br><span class="hljs-punctuation">[</span><span class="hljs-number">35</span><span class="hljs-punctuation">]</span> Valerylglycine isomer <span class="hljs-number">2</span>                                                             <br></code></pre></td></tr></tbody></table></figure><h1 id="模型训练与预测"><a href="#模型训练与预测" class="headerlink" title="模型训练与预测"></a>模型训练与预测</h1><p>这些降维的方法都属于机器学习算法，那就可以对模型进行训练，并用这个模型去预测未知的数据。</p><p>模型训练很简单：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># model training</span><br>oplsda.2 <span class="hljs-operator">=</span> opls<span class="hljs-punctuation">(</span>dataMatrix<span class="hljs-punctuation">,</span> genderFc<span class="hljs-punctuation">,</span> predI <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> orthoI <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span>subset <span class="hljs-operator">=</span> <span class="hljs-string">"odd"</span><span class="hljs-punctuation">)</span> <br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">OPLS<span class="hljs-operator">-</span>DA<br><span class="hljs-number">92</span> samples x <span class="hljs-number">109</span> variables and <span class="hljs-number">1</span> response<br>standard scaling of predictors and response<span class="hljs-punctuation">(</span>s<span class="hljs-punctuation">)</span><br>      R2X<span class="hljs-punctuation">(</span>cum<span class="hljs-punctuation">)</span> R2Y<span class="hljs-punctuation">(</span>cum<span class="hljs-punctuation">)</span> Q2<span class="hljs-punctuation">(</span>cum<span class="hljs-punctuation">)</span><br>Total     <span class="hljs-number">0.26</span>    <span class="hljs-number">0.825</span>   <span class="hljs-number">0.608</span><br>      RMSEE RMSEP pre ort<br>Total <span class="hljs-number">0.213</span> <span class="hljs-number">0.341</span>   <span class="hljs-number">1</span>   <span class="hljs-number">2</span><br>Warning message<span class="hljs-operator">:</span><br><span class="hljs-string">'permI'</span> set to <span class="hljs-number">0</span> because train<span class="hljs-operator">/</span>test partition is selected.<br></code></pre></td></tr></tbody></table></figure><p>可以看到使用了92个样本进行训练。</p><p>先看看模型在训练集上的准确率：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 模型在训练集上的准确率</span><br>trainVi <span class="hljs-operator">=</span> getSubsetVi<span class="hljs-punctuation">(</span>oplsda.2<span class="hljs-punctuation">)</span><br>tab <span class="hljs-operator">=</span> table<span class="hljs-punctuation">(</span>genderFc<span class="hljs-punctuation">[</span>trainVi<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> fitted<span class="hljs-punctuation">(</span>oplsda.2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>print<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">'模型准确率：'</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>diag<span class="hljs-punctuation">(</span>tab<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>tab<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">'%'</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">   M  <span class="hljs-built_in">F</span><br>  M <span class="hljs-number">50</span>  <span class="hljs-number">0</span><br>  <span class="hljs-built_in">F</span>  <span class="hljs-number">0</span> <span class="hljs-number">42</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">"模型准确率：100%"</span><br></code></pre></td></tr></tbody></table></figure><p>看模型在训练集上的准确率是没有什么意义的，要是在训练集的表现都不好，那模型一定不好。那看看模型在未知数据上的预测准确率吧：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># model on test data</span><br>tab2 <span class="hljs-operator">=</span> table<span class="hljs-punctuation">(</span>genderFc<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span>trainVi<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>predict<span class="hljs-punctuation">(</span>oplsda.2<span class="hljs-punctuation">,</span> dataMatrix<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span>trainVi<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>print<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">'模型准确率：'</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>diag<span class="hljs-punctuation">(</span>tab2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">/</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>tab2<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">'%'</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">     M  <span class="hljs-built_in">F</span><br>  M <span class="hljs-number">43</span>  <span class="hljs-number">7</span><br>  <span class="hljs-built_in">F</span>  <span class="hljs-number">7</span> <span class="hljs-number">34</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">"模型准确率：84.62%"</span><br></code></pre></td></tr></tbody></table></figure><p>这个准确率已经很棒了。</p><h1 id="差异代谢物其他筛选方法"><a href="#差异代谢物其他筛选方法" class="headerlink" title="差异代谢物其他筛选方法"></a>差异代谢物其他筛选方法</h1><p>除了用(O)PLS-DA中的VIP值对代谢物进行筛选，还可以用别的方法进行筛选，如<code>log2FC</code>等。通常是绘制火山图。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># volcano plot</span><br>df <span class="hljs-operator">=</span> dataMatrix <span class="hljs-operator">%&gt;%</span> as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>df<span class="hljs-operator">$</span>gender <span class="hljs-operator">=</span> sacurine<span class="hljs-punctuation">[[</span><span class="hljs-string">"sampleMetadata"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-string">"gender"</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>df <span class="hljs-operator">=</span> df<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>gender<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>df <span class="hljs-operator">=</span> df<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-operator">-</span><span class="hljs-number">110</span><span class="hljs-punctuation">]</span><br><br>M.mean <span class="hljs-operator">=</span> apply<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br>F.mean <span class="hljs-operator">=</span> apply<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">[</span><span class="hljs-number">101</span><span class="hljs-operator">:</span><span class="hljs-number">183</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br><br>FC <span class="hljs-operator">=</span> M.mean <span class="hljs-operator">/</span> F.mean<br>log2FC <span class="hljs-operator">=</span> <span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>FC<span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br><br>pvalue <span class="hljs-operator">=</span> apply<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">{</span>t.test<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>x<span class="hljs-punctuation">[</span><span class="hljs-number">101</span><span class="hljs-operator">:</span><span class="hljs-number">183</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>p.value<span class="hljs-punctuation">}</span><span class="hljs-punctuation">)</span><br><br>p.adj <span class="hljs-operator">=</span> p.adjust<span class="hljs-punctuation">(</span>pvalue<span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">'BH'</span><span class="hljs-punctuation">)</span><br>p.adj.log <span class="hljs-operator">=</span> <span class="hljs-operator">-</span>log10<span class="hljs-punctuation">(</span>p.adj<span class="hljs-punctuation">)</span><br><br>colcano.df <span class="hljs-operator">=</span> data.frame<span class="hljs-punctuation">(</span>log2FC<span class="hljs-punctuation">,</span>p.adj<span class="hljs-punctuation">,</span> p.adj.log<span class="hljs-punctuation">)</span><br>colcano.df<span class="hljs-operator">$</span>cat <span class="hljs-operator">=</span> ifelse<span class="hljs-punctuation">(</span>colcano.df<span class="hljs-operator">$</span>log2FC <span class="hljs-operator">&gt;=</span> <span class="hljs-number">1</span> <span class="hljs-operator">&amp;</span> colcano.df<span class="hljs-operator">$</span>p.adj <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><span class="hljs-string">'Up'</span><span class="hljs-punctuation">,</span><br>                        ifelse<span class="hljs-punctuation">(</span>colcano.df<span class="hljs-operator">$</span>log2FC <span class="hljs-operator">&lt;=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span> <span class="hljs-operator">&amp;</span> colcano.df<span class="hljs-operator">$</span>p.adj <span class="hljs-operator">&lt;</span> <span class="hljs-number">0.05</span><span class="hljs-punctuation">,</span><span class="hljs-string">'Down'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'NS'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>p5 <span class="hljs-operator">=</span> ggplot<span class="hljs-punctuation">(</span>colcano.df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>log2FC<span class="hljs-punctuation">,</span> p.adj.log<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> <span class="hljs-string">'-log10(p-value.adj)'</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">'none'</span><span class="hljs-punctuation">,</span><br>        legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.background <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        panel.grid <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.text.x <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>angle <span class="hljs-operator">=</span> <span class="hljs-number">90</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">15</span><span class="hljs-punctuation">,</span> family <span class="hljs-operator">=</span> <span class="hljs-string">'Arial'</span><span class="hljs-punctuation">,</span> face <span class="hljs-operator">=</span> <span class="hljs-string">'plain'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks.x <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p5<br>ggsave<span class="hljs-punctuation">(</span>p5<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> <span class="hljs-string">'20201214PLSDA分析/figures/volcano.pdf'</span><span class="hljs-punctuation">,</span> <br>       width <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> device <span class="hljs-operator">=</span> cairo_pdf<span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>可能是这个例子中的代谢物太少了，导致算完以后都没有差异代谢物了。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>[1] Thévenot E A, Roux A, Xu Y, et al. Analysis of the human adult urinary metabolome variations with age, body mass index, and gender by implementing a comprehensive workflow for univariate and OPLS statistical analyses[J]. <strong><em>Journal of proteome research</em></strong>, 2015, 14(8): 3322-3335.</p></blockquote><hr><blockquote><p>交流请联系：</p><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python英文文献爬虫</title>
      <link href="/article/926c2b5a/"/>
      <url>/article/926c2b5a/</url>
      
        <content type="html"><![CDATA[<p>之前写过用Python爬取中文文献，但是更多时候需要的是英文文献，就写了个英文的爬虫代码。</p><span id="more"></span><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> openpyxl<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> re<br><br>time_start = time.time()<br>header = {<br>        <span class="hljs-string">'user-agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36'</span><br>}<br><br>user_key_words = <span class="hljs-built_in">input</span>(<span class="hljs-string">'请输入你的关键词(空格分隔)：'</span>)<br>user_key_words = user_key_words.replace(<span class="hljs-string">' '</span>,<span class="hljs-string">'%20'</span>)<br>url_1 = <span class="hljs-string">'http://xueshu.baidu.com/s?wd='</span><br>url_2 = <span class="hljs-string">'&amp;tn=SE_baiduxueshu_c1gjeupa&amp;ie=utf-8&amp;sc_f_para=sc_tasktype%3D%7BfirstSimpleSearch%7D&amp;sc_hit=1'</span><br><br>url_0 = url_1 + user_key_words +  <span class="hljs-string">'&amp;pn='</span> + <span class="hljs-built_in">str</span>(<span class="hljs-number">0</span>) + url_2<br>res = requests.get(url_0, headers=header)<br>soup = BeautifulSoup(res.text, <span class="hljs-string">'html.parser'</span>)<br>num = re.findall(<span class="hljs-string">'\d{1,20}'</span>, soup.find(<span class="hljs-string">'span'</span>,class_=<span class="hljs-string">'nums'</span>).text.replace(<span class="hljs-string">','</span>,<span class="hljs-string">''</span>))[<span class="hljs-number">0</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">'找到约%s条相关结果'</span>%(num))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">int</span>(num),<span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(i)<br>    url = url_1 + user_key_words +  <span class="hljs-string">'&amp;pn='</span> + <span class="hljs-built_in">str</span>(i) + url_2<br>    res = requests.get(url, headers=header)<br><br>    title_link_result = openpyxl.Workbook()<br>    sheet = title_link_result.active<br>    sheet.title = <span class="hljs-string">'百度学术文献爬取'</span><br>    col_name = [<span class="hljs-string">'title'</span>,<span class="hljs-string">'key_words'</span>,<span class="hljs-string">'year'</span>,<span class="hljs-string">'ref_wr'</span>,<span class="hljs-string">'author'</span>,<span class="hljs-string">'abstract'</span>,<span class="hljs-string">'doi'</span>,<span class="hljs-string">'doi_url'</span>,<span class="hljs-string">'journal'</span>]<br>    sheet.append(col_name)<br><br>    <span class="hljs-keyword">if</span> res.status_code == <span class="hljs-number">200</span>:<br>        soup = BeautifulSoup(res.text, <span class="hljs-string">'html.parser'</span>)<br>        items = soup.find_all(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'sc_content'</span>)<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> items:<br>            url_temp = item.find(<span class="hljs-string">'h3'</span>).find(<span class="hljs-string">'a'</span>)[<span class="hljs-string">'href'</span>]<br>            res_final = requests.get(url_temp, headers=header)<br>            soup_final = BeautifulSoup(res_final.text, <span class="hljs-string">'html.parser'</span>)<br>            main_info = soup_final.find(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'main-info'</span>)<br>            <span class="hljs-keyword">try</span>:<br>                title = main_info.find(<span class="hljs-string">'h3'</span>).text.replace(<span class="hljs-string">'\n'</span>,<span class="hljs-string">''</span>)<br>                title = re.sub(<span class="hljs-string">' '</span>,<span class="hljs-string">''</span>, title, <span class="hljs-number">8</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                title = <span class="hljs-string">'None'</span><br>            <span class="hljs-keyword">try</span>:<br>                author = main_info.find(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'author_wr'</span>).find(<span class="hljs-string">'p'</span>,class_=<span class="hljs-string">'author_text'</span>).find(<span class="hljs-string">'a'</span>).text<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                author = <span class="hljs-string">'None'</span><br>            <br>            <span class="hljs-keyword">try</span>:<br>                abstract = main_info.find(<span class="hljs-string">'div'</span>,class_=<span class="hljs-string">'abstract_wr'</span>).find(<span class="hljs-string">'p'</span>,class_=<span class="hljs-string">'abstract'</span>).text<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                abstract = <span class="hljs-string">'None'</span><br><br>            <span class="hljs-keyword">try</span>:<br>                key_temp = main_info.find(<span class="hljs-string">'div'</span>,class_=<span class="hljs-string">'kw_wr'</span>).find(<span class="hljs-string">'p'</span>,class_=<span class="hljs-string">'kw_main'</span>).find_all(<span class="hljs-string">'a'</span>)<br>                key_words = <span class="hljs-string">''</span><br>                <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> key_temp:<br>                    key_words = key_words + <span class="hljs-string">','</span> + key.text<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                key_words = <span class="hljs-string">'None'</span><br><br>            <span class="hljs-keyword">try</span>:<br>                doi = main_info.find(<span class="hljs-string">'div'</span>,class_=<span class="hljs-string">'doi_wr'</span>).find(<span class="hljs-string">'p'</span>, class_=<span class="hljs-string">'kw_main'</span>).text.replace(<span class="hljs-string">' '</span>,<span class="hljs-string">''</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                doi = <span class="hljs-string">'None'</span><br><br>            doi_url = (<span class="hljs-string">"https://doi.org/"</span> + doi).replace(<span class="hljs-string">'\n'</span>,<span class="hljs-string">''</span>)<br><br>            <span class="hljs-keyword">try</span>:<br>                ref_wr = main_info.find(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'ref_wr'</span>).find(<span class="hljs-string">'a'</span>,class_=<span class="hljs-string">'sc_cite_cont'</span>).text.replace(<span class="hljs-string">' '</span>,<span class="hljs-string">''</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                ref_wr = <span class="hljs-string">'None'</span><br><br>            <span class="hljs-keyword">try</span>:<br>                year = main_info.find(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'year_wr'</span>).find(<span class="hljs-string">'p'</span>,class_=<span class="hljs-string">'kw_main'</span>).text.replace(<span class="hljs-string">' '</span>,<span class="hljs-string">''</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                yeay = <span class="hljs-string">'None'</span><br><br>            <span class="hljs-keyword">try</span>:<br>                journal = soup_final.find(<span class="hljs-string">'div'</span>,class_=<span class="hljs-string">'dtl_r_item'</span>).find(<span class="hljs-string">'div'</span>, class_=<span class="hljs-string">'container_right'</span>).find(<span class="hljs-string">'a'</span>, class_=<span class="hljs-string">'journal_title'</span>).text.replace(<span class="hljs-string">'《'</span>,<span class="hljs-string">''</span>).replace(<span class="hljs-string">'》'</span>,<span class="hljs-string">''</span>)<br>            <span class="hljs-keyword">except</span> AttributeError:<br>                journal = <span class="hljs-string">"None"</span><br>        <br>            sheet.append([title,key_words,year,ref_wr,author,abstract,doi,doi_url,journal])<br>        file_name = <span class="hljs-string">'D:\!01\git\Python\Python爬取英文文献\\results\第'</span>+<span class="hljs-built_in">str</span>((i+<span class="hljs-number">10</span>)/<span class="hljs-number">10</span>).replace(<span class="hljs-string">'.0'</span>,<span class="hljs-string">''</span>) + <span class="hljs-string">'页.xlsx'</span><br>        title_link_result.save(file_name)<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">'Something is wrong! Please check!'</span>)<br><br>    time_end = time.time()<br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">'已经完成第'</span>+<span class="hljs-built_in">str</span>((i+<span class="hljs-number">10</span>)/<span class="hljs-number">10</span>).replace(<span class="hljs-string">'.0'</span>,<span class="hljs-string">''</span>) + <span class="hljs-string">'页爬取，耗时：%s'</span>%(time_end-time_start) + <span class="hljs-string">'，休息10s继续爬取！'</span>)<br>    time.sleep(<span class="hljs-number">10</span>)<br></code></pre></td></tr></tbody></table></figure><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发一个R包</title>
      <link href="/article/6f22d8f6/"/>
      <url>/article/6f22d8f6/</url>
      
        <content type="html"><![CDATA[<p>R最强大的莫过于统计分析和可视化，关键是完全的开源免费啊。有时候使用多了以后，会积累一些函数或者是数据库，而这些函数和数据库通常能够帮助到别人，这时候就可以把这些函数或者是数据库打包成R包，上传到CRAN、Bioconductor或者是GitHub，让 其他的使用者使用自己的包。</p><span id="more"></span><p>我开发的第一个包是<a href="https://cran.r-project.org/web/packages/riceidconverter/index.html">riceidconverter</a>，主要的用途是水稻的ID转换。整个包的开发断断续续经历了两个月，包括数据的爬取(Python脚本见<a href="[https://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC](https://github.com/GitHub-LiXiang/R/tree/master/R包开发/riceidconverter/NCBI爬虫Python脚本">GitHub</a>))、整理、函数的构思，以及最艰难的调试。</p><h1 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h1><p>我的开发流程是软件安装、构思R包、准备数据、编写R包、调试代码、R包提交。下面就从这几方面一一道来我这个小白的经验。</p><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="MikTex"><a href="#MikTex" class="headerlink" title="MikTex"></a>MikTex</h2><p><code>MikTex</code>主要是用于编译后面的pdf文档，如果包只是自己用，就不用安装这个软件。软件的下载地址是<a href="https://miktex.org/download">MikTex</a>。安装的话一路默认就OK。</p><h2 id="roxygen2"><a href="#roxygen2" class="headerlink" title="roxygen2"></a>roxygen2</h2><p><code>roxygen2</code>是个R包，通过注释的方式，生成文档。直接<code>install。package('roxygen2')</code>即可。</p><h2 id="devtools"><a href="#devtools" class="headerlink" title="devtools"></a>devtools</h2><p>这个包主要是用来<code>build</code>和<code>check</code>R包的。直接<code>install。package('devtools')</code>即可。</p><h1 id="构思R包"><a href="#构思R包" class="headerlink" title="构思R包"></a>构思R包</h1><p>这个比较难说清楚，每个R包都有一定的功能的，构思的过程就是R包功能完善的过程。</p><h1 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h1><p>这个环节，也是很难说清除。如果数据要内嵌到R包，而且包里面的函数会用到数据，那表头名称和函数中的变量名称要保持一致。</p><h1 id="编写R包"><a href="#编写R包" class="headerlink" title="编写R包"></a>编写R包</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>直接用RStudio创建<code>R Package即可</code>：<code>File→New Project→New Directory→R Package</code>。<font color="red">需要注意的是选择的路径不可以有中文字符！</font>会生成下面的文件：</p><p>比较重要的是<code>man</code>、<code>R</code>和<code>DESCRIPTION</code>这三个文件(夹)。其他的几个可以删除。</p><h2 id="编写DESCRIPTION"><a href="#编写DESCRIPTION" class="headerlink" title="编写DESCRIPTION"></a>编写DESCRIPTION</h2><p>这个文件是用来描述一些基本信息的，这些信息也是必填的一些信息。</p><p>下面这是我的包的一些描述：</p><font color="red">需要注意的是在`Title`部分，大小写要求很严格。</font><p>另外需要注意的是在<code>Description</code>部分，每个缩写都需要有详细的解释，如果有链接，还需要将链接放在<code>&lt;&gt;</code>里面，而不是<code>()</code>。</p><h2 id="编写函数"><a href="#编写函数" class="headerlink" title="编写函数"></a>编写函数</h2><p>在<code>R</code>这个文件夹下面创建对应的<code>.R</code>文件。比如想实现的功能是<code>t</code>检验，那就创建一个<code>t.test.R</code>。打开以后还是有几行<code>#'</code>开头的描述，这些是必须的：</p><p><code>@name</code>是指这个函数的名称，其他的就是和<code>DESCRIPTION</code>类似的；<code>@param</code>表示的是参数；<code>@example</code>表示的是函数使用的例子；<code>@return</code>表示的是返回的结果；接着下一行编写函数就行：</p><font color="red">需要注意的是在`R`文件夹下面还应该创建一个和R包名称相同的`.R`文件。</font>只需要填写这些东西就可以了：## 调试代码这个部分，就需要不断的调试，就是使用不同的数据去测试这个函数是否可靠。## 添加数据如果需要将数据内嵌在R包怎么办呢？一行代码搞定：`use_data(test.data, internal = TRUE)`。`test.data`就是先前准备好的数据，需要先加载到R环境中。会在`R`文件夹下生成一个`sysdata.rda`文件。# R包提交在完成编写和调试后，就只剩下`build`、`check`和`upload`了。先要生成注释文件：<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>roxygen2<span class="hljs-punctuation">)</span><br>roxygenize<span class="hljs-punctuation">(</span><span class="hljs-string">'packagename'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>## build一行代码：<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">system<span class="hljs-punctuation">(</span><span class="hljs-string">'R CMD build packagename --binary'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>会生成一个`tar.gz`文件。这个文件用于后面的提交。## check 一行代码：<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">system<span class="hljs-punctuation">(</span><span class="hljs-string">'R CMD check packagename --as-cran'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>完后会生成一个`riceidconverter.Rcheck`文件夹，里面有各种报告。在RStudio输出界面没有`ERROR`、`Warning`还有`NOTE`，那就基本没问题了。## 安装先尝试一下能不能安装上：<figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">system<span class="hljs-punctuation">(</span><span class="hljs-string">'R CMD INSTALL packagename'</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure>## <font color="red">提交</font><p>这个就比较简单了，直接在<a href="https://cran.r-project.org/submit.html">https://cran.r-project.org/submit.html</a>按照要求提交<code>tar.gz</code>文件就行。</p><hr><p>最后，等着邮件吧。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTOL修饰进化树</title>
      <link href="/article/651c50ad/"/>
      <url>/article/651c50ad/</url>
      
        <content type="html"><![CDATA[<p>绘制进化树的软件很多，窗口界面的MEGA$^{[1]}$、Y叔R包ggtree$^{[2]}$等。MEGA属于神仙级别的软件，一篇文章拉高期刊的影响因子。而Y的<code>ggtree</code>更受R爱好者的青睐，可以各种尽情修饰进化树。相对来说，MEGA建的树就不是那么好看，需要后期修饰一下。修饰的软件推荐<a href="https://itol.embl.de/">iTOL</a>$^{[3]}$。大多数的参数直接在右边界面就能修改，但是如果需要批量修改颜色等信息的话，就需要写配置文件。</p><span id="more"></span><h1 id="开局一张图"><a href="#开局一张图" class="headerlink" title="开局一张图"></a>开局一张图</h1><p><code>iTOL</code>并不能建树，只能修饰进化树，需要导入<code>.nwk</code>结尾的文件，是长这样的：</p><p>在网站界面直接选择文件upload就行，就能得到下面这样的图：</p><p>简单修饰直接点击右边就能进行修改。</p><h1 id="标签背景色"><a href="#标签背景色" class="headerlink" title="标签背景色"></a>标签背景色</h1><p>批量添加标签的背景色，需要写一个配置文件<code>label.txt</code>，这个文件的格式是这样的：</p><p>最上面的三行是默认的，下面的分别表示样品名称、range(表示背景色)、颜色编码、样品的分组。最后上色的时候是用样品分组信息进行着色的，效果如下：</p><h1 id="线条着色"><a href="#线条着色" class="headerlink" title="线条着色"></a>线条着色</h1><p>同样的编辑配置文件，格式如下：</p><p>前三行是固定的，下面每一列分别表示的是样品名称、线条、颜色属性、样式、大小。</p><p>编辑完之后直接将文件拖到网页的进化树上就行了。效果如下：</p><h1 id="标签颜色"><a href="#标签颜色" class="headerlink" title="标签颜色"></a>标签颜色</h1><p>标签颜色和标签的背景色的设置是大同小异的，直接将<code>range</code>换成<code>label</code>就可以 了。</p><h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><font color="red">更多修饰细节可以观看网页视频教程噢。</font><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><blockquote><p>[1] Kumar, Sudhir, Koichiro Tamura, and Masatoshi Nei. “MEGA: molecular evolutionary genetics analysis software for microcomputers.” <strong>Bioinformatics**</strong> 10.2 (1994): 189-191.</p><p>[2] Yu, Guangchuang, et al. “ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data.” <strong><em>Methods in Ecology and Evolution</em></strong> 8.1 (2017): 28-36.</p><p>[3] Letunic, Ivica, and Peer Bork. “Interactive tree of life (iTOL) v3: an online tool for the display and annotation of phylogenetic and other trees.” <strong><em>Nucleic acids research</em></strong> 44.W1 (2016): W242-W245.</p></blockquote><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言批量合并Excel文件</title>
      <link href="/article/923787f/"/>
      <url>/article/923787f/</url>
      
        <content type="html"><![CDATA[<p>离开实验室的时候一个同学在合并他们班的某个汇总表。常规操作，一个一个的复制粘贴的。我就想，这个肯定可以用编程搞定啊，Python或者R都行。回来就 R写了个代码，编了10000个文件用于代码测试。<code>代码如下</code>。</p><span id="more"></span><h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 清空当前变量</span><br>rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算程序开始时间</span><br>t1 <span class="hljs-operator">=</span> <span class="hljs-built_in">proc.time</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 加载数据清洗包</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取需要合并的10000个文件名</span><br>dirs <span class="hljs-operator">=</span> dir<span class="hljs-punctuation">(</span><span class="hljs-string">'test/'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10000</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># 查看需要合并的文件综述</span><br>dirnum <span class="hljs-operator">=</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>dirs<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 读取第一个数据转换成空的例表</span><br>data_raw <span class="hljs-operator">=</span> suppressMessages<span class="hljs-punctuation">(</span>read_excel<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">'test/'</span><span class="hljs-punctuation">,</span>dirs<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>sheet <span class="hljs-operator">=</span> <span class="hljs-string">'高校研究生学生信息录入'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">23</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span><br>                              as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>colnames<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> data_raw<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>data_raw <span class="hljs-operator">=</span> data_raw<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br><br><span class="hljs-comment"># for循环依次读取并合并数据</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> dirs<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  filename <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">'test/'</span><span class="hljs-punctuation">,</span>i<span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><br>  <br>  data <span class="hljs-operator">=</span> suppressMessages<span class="hljs-punctuation">(</span>read_excel<span class="hljs-punctuation">(</span>filename<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">6</span><span class="hljs-punctuation">,</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">23</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">%&gt;%</span><br>                            as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  colnames<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> data<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>  data <span class="hljs-operator">=</span> data<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>  data_raw <span class="hljs-operator">=</span> rbind<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">,</span>data<span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>nrow<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;</span> dirnum <span class="hljs-operator">|</span> nrow<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">)</span> <span class="hljs-operator">==</span> dirnum<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    print<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">'成功合并'</span><span class="hljs-punctuation">,</span>nrow<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">'条'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br>  <br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>nrow<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">)</span> <span class="hljs-operator">==</span> dirnum<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    write.csv<span class="hljs-punctuation">(</span>data_raw<span class="hljs-punctuation">,</span> file <span class="hljs-operator">=</span> <span class="hljs-string">'all_csv.csv'</span><span class="hljs-punctuation">)</span><br>    print<span class="hljs-punctuation">(</span><span class="hljs-string">'合并完成！'</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br><br><span class="hljs-comment"># 计算程序运行完的时间</span><br>print<span class="hljs-punctuation">(</span><span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">proc.time</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">-</span>t1<span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br></code></pre></td></tr></tbody></table></figure></h2><p><strong>康康最后的结果：</strong><br></p><p><strong>155.72秒合并10000个文件！！！</strong></p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 爬取知乎问题 即将步入研究生，有什么忠告？ 所有回答后将数据写入 Excel 并生成.html 文件</title>
      <link href="/article/18367565/"/>
      <url>/article/18367565/</url>
      
        <content type="html"><![CDATA[<p>学Python爬虫一周多，今天练练手，爬取了一个自己感兴趣的知乎话题<a href="https://www.zhihu.com/question/64270965">即将步入研究生，有什么忠告？</a>。一共是272个答案，本次爬取的目的是爬取到所有回答者的昵称、个性签名、赞同数以及具体的内容。</p><span id="more"></span><p>先检查一波：<br><br>我天真地以为全部都在“Elements”这个页面里面，DuangDuangDuang一阵代码。呵呵，太天真了。<br>既然在“Elements”没有，那就一定是带参数请求数据的。<br>那看看“Network”下的“XHR”，每次下拉出现新的内容，总是会有个“answers?…”的东西，直觉告诉我应该就是这个鬼东西了。看看吧：<br></p><p><strong>完犊子了，完全没规律啊！！！！！！</strong><br>这种大网站是不可能没有规律的，再看看、、、、、、</p><p>果然，第3个“answers?…”开始就有规律了，“limit”始终是5，“offset”依次叠加5。<br>针对前两个，两次代码，之后剩下的，一个大的for循环搞定（前两个是可以不用for循环的，但是为了后面的for循环，就索性都用了）。</p><p>代码如下：<br></p><figure class="highlight clean"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 载入相应的模块<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> openpyxl<br><br>time1 = time.time()<br><br>lists = []<br>lists.append([<span class="hljs-string">'answer_kname'</span>,<span class="hljs-string">'headline'</span>,<span class="hljs-string">'voteup_count'</span>,<span class="hljs-string">'content'</span>])<br><br>##################<br>for i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>):<br>    url = <span class="hljs-string">'https://www.zhihu.com/api/v4/questions/64270965/answers'</span><br>    headers = {<br>        <span class="hljs-string">'user-agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><br>    }<br>    params = {<br>        <span class="hljs-string">'include'</span>: <span class="hljs-string">'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics'</span>,<br>        <span class="hljs-string">'offset'</span>: str(i),<br>        <span class="hljs-string">'limit'</span>: <span class="hljs-string">'3'</span>,<br>        <span class="hljs-string">'sort_by'</span>: <span class="hljs-string">'default'</span>,<br>        <span class="hljs-string">'platform'</span>: <span class="hljs-string">'desktop'</span><br>    }<br>    res = requests.get(url, headers=headers, params=params)<br>    res_json = res.json()<br>    items = res_json[<span class="hljs-string">'data'</span>]<br>    for item <span class="hljs-keyword">in</span> items:<br>        answer_kname = item[<span class="hljs-string">'author'</span>][<span class="hljs-string">'name'</span>]<br>        headline = item[<span class="hljs-string">'author'</span>][<span class="hljs-string">'headline'</span>]<br>        content = item[<span class="hljs-string">'content'</span>]<br>        voteup_count = item[<span class="hljs-string">'voteup_count'</span>]<br><br>        lists.append([answer_kname,headline,voteup_count,content])<br><br>##################<br>for i <span class="hljs-keyword">in</span> range(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>):<br>    url = <span class="hljs-string">'https://www.zhihu.com/api/v4/questions/64270965/answers'</span><br>    headers = {<br>        <span class="hljs-string">'user-agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><br>    }<br>    params = {<br>        <span class="hljs-string">'include'</span>: <span class="hljs-string">'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics'</span>,<br>        <span class="hljs-string">'offset'</span>: str(i),<br>        <span class="hljs-string">'limit'</span>: <span class="hljs-string">'5'</span>,<br>        <span class="hljs-string">'sort_by'</span>: <span class="hljs-string">'default'</span>,<br>        <span class="hljs-string">'platform'</span>: <span class="hljs-string">'desktop'</span><br>    }<br>    res = requests.get(url, headers=headers, params=params)<br>    res_json = res.json()<br>    items = res_json[<span class="hljs-string">'data'</span>]<br>    for item <span class="hljs-keyword">in</span> items:<br>        answer_kname = item[<span class="hljs-string">'author'</span>][<span class="hljs-string">'name'</span>]<br>        headline = item[<span class="hljs-string">'author'</span>][<span class="hljs-string">'headline'</span>]<br>        content = item[<span class="hljs-string">'content'</span>]<br>        voteup_count = item[<span class="hljs-string">'voteup_count'</span>]<br><br>        lists.append([answer_kname,headline,voteup_count,content])<br><br>##################<br>for i <span class="hljs-keyword">in</span> range(<span class="hljs-number">8</span>,<span class="hljs-number">278</span>,<span class="hljs-number">5</span>):<br>    url = <span class="hljs-string">'https://www.zhihu.com/api/v4/questions/64270965/answers'</span><br>    headers = {<br>        <span class="hljs-string">'user-agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><br>    }<br>    params = {<br>        <span class="hljs-string">'include'</span>: <span class="hljs-string">'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics'</span>,<br>        <span class="hljs-string">'offset'</span>: str(i),<br>        <span class="hljs-string">'limit'</span>: <span class="hljs-string">'5'</span>,<br>        <span class="hljs-string">'sort_by'</span>: <span class="hljs-string">'default'</span>,<br>        <span class="hljs-string">'platform'</span>: <span class="hljs-string">'desktop'</span><br>    }<br>    res = requests.get(url, headers=headers, params=params)<br>    res_json = res.json()<br>    items = res_json[<span class="hljs-string">'data'</span>]<br>    for item <span class="hljs-keyword">in</span> items:<br>        answer_kname = item[<span class="hljs-string">'author'</span>][<span class="hljs-string">'name'</span>]<br>        headline = item[<span class="hljs-string">'author'</span>][<span class="hljs-string">'headline'</span>]<br>        content = item[<span class="hljs-string">'content'</span>]<br>        voteup_count = item[<span class="hljs-string">'voteup_count'</span>]<br><br>        lists.append([answer_kname,headline,voteup_count,content])<br><br><br>##################<br>file = openpyxl.Workbook()<br>sheet = file.active<br>sheet.title = <span class="hljs-string">'answers'</span><br>for i <span class="hljs-keyword">in</span> lists:<br>    sheet.append(i)<br><br>file.save(<span class="hljs-string">'即将步入研究生，有什么忠告.xlsx'</span>)<br><br>##################<br>file_html = open(<span class="hljs-string">'知乎：即将步入研究生，有什么忠告.html'</span>,<span class="hljs-string">'w'</span>,encoding= <span class="hljs-string">'utf-8'</span>)<br><br>for i <span class="hljs-keyword">in</span> lists:<br>    file_html.write(i[<span class="hljs-number">3</span>])<br>file_html.close()<br><br>##################<br>time2 = time.time()<br>print(<span class="hljs-string">'爬虫耗时：%.3f'</span>%(float(time2-time1)),<span class="hljs-string">'秒'</span>)<br><br></code></pre></td></tr></tbody></table></figure><p></p><p>附件：</p><ol><li><a href="https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.py">代码</a></li><li><a href="https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.xlsx">即将步入研究生，有什么忠告.xlsx</a></li><li><a href="https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E7%9F%A5%E4%B9%8E%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.html">知乎：即将步入研究生，有什么忠告.html</a></li></ol><hr><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库</title>
      <link href="/article/b213e513/"/>
      <url>/article/b213e513/</url>
      
        <content type="html"><![CDATA[<p>每试错一次，就离本质就更近一步。——小蓝哥</p><hr><h1 id="为什么要上传数据"><a href="#为什么要上传数据" class="headerlink" title="为什么要上传数据"></a>为什么要上传数据</h1><p>实验室同学找我帮忙上传宏基因组数据到NCBI，大概是45G。NCBI提供了很多种可供选择的上传方式：</p><span id="more"></span><p>没有海外节点 <strong>+</strong> 学校的龟速网速，网页上传的速度可想而知，ftp又很容易断，据说Aspera上传能够达到满速上传，就想试一下。</p><p>Aspera有浏览器插件，下载试了几次都不行。决定试一下命令行方式。前前后后上传了大约100G数据，终于把这种满速上传数据的方法掌握了。</p><p>命令行方式分成Windows下的方式和Linux命令行模式，Windows还需要配制环境变量，比较麻烦，索性采用Linux命令行上传。</p><hr><h1 id="电脑配置"><a href="#电脑配置" class="headerlink" title="电脑配置"></a>电脑配置</h1><p>Oracle VM VirtualBox 虚拟机配Ubuntu 18.0操作系统 + FinalShell。虚拟机当个小服务器，FinalShell是国产的Shell，目前接触过的Shell中比较好用的。</p><hr><h1 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h1><p>第一步是get到Aspera的Linux版本：</p><p>下载好了之后把本地文件upload到服务器上，然后：</p><p>run一下：</p><blockquote><p>aspera-cli-x.x.x.xxx.xxxxxxx-linux-64-release.sh</p></blockquote><p>添加可执行权限：</p><blockquote><p># chmod +x aspera-cli-x.x.x.xxx.xxxxxxx-linux-xx-release.sh</p></blockquote><p>添加环境变量：</p><blockquote><p># export PATH=~/.aspera/cli/bin:$PATH</p></blockquote><p>我也不知道这个是干啥的，反正复制粘贴run就行：</p><blockquote><p># export MANPATH=~/.aspera/cli/share/man:$MANPATH</p></blockquote><p>Aspera安装配置完成，下面就是上传数据了。</p><hr><h1 id="开始吧、、、、"><a href="#开始吧、、、、" class="headerlink" title="开始吧、、、、"></a>开始吧、、、、</h1><p>首先，把硬盘里的数据上传到服务器：</p><p>记得数据上传的<strong>绝对路径</strong>。</p><p>然后，我们回到NCBI————-</p><p>下载这个key file 并上传到服务器，记得上传的<strong>绝对路径</strong>。一定要记得这个东西！！！！！！！！！！！！！！！！！！！！！！</p><p>→</p><p>先看看NCBI给的例子：</p><blockquote><p>ascp -i <path to="" key_file=""> -QT -l100m -k1 -d<path to="" folder="" containing="" files="">subasp@upload.ncbi.nlm.nih.gov:uploads/13××××××_qq.com_Ofc5bvIL</path></path></p></blockquote><p>这些命令都是什么意思呢：</p><p>-QT我不知道，也不想知道。</p><p>-l100m意思是最大网速，Aspera据说是满速上传，这个设置几乎没什么意义，高兴就设置到1000m吧。</p><p>-k1指的是断点续传，这个很重要哟，看中的就是Aspera的断点续传和满速上传。</p><p>subasp@upload.ncbi.nlm.nih.gov:uploads/13××××××_qq.com_Ofc5bvIL这个是NCBI分配给每个上传er的，是独一无二的。</p><p>别的参数不用知道，直接拿轮子用就行。</p><p><strong>我第一次上传的时候是这样的：</strong></p><blockquote><p><strong>ascp -i /home/lixiang01/aspera.openssh -QT -l100m -k1 d /home/lixiang01/data/*.gz subasp@upload.ncbi.nlm.nih.gov:uploads/123××××××_qq.com_Ofc5bvIL</strong></p></blockquote><p>数据倒是全部上传完成了，但是我后续找不到数据啊啊啊啊啊啊啊啊啊啊啊啊——</p><p>找了找原因，发现了：</p><p><strong>If you upload your files in your root directory, you will not be able to see them or to select the folder during the submission</strong>.Make a new subdirectory for each new submission. Your submission subfolder is a temporary holding area and it will be removed once the whole submission is complete.Do not upload complex directory structures or files that do not contain sequence data.</p><p>原来是因为我上传的时候直接上传到NCBI分配给我的root目录了，导致后面无法选择选择预上传完成的文件，于是，机智的我修改了一下命令：</p><blockquote><p>ascp-i /home/lixiang01/aspera.openssh-QT -l100m -k1 d /home/lixiang01/data/<em>.gzsubasp@upload.ncbi.nlm.nih.gov:uploads/123××××××_qq.com_Ofc5bvIL/<em>*sra_data</em></em></p></blockquote><p>对，我就是简单的加了个“<strong>/sra_data</strong>”，简单的在root目录下创建了一个子目录 <strong>sra_data</strong>，结果，上传成功了。（这个可以随便取名字的，高兴就好）</p><hr><p><strong>看使用说明和帮助文档真的很重要！！！</strong></p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>听他十年，成长十年</title>
      <link href="/article/2b23a230/"/>
      <url>/article/2b23a230/</url>
      
        <content type="html"><![CDATA[<p>《<a href="https://v.qq.com/x/search/?q=蓝莲花许巍&amp;stag=0&amp;smartbox_ab=">蓝莲花</a>》—许巍</p><hr><p>“又见小蓝哥”。她在舍友空间说说下评论到。</p><hr><span id="more"></span><p>这双陪伴我一年多的蓝色跑鞋，后跟已经磨破露出海绵。蓝色的皮肤衣已经掉线了。蓝色的跑步短裤已经变形了。田径场上总是有个浑身蓝色的人。于是，有个姑娘叫我小蓝哥。</p><p>是许巍，才有了《蓝莲花》；听了他的歌，十年来我整个人都在改变。</p><p>我心里的蓝莲花和西藏的蓝天一样。</p><hr><h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>第一次听到许巍这个名字，是十年前，我那时候初一下学期，翻看语文老师的QQ日志，看到“许巍”这两个字，“春春曾至爱许巍”。我那时候用着一个手写屏的手机，有张512M的内存卡，托同学从网吧帮我下载了许巍的一些歌。回家一个人，放的是《<a href="http://music.163.com/song?id=167955&amp;userid=89683798">完美生活</a>》。第一句就是“青春的岁月，我们身不由己，只因这心中燃烧的梦想”。在之后，听到了《<a href="http://music.163.com/song?id=167871&amp;userid=89683798">晴朗</a>》。“一切就像是电影，比电影还要精彩。”我忘记了是什么时候听到《<a href="http://music.163.com/song?id=168091&amp;userid=89683798">蓝莲花</a>》。不管怎么样，这首歌成了我的最爱，以至于我骑车进藏的路上都是蓝莲花在陪伴。</p><hr><h1 id="《故乡》-《家》"><a href="#《故乡》-《家》" class="headerlink" title="《故乡》.《家》"></a>《故乡》.《家》</h1><p>那时候家里没电视机，伯伯家的电视机里面播放绿箭口香糖的广告，背景音乐是“我在远方，很多的岁月，总是会想起你，给予我的一切”。我一直想找这首歌，没找到，直到有天听到了许巍的《<a href="http://music.163.com/song?id=167751&amp;userid=89683798">家</a>》。“如家我对自己故乡，像来往匆匆的过客”，是无数人的真实写照。有人给我说“能给你家的感觉的那个人在哪，家就在哪。”在我内心深处，家是那个地方，是爸妈家人和那间小房子，是我十几年青春所在，是那些荒山，是那些土地瓜。如今说到回家，我很期待。回家的路上，我总是会听《<a href="http://music.163.com/song?id=167925&amp;userid=89683798">故乡</a>》。网易云的这首歌下面，有很多有意思的评论。“电吉他一响起我的心都碎了”。“你在我的心里是故乡，是一个男人对自己所爱的人最高的评价”。你在我心里永远是故乡。几度不敢听这首歌，一听就会流泪。尽管习惯了城市的便捷生活，我还是喜欢家里的东西，本地面条、包谷饭、酸菜红豆汤、炸洋芋….这学期开学来在学校附近发现一家老乡开的饭店，点了一碗红豆酸汤面，是老家的味道。差不多，这是我一个人生活的第十年，初中姐姐在县里读高中，爸妈都外出打工了。我一个人在家。自己做饭吃，很多时候就是煮“活油面”（一点猪油加点开水葱花调料），尽管如此我还是很喜欢吃面条。我对家和故乡有着自己的理解的感情，这和我的经历是密不可分的。我对外面的世界充满向往，我对故乡满是回望。</p><hr><h1 id="许巍在我前面20m"><a href="#许巍在我前面20m" class="headerlink" title="许巍在我前面20m"></a>许巍在我前面20m</h1><p>2015年12月12日，昆明，同德广场。许巍作为嘉宾献唱。那天中午我就赶过去了，没有得到内场的邀请券，只能在栏杆外面。舞台，就在20m开外。我带了很大的一面蓝莲花旗子。遗憾的是没有带旗杆，其他几个有旗杆的旗子都被邀请进内场了。等了差不多快8个小时，没有吃饭在等着。终于等到许巍的出现了。我是茫茫人海中的一个。我知道一定会有《蓝莲花》。</p><p>“没有什么能够阻挡，你对自由的向往。”</p><p>这是我第一次见许巍，尽管没有看清楚乐队。我还是很欣喜。</p><p><img src="听他十年，成长十年/5.jpg" alt="img"></p><hr><h1 id="抑郁之后的超脱"><a href="#抑郁之后的超脱" class="headerlink" title="抑郁之后的超脱"></a>抑郁之后的超脱</h1><p>关于许巍的抑郁症，我记得最清楚的是高中的时候，去旧书店翻出了一本在记忆中都快模糊了的杂志，里面有篇文章是写许巍的抑郁症的。他熬过抑郁症的更多细节我无从得知，我记得很深刻的是他的妻子在他抑郁期间一直陪着他。他妻子是军队文职，两个人走在街头的时候，许巍一身摇滚范，长发、皮衣、牛仔裤；他妻子一身军装。对的人就是对的人。在抑郁症期间，是他妻子和朋友陪他度过。也许是因为这个，他在《故事》的开头便唱到“也许是出发太久，我竟然迷失在旅途，我最亲爱的朋友，你让我再一次醒来。 ”在抑郁症之前，许巍的歌是真的摇滚。《两天》里的“我只有两天，一天用来出生，一天原来死亡；我只有两天，一天用来希望，一天用来绝望。”在抑郁症之后，歌曲的风格渐渐变了。“故事里始终都有爱，无论有什么样的艰难曲折”</p><hr><h1 id="此时此刻"><a href="#此时此刻" class="headerlink" title="此时此刻"></a>此时此刻</h1><p>2012年12月12日，许巍发布了全新专辑《此时此刻》。专辑里有10首歌。我比较喜欢《喜悦》和《爱情》。“心中升起的喜悦，总在归乡的旅程，当家门在开启时，这世界变得温暖”。出门在外，《家》里那句“如今我对自己故乡像来往匆匆的过客”；每次在回家路上都听《喜悦》。每次离开家，都会听《故乡》。对我来说，“家”这个概念很复杂，是浙江台州，爸妈在那里打工；是姐姐读书的城市；是昆明，我在这玩；也是老家，年底一家人匆匆忙忙聚上那么十来天，春节过后，阳光温暖的春天，又双叒叕得离开。都说不知从何时起，故乡只有冬，再没有春夏秋。或许有一天，连冬都不会有了。不过，心若在，家就在。</p><p>都说《爱情》这首歌是许巍专门为他妻子写的。刚好5′20″。当年被田震唱遍大江南北的《执着》，也是许巍写给他妻子的。“我为你歌唱，感谢你的恩典，你在我生命里，在岁月深处 你是美丽天空……这恩赐对我的震撼，如我初见大海”。我感受过山水、荒原、雪山，唯独没见过大海。《曾经的你》里面那句“每一次难过的时候，就独自看一看大海”。我很想去看海。﻿</p><p><img src="听他十年，成长十年/6.jpeg" alt="img"></p><hr><h1 id="无尽光芒"><a href="#无尽光芒" class="headerlink" title="无尽光芒"></a>无尽光芒</h1><p>去年12月26日，许巍团队发布了最新专辑《无尽光芒》。﻿</p><p><img src="https://upload-images.jianshu.io/upload_images/3454743-34729f042744c53b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt="img"></p><hr><p>突然写不下去了。</p><hr><p>脚下有路，眼里有光。</p><p>心中有爱，梦里有你。</p><p>余生，像他一样永葆赤子之心。</p><p>2018年3月14日  夜  于宿舍</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCA在R语言中的实现</title>
      <link href="/article/c719a57/"/>
      <url>/article/c719a57/</url>
      
        <content type="html"><![CDATA[<h1 id="PCA-简介"><a href="#PCA-简介" class="headerlink" title="PCA 简介"></a>PCA 简介</h1><p>PCA（<em>Principal Component Analysis</em>），即主成分分析。PCA是一种研究数据相似性或差异性的可视化方法，采取降维的思想，PCA 可以找到距离矩阵中最主要的坐标，把复杂的数据用一系列的特征值和特征向量进行排序后，选择主要的前几位特征值，来表示样品之间的关系。通过 PCA 可以观察个体或群体间的差异。PC 后面的百分数表示对应特征向量对数据的解释量，此值越大越好。</p><span id="more"></span><p>和PCA类似的数据降维方法还有MDS和PCoA。它们三者之间的区别联系如下图。</p><p>PCA creates plots based on correlations among samples.</p><p>MDS and PCoA create plots based on distances among samples.</p><h1 id="PCA算法"><a href="#PCA算法" class="headerlink" title="PCA算法"></a>PCA算法</h1><p>PCA的计算过程比较复杂，可以参考B站up主上传的YouTube上的视频（<a href="https://www.bilibili.com/video/av35447404?from=search&amp;seid=1532616759578227057">点击观看</a>）作为参考。PS：YouTube上的StatQuest系列视频及其通俗易懂，强推。</p><h1 id="PCA在R语言中的实现"><a href="#PCA在R语言中的实现" class="headerlink" title="PCA在R语言中的实现"></a>PCA在R语言中的实现</h1><p>（R代码下载：<a href="https://pan.baidu.com/s/1hLwiBLDvk2uiJBj-q1yFwg">点击下载</a>）</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs R">data.matrix <span class="hljs-operator">&lt;-</span> matrix<span class="hljs-punctuation">(</span>nrow <span class="hljs-operator">=</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span>ncol <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#创建一个100行10列的空矩阵</span><br><br>colnames<span class="hljs-punctuation">(</span>data.matrix<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">"wt"</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">"ko"</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#命名矩阵的列</span><br><br>rownames<span class="hljs-punctuation">(</span>data.matrix<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">"gene"</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#命名矩阵的行</span><br><br><span class="hljs-punctuation">\</span><span class="hljs-comment"># for循环填充矩阵</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br><br>  wt.values <span class="hljs-operator">&lt;-</span> rpois<span class="hljs-punctuation">(</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span>lambda <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-operator">:</span><span class="hljs-number">1000</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  ko.values <span class="hljs-operator">&lt;-</span> rpois<span class="hljs-punctuation">(</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span>lambda <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span><span class="hljs-number">10</span><span class="hljs-operator">:</span><span class="hljs-number">1000</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>  data.matrix<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>wt.values<span class="hljs-punctuation">,</span>ko.values<span class="hljs-punctuation">)</span><br><br><span class="hljs-punctuation">}</span><br><br>pca <span class="hljs-operator">&lt;-</span> prcomp<span class="hljs-punctuation">(</span>t<span class="hljs-punctuation">(</span>data.matrix<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>scale <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#t()函数的功能的将矩阵的行列位置进行置换，本例中研究的是“样本”，不是“Gene”</span><br><br><span class="hljs-punctuation">\</span><span class="hljs-comment">#prcomp()的结果是三个值：x,sdev和rotation。三个值在后面都会用到</span><br><br>plot<span class="hljs-punctuation">(</span>pca<span class="hljs-operator">$</span>x<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>pca<span class="hljs-operator">$</span>x<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>pca.var <span class="hljs-operator">&lt;-</span> pca<span class="hljs-operator">$</span>sdev<span class="hljs-operator">^</span><span class="hljs-number">2</span> <span class="hljs-comment"># 计算原始数据中的每个数据在每个PC上的比重</span><br><br>pca.var.per <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>pca.var<span class="hljs-operator">/</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>pca.var<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#计算每个PC占所有PC的和的比列</span><br><br>barplot<span class="hljs-punctuation">(</span>pca.var.per<span class="hljs-punctuation">,</span>main <span class="hljs-operator">=</span> <span class="hljs-string">"Sreen Plot"</span><span class="hljs-punctuation">,</span>xlab <span class="hljs-operator">=</span> <span class="hljs-string">"Princioal Component"</span><span class="hljs-punctuation">,</span>ylab <span class="hljs-operator">=</span> <span class="hljs-string">"percent Variation"</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#柱状图显示每个PC所占的比列</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><span class="hljs-comment">#调用ggplot2()</span><br><br>pca.data <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>Sample<span class="hljs-operator">=</span>rownames<span class="hljs-punctuation">(</span>pca<span class="hljs-operator">$</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>X<span class="hljs-operator">=</span>pca<span class="hljs-operator">$</span>x<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>Y<span class="hljs-operator">=</span>pca<span class="hljs-operator">$</span>x<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-comment">#创建数据框</span><br><br><span class="hljs-punctuation">\</span><span class="hljs-comment">#ggplot2绘图</span><br><br>ggplot<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> pca.data<span class="hljs-punctuation">,</span>aes<span class="hljs-punctuation">(</span>x<span class="hljs-operator">=</span>X<span class="hljs-punctuation">,</span>y<span class="hljs-operator">=</span>Y<span class="hljs-punctuation">,</span>label<span class="hljs-operator">=</span>Sample<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br><br>  geom_text<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br><br>  xlab<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">"PC1 - "</span><span class="hljs-punctuation">,</span>pca.var.per<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">"%"</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br><br>  ylab<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">"PC2 - "</span><span class="hljs-punctuation">,</span>pca.var.per<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">"%"</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">""</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br><br>  theme_bw<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br><br>  ggtitle<span class="hljs-punctuation">(</span><span class="hljs-string">"My PCA Graph"</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">loading_scores <span class="hljs-operator">&lt;-</span> pca<span class="hljs-operator">$</span>rotation<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-comment">#查看PC1的loading scores</span><br><br>gene_scores <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>loading_scores<span class="hljs-punctuation">)</span> <span class="hljs-comment">#计算loading score的绝对值</span><br><br>gene_score_ranked <span class="hljs-operator">&lt;-</span> sort<span class="hljs-punctuation">(</span>gene_scores<span class="hljs-punctuation">,</span>decreasing <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#降序排列loading scores</span><br><br>top_10_genes <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>gene_score_ranked<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br>top_10_genes<br><br>pca<span class="hljs-operator">$</span>rotation<span class="hljs-punctuation">[</span>top_10_genes<span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></tbody></table></figure><h1 id="代码生成"><a href="#代码生成" class="headerlink" title="代码生成"></a>代码生成</h1><p>在网站<a href="https://carbon.now.sh/?bg=rgba(13%2C78%2C165%2C1">https://carbon.now.sh</a>&amp;t=blackboard&amp;wt=none&amp;l=r&amp;ds=true&amp;dsyoff=20px&amp;dsblur=68px&amp;wc=false&amp;wa=true&amp;pv=48px&amp;ph=32px&amp;ln=false&amp;fm=Hack&amp;fs=17px&amp;lh=133%&amp;si=false&amp;es=2x&amp;wm=false)上生成带感的代码图片。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群体遗传学与重测序分析</title>
      <link href="/article/4b137aba/"/>
      <url>/article/4b137aba/</url>
      
        <content type="html"><![CDATA[<p>分子层面对生物的研究，在个体水平上主要是看单个基因的变化以及全转录本的变化（RNA-seq）；在对个体的研究的基础上，开始了群体水平的研究。如果说常规的遗传学主要的研究对象是个体或者个体家系的话，那么群体遗传学则是主要研究由不同个体组成的群体的遗传规律。<br>在测序技术大力发展之前，对群体主要是依靠表型进行研究，如加拉巴哥群岛的13中鸟雀有着不同的喙，达尔文认为这是自然选择造成的后果1。达尔文的进化论对应的观点可以简单概括为“物竞天择，适者生存”，这也是最为大众所接受的一种进化学说。直到1968年，日本遗传学家提出了中性进化理论[2]，也叫中性演化理论。中性理论的提出很大程度上是基于分子生物化学的发展。可以这样理解中性理论：一群人抽奖，在没有内幕的情况下，每个人抽到一等奖的概率是相等的，这个可能性和参与抽奖的人的身高、年龄、爱好等因素都没有关系。中性理论常作为群体遗传研究中的假设理论（CK）来计算其他各种统计指标。<br>群体遗传学，研究的单位是群体，比如粳稻、籼稻、野生稻，就能够构成不同的群体；我们国内的各省份的水稻也可以作为一个个群体。 群体遗传学大概可以分为群体内的研究和群体间的研究。比如研究云南元阳的水稻的遗传多样性；如果研究是的云南元阳的水稻和东北的水稻，那就可以算成是群体间的研究。群体间和群体内的研究是相互的。<br>测序价格的急剧下降[3]使得大规模的群体测序得以实现。</p><hr><h1 id="几种变异类型"><a href="#几种变异类型" class="headerlink" title="几种变异类型"></a>几种变异类型</h1><p>常见的变异类型有SNP、IdDel、SV、CNV等。重测序中最关注的是SNP，其次是InDel。其他的几种结构变异的研究不是太多。</p><h1 id="重测序和从头组装"><a href="#重测序和从头组装" class="headerlink" title="重测序和从头组装"></a>重测序和从头组装</h1><p>有参考基因组的物种的全基因组测序叫做重测序，没有参考基因组的物种的全基因组测序则需要从头组装。随着测序价格的降低，越来越多物种的参考基因组都已经测序组装完成。<em>plant genomes</em>$^{[4]}$网站实时显示全基因组测序已经完成的植物，其中2012年以后爆发式增长。在群体遗传学研究中更多的是有参考基因组的物种，尤其是模式物种，植物中常见的是拟南芥、水稻和玉米。<br></p><h1 id="重测序分析流程"><a href="#重测序分析流程" class="headerlink" title="重测序分析流程"></a>重测序分析流程</h1><p>主要的分析流程见下图。现在的测序公司基本上都会帮客户完成整个的分析流程，因为主要耗费的资源是计算资源。我认为在整个分析的流程中最重要的是Linux目录的构建，混乱的目录会导致后续的分析频频出问题，重测序分析会生成很多的中间文件，良好的目录管理会使得项目分析流程井然有序。<br>该部分涉及到的软件的安装和基础的Linux基础知识就不详细说明了。<br></p><h1 id="群体进化选择"><a href="#群体进化选择" class="headerlink" title="群体进化选择"></a>群体进化选择</h1><h2 id="正选择"><a href="#正选择" class="headerlink" title="正选择"></a>正选择</h2><p>正选择似乎可以更好地用自然选择来解释。就是一个基因or位点能够使个体有着更强的生存力或者是育性，这样就会使得这个个体的后代更多，如此一来，这个基因or位点在群体中就越来越多。<br><br>正选择能够使有利的突变基因or位点在群体中得到传播，但是与此同时却降低了群体的多态性水平。也就是说原先该位点周围的核苷酸组成是多样性的，在经过正选择之后，这个位点周围核苷酸的多样性就渐渐的趋于同质化了。这就好比一块田，里面本来有水稻和稗草及其他杂草，由于稗草的适应性增强，稗草在逐渐增多，水稻慢慢变少，最后甚至是只剩下了稗草。<br>我们将这种选择之后多态性降低的情况叫做选择扫荡（Selective Sweep)。检测选择扫荡的软件有SweeD$^{[7]}$。选择扫荡有可能是人工选择的结果，如2014年 Nature Genetics关于非洲栽培稻的文章就使用了SweeD来检测非洲栽培稻基因组上受人工选择的区域$^{[8]}$。<br></p><h2 id="负选择"><a href="#负选择" class="headerlink" title="负选择"></a>负选择</h2><p>负选择和正选择刚好是相反的。简单理解成群体中的某个个体出现了一个致命的突变，从而自己或者是后代从群体中被淘汰。这也导致群体中该位点的多态性的降低。就好比我有10株水稻，其中一株在成长过程中突然不见了，那么对我的这个小的水稻群体来说，这个消失的水稻的独有的位点在群体中就不见了，整体的多态性就降低了。<br></p><h2 id="平衡选择"><a href="#平衡选择" class="headerlink" title="平衡选择"></a>平衡选择</h2><p>平衡选择指多个等位基因在一个群体的基因库中以高于遗传漂变预期的频率被保留，如杂合子优势。<br></p><p>平衡选择检测的算法有BetaScan2$^{[10]}$，这是个Python脚本，输入文件只需要过滤好的SNP数据即可。</p><hr><h1 id="群体遗传学中的统计指标"><a href="#群体遗传学中的统计指标" class="headerlink" title="群体遗传学中的统计指标"></a>群体遗传学中的统计指标</h1><h2 id="群体多态性参数"><a href="#群体多态性参数" class="headerlink" title="群体多态性参数"></a>群体多态性参数</h2><p>计算公式为：</p><script type="math/tex; mode=display">\theta = 4N_e\mu</script><p>其中$N_e$是有效群体大小，$\mu$是每个位点的突变速率。<em>但是群体大小往往是无法精确知道的，需要对其进行估计。</em></p><h2 id="分离位点数目"><a href="#分离位点数目" class="headerlink" title="分离位点数目"></a>分离位点数目</h2><p>分离位点数$\theta_w$是$\theta$的估计值，表示相关基因在多序列比对中表现出多态性的位置。计算公式为：</p><script type="math/tex; mode=display">\theta_w = \frac{K}{a_n}</script><p>其中$K$为分离位点数量，比如SNP数量。<br>$a_n$为个体数量的倒数和：</p><script type="math/tex; mode=display">a_n = \sum^{n-1}_{i = 1}\frac{1}{i}</script><h2 id="核苷酸多样性-pi"><a href="#核苷酸多样性-pi" class="headerlink" title="核苷酸多样性$\pi$"></a>核苷酸多样性$\pi$</h2><p>$\pi$指的是核苷酸多样性，值越大说明核苷酸多样性越高。通常用于衡量群体内的核苷酸多样性，也可以用来推演进化关系$^{[11]}$。计算公式为：</p><script type="math/tex; mode=display">\pi = \sum_{ij}x_ix_j\pi_{ij}=2*\sum_{i = 2}^{n}\sum_{j=1}^{i-1}x_ix_j\pi{ij}</script><p>可以理解成现在群体内两两求$\pi$，再计算群体的均值。计算的软件最常见的是<em>vcftools</em>，也有对应的R包<em>PopGenome</em>。通常是选定有一定的基因组区域，设定好窗口大小，然后滑动窗口进行计算。<br>3KRGP文章就计算了水稻不同亚群间4号染色体部分区域上的$\pi$值$^{[12]}$，能够看出控制水稻籽粒落粒性的基因<em>Sh4</em>$^{[13]}$位置多态性在所有的亚群中都降低了。说明这个基因在所有的亚群中都是受到选择的，这可能是人工选择的结果。<br></p><h2 id="群体内选择检验：Tajima’s-D"><a href="#群体内选择检验：Tajima’s-D" class="headerlink" title="群体内选择检验：Tajima’s D"></a>群体内选择检验：Tajima’s D</h2><p>Tajima’s D是日本学者Tajima Fumio 1989年提出的一种统计检验方法，用于检验DNA序列在演化过程中是否遵循中性演化模型$^{[14]}$。计算公式为：</p><script type="math/tex; mode=display">D=\frac{\pi-\theta_w}{\sqrt{V(\pi-\theta_w)}}</script><p>D值大小有如下三种生物学意义：<br></p><h2 id="群体间分歧度检验：-F-st"><a href="#群体间分歧度检验：-F-st" class="headerlink" title="群体间分歧度检验：$F_{st}$"></a>群体间分歧度检验：<em>$F_{st}$</em></h2><p>$F_{st}$叫固定分化指数，用于估计亚群间平均多态性大小与整个种群平均多态性大小的差异，反映的是群体结构的变化。其简单估计的计算公式为：</p><script type="math/tex; mode=display">F_{st}=\frac{\pi_{Between}-\pi_{Within}}{\pi_{Between}}</script><p>$F<em>{st}$的取值范围是[0,1]。当$F</em>{st}=1$时，表明亚群间有着明显的种群分化。<br>在中性进化条件下，$F<em>{st}$的大小主要取决于遗传漂变和迁移等因素的影响。假设种群中的某个等位基因因为对特定的生境的适应度较高而经历适应性选择，那该基因的频率在种群中会升高，种群的分化水平增大，使得种群有着较高的$F</em>{st}$值。<br>$F<em>{st}$值可以和GWAS的结果一起进行分析，$F</em>{st}$超过一定阈值的区域往往和GWAS筛选到的位点是一致的，如2018年棉花重测序的文章$^{[15]}$：<br></p><h2 id="群体分歧度检验：ROD"><a href="#群体分歧度检验：ROD" class="headerlink" title="群体分歧度检验：ROD"></a>群体分歧度检验：ROD</h2><p>ROD可以基于野生群体和驯化群体间核苷酸多态性参数$\pi$的差异识别选择型号，也可以测量驯化群体和野生型群体相比损失的多态性。计算公式为：</p><script type="math/tex; mode=display">ROD=1-\frac{\pi_{驯化群体}}{\pi_{野生群体}}</script><p>和$F_{st}$一样，ROD也可以和GWAS结合起来：</p><h1 id="群体结构分析"><a href="#群体结构分析" class="headerlink" title="群体结构分析"></a>群体结构分析</h1><p>群体结构分析可以简单理解成采样测序的这些个体可以分成几个小组，以及给每个个体之间的远近关系是怎么样的。群体结构分析三剑客， 分别是<em>进化树</em>、<em>PCA</em>和<em>群体结构图</em>。</p><h2 id="进化树"><a href="#进化树" class="headerlink" title="进化树"></a>进化树</h2><p>进化树就是将个体按照远近关系分别连接起来的图。</p><h3 id="进化树算法"><a href="#进化树算法" class="headerlink" title="进化树算法"></a>进化树算法</h3><h4 id="基于距离"><a href="#基于距离" class="headerlink" title="基于距离"></a>基于距离</h4><ul><li>非加权算术平均对群法UPGMA</li><li>邻接法Neighbor-joining</li></ul><h4 id="基于特征"><a href="#基于特征" class="headerlink" title="基于特征"></a>基于特征</h4><ul><li>最大简约法—最小变化数（祖先状态最小化）</li><li>最大似然法—所有枝长和模型参数最优化</li><li>贝叶斯推断—基于后验概率</li></ul><h3 id="进化树类型"><a href="#进化树类型" class="headerlink" title="进化树类型"></a>进化树类型</h3><ul><li>有根树<br>有根树就是所有的个体都有一个共同的祖先。就像这样的：</li><li>无根树<br>无根树只展示个体间的距离，无共同祖先，就像这样的：</li></ul><h3 id="进化树软件"><a href="#进化树软件" class="headerlink" title="进化树软件"></a>进化树软件</h3><p>常用的绘图软件是<em>Phylip</em>和<em>Snpphylo</em>。进化树修饰的软件有<em>MEGA</em>，<em>ggtree</em>等，推荐网页版工具<a href="https://itol.embl.de/">iTOL</a>，无比强大。<br>外群定根法：当群体的个体的差异很小时，可以引入其他物种作为根。如在对三叶草建树时可以引入水稻的序列作为根进行建树。</p><h2 id="PCA图"><a href="#PCA图" class="headerlink" title="PCA图"></a>PCA图</h2><p>PCA是很常见的降维方法，如微生物研究中常用来检验样品分群情况。PCA计算的软件很多，plink可以直接用vcf文件计算PCA，R语言也可以进行PCA计算。<br><br>PCA图在群体重测序中有如下几种作用：</p><ul><li>查看分群信息，就是测序的样品大概分成几个群。如2015年大豆重测序文章的图[17]:</li><li>检测离群样本<br>离群样本就是在PCA图看起来和其他样本差异很大的样本，有可能是这个样本的遗传背景和其他样本本来就很大，也有可能是样本混淆了，比如了将野生型的样本标记成了驯化种进行测序。如果有离群样本，那在后续的类似于GWAS的分析中就需要将离群样本进行剔除。当然如果样本本来就是个很特别的，那就另当别论。</li><li>推断亚群进化关系<br>可以从PCA图可以看出群体的进化关系，尤其是地理位置的进化关系。</li></ul><h2 id="群体分层图"><a href="#群体分层图" class="headerlink" title="群体分层图"></a>群体分层图</h2><p>进化树和PCA能够看出来群体是不是分层的，但是无法知道群体分成几个群合适，也无法看出群体间的基因交流，更无法看出个体的混血程度。这时候就需要群体分层图了。<br><br>群体分层图的本质是堆叠的柱状图，和微生物研究中的物种组成柱状图类似。每个柱子是一个样本，可以看出一个样本的血缘组成，有几种颜色就说明该样本由几个祖先而来，如果只有一个色，那就说明这个个体很纯。<br>常用的软件有<em>structure</em>和<em>ADMIXTURE</em>$^{[19]}$。两款软件给出的结果都是$K$值。一般选择最低的点为最终的$K$值。<br><br>群体分层图的可视化有个极强大的R包：Pophelper$^{[20]}$。<br></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>可以将进化树和群体分层图结合进行展示，如下图：</p><h1 id="连锁不平衡分析"><a href="#连锁不平衡分析" class="headerlink" title="连锁不平衡分析"></a>连锁不平衡分析</h1><p>先了解下概念，此处借鉴基迪奥生物网站的解释[22]。<br>要理解 LD 衰减图，我们就必须先理解连锁不平衡（Linkage disequilibrium，LD）的概念。连锁不平衡是由两个名词构成，连锁 + 不平衡。前者，很容易让我们产生概念混淆；后者，让这个概念变得愈加晦涩。因此从一个类似的概念入手，大家可能更容易理解 LD 的概念，那就是基因的共表达。<br>基因的共表达，通常指的是两个基因的表达量呈现相关性。比较常见的例子就是：转录组因子和靶基因间的关系。因为转录因子对它的靶基因有正调控作用，所以转录因子的表达量提高会导致靶基因的表达量也上调，两者往往存在正相关关系。这个正相关关系，可以使用相关系数 $r^2$ 来度量，这个数值在 - 1~1 之间。总而言之，相关性可以理解为两个元素共同变化，步调一致。<br>类似的，连锁不平衡（LD）就是度量两个分子标记的基因型变化是否步调一致，存在相关性的指标。如果两个 SNP 标记位置相邻，那么在群体中也会呈现基因型步调一致的情况。比如有两个基因座，分别对应 A/a 和 B/b 两种等位基因。如果两个基因座是相关的，我们将会看到某些基因型往往共同遗传，即某些单倍型的频率会高于期望值。<br>参照王荣焕等$^{[23]}$的方法进行LD参数计算：<br></p><h2 id="LD衰减分析"><a href="#LD衰减分析" class="headerlink" title="LD衰减分析"></a>LD衰减分析</h2><p>随着标记间的距离增加，平均的LD程度将降低，呈现出衰减状态，这种情况叫LD衰减。LD衰减分析的作用：</p><ul><li>判断群体的多样性差异，一般野生型群体的LD衰减快于驯化群体；</li><li>估计GWAS中标记的覆盖度，通过比较LD衰减距离(0.1)和标记间的平均距离来判断标记是否足够。</li></ul><hr><h1 id="GWAS"><a href="#GWAS" class="headerlink" title="GWAS"></a>GWAS</h1><p>GWAS(genome-wide association study)，全基因组关联分析，常用在医学和农学领域。简单理解成将SNP等遗传标记和表型数据进行关联分析，检测和表型相关的位点，然后再倒回去找到对应的基因，研究其对表型的影响。这些被研究的表型在医学上常常是疾病的表型；在农学上常常是受关注的农艺性状，比如水稻的株高、产量、穗粒数等。GWAS思想首次提出是在心肌梗塞的治疗上[24]，首次应用是在2005年的文章上$^{[25]}$。<br></p><h2 id="GWAS流程"><a href="#GWAS流程" class="headerlink" title="GWAS流程"></a>GWAS流程</h2><ul><li>样品准备就是要收集不同的个体，比如3KRGP就3000多个水稻材料[12]，然后对这些材料进行全基因组测序，还需要表型数据，比如水稻的株高、产量等。</li><li>基因型的检测就是前面的变异检测，只是变异检测完的SNP数据还需要过滤才能进行后续的关联分析。</li><li>关联分析这一步只需要将基因型数据和表型数据丢给软件就行了。</li></ul><h2 id="GWAS数学模型"><a href="#GWAS数学模型" class="headerlink" title="GWAS数学模型"></a>GWAS数学模型</h2><p>目前使用最广泛的模型是混合线性模型$^{[26]}$：<br><br>所有的参数软件（如Emmax）会自动完成计算。</p><h2 id="GWAS结果"><a href="#GWAS结果" class="headerlink" title="GWAS结果"></a>GWAS结果</h2><p>GWAS结果文件通常只有两个图，一个是曼哈顿图，另外一个是Q-Q图。一般是先看Q-Q图，如果Q-Q正常，曼哈顿图的结果才有意义。</p><ul><li>Q-Q图<br>用于推断关联分析使用的模型是否正确，如下图：</li><li>如果模型不正确，那就只能换算法或者软件。</li><li>曼哈顿图<br>之所以叫曼哈顿图，是由于这种图长得像曼哈顿：图中横着的虚线通常是研究者设定的，最严格的的阈值线是Bonfferonin($\frac{0.05}{total{SNPs}}$)。阈值线以上的点就是很值得关注的位点。<br>后续就是验证实验了，比如验证不同的单倍型的生物学功能。</li></ul><hr><h1 id="其他统计指标和算法"><a href="#其他统计指标和算法" class="headerlink" title="其他统计指标和算法"></a>其他统计指标和算法</h1><h2 id="MSMC"><a href="#MSMC" class="headerlink" title="MSMC"></a>MSMC</h2><p>MSMC（multiple sequentially Markovian coalescent）$^{[27]}$，底层算法很复杂，类似于PSMC。MSMC的主要功能是推断有效群体大小和群体分离历史。</p>这样看起来更直观：<h2 id="LAMP"><a href="#LAMP" class="headerlink" title="LAMP"></a>LAMP</h2><p>LAMP(Local Ancestry in Admixed Populations，混杂群体的局部族源推断)，用于推断采用聚类的方法假设同时检测的位点间不存在重组情况，对每组相邻的 SNP 进行检测分析$^{[28]}$，在运算速度和推断准确度上都有了质的飞跃。</p><h2 id="Treemix"><a href="#Treemix" class="headerlink" title="Treemix"></a>Treemix</h2><p>用于推断群体分离和混合[29]。图是这样的：<br><br>这种图和进化树长得特别相似，可以将得到的结果和进化树进行比较。如2019年NC上关于<em>Cushion willow</em>的文章中就用到了这种算法根据。图是这样的：<br></p><p>前文提到的很多软件和算法都是用来推断群体进化的，也就是找到群体的祖先。都可以看成族源推断。具体的差异可以参考综述<em>法医族源推断的分子生物学进展</em>$^{[31]}$。</p><hr><h1 id="群体重测序方案推荐"><a href="#群体重测序方案推荐" class="headerlink" title="群体重测序方案推荐"></a>群体重测序方案推荐</h1><p>测序方案关系到后续的分析，不同的样本量对应不同的测序方法和分析方法。<br></p><hr><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1]. <a href="[https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E9%80%89%E6%8B%A">自然选择(维基百科)</a><br>[2]. Kimura, Motoo. “Evolutionary rate at the molecular level.” <strong><em>Nature</em></strong>. 217.5129 (1968): 624-626 .<br>[3]. <a href="https://www.genome.gov/about-genomics/fact-sheets/DNA-Sequencing-Costs-Data">测序价格变化趋势</a><br>[4]. <a href="https://www.plabipd.de/timeline_view.ep">plant genomes</a><br>[5]. DePristo, Mark A., et al. “A framework for variation discovery and genotyping using next-generation DNA sequencing data.” <strong><em>Nature Genetics</em></strong>. 43.5 (2011): 491.<br>[6]. Biswas, Shameek, and Joshua M. Akey. “Genomic insights into positive selection.” <strong><em>TRENDS in Genetics</em></strong> . 22.8 (2006): 437-446.<br>[7]. Pavlidis, Pavlos, et al. “Sweed: likelihood-based detection of selective sweeps in thousands of genomes.” <strong><em>Molecular biology and evolution</em></strong> 30.9 (2013): 2224-2234.<br>[8]. Wang, Muhua, et al. “The genome sequence of African rice (<em>Oryza glaberrima</em>) and evidence for independent domestication.” <strong><em>Nature Genetics</em></strong> 46.9 (2014): 982.<br>[9]. Bamshad, Michael, and Stephen P. Wooding. “Signatures of natural selection in the human genome.” <strong><em>Nature Reviews Genetics</em></strong> 4.2 (2003): 99.<br>[10]. Siewert, Katherine M., and Benjamin F. Voight. “BetaScan2: Standardized statistics to detect balancing selection utilizing substitution data.” <strong><em>BioRxiv</em></strong> (2018): 497255.<br>[11]. Yu, N.; Jensen-Seaman MI; Chemnick L; Ryder O; Li WH (March 2004).  <strong><em>Genetics</em></strong>. 166 (3): 1375–83.<br>[12]. Wang, Wensheng, et al. “Genomic variation in 3,010 diverse accessions of Asian cultivated rice.” <strong><em>Nature</em></strong> 557.7703 (2018): 43.<br>[13]. Li, C., Zhou, A. &amp; Sang, T. Rice domestication by reducing shattering. <strong><em>Science</em></strong> 311, 1936–1939 (2006).<br>[14]. Tajima, Fumio. “Statistical method for testing the neutral mutation hypothesis by DNA polymorphism.” <strong><em>Genetics</em></strong> 123.3 (1989): 585-595.<br>[15]. Du, Xiongming, et al. “Resequencing of 243 diploid cotton accessions based on an updated A genome identifies the genetic basis of key agronomic traits.” <strong><em>Nature Genetics</em></strong> 50.6 (2018): 796.<br>[16]. Lu, Kun, et al. “Whole-genome resequencing reveals Brassica napus origin and genetic loci involved in its improvement.” <strong><em>Nature communications</em></strong>. 10.1 (2019): 1154.<br>[17]. Zhou, Z., Jiang, Y., Wang, Z. et al. Resequencing 302 wild and cultivated accessions identifies genes related to domestication and improvement in soybean. <strong><em>Nat Biotechnol</em></strong> 33, 408–414 (2015).<br>[18]. Liang, Z., Duan, S., Sheng, J. et al. Whole-genome resequencing of 472 Vitis accessions for grapevine diversity and demographic history analyses. <strong><em>Nat Commun</em></strong> 10, 1190 (2019).<br>[19]. Alexander, D.H., Lange, K. Enhancements to the ADMIXTURE algorithm for individual ancestry estimation. <strong><em>BMC Bioinformatics</em></strong> 12, 246 (2011).<br>[20]. Francis, Roy M. “pophelper: an R package and web app to analyse and visualize population structure.” <strong><em>Molecular ecology resources</em></strong> 17.1 (2017): 27-32.<br>[21]. <a href="http://www.royfrancis.com/pophelper/articles/index.html">http://www.royfrancis.com/pophelper/articles/index.html</a>.<br>[22]. <a href="https://www.omicshare.com/forum/thread-878-1-1.html">https://www.omicshare.com/forum/thread-878-1-1.html</a>.<br>[23]. WANG Rong-Huan, WANG Tian-Yu, LI Yu. Linkage disequilibrium in plant genomes[J]. <strong><em>HEREDITAS</em></strong>, 2007, 29(11): 1317-1323.<br>[24]. Ozaki, K., Ohnishi, Y., Iida, A. et al. Functional SNPs in the lymphotoxin-α gene that are associated with susceptibility to myocardial infarction. <strong><em>Nat Genet</em></strong> 32, 650–654 (2002).<br>[25]. Klein, Robert J., et al. “Complement factor H polymorphism in age-related macular degeneration.” <strong><em>Science</em></strong> 308.5720 (2005): 385-389.<br>[26]. Yu, Jianming, et al. “A unified mixed-model method for association mapping that accounts for multiple levels of relatedness.” <strong><em>Nature genetics</em></strong> 38.2 (2006): 203.<br>[27]. Schiffels, Stephan, and Richard Durbin. “Inferring human population size and separation history from multiple genome sequences.” <strong><em>Nature genetics</em></strong> 46.8 (2014): 919.<br>[28]. Sankararaman, Sriram, et al. “Estimating local ancestry in admixed populations.” <strong><em>The American Journal of Human Genetics</em></strong> 82.2 (2008): 290-303.<br>[29]. Pickrell, Joseph K., and Jonathan K. Pritchard. “Inference of population splits and mixtures from genome-wide allele frequency data.” <strong><em>PLoS genetics</em></strong> 8.11 (2012): e1002967.<br>[30]. Chen, Jia-hui, et al. “Genome-wide analysis of Cushion willow provides insights into alpine plant divergence in a biodiversity hotspot.” <strong><em>Nature communications</em></strong> 10.1 (2019): 1-12.<br>[31]. 孙宽，侯一平。法医族源推断的分子生物学进展 [J]. <strong><em>法医学杂志</em></strong>，2018,34 (03):286-293.<br>[32]. <a href="http://www.genek.tv/">genek.tv</a></p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCA和PERMANOVA分析</title>
      <link href="/article/76358c9/"/>
      <url>/article/76358c9/</url>
      
        <content type="html"><![CDATA[<p>PCA这种图，图片上看起来不同的组别之间是有差异的，比如说这个：</p><span id="more"></span><p>可是各组别之间到底有没有显著的差异呢？普通的ANOVA行不行？就16s的数据来说，一般是有几千个OTU，普通的ANOVA根本就是无能为力啊。<br>这个时候就需要进行PERMANOVA检验了。PERMANOVA分析(也叫 NPMANOVA、Adonis 分析) 是一种以距离矩阵为对象的多元方差分析。<br>下面的代码包括了PCA和PERMANOVA的整个分析流程。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs R">rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>vegan<span class="hljs-punctuation">)</span><br><br>data <span class="hljs-operator">=</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">'data/otu.txt'</span><span class="hljs-punctuation">,</span>header <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  t<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  as.data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">'AAS'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'ANS'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'NAS'</span><span class="hljs-punctuation">,</span><span class="hljs-string">'NNS'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>each <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>pca <span class="hljs-operator">=</span> prcomp<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>scale. <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算原始数据中的每个数据在每个 PC 上的比重</span><br>pca.var <span class="hljs-operator">=</span> pca<span class="hljs-operator">$</span>sdev<span class="hljs-operator">^</span><span class="hljs-number">2</span> <br><br><span class="hljs-comment">#计算每个 PC 占所有 PC 的和的比列</span><br>pca.var.per <span class="hljs-operator">=</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>pca.var<span class="hljs-operator">/</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>pca.var<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 柱状图显示每个PC所占的比列</span><br>data.frame<span class="hljs-punctuation">(</span>PC <span class="hljs-operator">=</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">'PC'</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>           value <span class="hljs-operator">=</span> pca.var.per<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>PC<span class="hljs-punctuation">,</span>value<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_bar<span class="hljs-punctuation">(</span>stat <span class="hljs-operator">=</span> <span class="hljs-string">'identity'</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_hline<span class="hljs-punctuation">(</span>yintercept <span class="hljs-operator">=</span> pca.var.per<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-operator">*</span><span class="hljs-number">1.1</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">'white'</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  scale_x_discrete<span class="hljs-punctuation">(</span>limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">'PC'</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme_classic<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_text<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>y <span class="hljs-operator">=</span> value <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>label <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span>value<span class="hljs-punctuation">,</span><span class="hljs-string">'%'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2.5</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span>y <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">,</span>title <span class="hljs-operator">=</span> <span class="hljs-string">'ScreePlot'</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">11</span><span class="hljs-punctuation">,</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># ggplot2绘图</span><br>as.data.frame<span class="hljs-punctuation">(</span>pca<span class="hljs-operator">$</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  mutate<span class="hljs-punctuation">(</span>group <span class="hljs-operator">=</span> data<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>  ggplot<span class="hljs-punctuation">(</span>aes<span class="hljs-punctuation">(</span>PC1<span class="hljs-punctuation">,</span>PC2<span class="hljs-punctuation">,</span>color <span class="hljs-operator">=</span> group<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  geom_point<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme_classic<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">'PC1('</span><span class="hljs-punctuation">,</span>pca.var.per<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">'%)'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>       y <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">'PC2('</span><span class="hljs-punctuation">,</span>pca.var.per<span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><span class="hljs-string">'%)'</span><span class="hljs-punctuation">,</span>sep <span class="hljs-operator">=</span> <span class="hljs-string">''</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  stat_ellipse<span class="hljs-punctuation">(</span>level <span class="hljs-operator">=</span> <span class="hljs-number">0.68</span><span class="hljs-punctuation">)</span><span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>axis.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">11</span><span class="hljs-punctuation">,</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        axis.ticks <span class="hljs-operator">=</span> element_line<span class="hljs-punctuation">(</span>color <span class="hljs-operator">=</span> <span class="hljs-string">'black'</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">###############################################################</span><br><span class="hljs-comment">###############################PERMANOVA分析###################</span><br><span class="hljs-comment">###############################################################</span><br>otu <span class="hljs-operator">=</span> data<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>ncol<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br><br>dist <span class="hljs-operator">=</span> vegdist<span class="hljs-punctuation">(</span>otu<span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">'bray'</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 计算距离</span><br><br><span class="hljs-comment"># 分组信息</span><br>site <span class="hljs-operator">=</span> data.frame<span class="hljs-punctuation">(</span>sample <span class="hljs-operator">=</span> rownames<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                  group <span class="hljs-operator">=</span> data<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># PERMANOVA分析</span><br><span class="hljs-comment"># 整体水平比较</span><br>adonis_result_dis <span class="hljs-operator">=</span> adonis<span class="hljs-punctuation">(</span>dist<span class="hljs-operator">~</span>group<span class="hljs-punctuation">,</span> site<span class="hljs-punctuation">,</span> permutations <span class="hljs-operator">=</span> <span class="hljs-number">999</span><span class="hljs-punctuation">)</span><br>adonis_result_dis<br><br><span class="hljs-comment"># 两两比较</span><br>group_name <span class="hljs-operator">=</span> unique<span class="hljs-punctuation">(</span>site<span class="hljs-operator">$</span>group<span class="hljs-punctuation">)</span><br><br>result <span class="hljs-operator">=</span> data.frame<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>group_name<span class="hljs-punctuation">)</span> <span class="hljs-operator">-</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>j <span class="hljs-keyword">in</span> <span class="hljs-punctuation">(</span>i <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>group_name<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    group_ij <span class="hljs-operator">=</span> subset<span class="hljs-punctuation">(</span>site<span class="hljs-punctuation">,</span> group <span class="hljs-operator">%in%</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>group_name<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>group_name<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    otu_ij <span class="hljs-operator">=</span> otu<span class="hljs-punctuation">[</span>group_ij<span class="hljs-operator">$</span>sample<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br>    adonis_result_otu_ij <span class="hljs-operator">=</span> adonis<span class="hljs-punctuation">(</span>otu_ij<span class="hljs-operator">~</span>group<span class="hljs-punctuation">,</span> group_ij<span class="hljs-punctuation">,</span> permutations <span class="hljs-operator">=</span> <span class="hljs-number">999</span><span class="hljs-punctuation">,</span> distance <span class="hljs-operator">=</span> <span class="hljs-string">'bray'</span><span class="hljs-punctuation">)</span><br>    res.temp <span class="hljs-operator">=</span> as.data.frame<span class="hljs-punctuation">(</span>adonis_result_otu_ij<span class="hljs-operator">$</span>aov.tab<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>    rownames<span class="hljs-punctuation">(</span>res.temp<span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>group_name<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-string">'/'</span><span class="hljs-punctuation">,</span><span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>group_name<span class="hljs-punctuation">[</span>j<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <br>    result <span class="hljs-operator">=</span> rbind<span class="hljs-punctuation">(</span>result<span class="hljs-punctuation">,</span>res.temp<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br><br>head<span class="hljs-punctuation">(</span>result<span class="hljs-punctuation">,</span>nrow<span class="hljs-punctuation">(</span>result<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>最终得到的结果有PCA分析的碎石图、PCA图、PERMANOVA整体分析的结果以及两两比较的结果。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语言显示函数运行进度”</title>
      <link href="/article/undefined/"/>
      <url>/article/undefined/</url>
      
        <content type="html"><![CDATA[<p>看到《R语言之书：编程与统计》里面一个比较有意思的小程序：</p><span id="more"></span><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R">prog.test <span class="hljs-operator">=</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span><br>  results <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>  probar <span class="hljs-operator">=</span> txtProgressBar<span class="hljs-punctuation">(</span><span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> n<span class="hljs-punctuation">,</span> style <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> char <span class="hljs-operator">=</span> <span class="hljs-string">'+'</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>n<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span><br>    results <span class="hljs-operator">=</span> results<span class="hljs-operator">+</span><span class="hljs-number">1</span><br>    Sys.sleep<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br>    setTxtProgressBar<span class="hljs-punctuation">(</span>probar<span class="hljs-punctuation">,</span>value <span class="hljs-operator">=</span> i<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">}</span><br>  close<span class="hljs-punctuation">(</span>probar<span class="hljs-punctuation">)</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>results<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">}</span><br><br>prog.test<span class="hljs-punctuation">(</span><span class="hljs-number">100000000</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></tbody></table></figure><p>运行之后就能看到程序运行的进度。</p><hr><blockquote><p>💌lixiang117423@gmail.com</p><p>💌lixiang117423@foxmail.com</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> R语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
